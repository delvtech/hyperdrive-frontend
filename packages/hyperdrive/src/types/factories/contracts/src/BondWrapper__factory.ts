/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BondWrapper,
  BondWrapperInterface,
} from "../../../contracts/src/BondWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IHyperdrive",
        name: "_hyperdrive",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mintPercent",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BondMatured",
    type: "error",
  },
  {
    inputs: [],
    name: "BondNotMatured",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimestamp",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturityTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "andBurn",
        type: "bool",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hyperdrive",
    outputs: [
      {
        internalType: "contract IHyperdrive",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturityTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturityTime",
        type: "uint256",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "maturityTimes",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sweepAndRedeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001e6038038062001e60833981016040819052620000349162000245565b8181600062000044838262000373565b50600162000053828262000373565b506002805460ff1916601217905560036020526000197f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff81905530600090815260409020557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ca91906200043f565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f1981840301815291905280516020909101206006555050506001600160a01b0393841660805250911660a05260c052620004bd565b6001600160a01b03811681146200017d57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a857600080fd5b81516001600160401b0380821115620001c557620001c562000180565b604051601f8301601f19908116603f01168101908282118183101715620001f057620001f062000180565b816040528381526020925086838588010111156200020d57600080fd5b600091505b8382101562000231578582018301518183018401529082019062000212565b600093810190920192909252949350505050565b600080600080600060a086880312156200025e57600080fd5b85516200026b8162000167565b60208701519095506200027e8162000167565b6040870151606088015191955093506001600160401b0380821115620002a357600080fd5b620002b189838a0162000196565b93506080880151915080821115620002c857600080fd5b50620002d78882890162000196565b9150509295509295909350565b600181811c90821680620002f957607f821691505b6020821081036200031a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036e57600081815260208120601f850160051c81016020861015620003495750805b601f850160051c820191505b818110156200036a5782815560010162000355565b5050505b505050565b81516001600160401b038111156200038f576200038f62000180565b620003a781620003a08454620002e4565b8462000320565b602080601f831160018114620003df5760008415620003c65750858301515b600019600386901b1c1916600185901b1785556200036a565b600085815260208120601f198616915b828110156200041057888601518255948401946001909101908401620003ef565b50858210156200042f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008083546200044f81620002e4565b600182811680156200046a57600181146200048057620004b1565b60ff1984168752821515830287019450620004b1565b8760005260208060002060005b85811015620004a85781548a8201529084019082016200048d565b50505082870194505b50929695505050505050565b60805160a05160c05161193b62000525600039600081816102ba01528181610fad015261116b0152600081816103c601528181610da4015261125001526000818161018101528181610815015281816108d201528181610f35015261109c015261193b6000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806395d89b41116100d8578063db006a751161008c578063e7d3fe6b11610066578063e7d3fe6b1461039b578063e9022b45146103ae578063fc0c546a146103c157600080fd5b8063db006a751461034a578063dd62ed3e1461035d578063dec16f031461038857600080fd5b8063aa60e733116100bd578063aa60e733146102f7578063d505accf1461030c578063d6d681771461031f57600080fd5b806395d89b41146102dc578063a9059cbb146102e457600080fd5b8063313ce5671161012f57806370a082311161011457806370a08231146102755780637ecebe001461029557806380910858146102b557600080fd5b8063313ce5671461024d5780633644e5151461026c57600080fd5b8063095ea7b311610160578063095ea7b3146101e257806323b872dd1461020557806330adf81f1461021857600080fd5b806304eb01481461017c57806306fdde03146101cd575b600080fd5b6101a37f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101d56103e8565b6040516101c49190611490565b6101f56101f0366004611525565b610476565b60405190151581526020016101c4565b6101f561021336600461154f565b6104f0565b61023f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6040519081526020016101c4565b60025461025a9060ff1681565b60405160ff90911681526020016101c4565b61023f60065481565b61023f61028336600461158b565b60036020526000908152604090205481565b61023f6102a336600461158b565b60056020526000908152604090205481565b61023f7f000000000000000000000000000000000000000000000000000000000000000081565b6101d561075d565b6101f56102f2366004611525565b61076a565b61030a6103053660046115a6565b61077e565b005b61030a61031a3660046115bf565b61095b565b61023f61032d366004611525565b600760209081526000928352604080842090915290825290205481565b61030a6103583660046115a6565b610d62565b61023f61036b366004611632565b600460209081526000928352604080842090915290825290205481565b61030a610396366004611665565b610e63565b61030a6103a93660046116e0565b610eab565b61030a6103bc366004611726565b611039565b6101a37f000000000000000000000000000000000000000000000000000000000000000081565b600080546103f59061176e565b80601f01602080910402602001604051908101604052809291908181526020018280546104219061176e565b801561046e5780601f106104435761010080835404028352916020019161046e565b820191906000526020600020905b81548152906001019060200180831161045157829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104de9086815260200190565b60405180910390a35060015b92915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526003602052604081205482811015610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f45524332303a20696e73756666696369656e742d62616c616e6365000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff851633146106a25773ffffffffffffffffffffffffffffffffffffffff851660009081526004602090815260408083203384529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106a05783811015610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e742d616c6c6f77616e6365000000604482015260640161057c565b61066e84826117f0565b73ffffffffffffffffffffffffffffffffffffffff871660009081526004602090815260408083203384529091529020555b505b6106ac83826117f0565b73ffffffffffffffffffffffffffffffffffffffff80871660009081526003602052604080822093909355908616815220546106e9908490611803565b73ffffffffffffffffffffffffffffffffffffffff80861660008181526003602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061074a9087815260200190565b60405180910390a3506001949350505050565b600180546103f59061176e565b60006107773384846104f0565b9392505050565b428111156107b8576040517f915eceb100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107c5600083611303565b6040517f3656eec20000000000000000000000000000000000000000000000000000000081526004810182905230602482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690633656eec290604401602060405180830381865afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108809190611816565b90508015610956576040517ffa3fcea7000000000000000000000000000000000000000000000000000000008152600481018490526024810182905260448101829052306064820152600160848201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063fa3fcea79060a4016020604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109549190611816565b505b505050565b60065473ffffffffffffffffffffffffffffffffffffffff8881166000818152600560209081526040918290205482517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981840152808401859052948c166060860152608085018b905260a085015260c08085018a90528251808603909101815260e0850183528051908201207f1901000000000000000000000000000000000000000000000000000000000000610100860152610102850195909552610122808501959095528151808503909501855261014290930190528251929091019190912090610aa5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45524332303a20696e76616c69642d616464726573732d300000000000000000604482015260640161057c565b60408051600081526020810180835283905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610af8573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f45524332303a20696e76616c69642d7065726d69740000000000000000000000604482015260640161057c565b841580610ba35750844211155b610c09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f45524332303a207065726d69742d657870697265640000000000000000000000604482015260640161057c565b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610cb9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161057c565b73ffffffffffffffffffffffffffffffffffffffff88166000908152600560205260408120805491610cea8361182f565b909155505073ffffffffffffffffffffffffffffffffffffffff8881166000818152600460209081526040808320948c16808452948252918290208a905590518981527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35050505050505050565b610d6c3382611369565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044016020604051808303816000875af1158015610e02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e269190611867565b905080610e5f576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60005b82811015610ea157610e8f848483818110610e8357610e83611884565b9050602002013561077e565b80610e998161182f565b915050610e66565b5061095681610d62565b6000610eb8600085611303565b9050428411610ef3576040517f3f8e46bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f1c0f12b600000000000000000000000000000000000000000000000000000000815260048101829052336024820152306044820152606481018490527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690631c0f12b690608401600060405180830381600087803b158015610f8e57600080fd5b505af1158015610fa2573d6000803e3d6000fd5b5050505060006127107f000000000000000000000000000000000000000000000000000000000000000085610fd791906118b3565b610fe191906118ca565b9050610fed8382611401565b73ffffffffffffffffffffffffffffffffffffffff831660009081526007602090815260408083208584529091528120805486929061102d908490611803565b90915550505050505050565b6000611046600086611303565b9050600042861115611125576040517ffa3fcea7000000000000000000000000000000000000000000000000000000008152600481018790526024810186905260006044820152306064820152600160848201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063fa3fcea79060a4016020604051808303816000875af11580156110fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111e9190611816565b9050611131565b61112e8661077e565b50835b3360009081526007602090815260408083208584529091528120805487929061115b9084906117f0565b90915550600090506127106111907f0000000000000000000000000000000000000000000000000000000000000000886118b3565b61119a91906118ca565b9050808210156111d6576040517fd548170300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006111e282846117f0565b90508515611201576111f43383611369565b6111fe8282611803565b90505b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af115801561129b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bf9190611867565b9050806112f8576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050505050565b60007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82111561135e576040517fb7d0949700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060f89190911b1790565b73ffffffffffffffffffffffffffffffffffffffff821660009081526003602052604090205461139a9082906117f0565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600360205260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113f59085815260200190565b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902054611432908290611803565b73ffffffffffffffffffffffffffffffffffffffff83166000818152600360205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906113f59085815260200190565b600060208083528351808285015260005b818110156114bd578581018301518582016040015282016114a1565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461152057600080fd5b919050565b6000806040838503121561153857600080fd5b611541836114fc565b946020939093013593505050565b60008060006060848603121561156457600080fd5b61156d846114fc565b925061157b602085016114fc565b9150604084013590509250925092565b60006020828403121561159d57600080fd5b610777826114fc565b6000602082840312156115b857600080fd5b5035919050565b600080600080600080600060e0888a0312156115da57600080fd5b6115e3886114fc565b96506115f1602089016114fc565b95506040880135945060608801359350608088013560ff8116811461161557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561164557600080fd5b61164e836114fc565b915061165c602084016114fc565b90509250929050565b60008060006040848603121561167a57600080fd5b833567ffffffffffffffff8082111561169257600080fd5b818601915086601f8301126116a657600080fd5b8135818111156116b557600080fd5b8760208260051b85010111156116ca57600080fd5b6020928301989097509590910135949350505050565b6000806000606084860312156116f557600080fd5b833592506020840135915061170c604085016114fc565b90509250925092565b801515811461172357600080fd5b50565b6000806000806080858703121561173c57600080fd5b8435935060208501359250604085013561175581611715565b9150611763606086016114fc565b905092959194509250565b600181811c9082168061178257607f821691505b6020821081036117bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156104ea576104ea6117c1565b808201808211156104ea576104ea6117c1565b60006020828403121561182857600080fd5b5051919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611860576118606117c1565b5060010190565b60006020828403121561187957600080fd5b815161077781611715565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80820281158282048414176104ea576104ea6117c1565b600082611900577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea264697066735822122024aadeec1c968d6e6ce70860db6431728a8dcca574cc785eac7acc17da4c063564736f6c63430008120033";

type BondWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BondWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BondWrapper__factory extends ContractFactory {
  constructor(...args: BondWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _hyperdrive: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _mintPercent: PromiseOrValue<BigNumberish>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BondWrapper> {
    return super.deploy(
      _hyperdrive,
      _token,
      _mintPercent,
      name_,
      symbol_,
      overrides || {}
    ) as Promise<BondWrapper>;
  }
  override getDeployTransaction(
    _hyperdrive: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    _mintPercent: PromiseOrValue<BigNumberish>,
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hyperdrive,
      _token,
      _mintPercent,
      name_,
      symbol_,
      overrides || {}
    );
  }
  override attach(address: string): BondWrapper {
    return super.attach(address) as BondWrapper;
  }
  override connect(signer: Signer): BondWrapper__factory {
    return super.connect(signer) as BondWrapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BondWrapperInterface {
    return new utils.Interface(_abi) as BondWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BondWrapper {
    return new Contract(address, _abi, signerOrProvider) as BondWrapper;
  }
}
