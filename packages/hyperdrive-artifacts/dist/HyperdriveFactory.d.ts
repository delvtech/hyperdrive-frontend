export declare const HyperdriveFactory: {
    readonly abi: readonly [{
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "_factoryConfig";
            readonly type: "tuple";
            readonly internalType: "struct HyperdriveFactory.FactoryConfig";
            readonly components: readonly [{
                readonly name: "governance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "hyperdriveGovernance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "defaultPausers";
                readonly type: "address[]";
                readonly internalType: "address[]";
            }, {
                readonly name: "feeCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "checkpointDurationResolution";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minCheckpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "maxCheckpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minPositionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "maxPositionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minFixedAPR";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "maxFixedAPR";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minTimeStretchAPR";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "maxTimeStretchAPR";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minFees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }, {
                readonly name: "maxFees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }, {
                readonly name: "linkerFactory";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }];
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "addDeployerCoordinator";
        readonly inputs: readonly [{
            readonly name: "_deployerCoordinator";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "checkpointDurationResolution";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "defaultPausers";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "deployAndInitialize";
        readonly inputs: readonly [{
            readonly name: "_deploymentId";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }, {
            readonly name: "_deployerCoordinator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_config";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly components: readonly [{
                readonly name: "baseToken";
                readonly type: "address";
                readonly internalType: "contract IERC20";
            }, {
                readonly name: "linkerFactory";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "positionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "checkpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "timeStretch";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "feeCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }];
        }, {
            readonly name: "_extraData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "_contribution";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_fixedAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_timeStretchAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_initializeExtraData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "_salt";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "contract IHyperdrive";
        }];
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly name: "deployTarget";
        readonly inputs: readonly [{
            readonly name: "_deploymentId";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }, {
            readonly name: "_deployerCoordinator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_config";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly components: readonly [{
                readonly name: "baseToken";
                readonly type: "address";
                readonly internalType: "contract IERC20";
            }, {
                readonly name: "linkerFactory";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "positionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "checkpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "timeStretch";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "feeCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }];
        }, {
            readonly name: "_extraData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "_fixedAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_timeStretchAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_targetIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_salt";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "feeCollector";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getDeployerCoordinatorAtIndex";
        readonly inputs: readonly [{
            readonly name: "index";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getDeployerCoordinatorsInRange";
        readonly inputs: readonly [{
            readonly name: "startIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "endIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "range";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getInstanceAtIndex";
        readonly inputs: readonly [{
            readonly name: "index";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getInstancesInRange";
        readonly inputs: readonly [{
            readonly name: "startIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "endIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "range";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getNumberOfDeployerCoordinators";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getNumberOfInstances";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "governance";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "hyperdriveGovernance";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "instancesToDeployerCoordinators";
        readonly inputs: readonly [{
            readonly name: "instance";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [{
            readonly name: "deployCoordinator";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "isDeployerCoordinator";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "isInstance";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "linkerCodeHash";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "linkerFactory";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "maxCheckpointDuration";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "maxFees";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "maxFixedAPR";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "maxPositionDuration";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "maxTimeStretchAPR";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "minCheckpointDuration";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "minFees";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "minFixedAPR";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "minPositionDuration";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "minTimeStretchAPR";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "removeDeployerCoordinator";
        readonly inputs: readonly [{
            readonly name: "_deployerCoordinator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_index";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateCheckpointDurationResolution";
        readonly inputs: readonly [{
            readonly name: "_checkpointDurationResolution";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateDefaultPausers";
        readonly inputs: readonly [{
            readonly name: "_defaultPausers_";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateFeeCollector";
        readonly inputs: readonly [{
            readonly name: "_feeCollector";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateGovernance";
        readonly inputs: readonly [{
            readonly name: "_governance";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateHyperdriveGovernance";
        readonly inputs: readonly [{
            readonly name: "_hyperdriveGovernance";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateLinkerCodeHash";
        readonly inputs: readonly [{
            readonly name: "_linkerCodeHash";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateLinkerFactory";
        readonly inputs: readonly [{
            readonly name: "_linkerFactory";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMaxCheckpointDuration";
        readonly inputs: readonly [{
            readonly name: "_maxCheckpointDuration";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMaxFees";
        readonly inputs: readonly [{
            readonly name: "__maxFees";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMaxFixedAPR";
        readonly inputs: readonly [{
            readonly name: "_maxFixedAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMaxPositionDuration";
        readonly inputs: readonly [{
            readonly name: "_maxPositionDuration";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMaxTimeStretchAPR";
        readonly inputs: readonly [{
            readonly name: "_maxTimeStretchAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMinCheckpointDuration";
        readonly inputs: readonly [{
            readonly name: "_minCheckpointDuration";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMinFees";
        readonly inputs: readonly [{
            readonly name: "__minFees";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMinFixedAPR";
        readonly inputs: readonly [{
            readonly name: "_minFixedAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMinPositionDuration";
        readonly inputs: readonly [{
            readonly name: "_minPositionDuration";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMinTimeStretchAPR";
        readonly inputs: readonly [{
            readonly name: "_minTimeStretchAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "event";
        readonly name: "CheckpointDurationResolutionUpdated";
        readonly inputs: readonly [{
            readonly name: "newCheckpointDurationResolution";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "DefaultPausersUpdated";
        readonly inputs: readonly [{
            readonly name: "newDefaultPausers";
            readonly type: "address[]";
            readonly indexed: false;
            readonly internalType: "address[]";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "Deployed";
        readonly inputs: readonly [{
            readonly name: "deployerCoordinator";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }, {
            readonly name: "hyperdrive";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "config";
            readonly type: "tuple";
            readonly indexed: false;
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly components: readonly [{
                readonly name: "baseToken";
                readonly type: "address";
                readonly internalType: "contract IERC20";
            }, {
                readonly name: "linkerFactory";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "positionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "checkpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "timeStretch";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "feeCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }];
        }, {
            readonly name: "extraData";
            readonly type: "bytes";
            readonly indexed: false;
            readonly internalType: "bytes";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "DeployerCoordinatorAdded";
        readonly inputs: readonly [{
            readonly name: "deployerCoordinator";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "DeployerCoordinatorRemoved";
        readonly inputs: readonly [{
            readonly name: "deployerCoordinator";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "FeeCollectorUpdated";
        readonly inputs: readonly [{
            readonly name: "newFeeCollector";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "GovernanceUpdated";
        readonly inputs: readonly [{
            readonly name: "governance";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "HyperdriveGovernanceUpdated";
        readonly inputs: readonly [{
            readonly name: "hyperdriveGovernance";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "ImplementationUpdated";
        readonly inputs: readonly [{
            readonly name: "newDeployer";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LinkerCodeHashUpdated";
        readonly inputs: readonly [{
            readonly name: "newLinkerCodeHash";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LinkerFactoryUpdated";
        readonly inputs: readonly [{
            readonly name: "newLinkerFactory";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MaxCheckpointDurationUpdated";
        readonly inputs: readonly [{
            readonly name: "newMaxCheckpointDuration";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MaxFeesUpdated";
        readonly inputs: readonly [{
            readonly name: "newMaxFees";
            readonly type: "tuple";
            readonly indexed: false;
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MaxFixedAPRUpdated";
        readonly inputs: readonly [{
            readonly name: "newMaxFixedAPR";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MaxPositionDurationUpdated";
        readonly inputs: readonly [{
            readonly name: "newMaxPositionDuration";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MaxTimeStretchAPRUpdated";
        readonly inputs: readonly [{
            readonly name: "newMaxTimeStretchAPR";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MinCheckpointDurationUpdated";
        readonly inputs: readonly [{
            readonly name: "newMinCheckpointDuration";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MinFeesUpdated";
        readonly inputs: readonly [{
            readonly name: "newMinFees";
            readonly type: "tuple";
            readonly indexed: false;
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MinFixedAPRUpdated";
        readonly inputs: readonly [{
            readonly name: "newMinFixedAPR";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MinPositionDurationUpdated";
        readonly inputs: readonly [{
            readonly name: "newMinPositionDuration";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MinTimeStretchAPRUpdated";
        readonly inputs: readonly [{
            readonly name: "newMinTimeStretchAPR";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "error";
        readonly name: "AddressEmptyCode";
        readonly inputs: readonly [{
            readonly name: "target";
            readonly type: "address";
            readonly internalType: "address";
        }];
    }, {
        readonly type: "error";
        readonly name: "AddressInsufficientBalance";
        readonly inputs: readonly [{
            readonly name: "account";
            readonly type: "address";
            readonly internalType: "address";
        }];
    }, {
        readonly type: "error";
        readonly name: "DeployerCoordinatorAlreadyAdded";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "DeployerCoordinatorIndexMismatch";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "DeployerCoordinatorNotAdded";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "EndIndexTooLarge";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "ExpInvalidExponent";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "FailedInnerCall";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidCheckpointDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidCheckpointDurationResolution";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidDeployConfig";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidDeployerCoordinator";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidFees";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidFixedAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidIndexes";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMaxCheckpointDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMaxFees";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMaxFixedAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMaxPositionDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMaxTimeStretchAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinCheckpointDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinFees";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinFixedAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinPositionDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinTimeStretchAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidPositionDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidTimeStretchAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "LnInvalidInput";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "SafeERC20FailedOperation";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly type: "address";
            readonly internalType: "address";
        }];
    }, {
        readonly type: "error";
        readonly name: "TransferFailed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "Unauthorized";
        readonly inputs: readonly [];
    }];
    readonly bytecode: {
        readonly object: "0x60806040523480156200001157600080fd5b5060405162003b5138038062003b518339810160408190526200003491620005cd565b80608001518160a0015110806200005f575080608001518160a001516200005c919062000729565b15155b156200007e57604051630219d66360e11b815260040160405180910390fd5b60a0810151600681905560c08201511080620000ae575080608001518160c00151620000ab919062000729565b15155b15620000cd5760405163f9c0959d60e01b815260040160405180910390fd5b60c0810151600781905560e08201511080620000fd575080608001518160e00151620000fa919062000729565b15155b156200011c57604051633007ad0160e11b815260040160405180910390fd5b60e0810151600881905561010082015110806200014e575080608001518161010001516200014b919062000729565b15155b156200016d5760405163cfb699cb60e01b815260040160405180910390fd5b6101008101516009556101408101516101208201511115620001a2576040516330554de160e01b815260040160405180910390fd5b610120810151600a55610140810151600b556101808101516101608201511115620001e0576040516383ebdfb760e01b815260040160405180910390fd5b610160810151600c55610180810151600d556101c081015151670de0b6b3a764000010806200021f5750670de0b6b3a7640000816101c0015160200151115b806200023b5750670de0b6b3a7640000816101c0015160400151115b80620002575750670de0b6b3a7640000816101c0015160600151115b15620002765760405163161071fb60e11b815260040160405180910390fd5b6101c081015180516012819055602082015160135560408201516014556060909101516015556101a0820151511180620002c15750806101c0015160200151816101a0015160200151115b80620002de5750806101c0015160400151816101a0015160400151115b80620002fb5750806101c0015160600151816101a0015160600151115b156200031a576040516315b05a8f60e01b815260040160405180910390fd5b6101a08101518051600e55602080820151600f556040808301516010556060928301516011558351600080546001600160a01b03199081166001600160a01b03938416179091558386015160018054831691841691909117905593850151600480549095169116179092559082015180516200039b926016920190620003d7565b506101e0810151600280546001600160a01b0319166001600160a01b03909216919091179055610200810151600355608001516005556200074c565b8280548282559060005260206000209081019282156200042f579160200282015b828111156200042f57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620003f8565b506200043d92915062000441565b5090565b5b808211156200043d576000815560010162000442565b634e487b7160e01b600052604160045260246000fd5b60405161022081016001600160401b038111828210171562000494576200049462000458565b60405290565b80516001600160a01b0381168114620004b257600080fd5b919050565b600082601f830112620004c957600080fd5b815160206001600160401b0380831115620004e857620004e862000458565b8260051b604051601f19603f8301168101818110848211171562000510576200051062000458565b6040529384528581018301938381019250878511156200052f57600080fd5b83870191505b84821015620005595762000549826200049a565b8352918301919083019062000535565b979650505050505050565b6000608082840312156200057757600080fd5b604051608081016001600160401b03811182821017156200059c576200059c62000458565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b600060208284031215620005e057600080fd5b81516001600160401b0380821115620005f857600080fd5b908301906102e082860312156200060e57600080fd5b620006186200046e565b62000623836200049a565b815262000633602084016200049a565b60208201526040830151828111156200064b57600080fd5b6200065987828601620004b7565b6040830152506200066d606084016200049a565b60608201526080838101519082015260a0808401519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a09150620006e48683850162000564565b82820152620006f886610220850162000564565b6101c08201526200070d6102a084016200049a565b6101e08201526102c09290920151610200830152509392505050565b6000826200074757634e487b7160e01b600052601260045260246000fd5b500690565b6133f5806200075c6000396000f3fe6080604052600436106102885760003560e01c80639af252621161015a578063daac24da116100c1578063e71f34b31161007a578063e71f34b31461078d578063e83e34b1146107ad578063eb71f66c146107c2578063ec895f11146107e2578063f8c09e5914610802578063fe3d5aeb1461083257600080fd5b8063daac24da146106ec578063daf012e61461070c578063dd2b8fbb14610722578063e0e2daaa14610742578063e1b39c8014610758578063e33315551461076d57600080fd5b8063c415b95c11610113578063c415b95c14610654578063c905a4b514610674578063d0f96b921461068a578063d23d7ea3146106a0578063d2c35ce8146106b6578063d6f50169146106d657600080fd5b80639af252621461059a578063a64c90bf146105ba578063b2561263146105dc578063bc30e7a1146105fc578063bf9bd5cd1461061c578063c17225631461063257600080fd5b80636b44e6be116101fe57806383b361e8116101b757806383b361e8146104e457806385229785146105045780638e127cf5146105245780638efc09861461054457806397b0e8ce1461055a57806399623bb11461057a57600080fd5b80636b44e6be146104065780636be6d7d4146104465780636c8cc865146104665780636e95d67c1461049c5780636f6d5c4a146104b15780637324b145146104d157600080fd5b8063421caba811610250578063421caba81461032f578063488007601461034f5780634fbfee77146103785780635720c9d5146103985780635aa6e675146103ae578063628027a3146103e657600080fd5b806310d1dc3e1461028d57806311e77bfe146102af5780631978ebcf146102cf5780632885e3ac146102ef578063411c30351461030f575b600080fd5b34801561029957600080fd5b506102ad6102a8366004612b09565b610852565b005b3480156102bb57600080fd5b506102ad6102ca366004612b1b565b61093c565b3480156102db57600080fd5b506102ad6102ea366004612b1b565b610a0e565b3480156102fb57600080fd5b506102ad61030a366004612b09565b610a90565b34801561031b57600080fd5b506102ad61032a366004612b59565b610bc8565b34801561033b57600080fd5b506102ad61034a366004612b85565b610d80565b34801561035b57600080fd5b50610365600d5481565b6040519081526020015b60405180910390f35b34801561038457600080fd5b506102ad610393366004612b1b565b610e70565b3480156103a457600080fd5b5061036560065481565b3480156103ba57600080fd5b506000546103ce906001600160a01b031681565b6040516001600160a01b03909116815260200161036f565b3480156103f257600080fd5b506102ad610401366004612b1b565b610ecd565b34801561041257600080fd5b50610436610421366004612b85565b601b6020526000908152604090205460ff1681565b604051901515815260200161036f565b34801561045257600080fd5b506103ce610461366004612d87565b610f4f565b34801561047257600080fd5b506103ce610481366004612b85565b6019602052600090815260409020546001600160a01b031681565b3480156104a857600080fd5b50601a54610365565b3480156104bd57600080fd5b506102ad6104cc366004612b1b565b611041565b6103ce6104df366004612e1b565b6110e5565b3480156104f057600080fd5b506102ad6104ff366004612b1b565b611590565b34801561051057600080fd5b506102ad61051f366004612b85565b611612565b34801561053057600080fd5b506102ad61053f366004612b1b565b611686565b34801561055057600080fd5b5061036560095481565b34801561056657600080fd5b506102ad610575366004612b1b565b61172a565b34801561058657600080fd5b506002546103ce906001600160a01b031681565b3480156105a657600080fd5b506102ad6105b5366004612ed9565b6117ac565b3480156105c657600080fd5b506105cf611820565b60405161036f9190612f4e565b3480156105e857600080fd5b506102ad6105f7366004612b85565b611882565b34801561060857600080fd5b506105cf610617366004612f9b565b6118f4565b34801561062857600080fd5b50610365600b5481565b34801561063e57600080fd5b50610647611a10565b60405161036f9190612fbd565b34801561066057600080fd5b506004546103ce906001600160a01b031681565b34801561068057600080fd5b5061036560035481565b34801561069657600080fd5b5061036560055481565b3480156106ac57600080fd5b50610365600a5481565b3480156106c257600080fd5b506102ad6106d1366004612b85565b611a68565b3480156106e257600080fd5b50610365600c5481565b3480156106f857600080fd5b506103ce610707366004612b1b565b611adc565b34801561071857600080fd5b5061036560085481565b34801561072e57600080fd5b506102ad61073d366004612b85565b611b0c565b34801561074e57600080fd5b5061036560075481565b34801561076457600080fd5b50601754610365565b34801561077957600080fd5b506001546103ce906001600160a01b031681565b34801561079957600080fd5b506102ad6107a8366004612b1b565b611b80565b3480156107b957600080fd5b50610647611c24565b3480156107ce57600080fd5b506102ad6107dd366004612b1b565b611c7c565b3480156107ee57600080fd5b506105cf6107fd366004612f9b565b611d14565b34801561080e57600080fd5b5061043661081d366004612b85565b60186020526000908152604090205460ff1681565b34801561083e57600080fd5b506103ce61084d366004612b1b565b611e29565b6000546001600160a01b0316331461087c576040516282b42960e81b815260040160405180910390fd5b6012548135118061089257506013546020820135115b806108a257506014546040820135115b806108b257506015546060820135115b156108d0576040516315b05a8f60e01b815260040160405180910390fd5b8035600e819055602080830135600f81905560408085013560108190556060808701356011819055835196875294860193909352908401528201527fe1c45f8aeb543f30b37cc2fccfbac0f32cc8f234284df921d71cff04e51ef421906080015b60405180910390a150565b6000546001600160a01b03163314610966576040516282b42960e81b815260040160405180910390fd5b806006546109749190612ffe565b15158061098d57508060075461098a9190612ffe565b15155b806109a45750806008546109a19190612ffe565b15155b806109bb5750806009546109b89190612ffe565b15155b156109d9576040516311b75c1560e31b815260040160405180910390fd5b60058190556040518181527f04ed835b488b4fcf0a212a46ed67cbbffc2fc81b5cb6a12c546572cbf7b7e06a90602001610931565b6000546001600160a01b03163314610a38576040516282b42960e81b815260040160405180910390fd5b600b54811115610a5b57604051631670f79760e01b815260040160405180910390fd5b600a8190556040518181527faab0ee9100629c405a4d75336e1640cc81e0608fb0d7f17389c06ee8d4f0219190602001610931565b6000546001600160a01b03163314610aba576040516282b42960e81b815260040160405180910390fd5b670de0b6b3a764000081351180610adc5750670de0b6b3a76400008160200135115b80610af25750670de0b6b3a76400008160400135115b80610b085750670de0b6b3a76400008160600135115b80610b155750600e548135105b80610b255750600f546020820135105b80610b3557506010546040820135105b80610b4557506011546060820135105b15610b635760405163161071fb60e11b815260040160405180910390fd5b80356012819055602080830135601381905560408085013560148190556060808701356015819055835196875294860193909352908401528201527f8c6093c7e65dd862e88162770c4e156e8a0da57d25d961e0fb6f28cfb7ff89a790608001610931565b6000546001600160a01b03163314610bf2576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03821660009081526018602052604090205460ff16610c2b57604051634bf121ab60e01b815260040160405180910390fd5b816001600160a01b031660178281548110610c4857610c48613012565b6000918252602090912001546001600160a01b031614610c7b57604051630f2700cb60e21b815260040160405180910390fd5b6001600160a01b0382166000908152601860205260409020805460ff1916905560178054610cab9060019061303e565b81548110610cbb57610cbb613012565b600091825260209091200154601780546001600160a01b039092169183908110610ce757610ce7613012565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506017805480610d2657610d26613051565b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038416917f709b7450bfafda93efd91d29149870a794637ac9d696ca61625fd2f53548afe091a25050565b6000546001600160a01b03163314610daa576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03811660009081526018602052604090205460ff1615610de45760405163bd34634f60e01b815260040160405180910390fd5b6001600160a01b038116600081815260186020526040808220805460ff1916600190811790915560178054918201815583527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c150180546001600160a01b03191684179055517f16ce88285cfd59829a5aa04370a5ec8090a18c14e7e7fb9d4b12a42291c098e39190a250565b6000546001600160a01b03163314610e9a576040516282b42960e81b815260040160405180910390fd5b600381905560405181907f395a61259037298d1c4cd4bf177b64ad5995d38a9394573fcd9060d649314ad090600090a250565b6000546001600160a01b03163314610ef7576040516282b42960e81b815260040160405180910390fd5b600c54811015610f1a57604051630a35539d60e41b815260040160405180910390fd5b600d8190556040518181527fa9e7961bb3342715dbecc208087a6a9df8986d524b3a0a829fd90f5a2f5ba53e90602001610931565b6001600160a01b03871660009081526018602052604081205460ff16610f8857604051636e623f0f60e01b815260040160405180910390fd5b610f93878686611e3e565b60408051336020808301919091528183018c905282518083038401815260608301938490528051910120633e61c84960e11b9092526000916001600160a01b038b1691637cc3909291610ff0918c908c908a908a9060640161317f565b6020604051808303816000875af115801561100f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103391906131be565b9a9950505050505050505050565b6000546001600160a01b0316331461106b576040516282b42960e81b815260040160405180910390fd5b60065481108061108657506005546110839082612ffe565b15155b80611092575060085481115b156110b05760405163f9c0959d60e01b815260040160405180910390fd5b60078190556040518181527f31407ddd1722f500b8aa2c18e112398626dd7c2869a5f80731ec30b244d9b5f290602001610931565b6001600160a01b03881660009081526018602052604081205460ff1661111e57604051636e623f0f60e01b815260040160405180910390fd5b611129888686611e3e565b60408051336020808301919091528183018d90528251808303840181526060830193849052805191012063311fa43160e21b9092526000916001600160a01b038c169163c47e90c491611184918d908d9089906064016131db565b6020604051808303816000875af11580156111a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c791906131be565b6001600160a01b038181166000908152601960205260409081902080546001600160a01b0319168e84169081179091556001549092166101008d015251919250907f2b2f18d6a5803b503bcb3d887ccd7a77aa7e1e644a4c99effef843bf3e307157906112399084908d908d90613216565b60405180910390a2601a805460018082019092557f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e0180546001600160a01b0319166001600160a01b0384169081179091556000908152601b60205260408120805460ff191690921790915534881161134c576112b6883461303e565b60408051606081018252338152600160208201528082018890529051631df417fd60e21b81529192506001600160a01b038416916377d05ff4918b916113039183918d9190600401613247565b60206040518083038185885af1158015611321573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611346919061328d565b50611409565b5088513490611366906001600160a01b031633308b612117565b895161137c906001600160a01b0316838a612184565b60408051606081018252338152600160208201528082018790529051631df417fd60e21b81526001600160a01b038416916377d05ff4916113c4918c918c9190600401613247565b6020604051808303816000875af11580156113e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611407919061328d565b505b801561147a57604051600090339083908381818185875af1925050503d8060008114611451576040519150601f19603f3d011682016040523d82523d6000602084013e611456565b606091505b5050905080611478576040516312171d8360e31b815260040160405180910390fd5b505b60005b60165481101561152057826001600160a01b0316637180c8ca601683815481106114a9576114a9613012565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b1580156114fd57600080fd5b505af1158015611511573d6000803e3d6000fd5b5050505080600101905061147d565b5060015460405163ab033ea960e01b81526001600160a01b0391821660048201529083169063ab033ea990602401600060405180830381600087803b15801561156857600080fd5b505af115801561157c573d6000803e3d6000fd5b50939e9d5050505050505050505050505050565b6000546001600160a01b031633146115ba576040516282b42960e81b815260040160405180910390fd5b600d548111156115dd57604051635a8f655760e01b815260040160405180910390fd5b600c8190556040518181527f490eb2a91746aa933c9ffe2f7939aa06498f3259139f8805f008b12c8c697a4690602001610931565b6000546001600160a01b0316331461163c576040516282b42960e81b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040517f03aa5b0fb65014eea89fda04a7bc11742014881f3c078f2c75b7226ce10d941890600090a250565b6000546001600160a01b031633146116b0576040516282b42960e81b815260040160405180910390fd5b6005548110806116cb57506005546116c89082612ffe565b15155b806116d7575060075481115b156116f557604051630219d66360e11b815260040160405180910390fd5b60068190556040518181527f6f8175cdbac1b4d238abba24a17d2554d7b9750bbeda6414e191c478384b763190602001610931565b6000546001600160a01b03163314611754576040516282b42960e81b815260040160405180910390fd5b600a548110156117775760405163019cfb7b60e61b815260040160405180910390fd5b600b8190556040518181527f4fa35c11ce9a45ae882c154ecb53ab5cac52a74a5b9b0373be36deb30c78297890602001610931565b6000546001600160a01b031633146117d6576040516282b42960e81b815260040160405180910390fd5b6117e260168383612a91565b507f2a85276cf604a3822e19b29a3e97aebfbc47a19025c2e8f6e80b3af774dcbc3882826040516118149291906132a6565b60405180910390a15050565b6060601680548060200260200160405190810160405280929190818152602001828054801561187857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161185a575b5050505050905090565b6000546001600160a01b031633146118ac576040516282b42960e81b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117825560405190917f9d3e522e1e47a2f6009739342b9cc7b252a1888154e843ab55ee1c81745795ab91a250565b60608183111561191757604051633b2735ab60e11b815260040160405180910390fd5b601a5482111561193a5760405163e0f7becb60e01b815260040160405180910390fd5b611944838361303e565b61194f9060016132f4565b67ffffffffffffffff81111561196757611967612ba2565b604051908082528060200260200182016040528015611990578160200160208202803683370190505b509050825b828111611a0957601a81815481106119af576119af613012565b6000918252602090912001546001600160a01b0316826119cf868461303e565b815181106119df576119df613012565b6001600160a01b039092166020928302919091019091015280611a0181613307565b915050611995565b5092915050565b611a3b6040518060800160405280600081526020016000815260200160008152602001600081525090565b5060408051608081018252600e548152600f54602082015260105491810191909152601154606082015290565b6000546001600160a01b03163314611a92576040516282b42960e81b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f90600090a250565b6000601a8281548110611af157611af1613012565b6000918252602090912001546001600160a01b031692915050565b6000546001600160a01b03163314611b36576040516282b42960e81b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517ff3e07b4bb4394f2ff320bd1dd151551dff304d5e948b401d8558b228482c97d890600090a250565b6000546001600160a01b03163314611baa576040516282b42960e81b815260040160405180910390fd5b600754811080611bc55750600554611bc29082612ffe565b15155b80611bd1575060095481115b15611bef57604051633007ad0160e11b815260040160405180910390fd5b60088190556040518181527fe9ef3e93dff799d4db8a12ff79e0918a5a78d75b10527864f4b1c920f6f4f17890602001610931565b611c4f6040518060800160405280600081526020016000815260200160008152602001600081525090565b50604080516080810182526012548152601354602082015260145491810191909152601554606082015290565b6000546001600160a01b03163314611ca6576040516282b42960e81b815260040160405180910390fd5b600854811080611cc15750600554611cbe9082612ffe565b15155b15611cdf5760405163cfb699cb60e01b815260040160405180910390fd5b60098190556040518181527f866fe9485f9983afceaa1385307b6eb0fd3df5a250ae2b0bf76dc9ddd316926b90602001610931565b606081831115611d3757604051633b2735ab60e11b815260040160405180910390fd5b601754821115611d5a5760405163e0f7becb60e01b815260040160405180910390fd5b611d64838361303e565b611d6f9060016132f4565b67ffffffffffffffff811115611d8757611d87612ba2565b604051908082528060200260200182016040528015611db0578160200160208202803683370190505b509050825b828111611a095760178181548110611dcf57611dcf613012565b6000918252602090912001546001600160a01b031682611def868461303e565b81518110611dff57611dff613012565b6001600160a01b039092166020928302919091019091015280611e2181613307565b915050611db5565b600060178281548110611af157611af1613012565b6006548360c001511080611e5757506007548360c00151115b80611e7257506005548360c00151611e6f9190612ffe565b15155b15611e9057604051635428734d60e01b815260040160405180910390fd5b6008548360a001511080611ea957506009548360a00151115b80611ec657508260c001518360a00151611ec39190612ffe565b15155b15611ee45760405163253fffcf60e11b815260040160405180910390fd5b601254610140840151511180611f04575060135461014084015160200151115b80611f19575060145461014084015160400151115b80611f2e575060155461014084015160600151115b80611f405750600e5461014084015151105b80611f555750600f5461014084015160200151105b80611f6a575060105461014084015160400151105b80611f7f575060115461014084015160600151105b15611f9d57604051632d8768f960e01b815260040160405180910390fd5b60208301516001600160a01b0316151580611fbb5750604083015115155b80611fd357506101208301516001600160a01b031615155b80611feb57506101008301516001600160a01b031615155b80611ff9575060e083015115155b156120175760405163e8c02dd760e01b815260040160405180910390fd5b600a548210806120285750600b5482115b15612046576040516330554de160e01b815260040160405180910390fd5b600061206b6611c37937e0800061206585671bc16d674ec80000612214565b90612232565b600c5490915061207b9082612232565b8210806120ae57506120ab6120a2671bc16d674ec8000061209c8685612232565b90612248565b600d549061225d565b82115b156120cc576040516383ebdfb760e01b815260040160405180910390fd5b60006120dc838660a00151612272565b6002546001600160a01b0390811660208801526003546040880152600454166101208701523061010087015260e09095019490945250505050565b6040516001600160a01b03848116602483015283811660448301526064820183905261217e9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050612359565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526121d584826123c6565b61217e576040516001600160a01b0384811660248301526000604483015261220a91869182169063095ea7b39060640161214c565b61217e8482612359565b600061222983670de0b6b3a76400008461246e565b90505b92915050565b60008183116122415781612229565b5090919050565b60006122298383670de0b6b3a764000061246e565b600081831161226c5782612229565b50919050565b6000806122a3612294612286866064613320565b66a5bbed86c5a00090612248565b6748cd4072281e000090612214565b90506122b7670de0b6b3a764000082612214565b9050826301e13380036122cb57905061222c565b60006123006122df86866301e1338061246e565b6122f190670de0b6b3a76400006132f4565b670de0b6b3a764000090612214565b905060006123206122f1670de0b6b3a764000080896301e133808861248c565b905061234f61232e82612523565b61233790613337565b61234084612523565b61234990613337565b90612214565b9695505050505050565b600061236e6001600160a01b0384168361273f565b905080516000141580156123935750808060200190518101906123919190613353565b155b156123c157604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000806000846001600160a01b0316846040516123e39190613375565b6000604051808303816000865af19150503d8060008114612420576040519150601f19603f3d011682016040523d82523d6000602084013e612425565b606091505b509150915081801561244f57508051158061244f57508080602001905181019061244f9190613353565b801561246557506000856001600160a01b03163b115b95945050505050565b600082600019048411830215820261248557600080fd5b5091020490565b60008061249d846301e13380612214565b905060006124ab8683612248565b6124bd90670de0b6b3a76400006132f4565b9050670de0b6b3a764000081106124f1576124ea6124e3670de0b6b3a764000086612214565b829061274d565b9050612509565b6125066124e3670de0b6b3a7640000866127a4565b90505b6125178161209c898b612248565b98975050505050505050565b60008082136125455760405163e61b497560e01b815260040160405180910390fd5b5060606fffffffffffffffffffffffffffffffff821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110600190811b90911783811c90911017609f81810383019390931b90921c6c465772b2bbbb5f824b15207a3081018102821d6d0388eaa27412d5aca026815d636e018102821d6d0df99ac502031bf953eff472fdcc018102821d6d13cdffb29d51d99322bdff5f2211018102821d6d0a0f742023def783a307a986912e018102821d6d01920d8043ca89b5239253284e42018102821d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7882018202831d6d0139601a2efabe717e604cbb4894018202831d6d02247f7a7b6594320649aa03aba1018202831d6c8c3f38e95a6b1ff2ab1c3b343619018202831d6d02384773bdf1ac5676facced60901901820290921d6cb9a025d814b29c212b8b1a07cd190102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a550602605f19919091017d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b6060612229838360006127b9565b6000816000036127665750670de0b6b3a764000061222c565b826000036127765750600061222c565b81600061278285612523565b9050818102612799670de0b6b3a764000082613391565b905061234f81612858565b600061222983670de0b6b3a7640000846129e3565b6060814710156127de5760405163cd78605960e01b81523060048201526024016123b8565b600080856001600160a01b031684866040516127fa9190613375565b60006040518083038185875af1925050503d8060008114612837576040519150601f19603f3d011682016040523d82523d6000602084013e61283c565b606091505b509150915061284c868383612a09565b925050505b9392505050565b6000680248ce36a70cb26b3e19821361287357506000919050565b680755bf798b4a1bf1e5821261289c576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b39881029093036c240c330e9fb2d9cbaf0fd5aafb1981018102606090811d6d0277594991cfc85f6e2461837cd9018202811d6d1a521255e34f6a5061b25ef1c9c319018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d6e02c72388d9f74f51a9331fed693f1419018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084016d01d3967ed30fc4f89c02bab5708119010290911d6e0587f503bb6ea29d25fcb740196450019091026d360d7aeea093263ecc6e0ecb291760621b010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b60008260001904841183021582026129fa57600080fd5b50910281810615159190040190565b606082612a1e57612a1982612a65565b612851565b8151158015612a3557506001600160a01b0384163b155b15612a5e57604051639996b31560e01b81526001600160a01b03851660048201526024016123b8565b5080612851565b805115612a755780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b828054828255906000526020600020908101928215612ae4579160200282015b82811115612ae45781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190612ab1565b50612af0929150612af4565b5090565b5b80821115612af05760008155600101612af5565b60006080828403121561226c57600080fd5b600060208284031215612b2d57600080fd5b5035919050565b6001600160a01b0381168114612a8e57600080fd5b8035612b5481612b34565b919050565b60008060408385031215612b6c57600080fd5b8235612b7781612b34565b946020939093013593505050565b600060208284031215612b9757600080fd5b813561285181612b34565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715612bdc57612bdc612ba2565b60405290565b600060808284031215612bf457600080fd5b6040516080810181811067ffffffffffffffff82111715612c1757612c17612ba2565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b60006101c08284031215612c5b57600080fd5b612c63612bb8565b9050612c6e82612b49565b8152612c7c60208301612b49565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100612ccb818401612b49565b90820152610120612cdd838201612b49565b90820152610140612cf084848301612be2565b9082015292915050565b600082601f830112612d0b57600080fd5b813567ffffffffffffffff80821115612d2657612d26612ba2565b604051601f8301601f19908116603f01168101908282118183101715612d4e57612d4e612ba2565b81604052838152866020858801011115612d6757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000806000806102a0898b031215612da457600080fd5b883597506020890135612db681612b34565b9650612dc58a60408b01612c48565b955061020089013567ffffffffffffffff811115612de257600080fd5b612dee8b828c01612cfa565b989b979a509598610220810135976102408201359750610260820135965061028090910135945092505050565b60008060008060008060008060006102c08a8c031215612e3a57600080fd5b8935985060208a0135612e4c81612b34565b9750612e5b8b60408c01612c48565b96506102008a013567ffffffffffffffff80821115612e7957600080fd5b612e858d838e01612cfa565b97506102208c013596506102408c013595506102608c013594506102808c0135915080821115612eb457600080fd5b50612ec18c828d01612cfa565b9250506102a08a013590509295985092959850929598565b60008060208385031215612eec57600080fd5b823567ffffffffffffffff80821115612f0457600080fd5b818501915085601f830112612f1857600080fd5b813581811115612f2757600080fd5b8660208260051b8501011115612f3c57600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b81811015612f8f5783516001600160a01b031683529284019291840191600101612f6a565b50909695505050505050565b60008060408385031215612fae57600080fd5b50508035926020909101359150565b815181526020808301519082015260408083015190820152606080830151908201526080810161222c565b634e487b7160e01b600052601260045260246000fd5b60008261300d5761300d612fe8565b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561222c5761222c613028565b634e487b7160e01b600052603160045260246000fd5b80516001600160a01b03168252602081015161308e60208401826001600160a01b03169052565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201516130e6828501826001600160a01b03169052565b5050610120818101516001600160a01b031690830152610140808201518051828501526020810151610160850152604081015161018085015260608101516101a085015261217e565b60005b8381101561314a578181015183820152602001613132565b50506000910152565b6000815180845261316b81602086016020860161312f565b601f01601f19169290920160200192915050565b60006102408783526131946020840188613067565b806101e08401526131a781840187613153565b610200840195909552505061022001529392505050565b6000602082840312156131d057600080fd5b815161285181612b34565b60006102208683526131f06020840187613067565b806101e084015261320381840186613153565b9150508261020083015295945050505050565b6001600160a01b038416815260006102006132346020840186613067565b806101e084015261234f81840185613153565b8381528260208201526060604082015260018060a01b03825116606082015260208201511515608082015260006040830151606060a084015261234f60c0840182613153565b60006020828403121561329f57600080fd5b5051919050565b60208082528181018390526000908460408401835b868110156132e95782356132ce81612b34565b6001600160a01b0316825291830191908301906001016132bb565b509695505050505050565b8082018082111561222c5761222c613028565b60006001820161331957613319613028565b5060010190565b808202811582820484141761222c5761222c613028565b6000600160ff1b820161334c5761334c613028565b5060000390565b60006020828403121561336557600080fd5b8151801515811461285157600080fd5b6000825161338781846020870161312f565b9190910192915050565b6000826133a0576133a0612fe8565b600160ff1b8214600019841416156133ba576133ba613028565b50059056fea26469706673582212209a74d523c3b23b3d6f969aeaad0f5de8d46f588b8641420541f111714e9c0edb64736f6c63430008140033";
        readonly sourceMap: "979:38327:21:-:0;;;6195:4766;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6519:14;:43;;;6468:14;:36;;;:94;:225;;;;6633:14;:43;;;6578:14;:36;;;:98;;;;:::i;:::-;:115;;6468:225;6451:334;;;6725:49;;-1:-1:-1;;;6725:49:21;;;;;;;;;;;6451:334;6818:36;;;;6794:21;:60;;;7076:36;;;;:87;;:218;;;7234:14;:43;;;7179:14;:36;;;:98;;;;:::i;:::-;:115;;7076:218;7059:327;;;7326:49;;-1:-1:-1;;;7326:49:21;;;;;;;;;;;7059:327;7419:36;;;;7395:21;:60;;;7675:34;;;;:85;;:214;;;7829:14;:43;;;7776:14;:34;;;:96;;;;:::i;:::-;:113;;7675:214;7658:321;;;7921:47;;-1:-1:-1;;;7921:47:21;;;;;;;;;;;7658:321;8010:34;;;;7988:19;:56;;;8262:34;;;;:83;;:212;;;8414:14;:43;;;8361:14;:34;;;:96;;;;:::i;:::-;:113;;8262:212;8245:319;;;8506:47;;-1:-1:-1;;;8506:47:21;;;;;;;;;;;8245:319;8595:34;;;;8573:19;:56;8777:26;;;;8748;;;;:55;8744:129;;;8826:36;;-1:-1:-1;;;8826:36:21;;;;;;;;;;;8744:129;8896:26;;;;8882:11;:40;8946:26;;;;8932:11;:40;9153:32;;;;9118;;;;:67;9101:169;;;9217:42;;-1:-1:-1;;;9217:42:21;;;;;;;;;;;9101:169;9299:32;;;;9279:17;:52;9361:32;;;;9341:17;:52;9522:22;;;;:28;150:4:73;-1:-1:-1;9522:34:21;:83;;;150:4:73;9572:14:21;:22;;;:27;;;:33;9522:83;:140;;;;150:4:73;9621:14:21;:22;;;:35;;;:41;9522:140;:201;;;;150:4:73;9678:14:21;:22;;;:39;;;:45;9522:201;9505:296;;;9755:35;;-1:-1:-1;;;9755:35:21;;;;;;;;;;;9505:296;9821:22;;;;9810:33;;:8;:33;;;;;;;;;;;;;;;;;;;;;;10015:22;;;;:28;:59;;:132;;;10120:14;:22;;;:27;;;10090:14;:22;;;:27;;;:57;10015:132;:233;;;;10213:14;:22;;;:35;;;10163:14;:22;;;:35;;;:85;10015:233;:342;;;;10318:14;:22;;;:39;;;10264:14;:22;;;:39;;;:93;10015:342;9998:437;;;10389:35;;-1:-1:-1;;;10389:35:21;;;;;;;;;;;9998:437;10455:22;;;;10444:33;;:8;:33;;;;;;;;;;;;;;;;;;;;;;10545:25;;-1:-1:-1;10532:38:21;;-1:-1:-1;;;;;;10532:38:21;;;-1:-1:-1;;;;;10532:38:21;;;;;;;10603:35;;;;-1:-1:-1;10580:58:21;;;;;;;;;;;;;10663:27;;;;10648:12;:42;;;;;;;;;;;10718:29;;;;10700:47;;;;:15;;:47;;;:::i;:::-;-1:-1:-1;10773:28:21;;;;10757:13;:44;;-1:-1:-1;;;;;;10757:44:21;-1:-1:-1;;;;;10757:44:21;;;;;;;;;10828:29;;;;10811:14;:46;10898:56;;;10867:28;:87;979:38327;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;979:38327:21;-1:-1:-1;;;;;979:38327:21;;;;;;;;;;;-1:-1:-1;979:38327:21;;;;;;;-1:-1:-1;979:38327:21;;;-1:-1:-1;979:38327:21;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:184;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;213:2;207:9;255:6;243:19;;-1:-1:-1;;;;;277:34:184;;313:22;;;274:62;271:88;;;339:18;;:::i;:::-;375:2;368:22;146:250;:::o;401:177::-;480:13;;-1:-1:-1;;;;;522:31:184;;512:42;;502:70;;568:1;565;558:12;502:70;401:177;;;:::o;583:923::-;648:5;701:3;694:4;686:6;682:17;678:27;668:55;;719:1;716;709:12;668:55;742:13;;774:4;-1:-1:-1;;;;;827:10:184;;;824:36;;;840:18;;:::i;:::-;886:2;883:1;879:10;918:2;912:9;981:2;977:7;972:2;968;964:11;960:25;952:6;948:38;1036:6;1024:10;1021:22;1016:2;1004:10;1001:18;998:46;995:72;;;1047:18;;:::i;:::-;1083:2;1076:22;1133:18;;;1209:15;;;1205:24;;;1167:15;;;;-1:-1:-1;1241:15:184;;;1238:35;;;1269:1;1266;1259:12;1238:35;1305:2;1297:6;1293:15;1282:26;;1317:159;1333:6;1328:3;1325:15;1317:159;;;1399:34;1429:3;1399:34;:::i;:::-;1387:47;;1454:12;;;;1350;;;;1317:159;;;1494:6;583:923;-1:-1:-1;;;;;;;583:923:184:o;1511:584::-;1573:5;1621:4;1609:9;1604:3;1600:19;1596:30;1593:50;;;1639:1;1636;1629:12;1593:50;1672:2;1666:9;1714:4;1702:17;;-1:-1:-1;;;;;1734:34:184;;1770:22;;;1731:62;1728:88;;;1796:18;;:::i;:::-;1836:10;1832:2;1825:22;;1865:6;1856:15;;1901:9;1895:16;1887:6;1880:32;1966:2;1955:9;1951:18;1945:25;1940:2;1932:6;1928:15;1921:50;2025:2;2014:9;2010:18;2004:25;1999:2;1991:6;1987:15;1980:50;2084:2;2073:9;2069:18;2063:25;2058:2;2050:6;2046:15;2039:50;;1511:584;;;;:::o;2100:1775::-;2201:6;2254:2;2242:9;2233:7;2229:23;2225:32;2222:52;;;2270:1;2267;2260:12;2222:52;2297:16;;-1:-1:-1;;;;;2362:14:184;;;2359:34;;;2389:1;2386;2379:12;2359:34;2412:22;;;;2468:6;2450:16;;;2446:29;2443:49;;;2488:1;2485;2478:12;2443:49;2514:17;;:::i;:::-;2554:33;2584:2;2554:33;:::i;:::-;2547:5;2540:48;2620:42;2658:2;2654;2650:11;2620:42;:::i;:::-;2615:2;2608:5;2604:14;2597:66;2702:2;2698;2694:11;2688:18;2731:2;2721:8;2718:16;2715:36;;;2747:1;2744;2737:12;2715:36;2783:67;2842:7;2831:8;2827:2;2823:17;2783:67;:::i;:::-;2778:2;2771:5;2767:14;2760:91;;2883:42;2921:2;2917;2913:11;2883:42;:::i;:::-;2878:2;2867:14;;2860:66;2973:3;2965:12;;;2959:19;2942:15;;;2935:44;3026:3;3018:12;;;3012:19;2995:15;;;2988:44;3079:3;3071:12;;;3065:19;3048:15;;;3041:44;3132:3;3124:12;;;3118:19;3101:15;;;3094:44;3157:3;3198:11;;;3192:18;3176:14;;;3169:42;3230:3;3271:11;;;3265:18;3249:14;;;3242:42;3303:3;3344:11;;;3338:18;3322:14;;;3315:42;3376:3;3417:11;;;3411:18;3395:14;;;3388:42;3449:3;3490:11;;;3484:18;3468:14;;;3461:42;3522:3;;-1:-1:-1;3557:55:184;3604:7;3591:11;;;3557:55;:::i;:::-;3552:2;3545:5;3541:14;3534:79;3649:59;3700:7;3691:6;3687:2;3683:15;3649:59;:::i;:::-;3640:6;3633:5;3629:18;3622:87;3745:43;3783:3;3779:2;3775:12;3745:43;:::i;:::-;3736:6;3725:18;;3718:71;3839:3;3831:12;;;;3825:19;3816:6;3805:18;;3798:47;-1:-1:-1;3729:5:184;2100:1775;-1:-1:-1;;;2100:1775:184:o;3880:209::-;3912:1;3938;3928:132;;3982:10;3977:3;3973:20;3970:1;3963:31;4017:4;4014:1;4007:15;4045:4;4042:1;4035:15;3928:132;-1:-1:-1;4074:9:184;;3880:209::o;:::-;979:38327:21;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "0x6080604052600436106102885760003560e01c80639af252621161015a578063daac24da116100c1578063e71f34b31161007a578063e71f34b31461078d578063e83e34b1146107ad578063eb71f66c146107c2578063ec895f11146107e2578063f8c09e5914610802578063fe3d5aeb1461083257600080fd5b8063daac24da146106ec578063daf012e61461070c578063dd2b8fbb14610722578063e0e2daaa14610742578063e1b39c8014610758578063e33315551461076d57600080fd5b8063c415b95c11610113578063c415b95c14610654578063c905a4b514610674578063d0f96b921461068a578063d23d7ea3146106a0578063d2c35ce8146106b6578063d6f50169146106d657600080fd5b80639af252621461059a578063a64c90bf146105ba578063b2561263146105dc578063bc30e7a1146105fc578063bf9bd5cd1461061c578063c17225631461063257600080fd5b80636b44e6be116101fe57806383b361e8116101b757806383b361e8146104e457806385229785146105045780638e127cf5146105245780638efc09861461054457806397b0e8ce1461055a57806399623bb11461057a57600080fd5b80636b44e6be146104065780636be6d7d4146104465780636c8cc865146104665780636e95d67c1461049c5780636f6d5c4a146104b15780637324b145146104d157600080fd5b8063421caba811610250578063421caba81461032f578063488007601461034f5780634fbfee77146103785780635720c9d5146103985780635aa6e675146103ae578063628027a3146103e657600080fd5b806310d1dc3e1461028d57806311e77bfe146102af5780631978ebcf146102cf5780632885e3ac146102ef578063411c30351461030f575b600080fd5b34801561029957600080fd5b506102ad6102a8366004612b09565b610852565b005b3480156102bb57600080fd5b506102ad6102ca366004612b1b565b61093c565b3480156102db57600080fd5b506102ad6102ea366004612b1b565b610a0e565b3480156102fb57600080fd5b506102ad61030a366004612b09565b610a90565b34801561031b57600080fd5b506102ad61032a366004612b59565b610bc8565b34801561033b57600080fd5b506102ad61034a366004612b85565b610d80565b34801561035b57600080fd5b50610365600d5481565b6040519081526020015b60405180910390f35b34801561038457600080fd5b506102ad610393366004612b1b565b610e70565b3480156103a457600080fd5b5061036560065481565b3480156103ba57600080fd5b506000546103ce906001600160a01b031681565b6040516001600160a01b03909116815260200161036f565b3480156103f257600080fd5b506102ad610401366004612b1b565b610ecd565b34801561041257600080fd5b50610436610421366004612b85565b601b6020526000908152604090205460ff1681565b604051901515815260200161036f565b34801561045257600080fd5b506103ce610461366004612d87565b610f4f565b34801561047257600080fd5b506103ce610481366004612b85565b6019602052600090815260409020546001600160a01b031681565b3480156104a857600080fd5b50601a54610365565b3480156104bd57600080fd5b506102ad6104cc366004612b1b565b611041565b6103ce6104df366004612e1b565b6110e5565b3480156104f057600080fd5b506102ad6104ff366004612b1b565b611590565b34801561051057600080fd5b506102ad61051f366004612b85565b611612565b34801561053057600080fd5b506102ad61053f366004612b1b565b611686565b34801561055057600080fd5b5061036560095481565b34801561056657600080fd5b506102ad610575366004612b1b565b61172a565b34801561058657600080fd5b506002546103ce906001600160a01b031681565b3480156105a657600080fd5b506102ad6105b5366004612ed9565b6117ac565b3480156105c657600080fd5b506105cf611820565b60405161036f9190612f4e565b3480156105e857600080fd5b506102ad6105f7366004612b85565b611882565b34801561060857600080fd5b506105cf610617366004612f9b565b6118f4565b34801561062857600080fd5b50610365600b5481565b34801561063e57600080fd5b50610647611a10565b60405161036f9190612fbd565b34801561066057600080fd5b506004546103ce906001600160a01b031681565b34801561068057600080fd5b5061036560035481565b34801561069657600080fd5b5061036560055481565b3480156106ac57600080fd5b50610365600a5481565b3480156106c257600080fd5b506102ad6106d1366004612b85565b611a68565b3480156106e257600080fd5b50610365600c5481565b3480156106f857600080fd5b506103ce610707366004612b1b565b611adc565b34801561071857600080fd5b5061036560085481565b34801561072e57600080fd5b506102ad61073d366004612b85565b611b0c565b34801561074e57600080fd5b5061036560075481565b34801561076457600080fd5b50601754610365565b34801561077957600080fd5b506001546103ce906001600160a01b031681565b34801561079957600080fd5b506102ad6107a8366004612b1b565b611b80565b3480156107b957600080fd5b50610647611c24565b3480156107ce57600080fd5b506102ad6107dd366004612b1b565b611c7c565b3480156107ee57600080fd5b506105cf6107fd366004612f9b565b611d14565b34801561080e57600080fd5b5061043661081d366004612b85565b60186020526000908152604090205460ff1681565b34801561083e57600080fd5b506103ce61084d366004612b1b565b611e29565b6000546001600160a01b0316331461087c576040516282b42960e81b815260040160405180910390fd5b6012548135118061089257506013546020820135115b806108a257506014546040820135115b806108b257506015546060820135115b156108d0576040516315b05a8f60e01b815260040160405180910390fd5b8035600e819055602080830135600f81905560408085013560108190556060808701356011819055835196875294860193909352908401528201527fe1c45f8aeb543f30b37cc2fccfbac0f32cc8f234284df921d71cff04e51ef421906080015b60405180910390a150565b6000546001600160a01b03163314610966576040516282b42960e81b815260040160405180910390fd5b806006546109749190612ffe565b15158061098d57508060075461098a9190612ffe565b15155b806109a45750806008546109a19190612ffe565b15155b806109bb5750806009546109b89190612ffe565b15155b156109d9576040516311b75c1560e31b815260040160405180910390fd5b60058190556040518181527f04ed835b488b4fcf0a212a46ed67cbbffc2fc81b5cb6a12c546572cbf7b7e06a90602001610931565b6000546001600160a01b03163314610a38576040516282b42960e81b815260040160405180910390fd5b600b54811115610a5b57604051631670f79760e01b815260040160405180910390fd5b600a8190556040518181527faab0ee9100629c405a4d75336e1640cc81e0608fb0d7f17389c06ee8d4f0219190602001610931565b6000546001600160a01b03163314610aba576040516282b42960e81b815260040160405180910390fd5b670de0b6b3a764000081351180610adc5750670de0b6b3a76400008160200135115b80610af25750670de0b6b3a76400008160400135115b80610b085750670de0b6b3a76400008160600135115b80610b155750600e548135105b80610b255750600f546020820135105b80610b3557506010546040820135105b80610b4557506011546060820135105b15610b635760405163161071fb60e11b815260040160405180910390fd5b80356012819055602080830135601381905560408085013560148190556060808701356015819055835196875294860193909352908401528201527f8c6093c7e65dd862e88162770c4e156e8a0da57d25d961e0fb6f28cfb7ff89a790608001610931565b6000546001600160a01b03163314610bf2576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03821660009081526018602052604090205460ff16610c2b57604051634bf121ab60e01b815260040160405180910390fd5b816001600160a01b031660178281548110610c4857610c48613012565b6000918252602090912001546001600160a01b031614610c7b57604051630f2700cb60e21b815260040160405180910390fd5b6001600160a01b0382166000908152601860205260409020805460ff1916905560178054610cab9060019061303e565b81548110610cbb57610cbb613012565b600091825260209091200154601780546001600160a01b039092169183908110610ce757610ce7613012565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506017805480610d2657610d26613051565b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038416917f709b7450bfafda93efd91d29149870a794637ac9d696ca61625fd2f53548afe091a25050565b6000546001600160a01b03163314610daa576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03811660009081526018602052604090205460ff1615610de45760405163bd34634f60e01b815260040160405180910390fd5b6001600160a01b038116600081815260186020526040808220805460ff1916600190811790915560178054918201815583527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c150180546001600160a01b03191684179055517f16ce88285cfd59829a5aa04370a5ec8090a18c14e7e7fb9d4b12a42291c098e39190a250565b6000546001600160a01b03163314610e9a576040516282b42960e81b815260040160405180910390fd5b600381905560405181907f395a61259037298d1c4cd4bf177b64ad5995d38a9394573fcd9060d649314ad090600090a250565b6000546001600160a01b03163314610ef7576040516282b42960e81b815260040160405180910390fd5b600c54811015610f1a57604051630a35539d60e41b815260040160405180910390fd5b600d8190556040518181527fa9e7961bb3342715dbecc208087a6a9df8986d524b3a0a829fd90f5a2f5ba53e90602001610931565b6001600160a01b03871660009081526018602052604081205460ff16610f8857604051636e623f0f60e01b815260040160405180910390fd5b610f93878686611e3e565b60408051336020808301919091528183018c905282518083038401815260608301938490528051910120633e61c84960e11b9092526000916001600160a01b038b1691637cc3909291610ff0918c908c908a908a9060640161317f565b6020604051808303816000875af115801561100f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103391906131be565b9a9950505050505050505050565b6000546001600160a01b0316331461106b576040516282b42960e81b815260040160405180910390fd5b60065481108061108657506005546110839082612ffe565b15155b80611092575060085481115b156110b05760405163f9c0959d60e01b815260040160405180910390fd5b60078190556040518181527f31407ddd1722f500b8aa2c18e112398626dd7c2869a5f80731ec30b244d9b5f290602001610931565b6001600160a01b03881660009081526018602052604081205460ff1661111e57604051636e623f0f60e01b815260040160405180910390fd5b611129888686611e3e565b60408051336020808301919091528183018d90528251808303840181526060830193849052805191012063311fa43160e21b9092526000916001600160a01b038c169163c47e90c491611184918d908d9089906064016131db565b6020604051808303816000875af11580156111a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c791906131be565b6001600160a01b038181166000908152601960205260409081902080546001600160a01b0319168e84169081179091556001549092166101008d015251919250907f2b2f18d6a5803b503bcb3d887ccd7a77aa7e1e644a4c99effef843bf3e307157906112399084908d908d90613216565b60405180910390a2601a805460018082019092557f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e0180546001600160a01b0319166001600160a01b0384169081179091556000908152601b60205260408120805460ff191690921790915534881161134c576112b6883461303e565b60408051606081018252338152600160208201528082018890529051631df417fd60e21b81529192506001600160a01b038416916377d05ff4918b916113039183918d9190600401613247565b60206040518083038185885af1158015611321573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611346919061328d565b50611409565b5088513490611366906001600160a01b031633308b612117565b895161137c906001600160a01b0316838a612184565b60408051606081018252338152600160208201528082018790529051631df417fd60e21b81526001600160a01b038416916377d05ff4916113c4918c918c9190600401613247565b6020604051808303816000875af11580156113e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611407919061328d565b505b801561147a57604051600090339083908381818185875af1925050503d8060008114611451576040519150601f19603f3d011682016040523d82523d6000602084013e611456565b606091505b5050905080611478576040516312171d8360e31b815260040160405180910390fd5b505b60005b60165481101561152057826001600160a01b0316637180c8ca601683815481106114a9576114a9613012565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b1580156114fd57600080fd5b505af1158015611511573d6000803e3d6000fd5b5050505080600101905061147d565b5060015460405163ab033ea960e01b81526001600160a01b0391821660048201529083169063ab033ea990602401600060405180830381600087803b15801561156857600080fd5b505af115801561157c573d6000803e3d6000fd5b50939e9d5050505050505050505050505050565b6000546001600160a01b031633146115ba576040516282b42960e81b815260040160405180910390fd5b600d548111156115dd57604051635a8f655760e01b815260040160405180910390fd5b600c8190556040518181527f490eb2a91746aa933c9ffe2f7939aa06498f3259139f8805f008b12c8c697a4690602001610931565b6000546001600160a01b0316331461163c576040516282b42960e81b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040517f03aa5b0fb65014eea89fda04a7bc11742014881f3c078f2c75b7226ce10d941890600090a250565b6000546001600160a01b031633146116b0576040516282b42960e81b815260040160405180910390fd5b6005548110806116cb57506005546116c89082612ffe565b15155b806116d7575060075481115b156116f557604051630219d66360e11b815260040160405180910390fd5b60068190556040518181527f6f8175cdbac1b4d238abba24a17d2554d7b9750bbeda6414e191c478384b763190602001610931565b6000546001600160a01b03163314611754576040516282b42960e81b815260040160405180910390fd5b600a548110156117775760405163019cfb7b60e61b815260040160405180910390fd5b600b8190556040518181527f4fa35c11ce9a45ae882c154ecb53ab5cac52a74a5b9b0373be36deb30c78297890602001610931565b6000546001600160a01b031633146117d6576040516282b42960e81b815260040160405180910390fd5b6117e260168383612a91565b507f2a85276cf604a3822e19b29a3e97aebfbc47a19025c2e8f6e80b3af774dcbc3882826040516118149291906132a6565b60405180910390a15050565b6060601680548060200260200160405190810160405280929190818152602001828054801561187857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161185a575b5050505050905090565b6000546001600160a01b031633146118ac576040516282b42960e81b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117825560405190917f9d3e522e1e47a2f6009739342b9cc7b252a1888154e843ab55ee1c81745795ab91a250565b60608183111561191757604051633b2735ab60e11b815260040160405180910390fd5b601a5482111561193a5760405163e0f7becb60e01b815260040160405180910390fd5b611944838361303e565b61194f9060016132f4565b67ffffffffffffffff81111561196757611967612ba2565b604051908082528060200260200182016040528015611990578160200160208202803683370190505b509050825b828111611a0957601a81815481106119af576119af613012565b6000918252602090912001546001600160a01b0316826119cf868461303e565b815181106119df576119df613012565b6001600160a01b039092166020928302919091019091015280611a0181613307565b915050611995565b5092915050565b611a3b6040518060800160405280600081526020016000815260200160008152602001600081525090565b5060408051608081018252600e548152600f54602082015260105491810191909152601154606082015290565b6000546001600160a01b03163314611a92576040516282b42960e81b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f90600090a250565b6000601a8281548110611af157611af1613012565b6000918252602090912001546001600160a01b031692915050565b6000546001600160a01b03163314611b36576040516282b42960e81b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517ff3e07b4bb4394f2ff320bd1dd151551dff304d5e948b401d8558b228482c97d890600090a250565b6000546001600160a01b03163314611baa576040516282b42960e81b815260040160405180910390fd5b600754811080611bc55750600554611bc29082612ffe565b15155b80611bd1575060095481115b15611bef57604051633007ad0160e11b815260040160405180910390fd5b60088190556040518181527fe9ef3e93dff799d4db8a12ff79e0918a5a78d75b10527864f4b1c920f6f4f17890602001610931565b611c4f6040518060800160405280600081526020016000815260200160008152602001600081525090565b50604080516080810182526012548152601354602082015260145491810191909152601554606082015290565b6000546001600160a01b03163314611ca6576040516282b42960e81b815260040160405180910390fd5b600854811080611cc15750600554611cbe9082612ffe565b15155b15611cdf5760405163cfb699cb60e01b815260040160405180910390fd5b60098190556040518181527f866fe9485f9983afceaa1385307b6eb0fd3df5a250ae2b0bf76dc9ddd316926b90602001610931565b606081831115611d3757604051633b2735ab60e11b815260040160405180910390fd5b601754821115611d5a5760405163e0f7becb60e01b815260040160405180910390fd5b611d64838361303e565b611d6f9060016132f4565b67ffffffffffffffff811115611d8757611d87612ba2565b604051908082528060200260200182016040528015611db0578160200160208202803683370190505b509050825b828111611a095760178181548110611dcf57611dcf613012565b6000918252602090912001546001600160a01b031682611def868461303e565b81518110611dff57611dff613012565b6001600160a01b039092166020928302919091019091015280611e2181613307565b915050611db5565b600060178281548110611af157611af1613012565b6006548360c001511080611e5757506007548360c00151115b80611e7257506005548360c00151611e6f9190612ffe565b15155b15611e9057604051635428734d60e01b815260040160405180910390fd5b6008548360a001511080611ea957506009548360a00151115b80611ec657508260c001518360a00151611ec39190612ffe565b15155b15611ee45760405163253fffcf60e11b815260040160405180910390fd5b601254610140840151511180611f04575060135461014084015160200151115b80611f19575060145461014084015160400151115b80611f2e575060155461014084015160600151115b80611f405750600e5461014084015151105b80611f555750600f5461014084015160200151105b80611f6a575060105461014084015160400151105b80611f7f575060115461014084015160600151105b15611f9d57604051632d8768f960e01b815260040160405180910390fd5b60208301516001600160a01b0316151580611fbb5750604083015115155b80611fd357506101208301516001600160a01b031615155b80611feb57506101008301516001600160a01b031615155b80611ff9575060e083015115155b156120175760405163e8c02dd760e01b815260040160405180910390fd5b600a548210806120285750600b5482115b15612046576040516330554de160e01b815260040160405180910390fd5b600061206b6611c37937e0800061206585671bc16d674ec80000612214565b90612232565b600c5490915061207b9082612232565b8210806120ae57506120ab6120a2671bc16d674ec8000061209c8685612232565b90612248565b600d549061225d565b82115b156120cc576040516383ebdfb760e01b815260040160405180910390fd5b60006120dc838660a00151612272565b6002546001600160a01b0390811660208801526003546040880152600454166101208701523061010087015260e09095019490945250505050565b6040516001600160a01b03848116602483015283811660448301526064820183905261217e9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050612359565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526121d584826123c6565b61217e576040516001600160a01b0384811660248301526000604483015261220a91869182169063095ea7b39060640161214c565b61217e8482612359565b600061222983670de0b6b3a76400008461246e565b90505b92915050565b60008183116122415781612229565b5090919050565b60006122298383670de0b6b3a764000061246e565b600081831161226c5782612229565b50919050565b6000806122a3612294612286866064613320565b66a5bbed86c5a00090612248565b6748cd4072281e000090612214565b90506122b7670de0b6b3a764000082612214565b9050826301e13380036122cb57905061222c565b60006123006122df86866301e1338061246e565b6122f190670de0b6b3a76400006132f4565b670de0b6b3a764000090612214565b905060006123206122f1670de0b6b3a764000080896301e133808861248c565b905061234f61232e82612523565b61233790613337565b61234084612523565b61234990613337565b90612214565b9695505050505050565b600061236e6001600160a01b0384168361273f565b905080516000141580156123935750808060200190518101906123919190613353565b155b156123c157604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000806000846001600160a01b0316846040516123e39190613375565b6000604051808303816000865af19150503d8060008114612420576040519150601f19603f3d011682016040523d82523d6000602084013e612425565b606091505b509150915081801561244f57508051158061244f57508080602001905181019061244f9190613353565b801561246557506000856001600160a01b03163b115b95945050505050565b600082600019048411830215820261248557600080fd5b5091020490565b60008061249d846301e13380612214565b905060006124ab8683612248565b6124bd90670de0b6b3a76400006132f4565b9050670de0b6b3a764000081106124f1576124ea6124e3670de0b6b3a764000086612214565b829061274d565b9050612509565b6125066124e3670de0b6b3a7640000866127a4565b90505b6125178161209c898b612248565b98975050505050505050565b60008082136125455760405163e61b497560e01b815260040160405180910390fd5b5060606fffffffffffffffffffffffffffffffff821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110600190811b90911783811c90911017609f81810383019390931b90921c6c465772b2bbbb5f824b15207a3081018102821d6d0388eaa27412d5aca026815d636e018102821d6d0df99ac502031bf953eff472fdcc018102821d6d13cdffb29d51d99322bdff5f2211018102821d6d0a0f742023def783a307a986912e018102821d6d01920d8043ca89b5239253284e42018102821d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7882018202831d6d0139601a2efabe717e604cbb4894018202831d6d02247f7a7b6594320649aa03aba1018202831d6c8c3f38e95a6b1ff2ab1c3b343619018202831d6d02384773bdf1ac5676facced60901901820290921d6cb9a025d814b29c212b8b1a07cd190102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a550602605f19919091017d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b6060612229838360006127b9565b6000816000036127665750670de0b6b3a764000061222c565b826000036127765750600061222c565b81600061278285612523565b9050818102612799670de0b6b3a764000082613391565b905061234f81612858565b600061222983670de0b6b3a7640000846129e3565b6060814710156127de5760405163cd78605960e01b81523060048201526024016123b8565b600080856001600160a01b031684866040516127fa9190613375565b60006040518083038185875af1925050503d8060008114612837576040519150601f19603f3d011682016040523d82523d6000602084013e61283c565b606091505b509150915061284c868383612a09565b925050505b9392505050565b6000680248ce36a70cb26b3e19821361287357506000919050565b680755bf798b4a1bf1e5821261289c576040516373a2d6b160e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b39881029093036c240c330e9fb2d9cbaf0fd5aafb1981018102606090811d6d0277594991cfc85f6e2461837cd9018202811d6d1a521255e34f6a5061b25ef1c9c319018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d6e02c72388d9f74f51a9331fed693f1419018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084016d01d3967ed30fc4f89c02bab5708119010290911d6e0587f503bb6ea29d25fcb740196450019091026d360d7aeea093263ecc6e0ecb291760621b010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b60008260001904841183021582026129fa57600080fd5b50910281810615159190040190565b606082612a1e57612a1982612a65565b612851565b8151158015612a3557506001600160a01b0384163b155b15612a5e57604051639996b31560e01b81526001600160a01b03851660048201526024016123b8565b5080612851565b805115612a755780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b828054828255906000526020600020908101928215612ae4579160200282015b82811115612ae45781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190612ab1565b50612af0929150612af4565b5090565b5b80821115612af05760008155600101612af5565b60006080828403121561226c57600080fd5b600060208284031215612b2d57600080fd5b5035919050565b6001600160a01b0381168114612a8e57600080fd5b8035612b5481612b34565b919050565b60008060408385031215612b6c57600080fd5b8235612b7781612b34565b946020939093013593505050565b600060208284031215612b9757600080fd5b813561285181612b34565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715612bdc57612bdc612ba2565b60405290565b600060808284031215612bf457600080fd5b6040516080810181811067ffffffffffffffff82111715612c1757612c17612ba2565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b60006101c08284031215612c5b57600080fd5b612c63612bb8565b9050612c6e82612b49565b8152612c7c60208301612b49565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e0820152610100612ccb818401612b49565b90820152610120612cdd838201612b49565b90820152610140612cf084848301612be2565b9082015292915050565b600082601f830112612d0b57600080fd5b813567ffffffffffffffff80821115612d2657612d26612ba2565b604051601f8301601f19908116603f01168101908282118183101715612d4e57612d4e612ba2565b81604052838152866020858801011115612d6757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000806000806102a0898b031215612da457600080fd5b883597506020890135612db681612b34565b9650612dc58a60408b01612c48565b955061020089013567ffffffffffffffff811115612de257600080fd5b612dee8b828c01612cfa565b989b979a509598610220810135976102408201359750610260820135965061028090910135945092505050565b60008060008060008060008060006102c08a8c031215612e3a57600080fd5b8935985060208a0135612e4c81612b34565b9750612e5b8b60408c01612c48565b96506102008a013567ffffffffffffffff80821115612e7957600080fd5b612e858d838e01612cfa565b97506102208c013596506102408c013595506102608c013594506102808c0135915080821115612eb457600080fd5b50612ec18c828d01612cfa565b9250506102a08a013590509295985092959850929598565b60008060208385031215612eec57600080fd5b823567ffffffffffffffff80821115612f0457600080fd5b818501915085601f830112612f1857600080fd5b813581811115612f2757600080fd5b8660208260051b8501011115612f3c57600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b81811015612f8f5783516001600160a01b031683529284019291840191600101612f6a565b50909695505050505050565b60008060408385031215612fae57600080fd5b50508035926020909101359150565b815181526020808301519082015260408083015190820152606080830151908201526080810161222c565b634e487b7160e01b600052601260045260246000fd5b60008261300d5761300d612fe8565b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561222c5761222c613028565b634e487b7160e01b600052603160045260246000fd5b80516001600160a01b03168252602081015161308e60208401826001600160a01b03169052565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201516130e6828501826001600160a01b03169052565b5050610120818101516001600160a01b031690830152610140808201518051828501526020810151610160850152604081015161018085015260608101516101a085015261217e565b60005b8381101561314a578181015183820152602001613132565b50506000910152565b6000815180845261316b81602086016020860161312f565b601f01601f19169290920160200192915050565b60006102408783526131946020840188613067565b806101e08401526131a781840187613153565b610200840195909552505061022001529392505050565b6000602082840312156131d057600080fd5b815161285181612b34565b60006102208683526131f06020840187613067565b806101e084015261320381840186613153565b9150508261020083015295945050505050565b6001600160a01b038416815260006102006132346020840186613067565b806101e084015261234f81840185613153565b8381528260208201526060604082015260018060a01b03825116606082015260208201511515608082015260006040830151606060a084015261234f60c0840182613153565b60006020828403121561329f57600080fd5b5051919050565b60208082528181018390526000908460408401835b868110156132e95782356132ce81612b34565b6001600160a01b0316825291830191908301906001016132bb565b509695505050505050565b8082018082111561222c5761222c613028565b60006001820161331957613319613028565b5060010190565b808202811582820484141761222c5761222c613028565b6000600160ff1b820161334c5761334c613028565b5060000390565b60006020828403121561336557600080fd5b8151801515811461285157600080fd5b6000825161338781846020870161312f565b9190910192915050565b6000826133a0576133a0612fe8565b600160ff1b8214600019841416156133ba576133ba613028565b50059056fea26469706673582212209a74d523c3b23b3d6f969aeaad0f5de8d46f588b8641420541f111714e9c0edb64736f6c63430008140033";
        readonly sourceMap: "979:38327:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21780:636;;;;;;;;;;-1:-1:-1;21780:636:21;;;;;:::i;:::-;;:::i;:::-;;13074:974;;;;;;;;;;-1:-1:-1;13074:974:21;;;;;:::i;:::-;;:::i;18834:439::-;;;;;;;;;;-1:-1:-1;18834:439:21;;;;;:::i;:::-;;:::i;20763:882::-;;;;;;;;;;-1:-1:-1;20763:882:21;;;;;:::i;:::-;;:::i;23558:706::-;;;;;;;;;;-1:-1:-1;23558:706:21;;;;;:::i;:::-;;:::i;22903:428::-;;;;;;;;;;-1:-1:-1;22903:428:21;;;;;:::i;:::-;;:::i;2839:32::-;;;;;;;;;;;;;;;;;;;1388:25:184;;;1376:2;1361:18;2839:32:21;;;;;;;;12387:195;;;;;;;;;;-1:-1:-1;12387:195:21;;;;;:::i;:::-;;:::i;1953:36::-;;;;;;;;;;;;;;;;1185:25;;;;;;;;;;-1:-1:-1;1185:25:21;;;;-1:-1:-1;;;;;1185:25:21;;;;;;-1:-1:-1;;;;;1882:32:184;;;1864:51;;1852:2;1837:18;1185:25:21;1718:203:184;19421:531:21;;;;;;;;;;-1:-1:-1;19421:531:21;;;;;:::i;:::-;;:::i;6034:42::-;;;;;;;;;;-1:-1:-1;6034:42:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2091:14:184;;2084:22;2066:41;;2054:2;2039:18;6034:42:21;1926:187:184;30204:1269:21;;;;;;;;;;-1:-1:-1;30204:1269:21;;;;;:::i;:::-;;:::i;5755:101::-;;;;;;;;;;-1:-1:-1;5755:101:21;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;5755:101:21;;;32147:105;;;;;;;;;;-1:-1:-1;32228:10:21;:17;32147:105;;14206:926;;;;;;;;;;-1:-1:-1;14206:926:21;;;;;:::i;:::-;;:::i;25306:4133::-;;;;;;:::i;:::-;;:::i;20100:528::-;;;;;;;;;;-1:-1:-1;20100:528:21;;;;;:::i;:::-;;:::i;11978:189::-;;;;;;;;;;-1:-1:-1;11978:189:21;;;;;:::i;:::-;;:::i;15290:940::-;;;;;;;;;;-1:-1:-1;15290:940:21;;;;;:::i;:::-;;:::i;2379:34::-;;;;;;;;;;;;;;;;18264:442;;;;;;;;;;-1:-1:-1;18264:442:21;;;;;:::i;:::-;;:::i;1409:28::-;;;;;;;;;;-1:-1:-1;1409:28:21;;;;-1:-1:-1;;;;;1409:28:21;;;22552:210;;;;;;;;;;-1:-1:-1;22552:210:21;;;;;:::i;:::-;;:::i;31898:106::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;11306:157::-;;;;;;;;;;-1:-1:-1;11306:157:21;;;;;:::i;:::-;;:::i;32835:628::-;;;;;;;;;;-1:-1:-1;32835:628:21;;;;;:::i;:::-;;:::i;2603:26::-;;;;;;;;;;;;;;;;31714:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1627:27::-;;;;;;;;;;-1:-1:-1;1627:27:21;;;;-1:-1:-1;;;;;1627:27:21;;;1519:29;;;;;;;;;;;;;;;;1802:43;;;;;;;;;;;;;;;;2495:26;;;;;;;;;;;;;;;;12719:169;;;;;;;;;;-1:-1:-1;12719:169:21;;;;;:::i;:::-;;:::i;2718:32::-;;;;;;;;;;;;;;;;32424:116;;;;;;;;;;-1:-1:-1;32424:116:21;;;;;:::i;:::-;;:::i;2239:34::-;;;;;;;;;;;;;;;;11623:231;;;;;;;;;;-1:-1:-1;11623:231:21;;;;;:::i;:::-;;:::i;2097:36::-;;;;;;;;;;;;;;;;33648:127;;;;;;;;;;-1:-1:-1;33740:21:21;:28;33648:127;;1294:35;;;;;;;;;;-1:-1:-1;1294:35:21;;;;-1:-1:-1;;;;;1294:35:21;;;17247:889;;;;;;;;;;-1:-1:-1;17247:889:21;;;;;:::i;:::-;;:::i;31544:99::-;;;;;;;;;;;;;:::i;16382:713::-;;;;;;;;;;-1:-1:-1;16382:713:21;;;;;:::i;:::-;;:::i;34462:661::-;;;;;;;;;;-1:-1:-1;34462:661:21;;;;;:::i;:::-;;:::i;5475:53::-;;;;;;;;;;-1:-1:-1;5475:53:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;33983:152;;;;;;;;;;-1:-1:-1;33983:152:21;;;;;:::i;:::-;;:::i;21780:636::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;22019:8:::1;:14:::0;22001:15;::::1;:32;::::0;:78:::1;;-1:-1:-1::0;22066:13:21;;22049:14:::1;::::0;::::1;;:30;22001:78;:140;;;-1:-1:-1::0;22120:21:21;;22095:22:::1;::::0;::::1;;:46;22001:140;:210;;;-1:-1:-1::0;22186:25:21;;22157:26:::1;::::0;::::1;;:54;22001:210;21984:305;;;22243:35;;-1:-1:-1::0;;;22243:35:21::1;;;;;;;;;;;21984:305;9518:19:184::0;;22349:8:21::1;9505:33:184::0;;;9592:2;9581:14;;;9568:28;9554:12;9547:50;;;9651:2;9640:14;;;9627:28;9613:12;9606:50;;;9710:2;9699:14;;;9686:28;9672:12;9665:50;;;22384:25:21;;9919:39:184;;;9974:20;;;9967:61;;;;10044:20;;;10037:61;10114:20;;10107:61;22384:25:21::1;::::0;9906:3:184;9891:19;22384:25:21::1;;;;;;;;21780:636:::0;:::o;13074:974::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;13467:29:::1;13443:21;;:53;;;;:::i;:::-;:58:::0;::::1;::::0;:132:::1;;;13541:29;13517:21;;:53;;;;:::i;:::-;:58:::0;::::1;13443:132;:204;;;;13613:29;13591:19;;:51;;;;:::i;:::-;:56:::0;::::1;13443:204;:276;;;;13685:29;13663:19;;:51;;;;:::i;:::-;:56:::0;::::1;13443:276;13426:392;;;13751:56;;-1:-1:-1::0;;;13751:56:21::1;;;;;;;;;;;13426:392;13900:28;:60:::0;;;13975:66:::1;::::0;1388:25:184;;;13975:66:21::1;::::0;1376:2:184;1361:18;13975:66:21::1;1242:177:184::0;18834:439:21;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;19040:11:::1;;19025:12;:26;19021:103;;;19074:39;;-1:-1:-1::0;;;19074:39:21::1;;;;;;;;;;;19021:103;19193:11;:26:::0;;;19234:32:::1;::::0;1388:25:184;;;19234:32:21::1;::::0;1376:2:184;1361:18;19234:32:21::1;1242:177:184::0;20763:882:21;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;150:4:73::1;21065:15:21::0;::::1;:21;::::0;:57:::1;;;150:4:73;21102:9:21;:14;;;:20;21065:57;:101;;;;150:4:73;21138:9:21;:22;;;:28;21065:101;:149;;;;150:4:73;21182:9:21;:26;;;:32;21065:149;:197;;;-1:-1:-1::0;21248:8:21::1;:14:::0;21230:15;::::1;:32;21065:197;:243;;;-1:-1:-1::0;21295:13:21;;21278:14:::1;::::0;::::1;;:30;21065:243;:305;;;-1:-1:-1::0;21349:21:21;;21324:22:::1;::::0;::::1;;:46;21065:305;:375;;;-1:-1:-1::0;21415:25:21;;21386:26:::1;::::0;::::1;;:54;21065:375;21048:470;;;21472:35;;-1:-1:-1::0;;;21472:35:21::1;;;;;;;;;;;21048:470;9518:19:184::0;;21578:8:21::1;9505:33:184::0;;;9592:2;9581:14;;;9568:28;9554:12;9547:50;;;9651:2;9640:14;;;9627:28;9613:12;9606:50;;;9710:2;9699:14;;;9686:28;9672:12;9665:50;;;21613:25:21;;9919:39:184;;;9974:20;;;9967:61;;;;10044:20;;;10037:61;10114:20;;10107:61;21613:25:21::1;::::0;9906:3:184;9891:19;21613:25:21::1;9726:448:184::0;23558:706:21;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;-1:-1:-1;;;;;23700:43:21;::::1;;::::0;;;:21:::1;:43;::::0;;;;;::::1;;23695:130;;23766:48;;-1:-1:-1::0;;;23766:48:21::1;;;;;;;;;;;23695:130;23871:20;-1:-1:-1::0;;;;;23838:53:21::1;:21;23860:6;23838:29;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;23838:29:21::1;:53;23834:144;;23914:53;;-1:-1:-1::0;;;23914:53:21::1;;;;;;;;;;;23834:144;-1:-1:-1::0;;;;;23987:43:21;::::1;24033:5;23987:43:::0;;;:21:::1;:43;::::0;;;;:51;;-1:-1:-1;;23987:51:21::1;::::0;;24080:21:::1;24115:28:::0;;:32:::1;::::0;23987:51;;24115:32:::1;:::i;:::-;24080:77;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;24048:21:::1;:29:::0;;-1:-1:-1;;;;;24080:77:21;;::::1;::::0;24070:6;;24048:29;::::1;;;;;:::i;:::-;;;;;;;;;:109;;;;;-1:-1:-1::0;;;;;24048:109:21::1;;;;;-1:-1:-1::0;;;;;24048:109:21::1;;;;;;24167:21;:27;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;24167:27:21;;;;;-1:-1:-1;;;;;;24167:27:21::1;::::0;;;;;;;;24209:48:::1;::::0;-1:-1:-1;;;;;24209:48:21;::::1;::::0;::::1;::::0;::::1;23558:706:::0;;:::o;22903:428::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;-1:-1:-1;;;;;23017:43:21;::::1;;::::0;;;:21:::1;:43;::::0;;;;;::::1;;23013:133;;;23083:52;;-1:-1:-1::0;;;23083:52:21::1;;;;;;;;;;;23013:133;-1:-1:-1::0;;;;;23155:43:21;::::1;;::::0;;;:21:::1;:43;::::0;;;;;:50;;-1:-1:-1;;23155:50:21::1;23201:4;23155:50:::0;;::::1;::::0;;;23215:21:::1;:48:::0;;;;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;23215:48:21::1;::::0;::::1;::::0;;23278:46;::::1;::::0;23155:43;23278:46:::1;22903:428:::0;:::o;12387:195::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;12490:14:::1;:32:::0;;;12537:38:::1;::::0;12507:15;;12537:38:::1;::::0;;;::::1;12387:195:::0;:::o;19421:531::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;19676:17:::1;;19655:18;:38;19651:121;;;19716:45;;-1:-1:-1::0;;;19716:45:21::1;;;;;;;;;;;19651:121;19848:17;:38:::0;;;19901:44:::1;::::0;1388:25:184;;;19901:44:21::1;::::0;1376:2:184;1361:18;19901:44:21::1;1242:177:184::0;30204:1269:21;-1:-1:-1;;;;;30611:43:21;;30518:7;30611:43;;;:21;:43;;;;;;;;30606:129;;30677:47;;-1:-1:-1;;;30677:47:21;;;;;;;;;;;30606:129;30871:52;30887:7;30896:9;30907:15;30871;:52::i;:::-;31284:37;;;31295:10;31284:37;;;;11131:51:184;;;;11198:18;;;11191:34;;;31284:37:21;;;;;;;;;11104:18:184;;;31284:37:21;;;;31274:48;;;;;-1:-1:-1;;;31030:412:21;;;-1:-1:-1;;;;;;;31030:78:21;;;;;:412;;31340:7;;31365:10;;31393:12;;31423:5;;31030:412;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31013:429;30204:1269;-1:-1:-1;;;;;;;;;;30204:1269:21:o;14206:926::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;14686:21:::1;;14661:22;:46;:120;;;-1:-1:-1::0;14748:28:21::1;::::0;14723:53:::1;::::0;:22;:53:::1;:::i;:::-;:58:::0;::::1;14661:120;:180;;;;14822:19;;14797:22;:44;14661:180;14644:289;;;14873:49;;-1:-1:-1::0;;;14873:49:21::1;;;;;;;;;;;14644:289;15012:21;:46:::0;;;15073:52:::1;::::0;1388:25:184;;;15073:52:21::1;::::0;1376:2:184;1361:18;15073:52:21::1;1242:177:184::0;25306:4133:21;-1:-1:-1;;;;;25776:43:21;;25679:11;25776:43;;;:21;:43;;;;;;;;25771:129;;25842:47;;-1:-1:-1;;;25842:47:21;;;;;;;;;;;25771:129;26036:52;26052:7;26061:9;26072:15;26036;:52::i;:::-;26478:37;;;26489:10;26478:37;;;;11131:51:184;;;;11198:18;;;11191:34;;;26478:37:21;;;;;;;;;11104:18:184;;;26478:37:21;;;;26468:48;;;;;-1:-1:-1;;;26243:363:21;;;-1:-1:-1;;;;;;;26243:59:21;;;;;:363;;26534:7;;26559:10;;26587:5;;26243:363;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;26736:74:21;;;;;;;:31;:74;;;;;;;:97;;-1:-1:-1;;;;;;26736:97:21;;;;;;;;;;-1:-1:-1;26864:20:21;;;;26736:97;26843:18;;:41;26899:130;26736:74;;-1:-1:-1;26736:97:21;26899:130;;;;26736:74;;26843:18;;27009:10;;26899:130;:::i;:::-;;;;;;;;27111:10;:36;;;;;;;;;;;;;-1:-1:-1;;;;;;27111:36:21;-1:-1:-1;;;;;27111:36:21;;;;;;;;-1:-1:-1;27157:31:21;;;:10;27111:36;27157:31;;;;:38;;-1:-1:-1;;27157:38:21;;;;;;;27281:9;-1:-1:-1;;27277:1479:21;;27430:25;27442:13;27430:9;:25;:::i;:::-;27642:171;;;;;;;;27697:10;27642:171;;27737:4;27642:171;;;;;;;;;;27521:306;;-1:-1:-1;;;27521:306:21;;27421:34;;-1:-1:-1;;;;;;27521:21:21;;;;;27551:13;;27521:306;;27551:13;;27615:9;;27642:171;27521:306;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;27277:1479;;;-1:-1:-1;28115:17:21;;27939:9;;28101:154;;-1:-1:-1;;;;;28101:50:21;28169:10;28205:4;28228:13;28101:50;:154::i;:::-;28283:17;;28269:128;;-1:-1:-1;;;;;28269:46:21;28341:10;28370:13;28269:46;:128::i;:::-;28560:171;;;;;;;;28615:10;28560:171;;28655:4;28560:171;;;;;;;;;;28463:282;;-1:-1:-1;;;28463:282:21;;-1:-1:-1;;;;;28463:21:21;;;;;:282;;28502:13;;28533:9;;28560:171;28463:282;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;27277:1479;28837:10;;28833:207;;28882:45;;28864:12;;28890:10;;28915:6;;28864:12;28882:45;28864:12;28882:45;28915:6;28890:10;28882:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28863:64;;;28946:7;28941:89;;28980:35;;-1:-1:-1;;;28980:35:21;;;;;;;;;;;28941:89;28849:191;28833:207;29174:9;29169:180;29193:15;:22;29189:26;;29169:180;;;29233:10;-1:-1:-1;;;;;29233:20:21;;29254:15;29270:1;29254:18;;;;;;;;:::i;:::-;;;;;;;;;;;29233:46;;;;;;-1:-1:-1;;;;;;29233:46:21;;;-1:-1:-1;;;;;29254:18:21;;;29233:46;;;15895:51:184;29254:18:21;15962::184;;;15955:50;15868:18;;29233:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29321:3;;;;;29169:180;;;-1:-1:-1;29383:20:21;;29358:46;;-1:-1:-1;;;29358:46:21;;-1:-1:-1;;;;;29383:20:21;;;29358:46;;;1864:51:184;29358:24:21;;;;;;1837:18:184;;29358:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29422:10:21;;25306:4133;-1:-1:-1;;;;;;;;;;;;;;25306:4133:21:o;20100:528::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;20352:17:::1;;20331:18;:38;20327:121;;;20392:45;;-1:-1:-1::0;;;20392:45:21::1;;;;;;;;;;;20327:121;20524:17;:38:::0;;;20577:44:::1;::::0;1388:25:184;;;20577:44:21::1;::::0;1376:2:184;1361:18;20577:44:21::1;1242:177:184::0;11978:189:21;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;12079:13:::1;:30:::0;;-1:-1:-1;;;;;;12079:30:21::1;-1:-1:-1::0;;;;;12079:30:21;::::1;::::0;;::::1;::::0;;;12124:36:::1;::::0;::::1;::::0;-1:-1:-1;;12124:36:21::1;11978:189:::0;:::o;15290:940::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;15775:28:::1;;15750:22;:53;:127;;;-1:-1:-1::0;15844:28:21::1;::::0;15819:53:::1;::::0;:22;:53:::1;:::i;:::-;:58:::0;::::1;15750:127;:189;;;;15918:21;;15893:22;:46;15750:189;15733:298;;;15971:49;;-1:-1:-1::0;;;15971:49:21::1;;;;;;;;;;;15733:298;16110:21;:46:::0;;;16171:52:::1;::::0;1388:25:184;;;16171:52:21::1;::::0;1376:2:184;1361:18;16171:52:21::1;1242:177:184::0;18264:442:21;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;18473:11:::1;;18458:12;:26;18454:103;;;18507:39;;-1:-1:-1::0;;;18507:39:21::1;;;;;;;;;;;18454:103;18626:11;:26:::0;;;18667:32:::1;::::0;1388:25:184;;;18667:32:21::1;::::0;1376:2:184;1361:18;18667:32:21::1;1242:177:184::0;22552:210:21;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;22667:34:::1;:15;22685:16:::0;;22667:34:::1;:::i;:::-;;22716:39;22738:16;;22716:39;;;;;;;:::i;:::-;;;;;;;;22552:210:::0;;:::o;31898:106::-;31947:16;31982:15;31975:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;31975:22:21;;;;;;;;;;;;;;;;;;;;;;;31898:106;:::o;11306:157::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;11387:10:::1;:24:::0;;-1:-1:-1;;;;;;11387:24:21::1;-1:-1:-1::0;;;;;11387:24:21;::::1;::::0;;::::1;::::0;;11426:30:::1;::::0;11387:24;;11426:30:::1;::::0;::::1;11306:157:::0;:::o;32835:628::-;32947:22;33047:8;33034:10;:21;33030:94;;;33078:35;;-1:-1:-1;;;33078:35:21;;;;;;;;;;;33030:94;33148:10;:17;33137:28;;33133:103;;;33188:37;;-1:-1:-1;;;33188:37:21;;;;;;;;;;;33133:103;33310:21;33321:10;33310:8;:21;:::i;:::-;:25;;33334:1;33310:25;:::i;:::-;33296:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;33296:40:21;-1:-1:-1;33288:48:21;-1:-1:-1;33363:10:21;33346:111;33380:8;33375:1;:13;33346:111;;33433:10;33444:1;33433:13;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;33433:13:21;33409:5;33415:14;33419:10;33415:1;:14;:::i;:::-;33409:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;33409:37:21;;;:21;;;;;;;;;;;:37;33390:3;;;;:::i;:::-;;;;33346:111;;;;32835:628;;;;:::o;31714:99::-;31756:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31756:23:21;-1:-1:-1;31791:15:21;;;;;;;;31798:8;31791:15;;;;;;;;;;;;;;;;;;;;;;;;;31714:99::o;12719:169::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;12804:12:::1;:28:::0;;-1:-1:-1;;;;;;12804:28:21::1;-1:-1:-1::0;;;;;12804:28:21;::::1;::::0;;::::1;::::0;;;12847:34:::1;::::0;::::1;::::0;-1:-1:-1;;12847:34:21::1;12719:169:::0;:::o;32424:116::-;32490:7;32516:10;32527:5;32516:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;32516:17:21;;32424:116;-1:-1:-1;;32424:116:21:o;11623:231::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;11738:20:::1;:44:::0;;-1:-1:-1;;;;;;11738:44:21::1;-1:-1:-1::0;;;;;11738:44:21;::::1;::::0;;::::1;::::0;;;11797:50:::1;::::0;::::1;::::0;-1:-1:-1;;11797:50:21::1;11623:231:::0;:::o;17247:889::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;17706:21:::1;;17683:20;:44;:116;;;-1:-1:-1::0;17766:28:21::1;::::0;17743:51:::1;::::0;:20;:51:::1;:::i;:::-;:56:::0;::::1;17683:116;:174;;;;17838:19;;17815:20;:42;17683:174;17666:281;;;17889:47;;-1:-1:-1::0;;;17889:47:21::1;;;;;;;;;;;17666:281;18024:19;:42:::0;;;18081:48:::1;::::0;1388:25:184;;;18081:48:21::1;::::0;1376:2:184;1361:18;18081:48:21::1;1242:177:184::0;31544:99:21;31586:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31586:23:21;-1:-1:-1;31621:15:21;;;;;;;;31628:8;31621:15;;;;;;;;;;;;;;;;;;;;;;;;;31544:99::o;16382:713::-;11084:10;;-1:-1:-1;;;;;11084:10:21;11070;:24;11066:95;;11117:33;;-1:-1:-1;;;11117:33:21;;;;;;;;;;;11066:95;16725:19:::1;;16702:20;:42;:114;;;-1:-1:-1::0;16783:28:21::1;::::0;16760:51:::1;::::0;:20;:51:::1;:::i;:::-;:56:::0;::::1;16702:114;16685:221;;;16848:47;;-1:-1:-1::0;;;16848:47:21::1;;;;;;;;;;;16685:221;16983:19;:42:::0;;;17040:48:::1;::::0;1388:25:184;;;17040:48:21::1;::::0;1376:2:184;1361:18;17040:48:21::1;1242:177:184::0;34462:661:21;34585:22;34685:8;34672:10;:21;34668:94;;;34716:35;;-1:-1:-1;;;34716:35:21;;;;;;;;;;;34668:94;34786:21;:28;34775:39;;34771:114;;;34837:37;;-1:-1:-1;;;34837:37:21;;;;;;;;;;;34771:114;34959:21;34970:10;34959:8;:21;:::i;:::-;:25;;34983:1;34959:25;:::i;:::-;34945:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;34945:40:21;-1:-1:-1;34937:48:21;-1:-1:-1;35012:10:21;34995:122;35029:8;35024:1;:13;34995:122;;35082:21;35104:1;35082:24;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;35082:24:21;35058:5;35064:14;35068:10;35064:1;:14;:::i;:::-;35058:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;35058:48:21;;;:21;;;;;;;;;;;:48;35039:3;;;;:::i;:::-;;;;34995:122;;33983:152;34074:7;34100:21;34122:5;34100:28;;;;;;;;:::i;35520:3784::-;35925:21;;35896:7;:26;;;:50;:116;;;;35991:21;;35962:7;:26;;;:50;35896:116;:194;;;;36057:28;;36028:7;:26;;;:57;;;;:::i;:::-;:62;;35896:194;35879:300;;;36122:46;;-1:-1:-1;;;36122:46:21;;;;;;;;;;;35879:300;36421:19;;36394:7;:24;;;:46;:108;;;;36483:19;;36456:7;:24;;;:46;36394:108;:182;;;;36545:7;:26;;;36518:7;:24;;;:53;;;;:::i;:::-;:58;;36394:182;36377:286;;;36608:44;;-1:-1:-1;;;36608:44:21;;;;;;;;;;;36377:286;36794:8;:14;36773:12;;;;:18;:35;;:84;;-1:-1:-1;36844:13:21;;36824:12;;;;:17;;;:33;36773:84;:149;;;-1:-1:-1;36901:21:21;;36873:12;;;;:25;;;:49;36773:149;:222;;;-1:-1:-1;36970:25:21;;36938:12;;;;:29;;;:57;36773:222;:273;;;-1:-1:-1;37032:8:21;:14;37011:12;;;;:18;:35;36773:273;:322;;;-1:-1:-1;37082:13:21;;37062:12;;;;:17;;;:33;36773:322;:387;;;-1:-1:-1;37139:21:21;;37111:12;;;;:25;;;:49;36773:387;:460;;;-1:-1:-1;37208:25:21;;37176:12;;;;:29;;;:57;36773:460;36756:552;;;37265:32;;-1:-1:-1;;;37265:32:21;;;;;;;;;;;36756:552;37552:21;;;;-1:-1:-1;;;;;37552:35:21;;;;:87;;-1:-1:-1;37603:22:21;;;;:36;;37552:87;:137;;;-1:-1:-1;37655:20:21;;;;-1:-1:-1;;;;;37655:34:21;;;37552:137;:185;;;-1:-1:-1;37705:18:21;;;;-1:-1:-1;;;;;37705:32:21;;;37552:185;:225;;;-1:-1:-1;37753:19:21;;;;:24;;37552:225;37535:325;;;37809:40;;-1:-1:-1;;;37809:40:21;;;;;;;;;;;37535:325;37986:11;;37974:9;:23;:50;;;;38013:11;;38001:9;:23;37974:50;37970:124;;;38047:36;;-1:-1:-1;;;38047:36:21;;;;;;;;;;;37970:124;38286:18;38307:37;38335:8;38307:23;:9;38325:4;38307:17;:23::i;:::-;:27;;:37::i;:::-;38389:17;;38286:58;;-1:-1:-1;38389:33:21;;38286:58;38389:21;:33::i;:::-;38371:15;:51;:159;;;-1:-1:-1;38468:62:21;38490:39;38524:4;38490:25;:9;38504:10;38490:13;:25::i;:::-;:33;;:39::i;:::-;38468:17;;;:21;:62::i;:::-;38438:15;:92;38371:159;38354:261;;;38562:42;;-1:-1:-1;;;38562:42:21;;;;;;;;;;;38354:261;38624:19;38646:112;38695:15;38724:7;:24;;;38646:35;:112::i;:::-;39103:13;;-1:-1:-1;;;;;39103:13:21;;;39079:21;;;:37;39151:14;;39126:22;;;:39;39198:12;;;39175:20;;;:35;39249:4;39103:13;39220:18;;:34;39264:19;;;;:33;;;;-1:-1:-1;;;;35520:3784:21:o;1702:188:118:-;1829:53;;-1:-1:-1;;;;;17254:15:184;;;1829:53:118;;;17236:34:184;17306:15;;;17286:18;;;17279:43;17338:18;;;17331:34;;;1802:81:118;;1822:5;;1844:18;;;;;17171::184;;1829:53:118;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:53:118;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;3296:380::-;3411:47;;;-1:-1:-1;;;;;11149:32:184;;3411:47:118;;;11131:51:184;11198:18;;;;11191:34;;;3411:47:118;;;;;;;;;;11104:18:184;;;;3411:47:118;;;;;;;;-1:-1:-1;;;;;3411:47:118;-1:-1:-1;;;3411:47:118;;;3474:44;3426:13;3411:47;3474:23;:44::i;:::-;3469:201;;3561:43;;-1:-1:-1;;;;;11149:32:184;;;3561:43:118;;;11131:51:184;3601:1:118;11198:18:184;;;11191:34;3534:71:118;;3554:5;;3576:13;;;;;11104:18:184;;3561:43:118;10957:274:184;3534:71:118;3619:40;3639:5;3646:12;3619:19;:40::i;1810:165:73:-;1872:7;1899:22;1910:1;1913:4;1919:1;1899:10;:22::i;:::-;1891:31;;1810:165;;;;;:::o;14866:104::-;14924:7;14954:1;14950;:5;:13;;14962:1;14950:13;;;-1:-1:-1;14958:1:73;;14866:104;-1:-1:-1;14866:104:73:o;1535:119::-;1597:7;1624:22;1635:1;1638;1641:4;1624:10;:22::i;14589:104::-;14647:7;14677:1;14673;:5;:13;;14685:1;14673:13;;;-1:-1:-1;14681:1:73;14589:104;-1:-1:-1;14589:104:73:o;1366:1813:74:-;1482:7;;1645:90;1686:39;1714:10;:4;1721:3;1714:10;:::i;:::-;1694;;1686:27;:39::i;:::-;1653:10;;1645:27;:90::i;:::-;1623:112;-1:-1:-1;1759:24:74;150:4:73;1623:112:74;1759:11;:24::i;:::-;1745:38;;1874:17;1895:8;1874:29;1870:78;;1926:11;-1:-1:-1;1919:18:74;;1870:78;2766:23;2792:85;2823:44;:4;2839:17;2858:8;2823:15;:44::i;:::-;2817:50;;150:4:73;2817:50:74;:::i;:::-;150:4:73;;2792:11:74;:85::i;:::-;2766:111;;2887:29;2919:102;2944:67;150:4:73;;2983::74;2989:8;2999:11;2944:28;:67::i;2919:102::-;2887:134;;3050:122;3123:34;3130:21;3123:32;:34::i;:::-;3122:35;;;:::i;:::-;3059:28;3066:15;3059:26;:28::i;:::-;3058:29;;;:::i;:::-;3050:46;;:122::i;:::-;3031:141;1366:1813;-1:-1:-1;;;;;;1366:1813:74:o;4059:629:118:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:118;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:118;;-1:-1:-1;;;;;1882:32:184;;4631:40:118;;;1864:51:184;1837:18;;4631:40:118;;;;;;;;4547:135;4129:559;4059:629;;:::o;5189:578::-;5272:4;5574:12;5588:23;5623:5;-1:-1:-1;;;;;5615:19:118;5635:4;5615:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:67;;;;5657:7;:69;;;;-1:-1:-1;5669:17:118;;:22;;:56;;;5706:10;5695:30;;;;;;;;;;;;:::i;:::-;5657:103;;;;;5759:1;5738:5;-1:-1:-1;;;;;5730:26:118;;:30;5657:103;5650:110;5189:578;-1:-1:-1;;;;;5189:578:118:o;823:556:73:-;939:9;1204:1;-1:-1:-1;;1187:19:73;1184:1;1181:26;1178:1;1174:34;1167:42;1154:11;1150:60;1123:146;;1253:1;1250;1243:12;1123:146;-1:-1:-1;1340:9:73;;1336:27;;823:556::o;7896:1272:74:-;8132:20;;8370:35;:17;8396:8;8370:25;:35::i;:::-;8358:47;-1:-1:-1;8545:13:74;8567:15;:4;8358:47;8567:12;:15::i;:::-;8561:21;;150:4:73;8561:21:74;:::i;:::-;8545:37;;150:4:73;8596:5:74;:12;8592:300;;8703:36;8713:25;150:4:73;8725:12:74;8713:11;:25::i;:::-;8703:5;;:9;:36::i;:::-;8695:44;;8592:300;;;8847:34;8857:23;150:4:73;8867:12:74;8857:9;:23::i;8847:34::-;8839:42;;8592:300;9060:101;9142:5;9060:56;:23;9092;9060:31;:56::i;:101::-;9041:120;7896:1272;-1:-1:-1;;;;;;;;7896:1272:74:o;8345:3611:73:-;8390:8;8443:1;8438;:6;8434:80;;8471:28;;-1:-1:-1;;;8471:28:73;;;;;;;;;;;8434:80;-1:-1:-1;9479:2:73;8896:34;-1:-1:-1;;8890:1:73;8886:49;8993:9;;;8973:18;8970:33;8967:1;8963:41;8957:48;9055:9;;;9043:10;9040:25;9037:1;9033:33;9027:40;9113:9;;;9105:6;9102:21;9099:1;9095:29;9089:36;9169:9;;;9163:4;9160:19;9157:1;9153:27;;;9147:34;;;9224:9;;;9219:3;9216:18;9213:1;9209:26;9203:33;9279:9;;;9271:18;;;9268:1;9264:26;;;9258:33;;;9327:9;;;9319:18;;;9313:25;9509:3;:7;;;;;9495:22;;;;9542:17;;;10335:31;10331:35;;10386:5;;10385:13;;10402:32;10384:50;10454:5;;10453:13;;10470:33;10452:51;10523:5;;10522:13;;10539:33;10521:51;10592:5;;10591:13;;10608:33;10590:51;10661:5;;10660:13;;10677:32;10659:50;10729:5;;10728:13;;10745:30;10727:48;9732:31;9728:35;;9783:5;;9782:13;;9799:32;9781:50;9851:5;;9850:13;;9867:32;9849:50;9919:5;;9918:13;;-1:-1:-1;;9917:50:73;9987:5;;9986:13;;-1:-1:-1;;9985:50:73;10055:5;;10054:13;;;-1:-1:-1;;10053:50:73;10121:5;-1:-1:-1;;10121:46:73;11116:10;11506:43;11501:48;-1:-1:-1;;9475:6:73;;;;11629:71;:91;11608:112;11793:72;11788:77;11936:3;11930:9;;8345:3611::o;2705:151:119:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;3740:838:73:-;3798:7;3864:1;3869;3864:6;3860:47;;-1:-1:-1;150:4:73;3886:10;;3860:47;3960:1;3965;3960:6;3956:45;;-1:-1:-1;3989:1:73;3982:8;;3956:45;4164:1;4139:15;4341:13;4351:1;4341:2;:13::i;:::-;4328:26;-1:-1:-1;4432:18:73;;;4469:19;150:4;4432:18;4469:19;:::i;:::-;;;4561:9;4565:4;4561:3;:9::i;3390:115::-;3450:7;3477:20;3486:1;3489:4;3495:1;3477:8;:20::i;3180:392:119:-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:119;;3394:4;3359:41;;;1864:51:184;1837:18;;3359:41:119;1718:203:184;3303:108:119;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:119;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4830:3335:73:-;4876:8;-1:-1:-1;;5053:1:73;:26;5049:40;;-1:-1:-1;5088:1:73;;4830:3335;-1:-1:-1;4830:3335:73:o;5049:40::-;5288:21;5283:1;:26;5279:87;;5334:32;;-1:-1:-1;;;5334:32:73;;;;;;;;;;;5279:87;5639:7;5633:2;5628:7;;;5627:19;;-1:-1:-1;5975:8:73;6059:2;5999:29;5988:7;;;5987:41;-1:-1:-1;;;5987:51:73;5986:75;;6087:29;6083:33;;6079:37;;;-1:-1:-1;;6758:35:73;;6813:5;;6393:2;6812:13;;;6829:32;6811:50;6881:5;;6880:13;;-1:-1:-1;;6879:51:73;6950:5;;6949:13;;6966:34;6948:52;7020:5;;7019:13;;-1:-1:-1;;7018:53:73;7091:5;;7090:13;;7107:35;7089:53;6399:32;6332:31;6328:35;;6383:5;;6382:13;;6381:50;;;6456:5;;;-1:-1:-1;;6456:40:73;6516:5;6515:13;;;6532:35;6514:53;6585:5;;;-1:-1:-1;;;6585:50:73;7507:10;8044:49;8011:82;8126:3;:7;;;;8010:124;;;;;;-1:-1:-1;;4830:3335:73:o;2211:748::-;2325:9;2590:1;-1:-1:-1;;2573:19:73;2570:1;2567:26;2564:1;2560:34;2553:42;2540:11;2536:60;2509:146;;2639:1;2636;2629:12;2509:146;-1:-1:-1;2906:9:73;;2853:27;;;2850:34;;2902:27;;;2829:114;;2211:748::o;4625:582:119:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:119;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:119;;-1:-1:-1;;;;;1882:32:184;;5121:24:119;;;1864:51:184;1837:18;;5121:24:119;1718:203:184;5041:119:119;-1:-1:-1;5180:10:119;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:119;;;;;;;;;;;5870:383;5743:516;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:191:184;97:6;150:3;138:9;129:7;125:23;121:33;118:53;;;167:1;164;157:12;210:180;269:6;322:2;310:9;301:7;297:23;293:32;290:52;;;338:1;335;328:12;290:52;-1:-1:-1;361:23:184;;210:180;-1:-1:-1;210:180:184:o;395:131::-;-1:-1:-1;;;;;470:31:184;;460:42;;450:70;;516:1;513;506:12;531:134;599:20;;628:31;599:20;628:31;:::i;:::-;531:134;;;:::o;670:315::-;738:6;746;799:2;787:9;778:7;774:23;770:32;767:52;;;815:1;812;805:12;767:52;854:9;841:23;873:31;898:5;873:31;:::i;:::-;923:5;975:2;960:18;;;;947:32;;-1:-1:-1;;;670:315:184:o;990:247::-;1049:6;1102:2;1090:9;1081:7;1077:23;1073:32;1070:52;;;1118:1;1115;1108:12;1070:52;1157:9;1144:23;1176:31;1201:5;1176:31;:::i;2118:127::-;2179:10;2174:3;2170:20;2167:1;2160:31;2210:4;2207:1;2200:15;2234:4;2231:1;2224:15;2250:250;2317:2;2311:9;2359:6;2347:19;;2396:18;2381:34;;2417:22;;;2378:62;2375:88;;;2443:18;;:::i;:::-;2479:2;2472:22;2250:250;:::o;2505:601::-;2556:5;2604:4;2592:9;2587:3;2583:19;2579:30;2576:50;;;2622:1;2619;2612:12;2576:50;2655:2;2649:9;2697:4;2689:6;2685:17;2768:6;2756:10;2753:22;2732:18;2720:10;2717:34;2714:62;2711:88;;;2779:18;;:::i;:::-;2819:10;2815:2;2808:22;;2848:6;2839:15;;2891:9;2878:23;2870:6;2863:39;2963:2;2952:9;2948:18;2935:32;2930:2;2922:6;2918:15;2911:57;3029:2;3018:9;3014:18;3001:32;2996:2;2988:6;2984:15;2977:57;3095:2;3084:9;3080:18;3067:32;3062:2;3054:6;3050:15;3043:57;;2505:601;;;;:::o;3111:986::-;3174:5;3222:6;3210:9;3205:3;3201:19;3197:32;3194:52;;;3242:1;3239;3232:12;3194:52;3264:17;;:::i;:::-;3255:26;;3304:29;3323:9;3304:29;:::i;:::-;3297:5;3290:44;3366:38;3400:2;3389:9;3385:18;3366:38;:::i;:::-;3361:2;3354:5;3350:14;3343:62;3465:2;3454:9;3450:18;3437:32;3432:2;3425:5;3421:14;3414:56;3530:2;3519:9;3515:18;3502:32;3497:2;3490:5;3486:14;3479:56;3596:3;3585:9;3581:19;3568:33;3562:3;3555:5;3551:15;3544:58;3663:3;3652:9;3648:19;3635:33;3629:3;3622:5;3618:15;3611:58;3730:3;3719:9;3715:19;3702:33;3696:3;3689:5;3685:15;3678:58;3797:3;3786:9;3782:19;3769:33;3763:3;3756:5;3752:15;3745:58;3822:3;3857:38;3891:2;3880:9;3876:18;3857:38;:::i;:::-;3841:14;;;3834:62;3915:3;3950:38;3969:18;;;3950:38;:::i;:::-;3934:14;;;3927:62;4008:3;4043:47;4086:3;4066:18;;;4043:47;:::i;:::-;4027:14;;;4020:71;4031:5;3111:986;-1:-1:-1;;3111:986:184:o;4102:718::-;4144:5;4197:3;4190:4;4182:6;4178:17;4174:27;4164:55;;4215:1;4212;4205:12;4164:55;4251:6;4238:20;4277:18;4314:2;4310;4307:10;4304:36;;;4320:18;;:::i;:::-;4395:2;4389:9;4363:2;4449:13;;-1:-1:-1;;4445:22:184;;;4469:2;4441:31;4437:40;4425:53;;;4493:18;;;4513:22;;;4490:46;4487:72;;;4539:18;;:::i;:::-;4579:10;4575:2;4568:22;4614:2;4606:6;4599:18;4660:3;4653:4;4648:2;4640:6;4636:15;4632:26;4629:35;4626:55;;;4677:1;4674;4667:12;4626:55;4741:2;4734:4;4726:6;4722:17;4715:4;4707:6;4703:17;4690:54;4788:1;4781:4;4776:2;4768:6;4764:15;4760:26;4753:37;4808:6;4799:15;;;;;;4102:718;;;;:::o;4825:934::-;4990:6;4998;5006;5014;5022;5030;5038;5046;5099:3;5087:9;5078:7;5074:23;5070:33;5067:53;;;5116:1;5113;5106:12;5067:53;5152:9;5139:23;5129:33;;5212:2;5201:9;5197:18;5184:32;5225:31;5250:5;5225:31;:::i;:::-;5275:5;-1:-1:-1;5299:63:184;5354:7;5349:2;5334:18;;5299:63;:::i;:::-;5289:73;;5413:3;5402:9;5398:19;5385:33;5441:18;5433:6;5430:30;5427:50;;;5473:1;5470;5463:12;5427:50;5496:49;5537:7;5528:6;5517:9;5513:22;5496:49;:::i;:::-;4825:934;;;;-1:-1:-1;4825:934:184;;5592:3;5577:19;;5564:33;;5644:3;5629:19;;5616:33;;-1:-1:-1;5696:3:184;5681:19;;5668:33;;-1:-1:-1;5748:3:184;5733:19;;;5720:33;;-1:-1:-1;4825:934:184;-1:-1:-1;;;4825:934:184:o;5764:1154::-;5947:6;5955;5963;5971;5979;5987;5995;6003;6011;6064:3;6052:9;6043:7;6039:23;6035:33;6032:53;;;6081:1;6078;6071:12;6032:53;6117:9;6104:23;6094:33;;6177:2;6166:9;6162:18;6149:32;6190:31;6215:5;6190:31;:::i;:::-;6240:5;-1:-1:-1;6264:63:184;6319:7;6314:2;6299:18;;6264:63;:::i;:::-;6254:73;;6378:3;6367:9;6363:19;6350:33;6402:18;6443:2;6435:6;6432:14;6429:34;;;6459:1;6456;6449:12;6429:34;6482:49;6523:7;6514:6;6503:9;6499:22;6482:49;:::i;:::-;6472:59;;6578:3;6567:9;6563:19;6550:33;6540:43;;6630:3;6619:9;6615:19;6602:33;6592:43;;6682:3;6671:9;6667:19;6654:33;6644:43;;6740:3;6729:9;6725:19;6712:33;6696:49;;6770:2;6760:8;6757:16;6754:36;;;6786:1;6783;6776:12;6754:36;;6809:51;6852:7;6841:8;6830:9;6826:24;6809:51;:::i;:::-;6799:61;;;6907:3;6896:9;6892:19;6879:33;6869:43;;5764:1154;;;;;;;;;;;:::o;7151:615::-;7237:6;7245;7298:2;7286:9;7277:7;7273:23;7269:32;7266:52;;;7314:1;7311;7304:12;7266:52;7354:9;7341:23;7383:18;7424:2;7416:6;7413:14;7410:34;;;7440:1;7437;7430:12;7410:34;7478:6;7467:9;7463:22;7453:32;;7523:7;7516:4;7512:2;7508:13;7504:27;7494:55;;7545:1;7542;7535:12;7494:55;7585:2;7572:16;7611:2;7603:6;7600:14;7597:34;;;7627:1;7624;7617:12;7597:34;7680:7;7675:2;7665:6;7662:1;7658:14;7654:2;7650:23;7646:32;7643:45;7640:65;;;7701:1;7698;7691:12;7640:65;7732:2;7724:11;;;;;7754:6;;-1:-1:-1;7151:615:184;;-1:-1:-1;;;;7151:615:184:o;7771:658::-;7942:2;7994:21;;;8064:13;;7967:18;;;8086:22;;;7913:4;;7942:2;8165:15;;;;8139:2;8124:18;;;7913:4;8208:195;8222:6;8219:1;8216:13;8208:195;;;8287:13;;-1:-1:-1;;;;;8283:39:184;8271:52;;8378:15;;;;8343:12;;;;8319:1;8237:9;8208:195;;;-1:-1:-1;8420:3:184;;7771:658;-1:-1:-1;;;;;;7771:658:184:o;8434:248::-;8502:6;8510;8563:2;8551:9;8542:7;8538:23;8534:32;8531:52;;;8579:1;8576;8569:12;8531:52;-1:-1:-1;;8602:23:184;;;8672:2;8657:18;;;8644:32;;-1:-1:-1;8434:248:184:o;8949:238::-;8757:12;;8745:25;;8819:4;8808:16;;;8802:23;8786:14;;;8779:47;8875:4;8864:16;;;8858:23;8842:14;;;8835:47;8931:4;8920:16;;;8914:23;8898:14;;;8891:47;9127:3;9112:19;;9140:41;8687:257;10179:127;10240:10;10235:3;10231:20;10228:1;10221:31;10271:4;10268:1;10261:15;10295:4;10292:1;10285:15;10311:112;10343:1;10369;10359:35;;10374:18;;:::i;:::-;-1:-1:-1;10408:9:184;;10311:112::o;10428:127::-;10489:10;10484:3;10480:20;10477:1;10470:31;10520:4;10517:1;10510:15;10544:4;10541:1;10534:15;10560:127;10621:10;10616:3;10612:20;10609:1;10602:31;10652:4;10649:1;10642:15;10676:4;10673:1;10666:15;10692:128;10759:9;;;10780:11;;;10777:37;;;10794:18;;:::i;10825:127::-;10886:10;10881:3;10877:20;10874:1;10867:31;10917:4;10914:1;10907:15;10941:4;10938:1;10931:15;11236:964;11325:12;;-1:-1:-1;;;;;1675:31:184;1663:44;;11389:4;11382:5;11378:16;11372:23;11404:48;11446:4;11441:3;11437:14;11423:12;-1:-1:-1;;;;;1675:31:184;1663:44;;1609:104;11404:48;;11501:4;11494:5;11490:16;11484:23;11477:4;11472:3;11468:14;11461:47;11557:4;11550:5;11546:16;11540:23;11533:4;11528:3;11524:14;11517:47;11613:4;11606:5;11602:16;11596:23;11589:4;11584:3;11580:14;11573:47;11669:4;11662:5;11658:16;11652:23;11645:4;11640:3;11636:14;11629:47;11725:4;11718:5;11714:16;11708:23;11701:4;11696:3;11692:14;11685:47;11781:4;11774:5;11770:16;11764:23;11757:4;11752:3;11748:14;11741:47;11807:6;11861:2;11854:5;11850:14;11844:21;11874:48;11918:2;11913:3;11909:12;11893:14;-1:-1:-1;;;;;1675:31:184;1663:44;;1609:104;11874:48;-1:-1:-1;;11941:6:184;11984:14;;;11978:21;-1:-1:-1;;;;;1675:31:184;12043:12;;;1663:44;12075:6;12118:14;;;12112:21;8757:12;;12181;;;8745:25;8819:4;8808:16;;8802:23;8786:14;;;8779:47;8875:4;8864:16;;8858:23;8842:14;;;8835:47;8931:4;8920:16;;8914:23;8898:14;;;8891:47;12142:52;8687:257;12205:250;12290:1;12300:113;12314:6;12311:1;12308:13;12300:113;;;12390:11;;;12384:18;12371:11;;;12364:39;12336:2;12329:10;12300:113;;;-1:-1:-1;;12447:1:184;12429:16;;12422:27;12205:250::o;12460:270::-;12501:3;12539:5;12533:12;12566:6;12561:3;12554:19;12582:76;12651:6;12644:4;12639:3;12635:14;12628:4;12621:5;12617:16;12582:76;:::i;:::-;12712:2;12691:15;-1:-1:-1;;12687:29:184;12678:39;;;;12719:4;12674:50;;12460:270;-1:-1:-1;;12460:270:184:o;12735:622::-;13025:4;13054:3;13084:6;13073:9;13066:25;13100:62;13158:2;13147:9;13143:18;13135:6;13100:62;:::i;:::-;13199:2;13193:3;13182:9;13178:19;13171:31;13219:44;13259:2;13248:9;13244:18;13236:6;13219:44;:::i;:::-;13294:3;13279:19;;13272:35;;;;-1:-1:-1;;13338:3:184;13323:19;13316:35;13211:52;12735:622;-1:-1:-1;;;12735:622:184:o;13362:251::-;13432:6;13485:2;13473:9;13464:7;13460:23;13456:32;13453:52;;;13501:1;13498;13491:12;13453:52;13533:9;13527:16;13552:31;13577:5;13552:31;:::i;13618:550::-;13880:4;13909:3;13939:6;13928:9;13921:25;13955:62;14013:2;14002:9;13998:18;13990:6;13955:62;:::i;:::-;14054:2;14048:3;14037:9;14033:19;14026:31;14074:44;14114:2;14103:9;14099:18;14091:6;14074:44;:::i;:::-;14066:52;;;14155:6;14149:3;14138:9;14134:19;14127:35;13618:550;;;;;;;:::o;14173:504::-;-1:-1:-1;;;;;14466:32:184;;14448:51;;14407:4;14436:3;14508:62;14566:2;14551:18;;14543:6;14508:62;:::i;:::-;14607:2;14601:3;14590:9;14586:19;14579:31;14627:44;14667:2;14656:9;14652:18;14644:6;14627:44;:::i;14682:641::-;14917:6;14906:9;14899:25;14960:6;14955:2;14944:9;14940:18;14933:34;15003:2;14998;14987:9;14983:18;14976:30;15078:1;15074;15069:3;15065:11;15061:19;15052:6;15046:13;15042:39;15037:2;15026:9;15022:18;15015:67;15151:2;15143:6;15139:15;15133:22;15126:30;15119:38;15113:3;15102:9;15098:19;15091:67;14880:4;15205:2;15197:6;15193:15;15187:22;15246:2;15240:3;15229:9;15225:19;15218:31;15266:51;15312:3;15301:9;15297:19;15283:12;15266:51;:::i;15328:184::-;15398:6;15451:2;15439:9;15430:7;15426:23;15422:32;15419:52;;;15467:1;15464;15457:12;15419:52;-1:-1:-1;15490:16:184;;15328:184;-1:-1:-1;15328:184:184:o;16016:705::-;16197:2;16249:21;;;16222:18;;;16305:22;;;16168:4;;16384:6;16358:2;16343:18;;16168:4;16418:277;16432:6;16429:1;16426:13;16418:277;;;16507:6;16494:20;16527:31;16552:5;16527:31;:::i;:::-;-1:-1:-1;;;;;16583:31:184;16571:44;;16670:15;;;;16635:12;;;;16611:1;16447:9;16418:277;;;-1:-1:-1;16712:3:184;16016:705;-1:-1:-1;;;;;;16016:705:184:o;16726:125::-;16791:9;;;16812:10;;;16809:36;;;16825:18;;:::i;16856:135::-;16895:3;16916:17;;;16913:43;;16936:18;;:::i;:::-;-1:-1:-1;16983:1:184;16972:13;;16856:135::o;17942:168::-;18015:9;;;18046;;18063:15;;;18057:22;;18043:37;18033:71;;18084:18;;:::i;18115:136::-;18150:3;-1:-1:-1;;;18171:22:184;;18168:48;;18196:18;;:::i;:::-;-1:-1:-1;18236:1:184;18232:13;;18115:136::o;18256:277::-;18323:6;18376:2;18364:9;18355:7;18351:23;18347:32;18344:52;;;18392:1;18389;18382:12;18344:52;18424:9;18418:16;18477:5;18470:13;18463:21;18456:5;18453:32;18443:60;;18499:1;18496;18489:12;18538:287;18667:3;18705:6;18699:13;18721:66;18780:6;18775:3;18768:4;18760:6;18756:17;18721:66;:::i;:::-;18803:16;;;;;18538:287;-1:-1:-1;;18538:287:184:o;18830:193::-;18869:1;18895;18885:35;;18900:18;;:::i;:::-;-1:-1:-1;;;18936:18:184;;-1:-1:-1;;18956:13:184;;18932:38;18929:64;;;18973:18;;:::i;:::-;-1:-1:-1;19007:10:184;;18830:193::o";
        readonly linkReferences: {};
    };
    readonly methodIdentifiers: {
        readonly "addDeployerCoordinator(address)": "421caba8";
        readonly "checkpointDurationResolution()": "d0f96b92";
        readonly "defaultPausers()": "a64c90bf";
        readonly "deployAndInitialize(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes,bytes32)": "7324b145";
        readonly "deployTarget(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes32)": "6be6d7d4";
        readonly "feeCollector()": "c415b95c";
        readonly "getDeployerCoordinatorAtIndex(uint256)": "fe3d5aeb";
        readonly "getDeployerCoordinatorsInRange(uint256,uint256)": "ec895f11";
        readonly "getInstanceAtIndex(uint256)": "daac24da";
        readonly "getInstancesInRange(uint256,uint256)": "bc30e7a1";
        readonly "getNumberOfDeployerCoordinators()": "e1b39c80";
        readonly "getNumberOfInstances()": "6e95d67c";
        readonly "governance()": "5aa6e675";
        readonly "hyperdriveGovernance()": "e3331555";
        readonly "instancesToDeployerCoordinators(address)": "6c8cc865";
        readonly "isDeployerCoordinator(address)": "f8c09e59";
        readonly "isInstance(address)": "6b44e6be";
        readonly "linkerCodeHash()": "c905a4b5";
        readonly "linkerFactory()": "99623bb1";
        readonly "maxCheckpointDuration()": "e0e2daaa";
        readonly "maxFees()": "e83e34b1";
        readonly "maxFixedAPR()": "bf9bd5cd";
        readonly "maxPositionDuration()": "8efc0986";
        readonly "maxTimeStretchAPR()": "48800760";
        readonly "minCheckpointDuration()": "5720c9d5";
        readonly "minFees()": "c1722563";
        readonly "minFixedAPR()": "d23d7ea3";
        readonly "minPositionDuration()": "daf012e6";
        readonly "minTimeStretchAPR()": "d6f50169";
        readonly "removeDeployerCoordinator(address,uint256)": "411c3035";
        readonly "updateCheckpointDurationResolution(uint256)": "11e77bfe";
        readonly "updateDefaultPausers(address[])": "9af25262";
        readonly "updateFeeCollector(address)": "d2c35ce8";
        readonly "updateGovernance(address)": "b2561263";
        readonly "updateHyperdriveGovernance(address)": "dd2b8fbb";
        readonly "updateLinkerCodeHash(bytes32)": "4fbfee77";
        readonly "updateLinkerFactory(address)": "85229785";
        readonly "updateMaxCheckpointDuration(uint256)": "6f6d5c4a";
        readonly "updateMaxFees((uint256,uint256,uint256,uint256))": "2885e3ac";
        readonly "updateMaxFixedAPR(uint256)": "97b0e8ce";
        readonly "updateMaxPositionDuration(uint256)": "eb71f66c";
        readonly "updateMaxTimeStretchAPR(uint256)": "628027a3";
        readonly "updateMinCheckpointDuration(uint256)": "8e127cf5";
        readonly "updateMinFees((uint256,uint256,uint256,uint256))": "10d1dc3e";
        readonly "updateMinFixedAPR(uint256)": "1978ebcf";
        readonly "updateMinPositionDuration(uint256)": "e71f34b3";
        readonly "updateMinTimeStretchAPR(uint256)": "83b361e8";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hyperdriveGovernance\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"defaultPausers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDurationResolution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCheckpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCheckpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPositionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPositionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFixedAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFixedAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTimeStretchAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTimeStretchAPR\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"minFees\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"maxFees\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct HyperdriveFactory.FactoryConfig\",\"name\":\"_factoryConfig\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeployerCoordinatorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeployerCoordinatorIndexMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeployerCoordinatorNotAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EndIndexTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpInvalidExponent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDurationResolution\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDeployConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDeployerCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFixedAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidIndexes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxFixedAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxTimeStretchAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinFixedAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinTimeStretchAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimeStretchAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LnInvalidInput\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCheckpointDurationResolution\",\"type\":\"uint256\"}],\"name\":\"CheckpointDurationResolutionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newDefaultPausers\",\"type\":\"address[]\"}],\"name\":\"DefaultPausersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployerCoordinator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"hyperdrive\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployerCoordinator\",\"type\":\"address\"}],\"name\":\"DeployerCoordinatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployerCoordinator\",\"type\":\"address\"}],\"name\":\"DeployerCoordinatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"}],\"name\":\"GovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hyperdriveGovernance\",\"type\":\"address\"}],\"name\":\"HyperdriveGovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newDeployer\",\"type\":\"address\"}],\"name\":\"ImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newLinkerCodeHash\",\"type\":\"bytes32\"}],\"name\":\"LinkerCodeHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newLinkerFactory\",\"type\":\"address\"}],\"name\":\"LinkerFactoryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxCheckpointDuration\",\"type\":\"uint256\"}],\"name\":\"MaxCheckpointDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"newMaxFees\",\"type\":\"tuple\"}],\"name\":\"MaxFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxFixedAPR\",\"type\":\"uint256\"}],\"name\":\"MaxFixedAPRUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxPositionDuration\",\"type\":\"uint256\"}],\"name\":\"MaxPositionDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxTimeStretchAPR\",\"type\":\"uint256\"}],\"name\":\"MaxTimeStretchAPRUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinCheckpointDuration\",\"type\":\"uint256\"}],\"name\":\"MinCheckpointDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"newMinFees\",\"type\":\"tuple\"}],\"name\":\"MinFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinFixedAPR\",\"type\":\"uint256\"}],\"name\":\"MinFixedAPRUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinPositionDuration\",\"type\":\"uint256\"}],\"name\":\"MinPositionDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinTimeStretchAPR\",\"type\":\"uint256\"}],\"name\":\"MinTimeStretchAPRUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployerCoordinator\",\"type\":\"address\"}],\"name\":\"addDeployerCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkpointDurationResolution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultPausers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_deployerCoordinator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fixedAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeStretchAPR\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_initializeExtraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployAndInitialize\",\"outputs\":[{\"internalType\":\"contract IHyperdrive\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_deployerCoordinator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_fixedAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeStretchAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDeployerCoordinatorAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"getDeployerCoordinatorsInRange\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"range\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getInstanceAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"getInstancesInRange\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"range\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfDeployerCoordinators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfInstances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hyperdriveGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"name\":\"instancesToDeployerCoordinators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployCoordinator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDeployerCoordinator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInstance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkerCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkerFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCheckpointDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFixedAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPositionDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTimeStretchAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minCheckpointDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFixedAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPositionDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTimeStretchAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployerCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"removeDeployerCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointDurationResolution\",\"type\":\"uint256\"}],\"name\":\"updateCheckpointDurationResolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_defaultPausers_\",\"type\":\"address[]\"}],\"name\":\"updateDefaultPausers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"name\":\"updateFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"updateGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hyperdriveGovernance\",\"type\":\"address\"}],\"name\":\"updateHyperdriveGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_linkerCodeHash\",\"type\":\"bytes32\"}],\"name\":\"updateLinkerCodeHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_linkerFactory\",\"type\":\"address\"}],\"name\":\"updateLinkerFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxCheckpointDuration\",\"type\":\"uint256\"}],\"name\":\"updateMaxCheckpointDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"__maxFees\",\"type\":\"tuple\"}],\"name\":\"updateMaxFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxFixedAPR\",\"type\":\"uint256\"}],\"name\":\"updateMaxFixedAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPositionDuration\",\"type\":\"uint256\"}],\"name\":\"updateMaxPositionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTimeStretchAPR\",\"type\":\"uint256\"}],\"name\":\"updateMaxTimeStretchAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minCheckpointDuration\",\"type\":\"uint256\"}],\"name\":\"updateMinCheckpointDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"__minFees\",\"type\":\"tuple\"}],\"name\":\"updateMinFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minFixedAPR\",\"type\":\"uint256\"}],\"name\":\"updateMinFixedAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minPositionDuration\",\"type\":\"uint256\"}],\"name\":\"updateMinPositionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minTimeStretchAPR\",\"type\":\"uint256\"}],\"name\":\"updateMinTimeStretchAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addDeployerCoordinator(address)\":{\"params\":{\"_deployerCoordinator\":\"The new deployer coordinator.\"}},\"constructor\":{\"params\":{\"_factoryConfig\":\"Configuration of the Hyperdrive Factory.\"}},\"defaultPausers()\":{\"returns\":{\"_0\":\"The default pausers.\"}},\"deployAndInitialize(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes,bytes32)\":{\"details\":\"This function is declared as payable to allow payable overrides      to accept ether on initialization, but payability is not supported      by default.\",\"params\":{\"_config\":\"The configuration of the Hyperdrive pool.\",\"_contribution\":\"The contribution amount in base to the pool.\",\"_deployerCoordinator\":\"The deployer coordinator to use in this        deployment.\",\"_deploymentId\":\"The deployment ID to use when deploying the pool.\",\"_extraData\":\"The extra data that contains data necessary for the        specific deployer.\",\"_fixedAPR\":\"The fixed APR used to initialize the pool.\",\"_initializeExtraData\":\"The extra data for the `initialize` call.\",\"_salt\":\"The create2 salt to use for the deployment.\",\"_timeStretchAPR\":\"The time stretch APR used to initialize the pool.\"},\"returns\":{\"_0\":\"The hyperdrive address deployed.\"}},\"deployTarget(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes32)\":{\"params\":{\"_config\":\"The configuration of the Hyperdrive pool.\",\"_deployerCoordinator\":\"The deployer coordinator to use in this        deployment.\",\"_deploymentId\":\"The deployment ID to use when deploying the pool.\",\"_extraData\":\"The extra data that contains data necessary for the        specific deployer.\",\"_fixedAPR\":\"The fixed APR used to initialize the pool.\",\"_salt\":\"The create2 salt to use for the deployment.\",\"_targetIndex\":\"The index of the target to deploy.\",\"_timeStretchAPR\":\"The time stretch APR used to initialize the pool.\"},\"returns\":{\"_0\":\"The target address deployed.\"}},\"getDeployerCoordinatorAtIndex(uint256)\":{\"params\":{\"index\":\"The index of the deployer coordinator to get.\"},\"returns\":{\"_0\":\"The deployer coordinator at the specified index.\"}},\"getDeployerCoordinatorsInRange(uint256,uint256)\":{\"params\":{\"endIndex\":\"The ending index (inclusive).\",\"startIndex\":\"The starting index (inclusive).\"},\"returns\":{\"range\":\"The deployer coordinators within the specified range.\"}},\"getInstanceAtIndex(uint256)\":{\"params\":{\"index\":\"The index of the instance to get.\"},\"returns\":{\"_0\":\"The instance at the specified index.\"}},\"getInstancesInRange(uint256,uint256)\":{\"params\":{\"endIndex\":\"The ending index of the instances to get.\",\"startIndex\":\"The starting index of the instances to get.\"},\"returns\":{\"range\":\"The resulting custom portion of the _instances array.\"}},\"getNumberOfDeployerCoordinators()\":{\"returns\":{\"_0\":\"The number of deployer coordinators deployed by this factory.\"}},\"getNumberOfInstances()\":{\"returns\":{\"_0\":\"The number of instances deployed by this factory.\"}},\"maxFees()\":{\"returns\":{\"_0\":\"The max fees.\"}},\"minFees()\":{\"returns\":{\"_0\":\"The min fees.\"}},\"removeDeployerCoordinator(address,uint256)\":{\"params\":{\"_deployerCoordinator\":\"The deployer coordinator to remove.\",\"_index\":\"The index of the deployer coordinator to remove.\"}},\"updateCheckpointDurationResolution(uint256)\":{\"params\":{\"_checkpointDurationResolution\":\"The new checkpoint duration        resolution.\"}},\"updateDefaultPausers(address[])\":{\"params\":{\"_defaultPausers_\":\"The new list of default pausers.\"}},\"updateFeeCollector(address)\":{\"params\":{\"_feeCollector\":\"The new fee collector address.\"}},\"updateGovernance(address)\":{\"params\":{\"_governance\":\"The new governance address.\"}},\"updateHyperdriveGovernance(address)\":{\"params\":{\"_hyperdriveGovernance\":\"The new hyperdrive governance address.\"}},\"updateLinkerCodeHash(bytes32)\":{\"params\":{\"_linkerCodeHash\":\"The new linker code hash.\"}},\"updateLinkerFactory(address)\":{\"params\":{\"_linkerFactory\":\"The new linker factory.\"}},\"updateMaxCheckpointDuration(uint256)\":{\"params\":{\"_maxCheckpointDuration\":\"The new maximum checkpoint duration.\"}},\"updateMaxFees((uint256,uint256,uint256,uint256))\":{\"params\":{\"__maxFees\":\"The new maximum fee parameters.\"}},\"updateMaxFixedAPR(uint256)\":{\"params\":{\"_maxFixedAPR\":\"The new maximum fixed APR.\"}},\"updateMaxPositionDuration(uint256)\":{\"params\":{\"_maxPositionDuration\":\"The new maximum position duration.\"}},\"updateMaxTimeStretchAPR(uint256)\":{\"params\":{\"_maxTimeStretchAPR\":\"The new maximum time stretch APR.\"}},\"updateMinCheckpointDuration(uint256)\":{\"params\":{\"_minCheckpointDuration\":\"The new minimum checkpoint duration.\"}},\"updateMinFees((uint256,uint256,uint256,uint256))\":{\"params\":{\"__minFees\":\"The new minimum fee parameters.\"}},\"updateMinFixedAPR(uint256)\":{\"params\":{\"_minFixedAPR\":\"The new minimum fixed APR.\"}},\"updateMinPositionDuration(uint256)\":{\"params\":{\"_minPositionDuration\":\"The new minimum position duration.\"}},\"updateMinTimeStretchAPR(uint256)\":{\"params\":{\"_minTimeStretchAPR\":\"The new minimum time stretch APR.\"}}},\"stateVariables\":{\"_deployerCoordinators\":{\"details\":\"List of all deployer coordinators registered by governance.\"},\"_instances\":{\"details\":\"Array of all instances deployed by this factory.\"},\"isInstance\":{\"details\":\"Mapping to check if an instance is in the _instances array.\"}},\"title\":\"HyperdriveFactory\",\"version\":1},\"userdoc\":{\"errors\":{\"DeployerCoordinatorAlreadyAdded()\":[{\"notice\":\"Errors ///\"}],\"ExpInvalidExponent()\":[{\"notice\":\"Thrown when the exponent to `FixedPointMath.exp` would cause the         the result to be larger than the representable scale.\"}],\"LnInvalidInput()\":[{\"notice\":\"Thrown when the input to `FixedPointMath.ln` is less than or         equal to zero.\"}]},\"events\":{\"Deployed(address,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes)\":{\"notice\":\"Events ///\"}},\"kind\":\"user\",\"methods\":{\"addDeployerCoordinator(address)\":{\"notice\":\"Allows governance to add a new deployer coordinator.\"},\"checkpointDurationResolution()\":{\"notice\":\"The resolution for the checkpoint duration. Every checkpoint         duration must be a multiple of this resolution.\"},\"constructor\":{\"notice\":\"Initializes the factory.\"},\"defaultPausers()\":{\"notice\":\"Gets the default pausers.\"},\"deployAndInitialize(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the factory's configuration.\"},\"deployTarget(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes32)\":{\"notice\":\"Deploys a Hyperdrive target with the factory's configuration.\"},\"feeCollector()\":{\"notice\":\"The fee collector used when new instances are deployed.\"},\"getDeployerCoordinatorAtIndex(uint256)\":{\"notice\":\"Gets the deployer coordinator at the specified index.\"},\"getDeployerCoordinatorsInRange(uint256,uint256)\":{\"notice\":\"Returns the deployer coordinators with an index between the         starting and ending indexes (inclusive).\"},\"getInstanceAtIndex(uint256)\":{\"notice\":\"Gets the instance at the specified index.\"},\"getInstancesInRange(uint256,uint256)\":{\"notice\":\"Returns the _instances array according to specified indices.\"},\"getNumberOfDeployerCoordinators()\":{\"notice\":\"Gets the number of deployer coordinators registered in this         factory.\"},\"getNumberOfInstances()\":{\"notice\":\"Gets the number of instances deployed by this factory.\"},\"governance()\":{\"notice\":\"The governance address that updates the factory's configuration.\"},\"hyperdriveGovernance()\":{\"notice\":\"The governance address used when new instances are deployed.\"},\"instancesToDeployerCoordinators(address)\":{\"notice\":\"A mapping from deployed Hyperdrive instances to the deployer         coordintor that deployed them. This is useful for verifying         the bytecode that was used to deploy the instance.\"},\"isDeployerCoordinator(address)\":{\"notice\":\"Mapping to check if a deployer coordinator has been registered         by governance.\"},\"linkerCodeHash()\":{\"notice\":\"The linker code hash used when new instances are deployed.\"},\"linkerFactory()\":{\"notice\":\"The linker factory used when new instances are deployed.\"},\"maxCheckpointDuration()\":{\"notice\":\"The maximum checkpoint duration that can be used by new         deployments.\"},\"maxFees()\":{\"notice\":\"Gets the max fees.\"},\"maxFixedAPR()\":{\"notice\":\"The maximum fixed APR that can be used by new deployments.\"},\"maxPositionDuration()\":{\"notice\":\"The maximum position duration that can be used by new         deployments.\"},\"maxTimeStretchAPR()\":{\"notice\":\"The maximum time stretch APR that can be used by new deployments.\"},\"minCheckpointDuration()\":{\"notice\":\"The minimum checkpoint duration that can be used by new         deployments.\"},\"minFees()\":{\"notice\":\"Gets the min fees.\"},\"minFixedAPR()\":{\"notice\":\"The minimum fixed APR that can be used by new deployments.\"},\"minPositionDuration()\":{\"notice\":\"The minimum position duration that can be used by new         deployments.\"},\"minTimeStretchAPR()\":{\"notice\":\"The minimum time stretch APR that can be used by new deployments.\"},\"removeDeployerCoordinator(address,uint256)\":{\"notice\":\"Allows governance to remove an existing deployer coordinator.\"},\"updateCheckpointDurationResolution(uint256)\":{\"notice\":\"Allows governance to change the checkpoint duration resolution.\"},\"updateDefaultPausers(address[])\":{\"notice\":\"Allows governance to change the default pausers.\"},\"updateFeeCollector(address)\":{\"notice\":\"Allows governance to change the fee collector address.\"},\"updateGovernance(address)\":{\"notice\":\"Allows governance to transfer the governance role.\"},\"updateHyperdriveGovernance(address)\":{\"notice\":\"Allows governance to change the hyperdrive governance address\"},\"updateLinkerCodeHash(bytes32)\":{\"notice\":\"Allows governance to change the linker code hash. This allows         governance to update the implementation of the ERC20Forwarder.\"},\"updateLinkerFactory(address)\":{\"notice\":\"Allows governance to change the linker factory.\"},\"updateMaxCheckpointDuration(uint256)\":{\"notice\":\"Allows governance to update the maximum checkpoint duration.\"},\"updateMaxFees((uint256,uint256,uint256,uint256))\":{\"notice\":\"Allows governance to update the maximum fee parameters.\"},\"updateMaxFixedAPR(uint256)\":{\"notice\":\"Allows governance to update the maximum fixed APR.\"},\"updateMaxPositionDuration(uint256)\":{\"notice\":\"Allows governance to update the maximum position duration.\"},\"updateMaxTimeStretchAPR(uint256)\":{\"notice\":\"Allows governance to update the maximum time stretch APR.\"},\"updateMinCheckpointDuration(uint256)\":{\"notice\":\"Allows governance to update the minimum checkpoint duration.\"},\"updateMinFees((uint256,uint256,uint256,uint256))\":{\"notice\":\"Allows governance to update the minimum fee parameters.\"},\"updateMinFixedAPR(uint256)\":{\"notice\":\"Allows governance to update the minimum fixed APR.\"},\"updateMinPositionDuration(uint256)\":{\"notice\":\"Allows governance to update the minimum position duration.\"},\"updateMinTimeStretchAPR(uint256)\":{\"notice\":\"Allows governance to update the minimum time stretch APR.\"}},\"notice\":\"Deploys hyperdrive instances and initializes them. It also holds a         registry of all deployed hyperdrive instances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/factory/HyperdriveFactory.sol\":\"HyperdriveFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/factory/HyperdriveFactory.sol\":{\"keccak256\":\"0x8bdfa1574f5b557c03d66e5fcf3d154ea37c5e597a49c621a6006fd51e544045\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://03e21d236ffb6b9d8be1f2582996db1aff53452f3253447c64af2ec3209260db\",\"dweb:/ipfs/QmXG6DKfb8SVtEdg9FjxmN62tw83CYpQXY7aQD2u2NySPX\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0xfd51b9727f00a434ea4ced64044c104ed8361fa2ed22600969d1e4ff257b14f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8780b588acc11dd906ff0897adc5b7acdab759fec4d14ce0d52bf002cb90c398\",\"dweb:/ipfs/QmTMaRGveFgN5L3k1h5oAbfp5ccmzT9d36JhChVg9PxJkD\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x81c89ca62586555b915a9609d10014ff9d1f0d82111809d566f614bd9ea2fb16\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c4859b122480f504d1f0035ed11983b0d74ea2b16bcf26dfe19365bb4f66240\",\"dweb:/ipfs/QmQEQBxRdsH6zNx2rvzetYZRbB3pMXXWzTuwVPBGVhCHfL\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x93cfce28869c1a082c170092b87b04204a91b7898a1e95c3e4270f06fbc76a97\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8b24e13ff8994550685fec1405bc5d2a5ed6400db061005e72ecff056be51a1\",\"dweb:/ipfs/QmR4RZzyhjYt8xxRPaJWHKhBZdHZPVBHrtNERAZhCaaTFU\"]},\"contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0x07b5c27304387f7fc0ca70e0e93dd233810b50536b902eade119d7166a90a13e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0ca7fb16084139214fc7ac866cc0222ef2958b895298a944c442bdb99fcb2f65\",\"dweb:/ipfs/QmX44bxd2c82k32Z4fgnv2kJHZBVqVqwuFhUvrUsgBZ8Vc\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x5c5d6c812fd2cf996d60632c4c8cca7b3d70f5ae4891a3f99c1e10f967f520dd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://44ef09e50cf76ebab25b90688b19966575cc07fee503ffdb189c3fbbcbfea01f\",\"dweb:/ipfs/QmZEULHXopjaeWbsfXNrEriQomY19s6LXEcae9saeZCpmt\"]},\"contracts/src/interfaces/IHyperdriveFactory.sol\":{\"keccak256\":\"0x1a694017176d5a5857a4c7382779666f789e98d93ee87ebbb1f2bfaa4b3bcc8d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://19cd7d505c0a9a864f5cd16f05f8cf7c40883de57b273466d5ae41741bdeccea\",\"dweb:/ipfs/Qmf3g6qBTS7LQPAh3z86EnVdTAahYfmJ15xW4CFnDrMfvv\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x516967eaae812ff7fff81797190f48fca40838eccfb8243e3f973f2f85b51597\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://50fa3165b126976c218d27f7f276789f8cc680d3136cd631999164a64f03e477\",\"dweb:/ipfs/QmTSCjqQoys2SJNDZrhTdy2M2at8siSb3ZXHjWUoeihQjr\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0xda628a0f7428ad63cb04b6f341c223d7b36803d554e92cd3a793325eae6ad87a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7dfe92e6fb15eedbba033a96481db1343aeb48039d40d4b5053cc27d3f5e4f3\",\"dweb:/ipfs/QmNeNyjuEd7LkwZMg14fnMsunLXbJRzHYwzC2yEYKi8H3q\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0xb5b2a1f90c4e85e1290144b1e0e393027c90f24d6030ee802d0369342d7bf002\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7850a790ea32726462f6dd08c87e5250c70155af558b8fdd17dc71d53c5b7f3\",\"dweb:/ipfs/QmWpshz1Ufdqmw8rmZdbdm9ZyEcKHFswLMNaBkBJ3sqNA1\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xa2e1d420bcae975a3d9aa7918319da2dd047cbc50ad41e0a391048e01b980191\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://335611b957d8ca7c0cee11d6f2268372a7c937bc119c030cb8e274679604b6cd\",\"dweb:/ipfs/QmeoxLRyPVgBXrxetVFEyjsvLNfwAahcHsFdAEzy9otxuU\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xf84c46faa4a3323835a80eae3ee969409bf3f5c48ec94a6e486b70cb59a4c868\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b1dcc1796eac62773f298b5b77fda8de424d822a7e74825028a0f83c627a5bfb\",\"dweb:/ipfs/QmRbiswdabx3uMgrgkLKe6K6JAQBLafsWqEyZCg3PQbN5Q\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88\",\"dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0xdcf0c77bc29a0b5b2ce06cccfa6f5e936128e5c0f14a5636bfe21faf95c515bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://088172c3f97db68914cdef042d942b0d0c585cce77d004625bfa62a72ac1e95d\",\"dweb:/ipfs/Qmewa9GJtYxBw4fAx4HZJaNuUCKEoQT4c5nmhPyXxVEwwq\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0x94662a356f9ab292c0935ff4c29f9b826a17176eb98b472efed7afbfe4d5d744\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://794c5605f8f0716b871a8747fea516d26fd73f0add45a944ac4034de96c60c7a\",\"dweb:/ipfs/QmYSsquDzxupHSwWMsjjooxNxuzQ29ezczFsP2VQ5PYYve\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x390a002b83e7ed8a99d4ca9b3ea514b2080c237911a3a3d0fa2ad4522a09d60b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://51ea972cf6d3c79ea6b93c63c85fbba2bd234e71704715a1d9bd897da9d6fcb1\",\"dweb:/ipfs/QmXEGDrLyeAYMZiDVNynVzRzAYgnspcdLfkMeGr81DmJpL\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0x76f69d3104f3f97d67289512325306d7ea2c7b29a787eeef93ffc47e8a80f346\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6c8df31a46b4287c23c67e0157e6f6a4877608ed3fb1919a9c07f5bd9b81d7f6\",\"dweb:/ipfs/QmPua6efzJGnC7NarnPojk9yF2geqenUaXUNRmPVHJdXWk\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "struct HyperdriveFactory.FactoryConfig";
                    readonly name: "_factoryConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "hyperdriveGovernance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address[]";
                        readonly name: "defaultPausers";
                        readonly type: "address[]";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDurationResolution";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minCheckpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "maxCheckpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minPositionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "maxPositionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minFixedAPR";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "maxFixedAPR";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minTimeStretchAPR";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "maxTimeStretchAPR";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "minFees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "maxFees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }];
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "target";
                    readonly type: "address";
                }];
                readonly type: "error";
                readonly name: "AddressEmptyCode";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly type: "error";
                readonly name: "AddressInsufficientBalance";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeployerCoordinatorAlreadyAdded";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeployerCoordinatorIndexMismatch";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeployerCoordinatorNotAdded";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "EndIndexTooLarge";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "ExpInvalidExponent";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "FailedInnerCall";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDurationResolution";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidDeployConfig";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidDeployerCoordinator";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFees";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFixedAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidIndexes";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMaxCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMaxFees";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMaxFixedAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMaxPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMaxTimeStretchAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinFees";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinFixedAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinTimeStretchAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidTimeStretchAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "LnInvalidInput";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }];
                readonly type: "error";
                readonly name: "SafeERC20FailedOperation";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TransferFailed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "Unauthorized";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newCheckpointDurationResolution";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "CheckpointDurationResolutionUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "newDefaultPausers";
                    readonly type: "address[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "DefaultPausersUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "deployerCoordinator";
                    readonly type: "address";
                    readonly indexed: true;
                }, {
                    readonly internalType: "address";
                    readonly name: "hyperdrive";
                    readonly type: "address";
                    readonly indexed: false;
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "config";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                    readonly indexed: false;
                }, {
                    readonly internalType: "bytes";
                    readonly name: "extraData";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "Deployed";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "deployerCoordinator";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "DeployerCoordinatorAdded";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "deployerCoordinator";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "DeployerCoordinatorRemoved";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "newFeeCollector";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "FeeCollectorUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "governance";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "GovernanceUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "hyperdriveGovernance";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "HyperdriveGovernanceUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "newDeployer";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "ImplementationUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "newLinkerCodeHash";
                    readonly type: "bytes32";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "LinkerCodeHashUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "newLinkerFactory";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "LinkerFactoryUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMaxCheckpointDuration";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MaxCheckpointDurationUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "newMaxFees";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MaxFeesUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMaxFixedAPR";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MaxFixedAPRUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMaxPositionDuration";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MaxPositionDurationUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMaxTimeStretchAPR";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MaxTimeStretchAPRUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMinCheckpointDuration";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MinCheckpointDurationUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "newMinFees";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MinFeesUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMinFixedAPR";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MinFixedAPRUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMinPositionDuration";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MinPositionDurationUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMinTimeStretchAPR";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MinTimeStretchAPRUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_deployerCoordinator";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "addDeployerCoordinator";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "checkpointDurationResolution";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "defaultPausers";
                readonly outputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "";
                    readonly type: "address[]";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "address";
                    readonly name: "_deployerCoordinator";
                    readonly type: "address";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_config";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_contribution";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_fixedAPR";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_timeStretchAPR";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_initializeExtraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "payable";
                readonly type: "function";
                readonly name: "deployAndInitialize";
                readonly outputs: readonly [{
                    readonly internalType: "contract IHyperdrive";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "address";
                    readonly name: "_deployerCoordinator";
                    readonly type: "address";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_config";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_fixedAPR";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_timeStretchAPR";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_targetIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deployTarget";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "feeCollector";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getDeployerCoordinatorAtIndex";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "startIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "endIndex";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getDeployerCoordinatorsInRange";
                readonly outputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "range";
                    readonly type: "address[]";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getInstanceAtIndex";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "startIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "endIndex";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getInstancesInRange";
                readonly outputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "range";
                    readonly type: "address[]";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getNumberOfDeployerCoordinators";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getNumberOfInstances";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "governance";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "hyperdriveGovernance";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "instance";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "instancesToDeployerCoordinators";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "deployCoordinator";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "isDeployerCoordinator";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "isInstance";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "linkerCodeHash";
                readonly outputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "linkerFactory";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "maxCheckpointDuration";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "maxFees";
                readonly outputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "maxFixedAPR";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "maxPositionDuration";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "maxTimeStretchAPR";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "minCheckpointDuration";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "minFees";
                readonly outputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "minFixedAPR";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "minPositionDuration";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "minTimeStretchAPR";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_deployerCoordinator";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_index";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "removeDeployerCoordinator";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_checkpointDurationResolution";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateCheckpointDurationResolution";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "_defaultPausers_";
                    readonly type: "address[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateDefaultPausers";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_feeCollector";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateFeeCollector";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_governance";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateGovernance";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_hyperdriveGovernance";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateHyperdriveGovernance";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_linkerCodeHash";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateLinkerCodeHash";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_linkerFactory";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateLinkerFactory";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_maxCheckpointDuration";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMaxCheckpointDuration";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "__maxFees";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMaxFees";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_maxFixedAPR";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMaxFixedAPR";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_maxPositionDuration";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMaxPositionDuration";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_maxTimeStretchAPR";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMaxTimeStretchAPR";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_minCheckpointDuration";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMinCheckpointDuration";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "__minFees";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMinFees";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_minFixedAPR";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMinFixedAPR";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_minPositionDuration";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMinPositionDuration";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_minTimeStretchAPR";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMinTimeStretchAPR";
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly "addDeployerCoordinator(address)": {
                        readonly params: {
                            readonly _deployerCoordinator: "The new deployer coordinator.";
                        };
                    };
                    readonly constructor: {
                        readonly params: {
                            readonly _factoryConfig: "Configuration of the Hyperdrive Factory.";
                        };
                    };
                    readonly "defaultPausers()": {
                        readonly returns: {
                            readonly _0: "The default pausers.";
                        };
                    };
                    readonly "deployAndInitialize(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes,bytes32)": {
                        readonly details: "This function is declared as payable to allow payable overrides      to accept ether on initialization, but payability is not supported      by default.";
                        readonly params: {
                            readonly _config: "The configuration of the Hyperdrive pool.";
                            readonly _contribution: "The contribution amount in base to the pool.";
                            readonly _deployerCoordinator: "The deployer coordinator to use in this        deployment.";
                            readonly _deploymentId: "The deployment ID to use when deploying the pool.";
                            readonly _extraData: "The extra data that contains data necessary for the        specific deployer.";
                            readonly _fixedAPR: "The fixed APR used to initialize the pool.";
                            readonly _initializeExtraData: "The extra data for the `initialize` call.";
                            readonly _salt: "The create2 salt to use for the deployment.";
                            readonly _timeStretchAPR: "The time stretch APR used to initialize the pool.";
                        };
                        readonly returns: {
                            readonly _0: "The hyperdrive address deployed.";
                        };
                    };
                    readonly "deployTarget(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes32)": {
                        readonly params: {
                            readonly _config: "The configuration of the Hyperdrive pool.";
                            readonly _deployerCoordinator: "The deployer coordinator to use in this        deployment.";
                            readonly _deploymentId: "The deployment ID to use when deploying the pool.";
                            readonly _extraData: "The extra data that contains data necessary for the        specific deployer.";
                            readonly _fixedAPR: "The fixed APR used to initialize the pool.";
                            readonly _salt: "The create2 salt to use for the deployment.";
                            readonly _targetIndex: "The index of the target to deploy.";
                            readonly _timeStretchAPR: "The time stretch APR used to initialize the pool.";
                        };
                        readonly returns: {
                            readonly _0: "The target address deployed.";
                        };
                    };
                    readonly "getDeployerCoordinatorAtIndex(uint256)": {
                        readonly params: {
                            readonly index: "The index of the deployer coordinator to get.";
                        };
                        readonly returns: {
                            readonly _0: "The deployer coordinator at the specified index.";
                        };
                    };
                    readonly "getDeployerCoordinatorsInRange(uint256,uint256)": {
                        readonly params: {
                            readonly endIndex: "The ending index (inclusive).";
                            readonly startIndex: "The starting index (inclusive).";
                        };
                        readonly returns: {
                            readonly range: "The deployer coordinators within the specified range.";
                        };
                    };
                    readonly "getInstanceAtIndex(uint256)": {
                        readonly params: {
                            readonly index: "The index of the instance to get.";
                        };
                        readonly returns: {
                            readonly _0: "The instance at the specified index.";
                        };
                    };
                    readonly "getInstancesInRange(uint256,uint256)": {
                        readonly params: {
                            readonly endIndex: "The ending index of the instances to get.";
                            readonly startIndex: "The starting index of the instances to get.";
                        };
                        readonly returns: {
                            readonly range: "The resulting custom portion of the _instances array.";
                        };
                    };
                    readonly "getNumberOfDeployerCoordinators()": {
                        readonly returns: {
                            readonly _0: "The number of deployer coordinators deployed by this factory.";
                        };
                    };
                    readonly "getNumberOfInstances()": {
                        readonly returns: {
                            readonly _0: "The number of instances deployed by this factory.";
                        };
                    };
                    readonly "maxFees()": {
                        readonly returns: {
                            readonly _0: "The max fees.";
                        };
                    };
                    readonly "minFees()": {
                        readonly returns: {
                            readonly _0: "The min fees.";
                        };
                    };
                    readonly "removeDeployerCoordinator(address,uint256)": {
                        readonly params: {
                            readonly _deployerCoordinator: "The deployer coordinator to remove.";
                            readonly _index: "The index of the deployer coordinator to remove.";
                        };
                    };
                    readonly "updateCheckpointDurationResolution(uint256)": {
                        readonly params: {
                            readonly _checkpointDurationResolution: "The new checkpoint duration        resolution.";
                        };
                    };
                    readonly "updateDefaultPausers(address[])": {
                        readonly params: {
                            readonly _defaultPausers_: "The new list of default pausers.";
                        };
                    };
                    readonly "updateFeeCollector(address)": {
                        readonly params: {
                            readonly _feeCollector: "The new fee collector address.";
                        };
                    };
                    readonly "updateGovernance(address)": {
                        readonly params: {
                            readonly _governance: "The new governance address.";
                        };
                    };
                    readonly "updateHyperdriveGovernance(address)": {
                        readonly params: {
                            readonly _hyperdriveGovernance: "The new hyperdrive governance address.";
                        };
                    };
                    readonly "updateLinkerCodeHash(bytes32)": {
                        readonly params: {
                            readonly _linkerCodeHash: "The new linker code hash.";
                        };
                    };
                    readonly "updateLinkerFactory(address)": {
                        readonly params: {
                            readonly _linkerFactory: "The new linker factory.";
                        };
                    };
                    readonly "updateMaxCheckpointDuration(uint256)": {
                        readonly params: {
                            readonly _maxCheckpointDuration: "The new maximum checkpoint duration.";
                        };
                    };
                    readonly "updateMaxFees((uint256,uint256,uint256,uint256))": {
                        readonly params: {
                            readonly __maxFees: "The new maximum fee parameters.";
                        };
                    };
                    readonly "updateMaxFixedAPR(uint256)": {
                        readonly params: {
                            readonly _maxFixedAPR: "The new maximum fixed APR.";
                        };
                    };
                    readonly "updateMaxPositionDuration(uint256)": {
                        readonly params: {
                            readonly _maxPositionDuration: "The new maximum position duration.";
                        };
                    };
                    readonly "updateMaxTimeStretchAPR(uint256)": {
                        readonly params: {
                            readonly _maxTimeStretchAPR: "The new maximum time stretch APR.";
                        };
                    };
                    readonly "updateMinCheckpointDuration(uint256)": {
                        readonly params: {
                            readonly _minCheckpointDuration: "The new minimum checkpoint duration.";
                        };
                    };
                    readonly "updateMinFees((uint256,uint256,uint256,uint256))": {
                        readonly params: {
                            readonly __minFees: "The new minimum fee parameters.";
                        };
                    };
                    readonly "updateMinFixedAPR(uint256)": {
                        readonly params: {
                            readonly _minFixedAPR: "The new minimum fixed APR.";
                        };
                    };
                    readonly "updateMinPositionDuration(uint256)": {
                        readonly params: {
                            readonly _minPositionDuration: "The new minimum position duration.";
                        };
                    };
                    readonly "updateMinTimeStretchAPR(uint256)": {
                        readonly params: {
                            readonly _minTimeStretchAPR: "The new minimum time stretch APR.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly "addDeployerCoordinator(address)": {
                        readonly notice: "Allows governance to add a new deployer coordinator.";
                    };
                    readonly "checkpointDurationResolution()": {
                        readonly notice: "The resolution for the checkpoint duration. Every checkpoint         duration must be a multiple of this resolution.";
                    };
                    readonly constructor: {
                        readonly notice: "Initializes the factory.";
                    };
                    readonly "defaultPausers()": {
                        readonly notice: "Gets the default pausers.";
                    };
                    readonly "deployAndInitialize(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the factory's configuration.";
                    };
                    readonly "deployTarget(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive target with the factory's configuration.";
                    };
                    readonly "feeCollector()": {
                        readonly notice: "The fee collector used when new instances are deployed.";
                    };
                    readonly "getDeployerCoordinatorAtIndex(uint256)": {
                        readonly notice: "Gets the deployer coordinator at the specified index.";
                    };
                    readonly "getDeployerCoordinatorsInRange(uint256,uint256)": {
                        readonly notice: "Returns the deployer coordinators with an index between the         starting and ending indexes (inclusive).";
                    };
                    readonly "getInstanceAtIndex(uint256)": {
                        readonly notice: "Gets the instance at the specified index.";
                    };
                    readonly "getInstancesInRange(uint256,uint256)": {
                        readonly notice: "Returns the _instances array according to specified indices.";
                    };
                    readonly "getNumberOfDeployerCoordinators()": {
                        readonly notice: "Gets the number of deployer coordinators registered in this         factory.";
                    };
                    readonly "getNumberOfInstances()": {
                        readonly notice: "Gets the number of instances deployed by this factory.";
                    };
                    readonly "governance()": {
                        readonly notice: "The governance address that updates the factory's configuration.";
                    };
                    readonly "hyperdriveGovernance()": {
                        readonly notice: "The governance address used when new instances are deployed.";
                    };
                    readonly "instancesToDeployerCoordinators(address)": {
                        readonly notice: "A mapping from deployed Hyperdrive instances to the deployer         coordintor that deployed them. This is useful for verifying         the bytecode that was used to deploy the instance.";
                    };
                    readonly "isDeployerCoordinator(address)": {
                        readonly notice: "Mapping to check if a deployer coordinator has been registered         by governance.";
                    };
                    readonly "linkerCodeHash()": {
                        readonly notice: "The linker code hash used when new instances are deployed.";
                    };
                    readonly "linkerFactory()": {
                        readonly notice: "The linker factory used when new instances are deployed.";
                    };
                    readonly "maxCheckpointDuration()": {
                        readonly notice: "The maximum checkpoint duration that can be used by new         deployments.";
                    };
                    readonly "maxFees()": {
                        readonly notice: "Gets the max fees.";
                    };
                    readonly "maxFixedAPR()": {
                        readonly notice: "The maximum fixed APR that can be used by new deployments.";
                    };
                    readonly "maxPositionDuration()": {
                        readonly notice: "The maximum position duration that can be used by new         deployments.";
                    };
                    readonly "maxTimeStretchAPR()": {
                        readonly notice: "The maximum time stretch APR that can be used by new deployments.";
                    };
                    readonly "minCheckpointDuration()": {
                        readonly notice: "The minimum checkpoint duration that can be used by new         deployments.";
                    };
                    readonly "minFees()": {
                        readonly notice: "Gets the min fees.";
                    };
                    readonly "minFixedAPR()": {
                        readonly notice: "The minimum fixed APR that can be used by new deployments.";
                    };
                    readonly "minPositionDuration()": {
                        readonly notice: "The minimum position duration that can be used by new         deployments.";
                    };
                    readonly "minTimeStretchAPR()": {
                        readonly notice: "The minimum time stretch APR that can be used by new deployments.";
                    };
                    readonly "removeDeployerCoordinator(address,uint256)": {
                        readonly notice: "Allows governance to remove an existing deployer coordinator.";
                    };
                    readonly "updateCheckpointDurationResolution(uint256)": {
                        readonly notice: "Allows governance to change the checkpoint duration resolution.";
                    };
                    readonly "updateDefaultPausers(address[])": {
                        readonly notice: "Allows governance to change the default pausers.";
                    };
                    readonly "updateFeeCollector(address)": {
                        readonly notice: "Allows governance to change the fee collector address.";
                    };
                    readonly "updateGovernance(address)": {
                        readonly notice: "Allows governance to transfer the governance role.";
                    };
                    readonly "updateHyperdriveGovernance(address)": {
                        readonly notice: "Allows governance to change the hyperdrive governance address";
                    };
                    readonly "updateLinkerCodeHash(bytes32)": {
                        readonly notice: "Allows governance to change the linker code hash. This allows         governance to update the implementation of the ERC20Forwarder.";
                    };
                    readonly "updateLinkerFactory(address)": {
                        readonly notice: "Allows governance to change the linker factory.";
                    };
                    readonly "updateMaxCheckpointDuration(uint256)": {
                        readonly notice: "Allows governance to update the maximum checkpoint duration.";
                    };
                    readonly "updateMaxFees((uint256,uint256,uint256,uint256))": {
                        readonly notice: "Allows governance to update the maximum fee parameters.";
                    };
                    readonly "updateMaxFixedAPR(uint256)": {
                        readonly notice: "Allows governance to update the maximum fixed APR.";
                    };
                    readonly "updateMaxPositionDuration(uint256)": {
                        readonly notice: "Allows governance to update the maximum position duration.";
                    };
                    readonly "updateMaxTimeStretchAPR(uint256)": {
                        readonly notice: "Allows governance to update the maximum time stretch APR.";
                    };
                    readonly "updateMinCheckpointDuration(uint256)": {
                        readonly notice: "Allows governance to update the minimum checkpoint duration.";
                    };
                    readonly "updateMinFees((uint256,uint256,uint256,uint256))": {
                        readonly notice: "Allows governance to update the minimum fee parameters.";
                    };
                    readonly "updateMinFixedAPR(uint256)": {
                        readonly notice: "Allows governance to update the minimum fixed APR.";
                    };
                    readonly "updateMinPositionDuration(uint256)": {
                        readonly notice: "Allows governance to update the minimum position duration.";
                    };
                    readonly "updateMinTimeStretchAPR(uint256)": {
                        readonly notice: "Allows governance to update the minimum time stretch APR.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/factory/HyperdriveFactory.sol": "HyperdriveFactory";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/factory/HyperdriveFactory.sol": {
                readonly keccak256: "0x8bdfa1574f5b557c03d66e5fcf3d154ea37c5e597a49c621a6006fd51e544045";
                readonly urls: readonly ["bzz-raw://03e21d236ffb6b9d8be1f2582996db1aff53452f3253447c64af2ec3209260db", "dweb:/ipfs/QmXG6DKfb8SVtEdg9FjxmN62tw83CYpQXY7aQD2u2NySPX"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0xfd51b9727f00a434ea4ced64044c104ed8361fa2ed22600969d1e4ff257b14f3";
                readonly urls: readonly ["bzz-raw://8780b588acc11dd906ff0897adc5b7acdab759fec4d14ce0d52bf002cb90c398", "dweb:/ipfs/QmTMaRGveFgN5L3k1h5oAbfp5ccmzT9d36JhChVg9PxJkD"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0x81c89ca62586555b915a9609d10014ff9d1f0d82111809d566f614bd9ea2fb16";
                readonly urls: readonly ["bzz-raw://3c4859b122480f504d1f0035ed11983b0d74ea2b16bcf26dfe19365bb4f66240", "dweb:/ipfs/QmQEQBxRdsH6zNx2rvzetYZRbB3pMXXWzTuwVPBGVhCHfL"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0x93cfce28869c1a082c170092b87b04204a91b7898a1e95c3e4270f06fbc76a97";
                readonly urls: readonly ["bzz-raw://b8b24e13ff8994550685fec1405bc5d2a5ed6400db061005e72ecff056be51a1", "dweb:/ipfs/QmR4RZzyhjYt8xxRPaJWHKhBZdHZPVBHrtNERAZhCaaTFU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0x07b5c27304387f7fc0ca70e0e93dd233810b50536b902eade119d7166a90a13e";
                readonly urls: readonly ["bzz-raw://0ca7fb16084139214fc7ac866cc0222ef2958b895298a944c442bdb99fcb2f65", "dweb:/ipfs/QmX44bxd2c82k32Z4fgnv2kJHZBVqVqwuFhUvrUsgBZ8Vc"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x5c5d6c812fd2cf996d60632c4c8cca7b3d70f5ae4891a3f99c1e10f967f520dd";
                readonly urls: readonly ["bzz-raw://44ef09e50cf76ebab25b90688b19966575cc07fee503ffdb189c3fbbcbfea01f", "dweb:/ipfs/QmZEULHXopjaeWbsfXNrEriQomY19s6LXEcae9saeZCpmt"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveFactory.sol": {
                readonly keccak256: "0x1a694017176d5a5857a4c7382779666f789e98d93ee87ebbb1f2bfaa4b3bcc8d";
                readonly urls: readonly ["bzz-raw://19cd7d505c0a9a864f5cd16f05f8cf7c40883de57b273466d5ae41741bdeccea", "dweb:/ipfs/Qmf3g6qBTS7LQPAh3z86EnVdTAahYfmJ15xW4CFnDrMfvv"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0x516967eaae812ff7fff81797190f48fca40838eccfb8243e3f973f2f85b51597";
                readonly urls: readonly ["bzz-raw://50fa3165b126976c218d27f7f276789f8cc680d3136cd631999164a64f03e477", "dweb:/ipfs/QmTSCjqQoys2SJNDZrhTdy2M2at8siSb3ZXHjWUoeihQjr"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0xda628a0f7428ad63cb04b6f341c223d7b36803d554e92cd3a793325eae6ad87a";
                readonly urls: readonly ["bzz-raw://f7dfe92e6fb15eedbba033a96481db1343aeb48039d40d4b5053cc27d3f5e4f3", "dweb:/ipfs/QmNeNyjuEd7LkwZMg14fnMsunLXbJRzHYwzC2yEYKi8H3q"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0xb5b2a1f90c4e85e1290144b1e0e393027c90f24d6030ee802d0369342d7bf002";
                readonly urls: readonly ["bzz-raw://f7850a790ea32726462f6dd08c87e5250c70155af558b8fdd17dc71d53c5b7f3", "dweb:/ipfs/QmWpshz1Ufdqmw8rmZdbdm9ZyEcKHFswLMNaBkBJ3sqNA1"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xa2e1d420bcae975a3d9aa7918319da2dd047cbc50ad41e0a391048e01b980191";
                readonly urls: readonly ["bzz-raw://335611b957d8ca7c0cee11d6f2268372a7c937bc119c030cb8e274679604b6cd", "dweb:/ipfs/QmeoxLRyPVgBXrxetVFEyjsvLNfwAahcHsFdAEzy9otxuU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xf84c46faa4a3323835a80eae3ee969409bf3f5c48ec94a6e486b70cb59a4c868";
                readonly urls: readonly ["bzz-raw://b1dcc1796eac62773f298b5b77fda8de424d822a7e74825028a0f83c627a5bfb", "dweb:/ipfs/QmRbiswdabx3uMgrgkLKe6K6JAQBLafsWqEyZCg3PQbN5Q"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/Errors.sol": {
                readonly keccak256: "0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0";
                readonly urls: readonly ["bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88", "dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0xdcf0c77bc29a0b5b2ce06cccfa6f5e936128e5c0f14a5636bfe21faf95c515bf";
                readonly urls: readonly ["bzz-raw://088172c3f97db68914cdef042d942b0d0c585cce77d004625bfa62a72ac1e95d", "dweb:/ipfs/Qmewa9GJtYxBw4fAx4HZJaNuUCKEoQT4c5nmhPyXxVEwwq"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/HyperdriveMath.sol": {
                readonly keccak256: "0x94662a356f9ab292c0935ff4c29f9b826a17176eb98b472efed7afbfe4d5d744";
                readonly urls: readonly ["bzz-raw://794c5605f8f0716b871a8747fea516d26fd73f0add45a944ac4034de96c60c7a", "dweb:/ipfs/QmYSsquDzxupHSwWMsjjooxNxuzQ29ezczFsP2VQ5PYYve"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/SafeCast.sol": {
                readonly keccak256: "0x390a002b83e7ed8a99d4ca9b3ea514b2080c237911a3a3d0fa2ad4522a09d60b";
                readonly urls: readonly ["bzz-raw://51ea972cf6d3c79ea6b93c63c85fbba2bd234e71704715a1d9bd897da9d6fcb1", "dweb:/ipfs/QmXEGDrLyeAYMZiDVNynVzRzAYgnspcdLfkMeGr81DmJpL"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/YieldSpaceMath.sol": {
                readonly keccak256: "0x76f69d3104f3f97d67289512325306d7ea2c7b29a787eeef93ffc47e8a80f346";
                readonly urls: readonly ["bzz-raw://6c8df31a46b4287c23c67e0157e6f6a4877608ed3fb1919a9c07f5bd9b81d7f6", "dweb:/ipfs/QmPua6efzJGnC7NarnPojk9yF2geqenUaXUNRmPVHJdXWk"];
                readonly license: "Apache-2.0";
            };
            readonly "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                readonly keccak256: "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7";
                readonly urls: readonly ["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f", "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
                readonly keccak256: "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80";
                readonly urls: readonly ["bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229", "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                readonly keccak256: "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70";
                readonly urls: readonly ["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c", "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                readonly keccak256: "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2";
                readonly urls: readonly ["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850", "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
                readonly keccak256: "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff";
                readonly urls: readonly ["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d", "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                readonly keccak256: "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386";
                readonly urls: readonly ["bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0", "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                readonly keccak256: "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721";
                readonly urls: readonly ["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245", "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                readonly keccak256: "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2";
                readonly urls: readonly ["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12", "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"];
                readonly license: "MIT";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/factory/HyperdriveFactory.sol";
        readonly id: 5332;
        readonly exportedSymbols: {
            readonly ERC20: readonly [66324];
            readonly FixedPointMath: readonly [14294];
            readonly HyperdriveFactory: readonly [5331];
            readonly HyperdriveMath: readonly [15024];
            readonly IHyperdrive: readonly [7411];
            readonly IHyperdriveDeployerCoordinator: readonly [7673];
            readonly IHyperdriveFactory: readonly [7965];
            readonly ONE: readonly [13529];
            readonly SafeERC20: readonly [66754];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:39268:21";
        readonly nodes: readonly [{
            readonly id: 3499;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:21";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 3501;
            readonly nodeType: "ImportDirective";
            readonly src: "64:59:21";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol";
            readonly file: "openzeppelin/token/ERC20/ERC20.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 5332;
            readonly sourceUnit: 66325;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3500;
                    readonly name: "ERC20";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 66324;
                    readonly src: "73:5:21";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3503;
            readonly nodeType: "ImportDirective";
            readonly src: "124:73:21";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol";
            readonly file: "openzeppelin/token/ERC20/utils/SafeERC20.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 5332;
            readonly sourceUnit: 66755;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3502;
                    readonly name: "SafeERC20";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 66754;
                    readonly src: "133:9:21";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3505;
            readonly nodeType: "ImportDirective";
            readonly src: "198:60:21";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 5332;
            readonly sourceUnit: 7412;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3504;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7411;
                    readonly src: "207:11:21";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3507;
            readonly nodeType: "ImportDirective";
            readonly src: "259:74:21";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveFactory.sol";
            readonly file: "../interfaces/IHyperdriveFactory.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 5332;
            readonly sourceUnit: 7966;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3506;
                    readonly name: "IHyperdriveFactory";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7965;
                    readonly src: "268:18:21";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3509;
            readonly nodeType: "ImportDirective";
            readonly src: "334:98:21";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly file: "../interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 5332;
            readonly sourceUnit: 7674;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3508;
                    readonly name: "IHyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7673;
                    readonly src: "343:30:21";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3512;
            readonly nodeType: "ImportDirective";
            readonly src: "433:70:21";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/FixedPointMath.sol";
            readonly file: "../libraries/FixedPointMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 5332;
            readonly sourceUnit: 14295;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3510;
                    readonly name: "FixedPointMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 14294;
                    readonly src: "442:14:21";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }, {
                readonly foreign: {
                    readonly id: 3511;
                    readonly name: "ONE";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 13529;
                    readonly src: "458:3:21";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3514;
            readonly nodeType: "ImportDirective";
            readonly src: "504:65:21";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/HyperdriveMath.sol";
            readonly file: "../libraries/HyperdriveMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 5332;
            readonly sourceUnit: 15025;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3513;
                    readonly name: "HyperdriveMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 15024;
                    readonly src: "513:14:21";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 5331;
            readonly nodeType: "ContractDefinition";
            readonly src: "979:38327:21";
            readonly nodes: readonly [{
                readonly id: 3520;
                readonly nodeType: "UsingForDirective";
                readonly src: "1034:33:21";
                readonly nodes: readonly [];
                readonly global: false;
                readonly libraryName: {
                    readonly id: 3518;
                    readonly name: "FixedPointMath";
                    readonly nameLocations: readonly ["1040:14:21"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 14294;
                    readonly src: "1040:14:21";
                };
                readonly typeName: {
                    readonly id: 3519;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1059:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
            }, {
                readonly id: 3524;
                readonly nodeType: "UsingForDirective";
                readonly src: "1072:26:21";
                readonly nodes: readonly [];
                readonly global: false;
                readonly libraryName: {
                    readonly id: 3521;
                    readonly name: "SafeERC20";
                    readonly nameLocations: readonly ["1078:9:21"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 66754;
                    readonly src: "1078:9:21";
                };
                readonly typeName: {
                    readonly id: 3523;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 3522;
                        readonly name: "ERC20";
                        readonly nameLocations: readonly ["1092:5:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 66324;
                        readonly src: "1092:5:21";
                    };
                    readonly referencedDeclaration: 66324;
                    readonly src: "1092:5:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_ERC20_$66324";
                        readonly typeString: "contract ERC20";
                    };
                };
            }, {
                readonly id: 3527;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1185:25:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3525;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1104:76:21";
                    readonly text: "@notice The governance address that updates the factory's configuration.";
                };
                readonly functionSelector: "5aa6e675";
                readonly mutability: "mutable";
                readonly name: "governance";
                readonly nameLocation: "1200:10:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 3526;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1185:7:21";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3530;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1294:35:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3528;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1217:72:21";
                    readonly text: "@notice The governance address used when new instances are deployed.";
                };
                readonly functionSelector: "e3331555";
                readonly mutability: "mutable";
                readonly name: "hyperdriveGovernance";
                readonly nameLocation: "1309:20:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 3529;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1294:7:21";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3533;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1409:28:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3531;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1336:68:21";
                    readonly text: "@notice The linker factory used when new instances are deployed.";
                };
                readonly functionSelector: "99623bb1";
                readonly mutability: "mutable";
                readonly name: "linkerFactory";
                readonly nameLocation: "1424:13:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 3532;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1409:7:21";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3536;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1519:29:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3534;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1444:70:21";
                    readonly text: "@notice The linker code hash used when new instances are deployed.";
                };
                readonly functionSelector: "c905a4b5";
                readonly mutability: "mutable";
                readonly name: "linkerCodeHash";
                readonly nameLocation: "1534:14:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_bytes32";
                    readonly typeString: "bytes32";
                };
                readonly typeName: {
                    readonly id: 3535;
                    readonly name: "bytes32";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1519:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_bytes32";
                        readonly typeString: "bytes32";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3539;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1627:27:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3537;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1555:67:21";
                    readonly text: "@notice The fee collector used when new instances are deployed.";
                };
                readonly functionSelector: "c415b95c";
                readonly mutability: "mutable";
                readonly name: "feeCollector";
                readonly nameLocation: "1642:12:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 3538;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1627:7:21";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3542;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1802:43:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3540;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1661:136:21";
                    readonly text: "@notice The resolution for the checkpoint duration. Every checkpoint\n         duration must be a multiple of this resolution.";
                };
                readonly functionSelector: "d0f96b92";
                readonly mutability: "mutable";
                readonly name: "checkpointDurationResolution";
                readonly nameLocation: "1817:28:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 3541;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1802:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3545;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1953:36:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3543;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1852:96:21";
                    readonly text: "@notice The minimum checkpoint duration that can be used by new\n         deployments.";
                };
                readonly functionSelector: "5720c9d5";
                readonly mutability: "mutable";
                readonly name: "minCheckpointDuration";
                readonly nameLocation: "1968:21:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 3544;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1953:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3548;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2097:36:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3546;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1996:96:21";
                    readonly text: "@notice The maximum checkpoint duration that can be used by new\n         deployments.";
                };
                readonly functionSelector: "e0e2daaa";
                readonly mutability: "mutable";
                readonly name: "maxCheckpointDuration";
                readonly nameLocation: "2112:21:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 3547;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2097:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3551;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2239:34:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3549;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2140:94:21";
                    readonly text: "@notice The minimum position duration that can be used by new\n         deployments.";
                };
                readonly functionSelector: "daf012e6";
                readonly mutability: "mutable";
                readonly name: "minPositionDuration";
                readonly nameLocation: "2254:19:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 3550;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2239:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3554;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2379:34:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3552;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2280:94:21";
                    readonly text: "@notice The maximum position duration that can be used by new\n         deployments.";
                };
                readonly functionSelector: "8efc0986";
                readonly mutability: "mutable";
                readonly name: "maxPositionDuration";
                readonly nameLocation: "2394:19:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 3553;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2379:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3557;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2495:26:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3555;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2420:70:21";
                    readonly text: "@notice The minimum fixed APR that can be used by new deployments.";
                };
                readonly functionSelector: "d23d7ea3";
                readonly mutability: "mutable";
                readonly name: "minFixedAPR";
                readonly nameLocation: "2510:11:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 3556;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2495:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3560;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2603:26:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3558;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2528:70:21";
                    readonly text: "@notice The maximum fixed APR that can be used by new deployments.";
                };
                readonly functionSelector: "bf9bd5cd";
                readonly mutability: "mutable";
                readonly name: "maxFixedAPR";
                readonly nameLocation: "2618:11:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 3559;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2603:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3563;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2718:32:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3561;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2636:77:21";
                    readonly text: "@notice The minimum time stretch APR that can be used by new deployments.";
                };
                readonly functionSelector: "d6f50169";
                readonly mutability: "mutable";
                readonly name: "minTimeStretchAPR";
                readonly nameLocation: "2733:17:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 3562;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2718:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3566;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2839:32:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3564;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2757:77:21";
                    readonly text: "@notice The maximum time stretch APR that can be used by new deployments.";
                };
                readonly functionSelector: "48800760";
                readonly mutability: "mutable";
                readonly name: "maxTimeStretchAPR";
                readonly nameLocation: "2854:17:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 3565;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2839:7:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3570;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2958:34:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3567;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2878:75:21";
                    readonly text: "@notice The minimum fee parameters that can be used by new deployments.";
                };
                readonly mutability: "mutable";
                readonly name: "_minFees";
                readonly nameLocation: "2984:8:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                    readonly typeString: "struct IHyperdrive.Fees";
                };
                readonly typeName: {
                    readonly id: 3569;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 3568;
                        readonly name: "IHyperdrive.Fees";
                        readonly nameLocations: readonly ["2958:11:21", "2970:4:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 7140;
                        readonly src: "2958:16:21";
                    };
                    readonly referencedDeclaration: 7140;
                    readonly src: "2958:16:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_struct$_Fees_$7140_storage_ptr";
                        readonly typeString: "struct IHyperdrive.Fees";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 3574;
                readonly nodeType: "VariableDeclaration";
                readonly src: "3079:34:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3571;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2999:75:21";
                    readonly text: "@notice The maximum fee parameters that can be used by new deployments.";
                };
                readonly mutability: "mutable";
                readonly name: "_maxFees";
                readonly nameLocation: "3105:8:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                    readonly typeString: "struct IHyperdrive.Fees";
                };
                readonly typeName: {
                    readonly id: 3573;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 3572;
                        readonly name: "IHyperdrive.Fees";
                        readonly nameLocations: readonly ["3079:11:21", "3091:4:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 7140;
                        readonly src: "3079:16:21";
                    };
                    readonly referencedDeclaration: 7140;
                    readonly src: "3079:16:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_struct$_Fees_$7140_storage_ptr";
                        readonly typeString: "struct IHyperdrive.Fees";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 3578;
                readonly nodeType: "VariableDeclaration";
                readonly src: "3193:34:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3575;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3120:68:21";
                    readonly text: "@notice The defaultPausers used when new instances are deployed.";
                };
                readonly mutability: "mutable";
                readonly name: "_defaultPausers";
                readonly nameLocation: "3212:15:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                    readonly typeString: "address[]";
                };
                readonly typeName: {
                    readonly baseType: {
                        readonly id: 3576;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3193:7:21";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly id: 3577;
                    readonly nodeType: "ArrayTypeName";
                    readonly src: "3193:9:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                        readonly typeString: "address[]";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 3633;
                readonly nodeType: "StructDefinition";
                readonly src: "3234:2005:21";
                readonly nodes: readonly [];
                readonly canonicalName: "HyperdriveFactory.FactoryConfig";
                readonly members: readonly [{
                    readonly constant: false;
                    readonly id: 3581;
                    readonly mutability: "mutable";
                    readonly name: "governance";
                    readonly nameLocation: "3330:10:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "3322:18:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                    readonly typeName: {
                        readonly id: 3580;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3322:7:21";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3584;
                    readonly mutability: "mutable";
                    readonly name: "hyperdriveGovernance";
                    readonly nameLocation: "3431:20:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "3423:28:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                    readonly typeName: {
                        readonly id: 3583;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3423:7:21";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3588;
                    readonly mutability: "mutable";
                    readonly name: "defaultPausers";
                    readonly nameLocation: "3553:14:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "3543:24:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                        readonly typeString: "address[]";
                    };
                    readonly typeName: {
                        readonly baseType: {
                            readonly id: 3586;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3543:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 3587;
                        readonly nodeType: "ArrayTypeName";
                        readonly src: "3543:9:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                            readonly typeString: "address[]";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3591;
                    readonly mutability: "mutable";
                    readonly name: "feeCollector";
                    readonly nameLocation: "3657:12:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "3649:20:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                    readonly typeName: {
                        readonly id: 3590;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3649:7:21";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3594;
                    readonly mutability: "mutable";
                    readonly name: "checkpointDurationResolution";
                    readonly nameLocation: "3748:28:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "3740:36:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 3593;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3740:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3597;
                    readonly mutability: "mutable";
                    readonly name: "minCheckpointDuration";
                    readonly nameLocation: "3897:21:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "3889:29:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 3596;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3889:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3600;
                    readonly mutability: "mutable";
                    readonly name: "maxCheckpointDuration";
                    readonly nameLocation: "4039:21:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "4031:29:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 3599;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4031:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3603;
                    readonly mutability: "mutable";
                    readonly name: "minPositionDuration";
                    readonly nameLocation: "4179:19:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "4171:27:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 3602;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4171:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3606;
                    readonly mutability: "mutable";
                    readonly name: "maxPositionDuration";
                    readonly nameLocation: "4317:19:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "4309:27:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 3605;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4309:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3609;
                    readonly mutability: "mutable";
                    readonly name: "minFixedAPR";
                    readonly nameLocation: "4430:11:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "4422:19:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 3608;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4422:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3612;
                    readonly mutability: "mutable";
                    readonly name: "maxFixedAPR";
                    readonly nameLocation: "4535:11:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "4527:19:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 3611;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4527:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3615;
                    readonly mutability: "mutable";
                    readonly name: "minTimeStretchAPR";
                    readonly nameLocation: "4664:17:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "4656:25:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 3614;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4656:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3618;
                    readonly mutability: "mutable";
                    readonly name: "maxTimeStretchAPR";
                    readonly nameLocation: "4799:17:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "4791:25:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 3617;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4791:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3622;
                    readonly mutability: "mutable";
                    readonly name: "minFees";
                    readonly nameLocation: "4925:7:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "4908:24:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_struct$_Fees_$7140_storage_ptr";
                        readonly typeString: "struct IHyperdrive.Fees";
                    };
                    readonly typeName: {
                        readonly id: 3621;
                        readonly nodeType: "UserDefinedTypeName";
                        readonly pathNode: {
                            readonly id: 3620;
                            readonly name: "IHyperdrive.Fees";
                            readonly nameLocations: readonly ["4908:11:21", "4920:4:21"];
                            readonly nodeType: "IdentifierPath";
                            readonly referencedDeclaration: 7140;
                            readonly src: "4908:16:21";
                        };
                        readonly referencedDeclaration: 7140;
                        readonly src: "4908:16:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$7140_storage_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3626;
                    readonly mutability: "mutable";
                    readonly name: "maxFees";
                    readonly nameLocation: "5041:7:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "5024:24:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_struct$_Fees_$7140_storage_ptr";
                        readonly typeString: "struct IHyperdrive.Fees";
                    };
                    readonly typeName: {
                        readonly id: 3625;
                        readonly nodeType: "UserDefinedTypeName";
                        readonly pathNode: {
                            readonly id: 3624;
                            readonly name: "IHyperdrive.Fees";
                            readonly nameLocations: readonly ["5024:11:21", "5036:4:21"];
                            readonly nodeType: "IdentifierPath";
                            readonly referencedDeclaration: 7140;
                            readonly src: "5024:16:21";
                        };
                        readonly referencedDeclaration: 7140;
                        readonly src: "5024:16:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$7140_storage_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3629;
                    readonly mutability: "mutable";
                    readonly name: "linkerFactory";
                    readonly nameLocation: "5118:13:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "5110:21:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                    readonly typeName: {
                        readonly id: 3628;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "5110:7:21";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 3632;
                    readonly mutability: "mutable";
                    readonly name: "linkerCodeHash";
                    readonly nameLocation: "5218:14:21";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 3633;
                    readonly src: "5210:22:21";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_bytes32";
                        readonly typeString: "bytes32";
                    };
                    readonly typeName: {
                        readonly id: 3631;
                        readonly name: "bytes32";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "5210:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                    };
                    readonly visibility: "internal";
                }];
                readonly name: "FactoryConfig";
                readonly nameLocation: "3241:13:21";
                readonly scope: 5331;
                readonly visibility: "public";
            }, {
                readonly id: 3637;
                readonly nodeType: "VariableDeclaration";
                readonly src: "5318:40:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3634;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "5245:68:21";
                    readonly text: "@dev List of all deployer coordinators registered by governance.";
                };
                readonly mutability: "mutable";
                readonly name: "_deployerCoordinators";
                readonly nameLocation: "5337:21:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                    readonly typeString: "address[]";
                };
                readonly typeName: {
                    readonly baseType: {
                        readonly id: 3635;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "5318:7:21";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly id: 3636;
                    readonly nodeType: "ArrayTypeName";
                    readonly src: "5318:9:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                        readonly typeString: "address[]";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 3642;
                readonly nodeType: "VariableDeclaration";
                readonly src: "5475:53:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3638;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "5365:105:21";
                    readonly text: "@notice Mapping to check if a deployer coordinator has been registered\n         by governance.";
                };
                readonly functionSelector: "f8c09e59";
                readonly mutability: "mutable";
                readonly name: "isDeployerCoordinator";
                readonly nameLocation: "5507:21:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                    readonly typeString: "mapping(address => bool)";
                };
                readonly typeName: {
                    readonly id: 3641;
                    readonly keyName: "";
                    readonly keyNameLocation: "-1:-1:-1";
                    readonly keyType: {
                        readonly id: 3639;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "5483:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly nodeType: "Mapping";
                    readonly src: "5475:24:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                        readonly typeString: "mapping(address => bool)";
                    };
                    readonly valueName: "";
                    readonly valueNameLocation: "-1:-1:-1";
                    readonly valueType: {
                        readonly id: 3640;
                        readonly name: "bool";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "5494:4:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3647;
                readonly nodeType: "VariableDeclaration";
                readonly src: "5755:101:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3643;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "5535:215:21";
                    readonly text: "@notice A mapping from deployed Hyperdrive instances to the deployer\n         coordintor that deployed them. This is useful for verifying\n         the bytecode that was used to deploy the instance.";
                };
                readonly functionSelector: "6c8cc865";
                readonly mutability: "mutable";
                readonly name: "instancesToDeployerCoordinators";
                readonly nameLocation: "5825:31:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_mapping$_t_address_$_t_address_$";
                    readonly typeString: "mapping(address => address)";
                };
                readonly typeName: {
                    readonly id: 3646;
                    readonly keyName: "instance";
                    readonly keyNameLocation: "5771:8:21";
                    readonly keyType: {
                        readonly id: 3644;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "5763:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly nodeType: "Mapping";
                    readonly src: "5755:54:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_mapping$_t_address_$_t_address_$";
                        readonly typeString: "mapping(address => address)";
                    };
                    readonly valueName: "deployCoordinator";
                    readonly valueNameLocation: "5791:17:21";
                    readonly valueType: {
                        readonly id: 3645;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "5783:7:21";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3651;
                readonly nodeType: "VariableDeclaration";
                readonly src: "5925:29:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3648;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "5863:57:21";
                    readonly text: "@dev Array of all instances deployed by this factory.";
                };
                readonly mutability: "mutable";
                readonly name: "_instances";
                readonly nameLocation: "5944:10:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                    readonly typeString: "address[]";
                };
                readonly typeName: {
                    readonly baseType: {
                        readonly id: 3649;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "5925:7:21";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly id: 3650;
                    readonly nodeType: "ArrayTypeName";
                    readonly src: "5925:9:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                        readonly typeString: "address[]";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 3656;
                readonly nodeType: "VariableDeclaration";
                readonly src: "6034:42:21";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3652;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "5961:68:21";
                    readonly text: "@dev Mapping to check if an instance is in the _instances array.";
                };
                readonly functionSelector: "6b44e6be";
                readonly mutability: "mutable";
                readonly name: "isInstance";
                readonly nameLocation: "6066:10:21";
                readonly scope: 5331;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                    readonly typeString: "mapping(address => bool)";
                };
                readonly typeName: {
                    readonly id: 3655;
                    readonly keyName: "";
                    readonly keyNameLocation: "-1:-1:-1";
                    readonly keyType: {
                        readonly id: 3653;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "6042:7:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly nodeType: "Mapping";
                    readonly src: "6034:24:21";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                        readonly typeString: "mapping(address => bool)";
                    };
                    readonly valueName: "";
                    readonly valueNameLocation: "-1:-1:-1";
                    readonly valueType: {
                        readonly id: 3654;
                        readonly name: "bool";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "6053:4:21";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3921;
                readonly nodeType: "FunctionDefinition";
                readonly src: "6195:4766:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3920;
                    readonly nodeType: "Block";
                    readonly src: "6244:4717:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 3675;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 3667;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 3663;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3660;
                                        readonly src: "6468:14:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 3664;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "6483:21:21";
                                    readonly memberName: "minCheckpointDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 3597;
                                    readonly src: "6468:36:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 3665;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3660;
                                        readonly src: "6519:14:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 3666;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "6534:28:21";
                                    readonly memberName: "checkpointDurationResolution";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 3594;
                                    readonly src: "6519:43:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "6468:94:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 3674;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 3672;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 3668;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "6578:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3669;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "6593:21:21";
                                        readonly memberName: "minCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3597;
                                        readonly src: "6578:36:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 3670;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "6633:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3671;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "6648:28:21";
                                        readonly memberName: "checkpointDurationResolution";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3594;
                                        readonly src: "6633:43:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "6578:98:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 3673;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "6692:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "6578:115:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "6468:225:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3682;
                        readonly nodeType: "IfStatement";
                        readonly src: "6451:334:21";
                        readonly trueBody: {
                            readonly id: 3681;
                            readonly nodeType: "Block";
                            readonly src: "6704:81:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3676;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "6725:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 3678;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "6744:28:21";
                                        readonly memberName: "InvalidMinCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7942;
                                        readonly src: "6725:47:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3679;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6725:49:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3680;
                                readonly nodeType: "RevertStatement";
                                readonly src: "6718:56:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 3686;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3683;
                                readonly name: "minCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3545;
                                readonly src: "6794:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3684;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "6818:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3685;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "6833:21:21";
                                readonly memberName: "minCheckpointDuration";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3597;
                                readonly src: "6818:36:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "6794:60:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 3687;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "6794:60:21";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 3700;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 3692;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 3688;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3660;
                                        readonly src: "7076:14:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 3689;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "7091:21:21";
                                    readonly memberName: "maxCheckpointDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 3600;
                                    readonly src: "7076:36:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 3690;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3660;
                                        readonly src: "7127:14:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 3691;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "7142:21:21";
                                    readonly memberName: "minCheckpointDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 3597;
                                    readonly src: "7127:36:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "7076:87:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 3699;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 3697;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 3693;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "7179:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3694;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "7194:21:21";
                                        readonly memberName: "maxCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3600;
                                        readonly src: "7179:36:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 3695;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "7234:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3696;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "7249:28:21";
                                        readonly memberName: "checkpointDurationResolution";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3594;
                                        readonly src: "7234:43:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "7179:98:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 3698;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "7293:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "7179:115:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "7076:218:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3707;
                        readonly nodeType: "IfStatement";
                        readonly src: "7059:327:21";
                        readonly trueBody: {
                            readonly id: 3706;
                            readonly nodeType: "Block";
                            readonly src: "7305:81:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3701;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "7326:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 3703;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "7345:28:21";
                                        readonly memberName: "InvalidMaxCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7940;
                                        readonly src: "7326:47:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3704;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7326:49:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3705;
                                readonly nodeType: "RevertStatement";
                                readonly src: "7319:56:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 3711;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3708;
                                readonly name: "maxCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3548;
                                readonly src: "7395:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3709;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "7419:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3710;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "7434:21:21";
                                readonly memberName: "maxCheckpointDuration";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3600;
                                readonly src: "7419:36:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "7395:60:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 3712;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "7395:60:21";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 3725;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 3717;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 3713;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3660;
                                        readonly src: "7675:14:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 3714;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "7690:19:21";
                                    readonly memberName: "minPositionDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 3603;
                                    readonly src: "7675:34:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 3715;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3660;
                                        readonly src: "7724:14:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 3716;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "7739:21:21";
                                    readonly memberName: "maxCheckpointDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 3600;
                                    readonly src: "7724:36:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "7675:85:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 3724;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 3722;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 3718;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "7776:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3719;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "7791:19:21";
                                        readonly memberName: "minPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3603;
                                        readonly src: "7776:34:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 3720;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "7829:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3721;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "7844:28:21";
                                        readonly memberName: "checkpointDurationResolution";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3594;
                                        readonly src: "7829:43:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "7776:96:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 3723;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "7888:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "7776:113:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "7675:214:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3732;
                        readonly nodeType: "IfStatement";
                        readonly src: "7658:321:21";
                        readonly trueBody: {
                            readonly id: 3731;
                            readonly nodeType: "Block";
                            readonly src: "7900:79:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3726;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "7921:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 3728;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "7940:26:21";
                                        readonly memberName: "InvalidMinPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7946;
                                        readonly src: "7921:45:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3729;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7921:47:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3730;
                                readonly nodeType: "RevertStatement";
                                readonly src: "7914:54:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 3736;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3733;
                                readonly name: "minPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3551;
                                readonly src: "7988:19:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3734;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "8010:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3735;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8025:19:21";
                                readonly memberName: "minPositionDuration";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3603;
                                readonly src: "8010:34:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "7988:56:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 3737;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "7988:56:21";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 3750;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 3742;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 3738;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3660;
                                        readonly src: "8262:14:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 3739;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "8277:19:21";
                                    readonly memberName: "maxPositionDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 3606;
                                    readonly src: "8262:34:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 3740;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3660;
                                        readonly src: "8311:14:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 3741;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "8326:19:21";
                                    readonly memberName: "minPositionDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 3603;
                                    readonly src: "8311:34:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "8262:83:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 3749;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 3747;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 3743;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "8361:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3744;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "8376:19:21";
                                        readonly memberName: "maxPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3606;
                                        readonly src: "8361:34:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 3745;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "8414:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3746;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "8429:28:21";
                                        readonly memberName: "checkpointDurationResolution";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3594;
                                        readonly src: "8414:43:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "8361:96:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 3748;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "8473:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "8361:113:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "8262:212:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3757;
                        readonly nodeType: "IfStatement";
                        readonly src: "8245:319:21";
                        readonly trueBody: {
                            readonly id: 3756;
                            readonly nodeType: "Block";
                            readonly src: "8485:79:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3751;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "8506:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 3753;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "8525:26:21";
                                        readonly memberName: "InvalidMaxPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7944;
                                        readonly src: "8506:45:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3754;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8506:47:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3755;
                                readonly nodeType: "RevertStatement";
                                readonly src: "8499:54:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 3761;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3758;
                                readonly name: "maxPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3554;
                                readonly src: "8573:19:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3759;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "8595:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3760;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8610:19:21";
                                readonly memberName: "maxPositionDuration";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3606;
                                readonly src: "8595:34:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8573:56:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 3762;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "8573:56:21";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 3767;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 3763;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "8748:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3764;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8763:11:21";
                                readonly memberName: "minFixedAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3609;
                                readonly src: "8748:26:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 3765;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "8777:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3766;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8792:11:21";
                                readonly memberName: "maxFixedAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3612;
                                readonly src: "8777:26:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8748:55:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3774;
                        readonly nodeType: "IfStatement";
                        readonly src: "8744:129:21";
                        readonly trueBody: {
                            readonly id: 3773;
                            readonly nodeType: "Block";
                            readonly src: "8805:68:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3768;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "8826:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 3770;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "8845:15:21";
                                        readonly memberName: "InvalidFixedAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7954;
                                        readonly src: "8826:34:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3771;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8826:36:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3772;
                                readonly nodeType: "RevertStatement";
                                readonly src: "8819:43:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 3778;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3775;
                                readonly name: "minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3557;
                                readonly src: "8882:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3776;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "8896:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3777;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8911:11:21";
                                readonly memberName: "minFixedAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3609;
                                readonly src: "8896:26:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8882:40:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 3779;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "8882:40:21";
                    }, {
                        readonly expression: {
                            readonly id: 3783;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3780;
                                readonly name: "maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3560;
                                readonly src: "8932:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3781;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "8946:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3782;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8961:11:21";
                                readonly memberName: "maxFixedAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3612;
                                readonly src: "8946:26:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8932:40:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 3784;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "8932:40:21";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 3789;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 3785;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "9118:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3786;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9133:17:21";
                                readonly memberName: "minTimeStretchAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3615;
                                readonly src: "9118:32:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 3787;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "9153:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3788;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9168:17:21";
                                readonly memberName: "maxTimeStretchAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3618;
                                readonly src: "9153:32:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9118:67:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3796;
                        readonly nodeType: "IfStatement";
                        readonly src: "9101:169:21";
                        readonly trueBody: {
                            readonly id: 3795;
                            readonly nodeType: "Block";
                            readonly src: "9196:74:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3790;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "9217:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 3792;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "9236:21:21";
                                        readonly memberName: "InvalidTimeStretchAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7960;
                                        readonly src: "9217:40:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3793;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9217:42:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3794;
                                readonly nodeType: "RevertStatement";
                                readonly src: "9210:49:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 3800;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3797;
                                readonly name: "minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3563;
                                readonly src: "9279:17:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3798;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "9299:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3799;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9314:17:21";
                                readonly memberName: "minTimeStretchAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3615;
                                readonly src: "9299:32:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9279:52:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 3801;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "9279:52:21";
                    }, {
                        readonly expression: {
                            readonly id: 3805;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3802;
                                readonly name: "maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3566;
                                readonly src: "9341:17:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3803;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "9361:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3804;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9376:17:21";
                                readonly memberName: "maxTimeStretchAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3618;
                                readonly src: "9361:32:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9341:52:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 3806;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "9341:52:21";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 3829;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 3823;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 3817;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 3811;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 3807;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 3660;
                                                    readonly src: "9522:14:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 3808;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "9537:7:21";
                                                readonly memberName: "maxFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 3626;
                                                readonly src: "9522:22:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 3809;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "9545:5:21";
                                            readonly memberName: "curve";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7130;
                                            readonly src: "9522:28:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly id: 3810;
                                            readonly name: "ONE";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 13529;
                                            readonly src: "9553:3:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "9522:34:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 3816;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 3812;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 3660;
                                                    readonly src: "9572:14:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 3813;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "9587:7:21";
                                                readonly memberName: "maxFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 3626;
                                                readonly src: "9572:22:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 3814;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "9595:4:21";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7133;
                                            readonly src: "9572:27:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly id: 3815;
                                            readonly name: "ONE";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 13529;
                                            readonly src: "9602:3:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "9572:33:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "9522:83:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 3822;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly expression: {
                                                readonly id: 3818;
                                                readonly name: "_factoryConfig";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 3660;
                                                readonly src: "9621:14:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                    readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                };
                                            };
                                            readonly id: 3819;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "9636:7:21";
                                            readonly memberName: "maxFees";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 3626;
                                            readonly src: "9621:22:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                            };
                                        };
                                        readonly id: 3820;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "9644:12:21";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7136;
                                        readonly src: "9621:35:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: ">";
                                    readonly rightExpression: {
                                        readonly id: 3821;
                                        readonly name: "ONE";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 13529;
                                        readonly src: "9659:3:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "9621:41:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "9522:140:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 3828;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly expression: {
                                            readonly id: 3824;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "9678:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3825;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "9693:7:21";
                                        readonly memberName: "maxFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3626;
                                        readonly src: "9678:22:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                        };
                                    };
                                    readonly id: 3826;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "9701:16:21";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7139;
                                    readonly src: "9678:39:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly id: 3827;
                                    readonly name: "ONE";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 13529;
                                    readonly src: "9720:3:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "9678:45:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "9522:201:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3836;
                        readonly nodeType: "IfStatement";
                        readonly src: "9505:296:21";
                        readonly trueBody: {
                            readonly id: 3835;
                            readonly nodeType: "Block";
                            readonly src: "9734:67:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3830;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "9755:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 3832;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "9774:14:21";
                                        readonly memberName: "InvalidMaxFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7936;
                                        readonly src: "9755:33:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3833;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9755:35:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3834;
                                readonly nodeType: "RevertStatement";
                                readonly src: "9748:42:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 3840;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3837;
                                readonly name: "_maxFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3574;
                                readonly src: "9810:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3838;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "9821:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3839;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9836:7:21";
                                readonly memberName: "maxFees";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3626;
                                readonly src: "9821:22:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                };
                            };
                            readonly src: "9810:33:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly id: 3841;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "9810:33:21";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 3872;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 3864;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 3856;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 3848;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 3842;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 3660;
                                                    readonly src: "10015:14:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 3843;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "10030:7:21";
                                                readonly memberName: "minFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 3622;
                                                readonly src: "10015:22:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 3844;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "10038:5:21";
                                            readonly memberName: "curve";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7130;
                                            readonly src: "10015:28:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 3845;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 3660;
                                                    readonly src: "10046:14:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 3846;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "10061:7:21";
                                                readonly memberName: "maxFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 3626;
                                                readonly src: "10046:22:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 3847;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "10069:5:21";
                                            readonly memberName: "curve";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7130;
                                            readonly src: "10046:28:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "10015:59:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 3855;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 3849;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 3660;
                                                    readonly src: "10090:14:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 3850;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "10105:7:21";
                                                readonly memberName: "minFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 3622;
                                                readonly src: "10090:22:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 3851;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "10113:4:21";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7133;
                                            readonly src: "10090:27:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 3852;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 3660;
                                                    readonly src: "10120:14:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 3853;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "10135:7:21";
                                                readonly memberName: "maxFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 3626;
                                                readonly src: "10120:22:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 3854;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "10143:4:21";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7133;
                                            readonly src: "10120:27:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "10090:57:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "10015:132:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 3863;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly expression: {
                                                readonly id: 3857;
                                                readonly name: "_factoryConfig";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 3660;
                                                readonly src: "10163:14:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                    readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                };
                                            };
                                            readonly id: 3858;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "10178:7:21";
                                            readonly memberName: "minFees";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 3622;
                                            readonly src: "10163:22:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                            };
                                        };
                                        readonly id: 3859;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "10186:12:21";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7136;
                                        readonly src: "10163:35:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: ">";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly expression: {
                                                readonly id: 3860;
                                                readonly name: "_factoryConfig";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 3660;
                                                readonly src: "10213:14:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                    readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                };
                                            };
                                            readonly id: 3861;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "10228:7:21";
                                            readonly memberName: "maxFees";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 3626;
                                            readonly src: "10213:22:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                            };
                                        };
                                        readonly id: 3862;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "10236:12:21";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7136;
                                        readonly src: "10213:35:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "10163:85:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "10015:233:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 3871;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly expression: {
                                            readonly id: 3865;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "10264:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3866;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "10279:7:21";
                                        readonly memberName: "minFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3622;
                                        readonly src: "10264:22:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                        };
                                    };
                                    readonly id: 3867;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "10287:16:21";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7139;
                                    readonly src: "10264:39:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly expression: {
                                            readonly id: 3868;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3660;
                                            readonly src: "10318:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 3869;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "10333:7:21";
                                        readonly memberName: "maxFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 3626;
                                        readonly src: "10318:22:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                        };
                                    };
                                    readonly id: 3870;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "10341:16:21";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7139;
                                    readonly src: "10318:39:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "10264:93:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "10015:342:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3879;
                        readonly nodeType: "IfStatement";
                        readonly src: "9998:437:21";
                        readonly trueBody: {
                            readonly id: 3878;
                            readonly nodeType: "Block";
                            readonly src: "10368:67:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3873;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "10389:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 3875;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "10408:14:21";
                                        readonly memberName: "InvalidMinFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7938;
                                        readonly src: "10389:33:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3876;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10389:35:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3877;
                                readonly nodeType: "RevertStatement";
                                readonly src: "10382:42:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 3883;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3880;
                                readonly name: "_minFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3570;
                                readonly src: "10444:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3881;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "10455:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3882;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10470:7:21";
                                readonly memberName: "minFees";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3622;
                                readonly src: "10455:22:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                };
                            };
                            readonly src: "10444:33:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly id: 3884;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10444:33:21";
                    }, {
                        readonly expression: {
                            readonly id: 3888;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3885;
                                readonly name: "governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3527;
                                readonly src: "10532:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3886;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "10545:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3887;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10560:10:21";
                                readonly memberName: "governance";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3581;
                                readonly src: "10545:25:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "10532:38:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 3889;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10532:38:21";
                    }, {
                        readonly expression: {
                            readonly id: 3893;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3890;
                                readonly name: "hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3530;
                                readonly src: "10580:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3891;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "10603:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3892;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10618:20:21";
                                readonly memberName: "hyperdriveGovernance";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3584;
                                readonly src: "10603:35:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "10580:58:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 3894;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10580:58:21";
                    }, {
                        readonly expression: {
                            readonly id: 3898;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3895;
                                readonly name: "feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3539;
                                readonly src: "10648:12:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3896;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "10663:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3897;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10678:12:21";
                                readonly memberName: "feeCollector";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3591;
                                readonly src: "10663:27:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "10648:42:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 3899;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10648:42:21";
                    }, {
                        readonly expression: {
                            readonly id: 3903;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3900;
                                readonly name: "_defaultPausers";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3578;
                                readonly src: "10700:15:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3901;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "10718:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3902;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10733:14:21";
                                readonly memberName: "defaultPausers";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3588;
                                readonly src: "10718:29:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                    readonly typeString: "address[] memory";
                                };
                            };
                            readonly src: "10700:47:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                readonly typeString: "address[] storage ref";
                            };
                        };
                        readonly id: 3904;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10700:47:21";
                    }, {
                        readonly expression: {
                            readonly id: 3908;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3905;
                                readonly name: "linkerFactory";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3533;
                                readonly src: "10757:13:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3906;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "10773:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3907;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10788:13:21";
                                readonly memberName: "linkerFactory";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3629;
                                readonly src: "10773:28:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "10757:44:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 3909;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10757:44:21";
                    }, {
                        readonly expression: {
                            readonly id: 3913;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3910;
                                readonly name: "linkerCodeHash";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3536;
                                readonly src: "10811:14:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3911;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "10828:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3912;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10843:14:21";
                                readonly memberName: "linkerCodeHash";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3632;
                                readonly src: "10828:29:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "10811:46:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly id: 3914;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10811:46:21";
                    }, {
                        readonly expression: {
                            readonly id: 3918;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3915;
                                readonly name: "checkpointDurationResolution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3542;
                                readonly src: "10867:28:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 3916;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3660;
                                    readonly src: "10898:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 3917;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10926:28:21";
                                readonly memberName: "checkpointDurationResolution";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 3594;
                                readonly src: "10898:56:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10867:87:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 3919;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10867:87:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 3657;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "6083:107:21";
                    readonly text: "@notice Initializes the factory.\n @param _factoryConfig Configuration of the Hyperdrive Factory.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 3661;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3660;
                        readonly mutability: "mutable";
                        readonly name: "_factoryConfig";
                        readonly nameLocation: "6228:14:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3921;
                        readonly src: "6207:35:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_memory_ptr";
                            readonly typeString: "struct HyperdriveFactory.FactoryConfig";
                        };
                        readonly typeName: {
                            readonly id: 3659;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3658;
                                readonly name: "FactoryConfig";
                                readonly nameLocations: readonly ["6207:13:21"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 3633;
                                readonly src: "6207:13:21";
                            };
                            readonly referencedDeclaration: 3633;
                            readonly src: "6207:13:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_FactoryConfig_$3633_storage_ptr";
                                readonly typeString: "struct HyperdriveFactory.FactoryConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "6206:37:21";
                };
                readonly returnParameters: {
                    readonly id: 3662;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "6244:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 3937;
                readonly nodeType: "ModifierDefinition";
                readonly src: "11030:148:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3936;
                    readonly nodeType: "Block";
                    readonly src: "11056:122:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly id: 3927;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 3924;
                                    readonly name: "msg";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -15;
                                    readonly src: "11070:3:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_magic_message";
                                        readonly typeString: "msg";
                                    };
                                };
                                readonly id: 3925;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11074:6:21";
                                readonly memberName: "sender";
                                readonly nodeType: "MemberAccess";
                                readonly src: "11070:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 3926;
                                readonly name: "governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3527;
                                readonly src: "11084:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "11070:24:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3934;
                        readonly nodeType: "IfStatement";
                        readonly src: "11066:95:21";
                        readonly trueBody: {
                            readonly id: 3933;
                            readonly nodeType: "Block";
                            readonly src: "11096:65:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3928;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "11117:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 3930;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "11136:12:21";
                                        readonly memberName: "Unauthorized";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7964;
                                        readonly src: "11117:31:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3931;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11117:33:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3932;
                                readonly nodeType: "RevertStatement";
                                readonly src: "11110:40:21";
                            }];
                        };
                    }, {
                        readonly id: 3935;
                        readonly nodeType: "PlaceholderStatement";
                        readonly src: "11170:1:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 3922;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "10967:58:21";
                    readonly text: "@dev Ensure that the sender is the governance address.";
                };
                readonly name: "onlyGovernance";
                readonly nameLocation: "11039:14:21";
                readonly parameters: {
                    readonly id: 3923;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "11053:2:21";
                };
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 3954;
                readonly nodeType: "FunctionDefinition";
                readonly src: "11306:157:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3953;
                    readonly nodeType: "Block";
                    readonly src: "11377:86:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 3947;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3945;
                                readonly name: "governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3527;
                                readonly src: "11387:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 3946;
                                readonly name: "_governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3940;
                                readonly src: "11400:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "11387:24:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 3948;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11387:24:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 3950;
                                readonly name: "_governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3940;
                                readonly src: "11444:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 3949;
                                readonly name: "GovernanceUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7851;
                                readonly src: "11426:17:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 3951;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "11426:30:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 3952;
                        readonly nodeType: "EmitStatement";
                        readonly src: "11421:35:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 3938;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "11184:117:21";
                    readonly text: "@notice Allows governance to transfer the governance role.\n @param _governance The new governance address.";
                };
                readonly functionSelector: "b2561263";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 3943;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 3942;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["11362:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "11362:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "11362:14:21";
                }];
                readonly name: "updateGovernance";
                readonly nameLocation: "11315:16:21";
                readonly parameters: {
                    readonly id: 3941;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3940;
                        readonly mutability: "mutable";
                        readonly name: "_governance";
                        readonly nameLocation: "11340:11:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3954;
                        readonly src: "11332:19:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3939;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11332:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "11331:21:21";
                };
                readonly returnParameters: {
                    readonly id: 3944;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "11377:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 3971;
                readonly nodeType: "FunctionDefinition";
                readonly src: "11623:231:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3970;
                    readonly nodeType: "Block";
                    readonly src: "11728:126:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 3964;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3962;
                                readonly name: "hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3530;
                                readonly src: "11738:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 3963;
                                readonly name: "_hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3957;
                                readonly src: "11761:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "11738:44:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 3965;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11738:44:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 3967;
                                readonly name: "_hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3957;
                                readonly src: "11825:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 3966;
                                readonly name: "HyperdriveGovernanceUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7855;
                                readonly src: "11797:27:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 3968;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "11797:50:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 3969;
                        readonly nodeType: "EmitStatement";
                        readonly src: "11792:55:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 3955;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "11469:149:21";
                    readonly text: "@notice Allows governance to change the hyperdrive governance address\n @param _hyperdriveGovernance The new hyperdrive governance address.";
                };
                readonly functionSelector: "dd2b8fbb";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 3960;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 3959;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["11713:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "11713:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "11713:14:21";
                }];
                readonly name: "updateHyperdriveGovernance";
                readonly nameLocation: "11632:26:21";
                readonly parameters: {
                    readonly id: 3958;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3957;
                        readonly mutability: "mutable";
                        readonly name: "_hyperdriveGovernance";
                        readonly nameLocation: "11676:21:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3971;
                        readonly src: "11668:29:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3956;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11668:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "11658:45:21";
                };
                readonly returnParameters: {
                    readonly id: 3961;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "11728:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 3988;
                readonly nodeType: "FunctionDefinition";
                readonly src: "11978:189:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3987;
                    readonly nodeType: "Block";
                    readonly src: "12069:98:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 3981;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3979;
                                readonly name: "linkerFactory";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3533;
                                readonly src: "12079:13:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 3980;
                                readonly name: "_linkerFactory";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3974;
                                readonly src: "12095:14:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "12079:30:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 3982;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12079:30:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 3984;
                                readonly name: "_linkerFactory";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3974;
                                readonly src: "12145:14:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 3983;
                                readonly name: "LinkerFactoryUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7863;
                                readonly src: "12124:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 3985;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12124:36:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 3986;
                        readonly nodeType: "EmitStatement";
                        readonly src: "12119:41:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 3972;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "11860:113:21";
                    readonly text: "@notice Allows governance to change the linker factory.\n @param _linkerFactory The new linker factory.";
                };
                readonly functionSelector: "85229785";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 3977;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 3976;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["12054:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "12054:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "12054:14:21";
                }];
                readonly name: "updateLinkerFactory";
                readonly nameLocation: "11987:19:21";
                readonly parameters: {
                    readonly id: 3975;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3974;
                        readonly mutability: "mutable";
                        readonly name: "_linkerFactory";
                        readonly nameLocation: "12024:14:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3988;
                        readonly src: "12016:22:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3973;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12016:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12006:38:21";
                };
                readonly returnParameters: {
                    readonly id: 3978;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12069:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4005;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12387:195:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4004;
                    readonly nodeType: "Block";
                    readonly src: "12480:102:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 3998;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3996;
                                readonly name: "linkerCodeHash";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3536;
                                readonly src: "12490:14:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 3997;
                                readonly name: "_linkerCodeHash";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3991;
                                readonly src: "12507:15:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "12490:32:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly id: 3999;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12490:32:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4001;
                                readonly name: "_linkerCodeHash";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3991;
                                readonly src: "12559:15:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                }];
                                readonly id: 4000;
                                readonly name: "LinkerCodeHashUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7867;
                                readonly src: "12537:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_bytes32_$returns$__$";
                                    readonly typeString: "function (bytes32)";
                                };
                            };
                            readonly id: 4002;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12537:38:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4003;
                        readonly nodeType: "EmitStatement";
                        readonly src: "12532:43:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 3989;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "12173:209:21";
                    readonly text: "@notice Allows governance to change the linker code hash. This allows\n         governance to update the implementation of the ERC20Forwarder.\n @param _linkerCodeHash The new linker code hash.";
                };
                readonly functionSelector: "4fbfee77";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 3994;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 3993;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["12465:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "12465:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "12465:14:21";
                }];
                readonly name: "updateLinkerCodeHash";
                readonly nameLocation: "12396:20:21";
                readonly parameters: {
                    readonly id: 3992;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3991;
                        readonly mutability: "mutable";
                        readonly name: "_linkerCodeHash";
                        readonly nameLocation: "12434:15:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4005;
                        readonly src: "12426:23:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 3990;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12426:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12416:39:21";
                };
                readonly returnParameters: {
                    readonly id: 3995;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12480:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4022;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12719:169:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4021;
                    readonly nodeType: "Block";
                    readonly src: "12794:94:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 4015;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4013;
                                readonly name: "feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3539;
                                readonly src: "12804:12:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4014;
                                readonly name: "_feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4008;
                                readonly src: "12819:13:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "12804:28:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 4016;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12804:28:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4018;
                                readonly name: "_feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4008;
                                readonly src: "12867:13:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 4017;
                                readonly name: "FeeCollectorUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7847;
                                readonly src: "12847:19:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 4019;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12847:34:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4020;
                        readonly nodeType: "EmitStatement";
                        readonly src: "12842:39:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4006;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "12588:126:21";
                    readonly text: "@notice Allows governance to change the fee collector address.\n @param _feeCollector The new fee collector address.";
                };
                readonly functionSelector: "d2c35ce8";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4011;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4010;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["12779:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "12779:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "12779:14:21";
                }];
                readonly name: "updateFeeCollector";
                readonly nameLocation: "12728:18:21";
                readonly parameters: {
                    readonly id: 4009;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4008;
                        readonly mutability: "mutable";
                        readonly name: "_feeCollector";
                        readonly nameLocation: "12755:13:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4022;
                        readonly src: "12747:21:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 4007;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12747:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12746:23:21";
                };
                readonly returnParameters: {
                    readonly id: 4012;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12794:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4069;
                readonly nodeType: "FunctionDefinition";
                readonly src: "13074:974:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4068;
                    readonly nodeType: "Block";
                    readonly src: "13195:853:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 4052;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 4046;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 4040;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4034;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                            readonly id: 4032;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly id: 4030;
                                                readonly name: "minCheckpointDuration";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 3545;
                                                readonly src: "13443:21:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "%";
                                            readonly rightExpression: {
                                                readonly id: 4031;
                                                readonly name: "_checkpointDurationResolution";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 4025;
                                                readonly src: "13467:29:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly src: "13443:53:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "!=";
                                        readonly rightExpression: {
                                            readonly hexValue: "30";
                                            readonly id: 4033;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "13500:1:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_0_by_1";
                                                readonly typeString: "int_const 0";
                                            };
                                            readonly value: "0";
                                        };
                                        readonly src: "13443:58:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4039;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                            readonly id: 4037;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly id: 4035;
                                                readonly name: "maxCheckpointDuration";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 3548;
                                                readonly src: "13517:21:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "%";
                                            readonly rightExpression: {
                                                readonly id: 4036;
                                                readonly name: "_checkpointDurationResolution";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 4025;
                                                readonly src: "13541:29:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly src: "13517:53:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "!=";
                                        readonly rightExpression: {
                                            readonly hexValue: "30";
                                            readonly id: 4038;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "13574:1:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_0_by_1";
                                                readonly typeString: "int_const 0";
                                            };
                                            readonly value: "0";
                                        };
                                        readonly src: "13517:58:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "13443:132:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4045;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4043;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 4041;
                                            readonly name: "minPositionDuration";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3551;
                                            readonly src: "13591:19:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "%";
                                        readonly rightExpression: {
                                            readonly id: 4042;
                                            readonly name: "_checkpointDurationResolution";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4025;
                                            readonly src: "13613:29:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "13591:51:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "!=";
                                    readonly rightExpression: {
                                        readonly hexValue: "30";
                                        readonly id: 4044;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13646:1:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_0_by_1";
                                            readonly typeString: "int_const 0";
                                        };
                                        readonly value: "0";
                                    };
                                    readonly src: "13591:56:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "13443:204:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 4051;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4049;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly id: 4047;
                                        readonly name: "maxPositionDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3554;
                                        readonly src: "13663:19:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly id: 4048;
                                        readonly name: "_checkpointDurationResolution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4025;
                                        readonly src: "13685:29:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "13663:51:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 4050;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "13718:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "13663:56:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "13443:276:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4059;
                        readonly nodeType: "IfStatement";
                        readonly src: "13426:392:21";
                        readonly trueBody: {
                            readonly id: 4058;
                            readonly nodeType: "Block";
                            readonly src: "13730:88:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4053;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "13751:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4055;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "13770:35:21";
                                        readonly memberName: "InvalidCheckpointDurationResolution";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7926;
                                        readonly src: "13751:54:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4056;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13751:56:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4057;
                                readonly nodeType: "RevertStatement";
                                readonly src: "13744:63:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4062;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4060;
                                readonly name: "checkpointDurationResolution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3542;
                                readonly src: "13900:28:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4061;
                                readonly name: "_checkpointDurationResolution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4025;
                                readonly src: "13931:29:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "13900:60:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 4063;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "13900:60:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4065;
                                readonly name: "_checkpointDurationResolution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4025;
                                readonly src: "14011:29:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4064;
                                readonly name: "CheckpointDurationResolutionUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7871;
                                readonly src: "13975:35:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 4066;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "13975:66:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4067;
                        readonly nodeType: "EmitStatement";
                        readonly src: "13970:71:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4023;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "12894:175:21";
                    readonly text: "@notice Allows governance to change the checkpoint duration resolution.\n @param _checkpointDurationResolution The new checkpoint duration\n        resolution.";
                };
                readonly functionSelector: "11e77bfe";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4028;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4027;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["13180:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "13180:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "13180:14:21";
                }];
                readonly name: "updateCheckpointDurationResolution";
                readonly nameLocation: "13083:34:21";
                readonly parameters: {
                    readonly id: 4026;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4025;
                        readonly mutability: "mutable";
                        readonly name: "_checkpointDurationResolution";
                        readonly nameLocation: "13135:29:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4069;
                        readonly src: "13127:37:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4024;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "13127:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "13117:53:21";
                };
                readonly returnParameters: {
                    readonly id: 4029;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "13195:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4106;
                readonly nodeType: "FunctionDefinition";
                readonly src: "14206:926:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4105;
                    readonly nodeType: "Block";
                    readonly src: "14313:819:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 4089;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 4085;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4079;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly id: 4077;
                                        readonly name: "_maxCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4072;
                                        readonly src: "14661:22:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 4078;
                                        readonly name: "minCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3545;
                                        readonly src: "14686:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "14661:46:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4084;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4082;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 4080;
                                            readonly name: "_maxCheckpointDuration";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4072;
                                            readonly src: "14723:22:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "%";
                                        readonly rightExpression: {
                                            readonly id: 4081;
                                            readonly name: "checkpointDurationResolution";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3542;
                                            readonly src: "14748:28:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "14723:53:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "!=";
                                    readonly rightExpression: {
                                        readonly hexValue: "30";
                                        readonly id: 4083;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "14780:1:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_0_by_1";
                                            readonly typeString: "int_const 0";
                                        };
                                        readonly value: "0";
                                    };
                                    readonly src: "14723:58:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "14661:120:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 4088;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 4086;
                                    readonly name: "_maxCheckpointDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4072;
                                    readonly src: "14797:22:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly id: 4087;
                                    readonly name: "minPositionDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3551;
                                    readonly src: "14822:19:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "14797:44:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "14661:180:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4096;
                        readonly nodeType: "IfStatement";
                        readonly src: "14644:289:21";
                        readonly trueBody: {
                            readonly id: 4095;
                            readonly nodeType: "Block";
                            readonly src: "14852:81:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4090;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "14873:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4092;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "14892:28:21";
                                        readonly memberName: "InvalidMaxCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7940;
                                        readonly src: "14873:47:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4093;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "14873:49:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4094;
                                readonly nodeType: "RevertStatement";
                                readonly src: "14866:56:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4099;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4097;
                                readonly name: "maxCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3548;
                                readonly src: "15012:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4098;
                                readonly name: "_maxCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4072;
                                readonly src: "15036:22:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "15012:46:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 4100;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "15012:46:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4102;
                                readonly name: "_maxCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4072;
                                readonly src: "15102:22:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4101;
                                readonly name: "MaxCheckpointDurationUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7875;
                                readonly src: "15073:28:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 4103;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "15073:52:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4104;
                        readonly nodeType: "EmitStatement";
                        readonly src: "15068:57:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4070;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "14054:147:21";
                    readonly text: "@notice Allows governance to update the maximum checkpoint duration.\n @param _maxCheckpointDuration The new maximum checkpoint duration.";
                };
                readonly functionSelector: "6f6d5c4a";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4075;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4074;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["14298:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "14298:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "14298:14:21";
                }];
                readonly name: "updateMaxCheckpointDuration";
                readonly nameLocation: "14215:27:21";
                readonly parameters: {
                    readonly id: 4073;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4072;
                        readonly mutability: "mutable";
                        readonly name: "_maxCheckpointDuration";
                        readonly nameLocation: "14260:22:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4106;
                        readonly src: "14252:30:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4071;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "14252:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "14242:46:21";
                };
                readonly returnParameters: {
                    readonly id: 4076;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "14313:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4143;
                readonly nodeType: "FunctionDefinition";
                readonly src: "15290:940:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4142;
                    readonly nodeType: "Block";
                    readonly src: "15397:833:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 4126;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 4122;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4116;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly id: 4114;
                                        readonly name: "_minCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4109;
                                        readonly src: "15750:22:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 4115;
                                        readonly name: "checkpointDurationResolution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3542;
                                        readonly src: "15775:28:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "15750:53:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4121;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4119;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 4117;
                                            readonly name: "_minCheckpointDuration";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4109;
                                            readonly src: "15819:22:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "%";
                                        readonly rightExpression: {
                                            readonly id: 4118;
                                            readonly name: "checkpointDurationResolution";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3542;
                                            readonly src: "15844:28:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "15819:53:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "!=";
                                    readonly rightExpression: {
                                        readonly hexValue: "30";
                                        readonly id: 4120;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "15876:1:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_0_by_1";
                                            readonly typeString: "int_const 0";
                                        };
                                        readonly value: "0";
                                    };
                                    readonly src: "15819:58:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "15750:127:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 4125;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 4123;
                                    readonly name: "_minCheckpointDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4109;
                                    readonly src: "15893:22:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly id: 4124;
                                    readonly name: "maxCheckpointDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3548;
                                    readonly src: "15918:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "15893:46:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "15750:189:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4133;
                        readonly nodeType: "IfStatement";
                        readonly src: "15733:298:21";
                        readonly trueBody: {
                            readonly id: 4132;
                            readonly nodeType: "Block";
                            readonly src: "15950:81:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4127;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "15971:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4129;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "15990:28:21";
                                        readonly memberName: "InvalidMinCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7942;
                                        readonly src: "15971:47:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4130;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "15971:49:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4131;
                                readonly nodeType: "RevertStatement";
                                readonly src: "15964:56:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4136;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4134;
                                readonly name: "minCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3545;
                                readonly src: "16110:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4135;
                                readonly name: "_minCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4109;
                                readonly src: "16134:22:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "16110:46:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 4137;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "16110:46:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4139;
                                readonly name: "_minCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4109;
                                readonly src: "16200:22:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4138;
                                readonly name: "MinCheckpointDurationUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7879;
                                readonly src: "16171:28:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 4140;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "16171:52:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4141;
                        readonly nodeType: "EmitStatement";
                        readonly src: "16166:57:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4107;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "15138:147:21";
                    readonly text: "@notice Allows governance to update the minimum checkpoint duration.\n @param _minCheckpointDuration The new minimum checkpoint duration.";
                };
                readonly functionSelector: "8e127cf5";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4112;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4111;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["15382:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "15382:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "15382:14:21";
                }];
                readonly name: "updateMinCheckpointDuration";
                readonly nameLocation: "15299:27:21";
                readonly parameters: {
                    readonly id: 4110;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4109;
                        readonly mutability: "mutable";
                        readonly name: "_minCheckpointDuration";
                        readonly nameLocation: "15344:22:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4143;
                        readonly src: "15336:30:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4108;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "15336:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "15326:46:21";
                };
                readonly returnParameters: {
                    readonly id: 4113;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "15397:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4176;
                readonly nodeType: "FunctionDefinition";
                readonly src: "16382:713:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4175;
                    readonly nodeType: "Block";
                    readonly src: "16485:610:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 4159;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 4153;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 4151;
                                    readonly name: "_maxPositionDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4146;
                                    readonly src: "16702:20:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly id: 4152;
                                    readonly name: "minPositionDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3551;
                                    readonly src: "16725:19:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "16702:42:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 4158;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4156;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly id: 4154;
                                        readonly name: "_maxPositionDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4146;
                                        readonly src: "16760:20:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly id: 4155;
                                        readonly name: "checkpointDurationResolution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3542;
                                        readonly src: "16783:28:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "16760:51:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 4157;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "16815:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "16760:56:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "16702:114:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4166;
                        readonly nodeType: "IfStatement";
                        readonly src: "16685:221:21";
                        readonly trueBody: {
                            readonly id: 4165;
                            readonly nodeType: "Block";
                            readonly src: "16827:79:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4160;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "16848:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4162;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "16867:26:21";
                                        readonly memberName: "InvalidMaxPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7944;
                                        readonly src: "16848:45:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4163;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "16848:47:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4164;
                                readonly nodeType: "RevertStatement";
                                readonly src: "16841:54:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4169;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4167;
                                readonly name: "maxPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3554;
                                readonly src: "16983:19:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4168;
                                readonly name: "_maxPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4146;
                                readonly src: "17005:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "16983:42:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 4170;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "16983:42:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4172;
                                readonly name: "_maxPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4146;
                                readonly src: "17067:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4171;
                                readonly name: "MaxPositionDurationUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7883;
                                readonly src: "17040:26:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 4173;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "17040:48:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4174;
                        readonly nodeType: "EmitStatement";
                        readonly src: "17035:53:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4144;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "16236:141:21";
                    readonly text: "@notice Allows governance to update the maximum position duration.\n @param _maxPositionDuration The new maximum position duration.";
                };
                readonly functionSelector: "eb71f66c";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4149;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4148;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["16470:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "16470:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "16470:14:21";
                }];
                readonly name: "updateMaxPositionDuration";
                readonly nameLocation: "16391:25:21";
                readonly parameters: {
                    readonly id: 4147;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4146;
                        readonly mutability: "mutable";
                        readonly name: "_maxPositionDuration";
                        readonly nameLocation: "16434:20:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4176;
                        readonly src: "16426:28:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4145;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "16426:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "16416:44:21";
                };
                readonly returnParameters: {
                    readonly id: 4150;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "16485:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4213;
                readonly nodeType: "FunctionDefinition";
                readonly src: "17247:889:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4212;
                    readonly nodeType: "Block";
                    readonly src: "17350:786:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 4196;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 4192;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4186;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly id: 4184;
                                        readonly name: "_minPositionDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4179;
                                        readonly src: "17683:20:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 4185;
                                        readonly name: "maxCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3548;
                                        readonly src: "17706:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "17683:44:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4191;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4189;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 4187;
                                            readonly name: "_minPositionDuration";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4179;
                                            readonly src: "17743:20:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "%";
                                        readonly rightExpression: {
                                            readonly id: 4188;
                                            readonly name: "checkpointDurationResolution";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3542;
                                            readonly src: "17766:28:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "17743:51:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "!=";
                                    readonly rightExpression: {
                                        readonly hexValue: "30";
                                        readonly id: 4190;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "17798:1:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_0_by_1";
                                            readonly typeString: "int_const 0";
                                        };
                                        readonly value: "0";
                                    };
                                    readonly src: "17743:56:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "17683:116:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 4195;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 4193;
                                    readonly name: "_minPositionDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4179;
                                    readonly src: "17815:20:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly id: 4194;
                                    readonly name: "maxPositionDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3554;
                                    readonly src: "17838:19:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "17815:42:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "17683:174:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4203;
                        readonly nodeType: "IfStatement";
                        readonly src: "17666:281:21";
                        readonly trueBody: {
                            readonly id: 4202;
                            readonly nodeType: "Block";
                            readonly src: "17868:79:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4197;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "17889:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4199;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "17908:26:21";
                                        readonly memberName: "InvalidMinPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7946;
                                        readonly src: "17889:45:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4200;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "17889:47:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4201;
                                readonly nodeType: "RevertStatement";
                                readonly src: "17882:54:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4206;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4204;
                                readonly name: "minPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3551;
                                readonly src: "18024:19:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4205;
                                readonly name: "_minPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4179;
                                readonly src: "18046:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "18024:42:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 4207;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "18024:42:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4209;
                                readonly name: "_minPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4179;
                                readonly src: "18108:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4208;
                                readonly name: "MinPositionDurationUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7887;
                                readonly src: "18081:26:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 4210;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "18081:48:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4211;
                        readonly nodeType: "EmitStatement";
                        readonly src: "18076:53:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4177;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "17101:141:21";
                    readonly text: "@notice Allows governance to update the minimum position duration.\n @param _minPositionDuration The new minimum position duration.";
                };
                readonly functionSelector: "e71f34b3";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4182;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4181;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["17335:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "17335:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "17335:14:21";
                }];
                readonly name: "updateMinPositionDuration";
                readonly nameLocation: "17256:25:21";
                readonly parameters: {
                    readonly id: 4180;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4179;
                        readonly mutability: "mutable";
                        readonly name: "_minPositionDuration";
                        readonly nameLocation: "17299:20:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4213;
                        readonly src: "17291:28:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4178;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "17291:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "17281:44:21";
                };
                readonly returnParameters: {
                    readonly id: 4183;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "17350:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4240;
                readonly nodeType: "FunctionDefinition";
                readonly src: "18264:442:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4239;
                    readonly nodeType: "Block";
                    readonly src: "18337:369:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 4223;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 4221;
                                readonly name: "_maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4216;
                                readonly src: "18458:12:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly id: 4222;
                                readonly name: "minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3557;
                                readonly src: "18473:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "18458:26:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4230;
                        readonly nodeType: "IfStatement";
                        readonly src: "18454:103:21";
                        readonly trueBody: {
                            readonly id: 4229;
                            readonly nodeType: "Block";
                            readonly src: "18486:71:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4224;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "18507:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4226;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "18526:18:21";
                                        readonly memberName: "InvalidMaxFixedAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7950;
                                        readonly src: "18507:37:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4227;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "18507:39:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4228;
                                readonly nodeType: "RevertStatement";
                                readonly src: "18500:46:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4233;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4231;
                                readonly name: "maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3560;
                                readonly src: "18626:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4232;
                                readonly name: "_maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4216;
                                readonly src: "18640:12:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "18626:26:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 4234;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "18626:26:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4236;
                                readonly name: "_maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4216;
                                readonly src: "18686:12:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4235;
                                readonly name: "MaxFixedAPRUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7891;
                                readonly src: "18667:18:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 4237;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "18667:32:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4238;
                        readonly nodeType: "EmitStatement";
                        readonly src: "18662:37:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4214;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "18142:117:21";
                    readonly text: "@notice Allows governance to update the maximum fixed APR.\n @param _maxFixedAPR The new maximum fixed APR.";
                };
                readonly functionSelector: "97b0e8ce";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4219;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4218;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["18322:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "18322:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "18322:14:21";
                }];
                readonly name: "updateMaxFixedAPR";
                readonly nameLocation: "18273:17:21";
                readonly parameters: {
                    readonly id: 4217;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4216;
                        readonly mutability: "mutable";
                        readonly name: "_maxFixedAPR";
                        readonly nameLocation: "18299:12:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4240;
                        readonly src: "18291:20:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4215;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "18291:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "18290:22:21";
                };
                readonly returnParameters: {
                    readonly id: 4220;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "18337:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4267;
                readonly nodeType: "FunctionDefinition";
                readonly src: "18834:439:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4266;
                    readonly nodeType: "Block";
                    readonly src: "18907:366:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 4250;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 4248;
                                readonly name: "_minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4243;
                                readonly src: "19025:12:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 4249;
                                readonly name: "maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3560;
                                readonly src: "19040:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "19025:26:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4257;
                        readonly nodeType: "IfStatement";
                        readonly src: "19021:103:21";
                        readonly trueBody: {
                            readonly id: 4256;
                            readonly nodeType: "Block";
                            readonly src: "19053:71:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4251;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "19074:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4253;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "19093:18:21";
                                        readonly memberName: "InvalidMinFixedAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7952;
                                        readonly src: "19074:37:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4254;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "19074:39:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4255;
                                readonly nodeType: "RevertStatement";
                                readonly src: "19067:46:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4260;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4258;
                                readonly name: "minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3557;
                                readonly src: "19193:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4259;
                                readonly name: "_minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4243;
                                readonly src: "19207:12:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "19193:26:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 4261;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "19193:26:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4263;
                                readonly name: "_minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4243;
                                readonly src: "19253:12:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4262;
                                readonly name: "MinFixedAPRUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7895;
                                readonly src: "19234:18:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 4264;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "19234:32:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4265;
                        readonly nodeType: "EmitStatement";
                        readonly src: "19229:37:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4241;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "18712:117:21";
                    readonly text: "@notice Allows governance to update the minimum fixed APR.\n @param _minFixedAPR The new minimum fixed APR.";
                };
                readonly functionSelector: "1978ebcf";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4246;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4245;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["18892:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "18892:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "18892:14:21";
                }];
                readonly name: "updateMinFixedAPR";
                readonly nameLocation: "18843:17:21";
                readonly parameters: {
                    readonly id: 4244;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4243;
                        readonly mutability: "mutable";
                        readonly name: "_minFixedAPR";
                        readonly nameLocation: "18869:12:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4267;
                        readonly src: "18861:20:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4242;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "18861:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "18860:22:21";
                };
                readonly returnParameters: {
                    readonly id: 4247;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "18907:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4294;
                readonly nodeType: "FunctionDefinition";
                readonly src: "19421:531:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4293;
                    readonly nodeType: "Block";
                    readonly src: "19520:432:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 4277;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 4275;
                                readonly name: "_maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4270;
                                readonly src: "19655:18:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly id: 4276;
                                readonly name: "minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3563;
                                readonly src: "19676:17:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "19655:38:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4284;
                        readonly nodeType: "IfStatement";
                        readonly src: "19651:121:21";
                        readonly trueBody: {
                            readonly id: 4283;
                            readonly nodeType: "Block";
                            readonly src: "19695:77:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4278;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "19716:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4280;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "19735:24:21";
                                        readonly memberName: "InvalidMaxTimeStretchAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7956;
                                        readonly src: "19716:43:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4281;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "19716:45:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4282;
                                readonly nodeType: "RevertStatement";
                                readonly src: "19709:52:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4287;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4285;
                                readonly name: "maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3566;
                                readonly src: "19848:17:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4286;
                                readonly name: "_maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4270;
                                readonly src: "19868:18:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "19848:38:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 4288;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "19848:38:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4290;
                                readonly name: "_maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4270;
                                readonly src: "19926:18:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4289;
                                readonly name: "MaxTimeStretchAPRUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7899;
                                readonly src: "19901:24:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 4291;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "19901:44:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4292;
                        readonly nodeType: "EmitStatement";
                        readonly src: "19896:49:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4268;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "19279:137:21";
                    readonly text: "@notice Allows governance to update the maximum time stretch APR.\n @param _maxTimeStretchAPR The new maximum time stretch APR.";
                };
                readonly functionSelector: "628027a3";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4273;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4272;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["19505:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "19505:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "19505:14:21";
                }];
                readonly name: "updateMaxTimeStretchAPR";
                readonly nameLocation: "19430:23:21";
                readonly parameters: {
                    readonly id: 4271;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4270;
                        readonly mutability: "mutable";
                        readonly name: "_maxTimeStretchAPR";
                        readonly nameLocation: "19471:18:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4294;
                        readonly src: "19463:26:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4269;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "19463:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "19453:42:21";
                };
                readonly returnParameters: {
                    readonly id: 4274;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "19520:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4321;
                readonly nodeType: "FunctionDefinition";
                readonly src: "20100:528:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4320;
                    readonly nodeType: "Block";
                    readonly src: "20199:429:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 4304;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 4302;
                                readonly name: "_minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4297;
                                readonly src: "20331:18:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 4303;
                                readonly name: "maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3566;
                                readonly src: "20352:17:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "20331:38:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4311;
                        readonly nodeType: "IfStatement";
                        readonly src: "20327:121:21";
                        readonly trueBody: {
                            readonly id: 4310;
                            readonly nodeType: "Block";
                            readonly src: "20371:77:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4305;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "20392:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4307;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "20411:24:21";
                                        readonly memberName: "InvalidMinTimeStretchAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7958;
                                        readonly src: "20392:43:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4308;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "20392:45:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4309;
                                readonly nodeType: "RevertStatement";
                                readonly src: "20385:52:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4314;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4312;
                                readonly name: "minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3563;
                                readonly src: "20524:17:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4313;
                                readonly name: "_minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4297;
                                readonly src: "20544:18:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "20524:38:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 4315;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "20524:38:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4317;
                                readonly name: "_minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4297;
                                readonly src: "20602:18:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4316;
                                readonly name: "MinTimeStretchAPRUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7903;
                                readonly src: "20577:24:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 4318;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "20577:44:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4319;
                        readonly nodeType: "EmitStatement";
                        readonly src: "20572:49:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4295;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "19958:137:21";
                    readonly text: "@notice Allows governance to update the minimum time stretch APR.\n @param _minTimeStretchAPR The new minimum time stretch APR.";
                };
                readonly functionSelector: "83b361e8";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4300;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4299;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["20184:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "20184:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "20184:14:21";
                }];
                readonly name: "updateMinTimeStretchAPR";
                readonly nameLocation: "20109:23:21";
                readonly parameters: {
                    readonly id: 4298;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4297;
                        readonly mutability: "mutable";
                        readonly name: "_minTimeStretchAPR";
                        readonly nameLocation: "20150:18:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4321;
                        readonly src: "20142:26:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4296;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "20142:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "20132:42:21";
                };
                readonly returnParameters: {
                    readonly id: 4301;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "20199:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4389;
                readonly nodeType: "FunctionDefinition";
                readonly src: "20763:882:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4388;
                    readonly nodeType: "Block";
                    readonly src: "20861:784:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 4372;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 4366;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 4360;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                        readonly id: 4354;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                            readonly id: 4348;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                                readonly id: 4343;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly commonType: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                    readonly id: 4338;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly leftExpression: {
                                                        readonly commonType: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                        readonly id: 4333;
                                                        readonly isConstant: false;
                                                        readonly isLValue: false;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly leftExpression: {
                                                            readonly expression: {
                                                                readonly id: 4330;
                                                                readonly name: "__maxFees";
                                                                readonly nodeType: "Identifier";
                                                                readonly overloadedDeclarations: readonly [];
                                                                readonly referencedDeclaration: 4325;
                                                                readonly src: "21065:9:21";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                                                };
                                                            };
                                                            readonly id: 4331;
                                                            readonly isConstant: false;
                                                            readonly isLValue: false;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "21075:5:21";
                                                            readonly memberName: "curve";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 7130;
                                                            readonly src: "21065:15:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly nodeType: "BinaryOperation";
                                                        readonly operator: ">";
                                                        readonly rightExpression: {
                                                            readonly id: 4332;
                                                            readonly name: "ONE";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 13529;
                                                            readonly src: "21083:3:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly src: "21065:21:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_bool";
                                                            readonly typeString: "bool";
                                                        };
                                                    };
                                                    readonly nodeType: "BinaryOperation";
                                                    readonly operator: "||";
                                                    readonly rightExpression: {
                                                        readonly commonType: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                        readonly id: 4337;
                                                        readonly isConstant: false;
                                                        readonly isLValue: false;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly leftExpression: {
                                                            readonly expression: {
                                                                readonly id: 4334;
                                                                readonly name: "__maxFees";
                                                                readonly nodeType: "Identifier";
                                                                readonly overloadedDeclarations: readonly [];
                                                                readonly referencedDeclaration: 4325;
                                                                readonly src: "21102:9:21";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                                                };
                                                            };
                                                            readonly id: 4335;
                                                            readonly isConstant: false;
                                                            readonly isLValue: false;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "21112:4:21";
                                                            readonly memberName: "flat";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 7133;
                                                            readonly src: "21102:14:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly nodeType: "BinaryOperation";
                                                        readonly operator: ">";
                                                        readonly rightExpression: {
                                                            readonly id: 4336;
                                                            readonly name: "ONE";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 13529;
                                                            readonly src: "21119:3:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly src: "21102:20:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_bool";
                                                            readonly typeString: "bool";
                                                        };
                                                    };
                                                    readonly src: "21065:57:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: "||";
                                                readonly rightExpression: {
                                                    readonly commonType: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                    readonly id: 4342;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly leftExpression: {
                                                        readonly expression: {
                                                            readonly id: 4339;
                                                            readonly name: "__maxFees";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 4325;
                                                            readonly src: "21138:9:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                                                readonly typeString: "struct IHyperdrive.Fees calldata";
                                                            };
                                                        };
                                                        readonly id: 4340;
                                                        readonly isConstant: false;
                                                        readonly isLValue: false;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly memberLocation: "21148:12:21";
                                                        readonly memberName: "governanceLP";
                                                        readonly nodeType: "MemberAccess";
                                                        readonly referencedDeclaration: 7136;
                                                        readonly src: "21138:22:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                    };
                                                    readonly nodeType: "BinaryOperation";
                                                    readonly operator: ">";
                                                    readonly rightExpression: {
                                                        readonly id: 4341;
                                                        readonly name: "ONE";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 13529;
                                                        readonly src: "21163:3:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                    };
                                                    readonly src: "21138:28:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                };
                                                readonly src: "21065:101:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "||";
                                            readonly rightExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                                readonly id: 4347;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly expression: {
                                                        readonly id: 4344;
                                                        readonly name: "__maxFees";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 4325;
                                                        readonly src: "21182:9:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                                            readonly typeString: "struct IHyperdrive.Fees calldata";
                                                        };
                                                    };
                                                    readonly id: 4345;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "21192:16:21";
                                                    readonly memberName: "governanceZombie";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 7139;
                                                    readonly src: "21182:26:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: ">";
                                                readonly rightExpression: {
                                                    readonly id: 4346;
                                                    readonly name: "ONE";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 13529;
                                                    readonly src: "21211:3:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly src: "21182:32:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                            };
                                            readonly src: "21065:149:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "||";
                                        readonly rightExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                            readonly id: 4353;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly expression: {
                                                    readonly id: 4349;
                                                    readonly name: "__maxFees";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 4325;
                                                    readonly src: "21230:9:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                                        readonly typeString: "struct IHyperdrive.Fees calldata";
                                                    };
                                                };
                                                readonly id: 4350;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "21240:5:21";
                                                readonly memberName: "curve";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 7130;
                                                readonly src: "21230:15:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "<";
                                            readonly rightExpression: {
                                                readonly expression: {
                                                    readonly id: 4351;
                                                    readonly name: "_minFees";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 3570;
                                                    readonly src: "21248:8:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                        readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                    };
                                                };
                                                readonly id: 4352;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "21257:5:21";
                                                readonly memberName: "curve";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 7130;
                                                readonly src: "21248:14:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly src: "21230:32:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly src: "21065:197:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4359;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly id: 4355;
                                                readonly name: "__maxFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 4325;
                                                readonly src: "21278:9:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                                };
                                            };
                                            readonly id: 4356;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "21288:4:21";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7133;
                                            readonly src: "21278:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "<";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly id: 4357;
                                                readonly name: "_minFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 3570;
                                                readonly src: "21295:8:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                };
                                            };
                                            readonly id: 4358;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "21304:4:21";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7133;
                                            readonly src: "21295:13:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "21278:30:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "21065:243:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4365;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 4361;
                                            readonly name: "__maxFees";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4325;
                                            readonly src: "21324:9:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees calldata";
                                            };
                                        };
                                        readonly id: 4362;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "21334:12:21";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7136;
                                        readonly src: "21324:22:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 4363;
                                            readonly name: "_minFees";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3570;
                                            readonly src: "21349:8:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                                            };
                                        };
                                        readonly id: 4364;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "21358:12:21";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7136;
                                        readonly src: "21349:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "21324:46:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "21065:305:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 4371;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 4367;
                                        readonly name: "__maxFees";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4325;
                                        readonly src: "21386:9:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees calldata";
                                        };
                                    };
                                    readonly id: 4368;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "21396:16:21";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7139;
                                    readonly src: "21386:26:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 4369;
                                        readonly name: "_minFees";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3570;
                                        readonly src: "21415:8:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                            readonly typeString: "struct IHyperdrive.Fees storage ref";
                                        };
                                    };
                                    readonly id: 4370;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "21424:16:21";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7139;
                                    readonly src: "21415:25:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "21386:54:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "21065:375:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4379;
                        readonly nodeType: "IfStatement";
                        readonly src: "21048:470:21";
                        readonly trueBody: {
                            readonly id: 4378;
                            readonly nodeType: "Block";
                            readonly src: "21451:67:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4373;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "21472:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4375;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "21491:14:21";
                                        readonly memberName: "InvalidMaxFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7936;
                                        readonly src: "21472:33:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4376;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "21472:35:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4377;
                                readonly nodeType: "RevertStatement";
                                readonly src: "21465:42:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4382;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4380;
                                readonly name: "_maxFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3574;
                                readonly src: "21578:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4381;
                                readonly name: "__maxFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4325;
                                readonly src: "21589:9:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                };
                            };
                            readonly src: "21578:20:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly id: 4383;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "21578:20:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4385;
                                readonly name: "__maxFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4325;
                                readonly src: "21628:9:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                }];
                                readonly id: 4384;
                                readonly name: "MaxFeesUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7908;
                                readonly src: "21613:14:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_struct$_Fees_$7140_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.Fees memory)";
                                };
                            };
                            readonly id: 4386;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "21613:25:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4387;
                        readonly nodeType: "EmitStatement";
                        readonly src: "21608:30:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4322;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "20634:124:21";
                    readonly text: "@notice Allows governance to update the maximum fee parameters.\n @param __maxFees The new maximum fee parameters.";
                };
                readonly functionSelector: "2885e3ac";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4328;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4327;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["20846:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "20846:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "20846:14:21";
                }];
                readonly name: "updateMaxFees";
                readonly nameLocation: "20772:13:21";
                readonly parameters: {
                    readonly id: 4326;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4325;
                        readonly mutability: "mutable";
                        readonly name: "__maxFees";
                        readonly nameLocation: "20821:9:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4389;
                        readonly src: "20795:35:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "calldata";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                        readonly typeName: {
                            readonly id: 4324;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 4323;
                                readonly name: "IHyperdrive.Fees";
                                readonly nameLocations: readonly ["20795:11:21", "20807:4:21"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7140;
                                readonly src: "20795:16:21";
                            };
                            readonly referencedDeclaration: 7140;
                            readonly src: "20795:16:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Fees";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "20785:51:21";
                };
                readonly returnParameters: {
                    readonly id: 4329;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "20861:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4437;
                readonly nodeType: "FunctionDefinition";
                readonly src: "21780:636:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4436;
                    readonly nodeType: "Block";
                    readonly src: "21878:538:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 4420;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 4414;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 4408;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4402;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly id: 4398;
                                                readonly name: "__minFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 4393;
                                                readonly src: "22001:9:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                                };
                                            };
                                            readonly id: 4399;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "22011:5:21";
                                            readonly memberName: "curve";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7130;
                                            readonly src: "22001:15:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly id: 4400;
                                                readonly name: "_maxFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 3574;
                                                readonly src: "22019:8:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                };
                                            };
                                            readonly id: 4401;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "22028:5:21";
                                            readonly memberName: "curve";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7130;
                                            readonly src: "22019:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "22001:32:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4407;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly id: 4403;
                                                readonly name: "__minFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 4393;
                                                readonly src: "22049:9:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                                };
                                            };
                                            readonly id: 4404;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "22059:4:21";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7133;
                                            readonly src: "22049:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly id: 4405;
                                                readonly name: "_maxFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 3574;
                                                readonly src: "22066:8:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                };
                                            };
                                            readonly id: 4406;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "22075:4:21";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7133;
                                            readonly src: "22066:13:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "22049:30:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "22001:78:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4413;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 4409;
                                            readonly name: "__minFees";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4393;
                                            readonly src: "22095:9:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees calldata";
                                            };
                                        };
                                        readonly id: 4410;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "22105:12:21";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7136;
                                        readonly src: "22095:22:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: ">";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 4411;
                                            readonly name: "_maxFees";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3574;
                                            readonly src: "22120:8:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                                            };
                                        };
                                        readonly id: 4412;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "22129:12:21";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7136;
                                        readonly src: "22120:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "22095:46:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "22001:140:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 4419;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 4415;
                                        readonly name: "__minFees";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4393;
                                        readonly src: "22157:9:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees calldata";
                                        };
                                    };
                                    readonly id: 4416;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "22167:16:21";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7139;
                                    readonly src: "22157:26:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 4417;
                                        readonly name: "_maxFees";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3574;
                                        readonly src: "22186:8:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                            readonly typeString: "struct IHyperdrive.Fees storage ref";
                                        };
                                    };
                                    readonly id: 4418;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "22195:16:21";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7139;
                                    readonly src: "22186:25:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "22157:54:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "22001:210:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4427;
                        readonly nodeType: "IfStatement";
                        readonly src: "21984:305:21";
                        readonly trueBody: {
                            readonly id: 4426;
                            readonly nodeType: "Block";
                            readonly src: "22222:67:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4421;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "22243:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4423;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "22262:14:21";
                                        readonly memberName: "InvalidMinFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7938;
                                        readonly src: "22243:33:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4424;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "22243:35:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4425;
                                readonly nodeType: "RevertStatement";
                                readonly src: "22236:42:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4430;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4428;
                                readonly name: "_minFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3570;
                                readonly src: "22349:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4429;
                                readonly name: "__minFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4393;
                                readonly src: "22360:9:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                };
                            };
                            readonly src: "22349:20:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly id: 4431;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "22349:20:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4433;
                                readonly name: "__minFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4393;
                                readonly src: "22399:9:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                }];
                                readonly id: 4432;
                                readonly name: "MinFeesUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7913;
                                readonly src: "22384:14:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_struct$_Fees_$7140_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.Fees memory)";
                                };
                            };
                            readonly id: 4434;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "22384:25:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4435;
                        readonly nodeType: "EmitStatement";
                        readonly src: "22379:30:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4390;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "21651:124:21";
                    readonly text: "@notice Allows governance to update the minimum fee parameters.\n @param __minFees The new minimum fee parameters.";
                };
                readonly functionSelector: "10d1dc3e";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4396;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4395;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["21863:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "21863:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "21863:14:21";
                }];
                readonly name: "updateMinFees";
                readonly nameLocation: "21789:13:21";
                readonly parameters: {
                    readonly id: 4394;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4393;
                        readonly mutability: "mutable";
                        readonly name: "__minFees";
                        readonly nameLocation: "21838:9:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4437;
                        readonly src: "21812:35:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "calldata";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$7140_calldata_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                        readonly typeName: {
                            readonly id: 4392;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 4391;
                                readonly name: "IHyperdrive.Fees";
                                readonly nameLocations: readonly ["21812:11:21", "21824:4:21"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7140;
                                readonly src: "21812:16:21";
                            };
                            readonly referencedDeclaration: 7140;
                            readonly src: "21812:16:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Fees";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "21802:51:21";
                };
                readonly returnParameters: {
                    readonly id: 4397;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "21878:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4455;
                readonly nodeType: "FunctionDefinition";
                readonly src: "22552:210:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4454;
                    readonly nodeType: "Block";
                    readonly src: "22657:105:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 4448;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4446;
                                readonly name: "_defaultPausers";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3578;
                                readonly src: "22667:15:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4447;
                                readonly name: "_defaultPausers_";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4441;
                                readonly src: "22685:16:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_calldata_ptr";
                                    readonly typeString: "address[] calldata";
                                };
                            };
                            readonly src: "22667:34:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                readonly typeString: "address[] storage ref";
                            };
                        };
                        readonly id: 4449;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "22667:34:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4451;
                                readonly name: "_defaultPausers_";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4441;
                                readonly src: "22738:16:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_calldata_ptr";
                                    readonly typeString: "address[] calldata";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_calldata_ptr";
                                    readonly typeString: "address[] calldata";
                                }];
                                readonly id: 4450;
                                readonly name: "DefaultPausersUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7843;
                                readonly src: "22716:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                    readonly typeString: "function (address[] memory)";
                                };
                            };
                            readonly id: 4452;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "22716:39:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4453;
                        readonly nodeType: "EmitStatement";
                        readonly src: "22711:44:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4438;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "22422:125:21";
                    readonly text: "@notice Allows governance to change the default pausers.\n @param _defaultPausers_ The new list of default pausers.";
                };
                readonly functionSelector: "9af25262";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4444;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4443;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["22642:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "22642:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "22642:14:21";
                }];
                readonly name: "updateDefaultPausers";
                readonly nameLocation: "22561:20:21";
                readonly parameters: {
                    readonly id: 4442;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4441;
                        readonly mutability: "mutable";
                        readonly name: "_defaultPausers_";
                        readonly nameLocation: "22610:16:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4455;
                        readonly src: "22591:35:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "calldata";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_calldata_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 4439;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "22591:7:21";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 4440;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "22591:9:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "22581:51:21";
                };
                readonly returnParameters: {
                    readonly id: 4445;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "22657:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4490;
                readonly nodeType: "FunctionDefinition";
                readonly src: "22903:428:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4489;
                    readonly nodeType: "Block";
                    readonly src: "23003:328:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly baseExpression: {
                                readonly id: 4463;
                                readonly name: "isDeployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3642;
                                readonly src: "23017:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                    readonly typeString: "mapping(address => bool)";
                                };
                            };
                            readonly id: 4465;
                            readonly indexExpression: {
                                readonly id: 4464;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4458;
                                readonly src: "23039:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly isConstant: false;
                            readonly isLValue: true;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "IndexAccess";
                            readonly src: "23017:43:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4472;
                        readonly nodeType: "IfStatement";
                        readonly src: "23013:133:21";
                        readonly trueBody: {
                            readonly id: 4471;
                            readonly nodeType: "Block";
                            readonly src: "23062:84:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4466;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "23083:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4468;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "23102:31:21";
                                        readonly memberName: "DeployerCoordinatorAlreadyAdded";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7916;
                                        readonly src: "23083:50:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4469;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "23083:52:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4470;
                                readonly nodeType: "RevertStatement";
                                readonly src: "23076:59:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4477;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly baseExpression: {
                                    readonly id: 4473;
                                    readonly name: "isDeployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3642;
                                    readonly src: "23155:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 4475;
                                readonly indexExpression: {
                                    readonly id: 4474;
                                    readonly name: "_deployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4458;
                                    readonly src: "23177:20:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly nodeType: "IndexAccess";
                                readonly src: "23155:43:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly hexValue: "74727565";
                                readonly id: 4476;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "23201:4:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            };
                            readonly src: "23155:50:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4478;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "23155:50:21";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 4482;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4458;
                                readonly src: "23242:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly expression: {
                                    readonly id: 4479;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3637;
                                    readonly src: "23215:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 4481;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "23237:4:21";
                                readonly memberName: "push";
                                readonly nodeType: "MemberAccess";
                                readonly src: "23215:26:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$";
                                    readonly typeString: "function (address[] storage pointer,address)";
                                };
                            };
                            readonly id: 4483;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "23215:48:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4484;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "23215:48:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4486;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4458;
                                readonly src: "23303:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 4485;
                                readonly name: "DeployerCoordinatorAdded";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7834;
                                readonly src: "23278:24:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 4487;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "23278:46:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4488;
                        readonly nodeType: "EmitStatement";
                        readonly src: "23273:51:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4456;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "22768:130:21";
                    readonly text: "@notice Allows governance to add a new deployer coordinator.\n @param _deployerCoordinator The new deployer coordinator.";
                };
                readonly functionSelector: "421caba8";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4461;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4460;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["22988:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "22988:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "22988:14:21";
                }];
                readonly name: "addDeployerCoordinator";
                readonly nameLocation: "22912:22:21";
                readonly parameters: {
                    readonly id: 4459;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4458;
                        readonly mutability: "mutable";
                        readonly name: "_deployerCoordinator";
                        readonly nameLocation: "22952:20:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4490;
                        readonly src: "22944:28:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 4457;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "22944:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "22934:44:21";
                };
                readonly returnParameters: {
                    readonly id: 4462;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "23003:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4550;
                readonly nodeType: "FunctionDefinition";
                readonly src: "23558:706:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4549;
                    readonly nodeType: "Block";
                    readonly src: "23685:579:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly id: 4503;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "UnaryOperation";
                            readonly operator: "!";
                            readonly prefix: true;
                            readonly src: "23699:44:21";
                            readonly subExpression: {
                                readonly baseExpression: {
                                    readonly id: 4500;
                                    readonly name: "isDeployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3642;
                                    readonly src: "23700:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 4502;
                                readonly indexExpression: {
                                    readonly id: 4501;
                                    readonly name: "_deployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4493;
                                    readonly src: "23722:20:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "IndexAccess";
                                readonly src: "23700:43:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4510;
                        readonly nodeType: "IfStatement";
                        readonly src: "23695:130:21";
                        readonly trueBody: {
                            readonly id: 4509;
                            readonly nodeType: "Block";
                            readonly src: "23745:80:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4504;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "23766:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4506;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "23785:27:21";
                                        readonly memberName: "DeployerCoordinatorNotAdded";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7918;
                                        readonly src: "23766:46:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4507;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "23766:48:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4508;
                                readonly nodeType: "RevertStatement";
                                readonly src: "23759:55:21";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly id: 4515;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly baseExpression: {
                                    readonly id: 4511;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3637;
                                    readonly src: "23838:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 4513;
                                readonly indexExpression: {
                                    readonly id: 4512;
                                    readonly name: "_index";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4495;
                                    readonly src: "23860:6:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "IndexAccess";
                                readonly src: "23838:29:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 4514;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4493;
                                readonly src: "23871:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "23838:53:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4522;
                        readonly nodeType: "IfStatement";
                        readonly src: "23834:144:21";
                        readonly trueBody: {
                            readonly id: 4521;
                            readonly nodeType: "Block";
                            readonly src: "23893:85:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4516;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "23914:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4518;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "23933:32:21";
                                        readonly memberName: "DeployerCoordinatorIndexMismatch";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7920;
                                        readonly src: "23914:51:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4519;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "23914:53:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4520;
                                readonly nodeType: "RevertStatement";
                                readonly src: "23907:60:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4527;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly baseExpression: {
                                    readonly id: 4523;
                                    readonly name: "isDeployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3642;
                                    readonly src: "23987:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 4525;
                                readonly indexExpression: {
                                    readonly id: 4524;
                                    readonly name: "_deployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4493;
                                    readonly src: "24009:20:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly nodeType: "IndexAccess";
                                readonly src: "23987:43:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly hexValue: "66616c7365";
                                readonly id: 4526;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "24033:5:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "false";
                            };
                            readonly src: "23987:51:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4528;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "23987:51:21";
                    }, {
                        readonly expression: {
                            readonly id: 4538;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly baseExpression: {
                                    readonly id: 4529;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3637;
                                    readonly src: "24048:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 4531;
                                readonly indexExpression: {
                                    readonly id: 4530;
                                    readonly name: "_index";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4495;
                                    readonly src: "24070:6:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly nodeType: "IndexAccess";
                                readonly src: "24048:29:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly baseExpression: {
                                    readonly id: 4532;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3637;
                                    readonly src: "24080:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 4537;
                                readonly indexExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4536;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 4533;
                                            readonly name: "_deployerCoordinators";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3637;
                                            readonly src: "24115:21:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                                readonly typeString: "address[] storage ref";
                                            };
                                        };
                                        readonly id: 4534;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "24137:6:21";
                                        readonly memberName: "length";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "24115:28:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "-";
                                    readonly rightExpression: {
                                        readonly hexValue: "31";
                                        readonly id: 4535;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "24146:1:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_1_by_1";
                                            readonly typeString: "int_const 1";
                                        };
                                        readonly value: "1";
                                    };
                                    readonly src: "24115:32:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "IndexAccess";
                                readonly src: "24080:77:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "24048:109:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 4539;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "24048:109:21";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [];
                            readonly expression: {
                                readonly argumentTypes: readonly [];
                                readonly expression: {
                                    readonly id: 4540;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3637;
                                    readonly src: "24167:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 4542;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "24189:3:21";
                                readonly memberName: "pop";
                                readonly nodeType: "MemberAccess";
                                readonly src: "24167:25:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$";
                                    readonly typeString: "function (address[] storage pointer)";
                                };
                            };
                            readonly id: 4543;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "24167:27:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4544;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "24167:27:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4546;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4493;
                                readonly src: "24236:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 4545;
                                readonly name: "DeployerCoordinatorRemoved";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7838;
                                readonly src: "24209:26:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 4547;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "24209:48:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4548;
                        readonly nodeType: "EmitStatement";
                        readonly src: "24204:53:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4491;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "23337:216:21";
                    readonly text: "@notice Allows governance to remove an existing deployer coordinator.\n @param _deployerCoordinator The deployer coordinator to remove.\n @param _index The index of the deployer coordinator to remove.";
                };
                readonly functionSelector: "411c3035";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 4498;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 4497;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["23670:14:21"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 3937;
                        readonly src: "23670:14:21";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "23670:14:21";
                }];
                readonly name: "removeDeployerCoordinator";
                readonly nameLocation: "23567:25:21";
                readonly parameters: {
                    readonly id: 4496;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4493;
                        readonly mutability: "mutable";
                        readonly name: "_deployerCoordinator";
                        readonly nameLocation: "23610:20:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4550;
                        readonly src: "23602:28:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 4492;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "23602:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4495;
                        readonly mutability: "mutable";
                        readonly name: "_index";
                        readonly nameLocation: "23648:6:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4550;
                        readonly src: "23640:14:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4494;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "23640:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "23592:68:21";
                };
                readonly returnParameters: {
                    readonly id: 4499;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "23685:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4801;
                readonly nodeType: "FunctionDefinition";
                readonly src: "25306:4133:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4800;
                    readonly nodeType: "Block";
                    readonly src: "25692:3747:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly id: 4579;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "UnaryOperation";
                            readonly operator: "!";
                            readonly prefix: true;
                            readonly src: "25775:44:21";
                            readonly subExpression: {
                                readonly baseExpression: {
                                    readonly id: 4576;
                                    readonly name: "isDeployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3642;
                                    readonly src: "25776:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 4578;
                                readonly indexExpression: {
                                    readonly id: 4577;
                                    readonly name: "_deployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4555;
                                    readonly src: "25798:20:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "IndexAccess";
                                readonly src: "25776:43:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4586;
                        readonly nodeType: "IfStatement";
                        readonly src: "25771:129:21";
                        readonly trueBody: {
                            readonly id: 4585;
                            readonly nodeType: "Block";
                            readonly src: "25821:79:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4580;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "25842:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4582;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "25861:26:21";
                                        readonly memberName: "InvalidDeployerCoordinator";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7930;
                                        readonly src: "25842:45:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4583;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "25842:47:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4584;
                                readonly nodeType: "RevertStatement";
                                readonly src: "25835:54:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 4588;
                                readonly name: "_config";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4558;
                                readonly src: "26052:7:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }, {
                                readonly id: 4589;
                                readonly name: "_fixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4564;
                                readonly src: "26061:9:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 4590;
                                readonly name: "_timeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4566;
                                readonly src: "26072:15:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4587;
                                readonly name: "_overrideConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5330;
                                readonly src: "26036:15:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$7176_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory,uint256,uint256) view";
                                };
                            };
                            readonly id: 4591;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "26036:52:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4592;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "26036:52:21";
                    }, {
                        readonly assignments: readonly [4595];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 4595;
                            readonly mutability: "mutable";
                            readonly name: "hyperdrive";
                            readonly nameLocation: "26205:10:21";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 4800;
                            readonly src: "26193:22:21";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                readonly typeString: "contract IHyperdrive";
                            };
                            readonly typeName: {
                                readonly id: 4594;
                                readonly nodeType: "UserDefinedTypeName";
                                readonly pathNode: {
                                    readonly id: 4593;
                                    readonly name: "IHyperdrive";
                                    readonly nameLocations: readonly ["26193:11:21"];
                                    readonly nodeType: "IdentifierPath";
                                    readonly referencedDeclaration: 7411;
                                    readonly src: "26193:11:21";
                                };
                                readonly referencedDeclaration: 7411;
                                readonly src: "26193:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                    readonly typeString: "contract IHyperdrive";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 4614;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly arguments: readonly [{
                                            readonly expression: {
                                                readonly id: 4604;
                                                readonly name: "msg";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -15;
                                                readonly src: "26489:3:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_magic_message";
                                                    readonly typeString: "msg";
                                                };
                                            };
                                            readonly id: 4605;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "26493:6:21";
                                            readonly memberName: "sender";
                                            readonly nodeType: "MemberAccess";
                                            readonly src: "26489:10:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        }, {
                                            readonly id: 4606;
                                            readonly name: "_deploymentId";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4553;
                                            readonly src: "26501:13:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bytes32";
                                                readonly typeString: "bytes32";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_bytes32";
                                                readonly typeString: "bytes32";
                                            }];
                                            readonly expression: {
                                                readonly id: 4602;
                                                readonly name: "abi";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -1;
                                                readonly src: "26478:3:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_magic_abi";
                                                    readonly typeString: "abi";
                                                };
                                            };
                                            readonly id: 4603;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "26482:6:21";
                                            readonly memberName: "encode";
                                            readonly nodeType: "MemberAccess";
                                            readonly src: "26478:10:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                                readonly typeString: "function () pure returns (bytes memory)";
                                            };
                                        };
                                        readonly id: 4607;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "functionCall";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "26478:37:21";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 4601;
                                        readonly name: "keccak256";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: -8;
                                        readonly src: "26468:9:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                            readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                        };
                                    };
                                    readonly id: 4608;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "26468:48:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes32";
                                        readonly typeString: "bytes32";
                                    };
                                }, {
                                    readonly id: 4609;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4558;
                                    readonly src: "26534:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                }, {
                                    readonly id: 4610;
                                    readonly name: "_extraData";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4560;
                                    readonly src: "26559:10:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }, {
                                    readonly id: 4611;
                                    readonly name: "_salt";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4570;
                                    readonly src: "26587:5:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes32";
                                        readonly typeString: "bytes32";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes32";
                                        readonly typeString: "bytes32";
                                    }, {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    }, {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }, {
                                        readonly typeIdentifier: "t_bytes32";
                                        readonly typeString: "bytes32";
                                    }];
                                    readonly expression: {
                                        readonly arguments: readonly [{
                                            readonly id: 4598;
                                            readonly name: "_deployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4555;
                                            readonly src: "26274:20:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }];
                                            readonly id: 4597;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7673;
                                            readonly src: "26243:30:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$7673_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 4599;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "26243:52:21";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_IHyperdriveDeployerCoordinator_$7673";
                                            readonly typeString: "contract IHyperdriveDeployerCoordinator";
                                        };
                                    };
                                    readonly id: 4600;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "26296:6:21";
                                    readonly memberName: "deploy";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7656;
                                    readonly src: "26243:59:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_external_nonpayable$_t_bytes32_$_t_struct$_PoolDeployConfig_$7176_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$";
                                        readonly typeString: "function (bytes32,struct IHyperdrive.PoolDeployConfig memory,bytes memory,bytes32) external returns (address)";
                                    };
                                };
                                readonly id: 4612;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "26243:363:21";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 4596;
                                readonly name: "IHyperdrive";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7411;
                                readonly src: "26218:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_type$_t_contract$_IHyperdrive_$7411_$";
                                    readonly typeString: "type(contract IHyperdrive)";
                                };
                            };
                            readonly id: 4613;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "typeConversion";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "26218:398:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                readonly typeString: "contract IHyperdrive";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "26193:423:21";
                    }, {
                        readonly expression: {
                            readonly id: 4622;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly baseExpression: {
                                    readonly id: 4615;
                                    readonly name: "instancesToDeployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3647;
                                    readonly src: "26736:31:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_address_$";
                                        readonly typeString: "mapping(address => address)";
                                    };
                                };
                                readonly id: 4620;
                                readonly indexExpression: {
                                    readonly arguments: readonly [{
                                        readonly id: 4618;
                                        readonly name: "hyperdrive";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4595;
                                        readonly src: "26789:10:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                            readonly typeString: "contract IHyperdrive";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                            readonly typeString: "contract IHyperdrive";
                                        }];
                                        readonly id: 4617;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "26781:7:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 4616;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "26781:7:21";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 4619;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "26781:19:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly nodeType: "IndexAccess";
                                readonly src: "26736:74:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4621;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4555;
                                readonly src: "26813:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "26736:97:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 4623;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "26736:97:21";
                    }, {
                        readonly expression: {
                            readonly id: 4628;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 4624;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4558;
                                    readonly src: "26843:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 4626;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "26851:10:21";
                                readonly memberName: "governance";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7168;
                                readonly src: "26843:18:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 4627;
                                readonly name: "hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3530;
                                readonly src: "26864:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "26843:41:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 4629;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "26843:41:21";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 4631;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4555;
                                readonly src: "26921:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly arguments: readonly [{
                                    readonly id: 4634;
                                    readonly name: "hyperdrive";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4595;
                                    readonly src: "26963:10:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                        readonly typeString: "contract IHyperdrive";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                        readonly typeString: "contract IHyperdrive";
                                    }];
                                    readonly id: 4633;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "26955:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 4632;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "26955:7:21";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 4635;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "26955:19:21";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 4636;
                                readonly name: "_config";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4558;
                                readonly src: "26988:7:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }, {
                                readonly id: 4637;
                                readonly name: "_extraData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4560;
                                readonly src: "27009:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly id: 4630;
                                readonly name: "Deployed";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7830;
                                readonly src: "26899:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_PoolDeployConfig_$7176_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                    readonly typeString: "function (address,address,struct IHyperdrive.PoolDeployConfig memory,bytes memory)";
                                };
                            };
                            readonly id: 4638;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "26899:130:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4639;
                        readonly nodeType: "EmitStatement";
                        readonly src: "26894:135:21";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly id: 4645;
                                    readonly name: "hyperdrive";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4595;
                                    readonly src: "27135:10:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                        readonly typeString: "contract IHyperdrive";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                        readonly typeString: "contract IHyperdrive";
                                    }];
                                    readonly id: 4644;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "27127:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 4643;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "27127:7:21";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 4646;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "27127:19:21";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly expression: {
                                    readonly id: 4640;
                                    readonly name: "_instances";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3651;
                                    readonly src: "27111:10:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 4642;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "27122:4:21";
                                readonly memberName: "push";
                                readonly nodeType: "MemberAccess";
                                readonly src: "27111:15:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$";
                                    readonly typeString: "function (address[] storage pointer,address)";
                                };
                            };
                            readonly id: 4647;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "27111:36:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4648;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "27111:36:21";
                    }, {
                        readonly expression: {
                            readonly id: 4656;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly baseExpression: {
                                    readonly id: 4649;
                                    readonly name: "isInstance";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3656;
                                    readonly src: "27157:10:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 4654;
                                readonly indexExpression: {
                                    readonly arguments: readonly [{
                                        readonly id: 4652;
                                        readonly name: "hyperdrive";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4595;
                                        readonly src: "27176:10:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                            readonly typeString: "contract IHyperdrive";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                            readonly typeString: "contract IHyperdrive";
                                        }];
                                        readonly id: 4651;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "27168:7:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 4650;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "27168:7:21";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 4653;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "27168:19:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly nodeType: "IndexAccess";
                                readonly src: "27157:31:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly hexValue: "74727565";
                                readonly id: 4655;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "27191:4:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            };
                            readonly src: "27157:38:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4657;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "27157:38:21";
                    }, {
                        readonly assignments: readonly [4659];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 4659;
                            readonly mutability: "mutable";
                            readonly name: "refund";
                            readonly nameLocation: "27261:6:21";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 4800;
                            readonly src: "27253:14:21";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 4658;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "27253:7:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 4660;
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "27253:14:21";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 4664;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 4661;
                                    readonly name: "msg";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -15;
                                    readonly src: "27281:3:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_magic_message";
                                        readonly typeString: "msg";
                                    };
                                };
                                readonly id: 4662;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "27285:5:21";
                                readonly memberName: "value";
                                readonly nodeType: "MemberAccess";
                                readonly src: "27281:9:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">=";
                            readonly rightExpression: {
                                readonly id: 4663;
                                readonly name: "_contribution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4562;
                                readonly src: "27294:13:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "27281:26:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly falseBody: {
                            readonly id: 4740;
                            readonly nodeType: "Block";
                            readonly src: "27844:912:21";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly id: 4692;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftHandSide: {
                                        readonly id: 4689;
                                        readonly name: "refund";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4659;
                                        readonly src: "27930:6:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "Assignment";
                                    readonly operator: "=";
                                    readonly rightHandSide: {
                                        readonly expression: {
                                            readonly id: 4690;
                                            readonly name: "msg";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -15;
                                            readonly src: "27939:3:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_message";
                                                readonly typeString: "msg";
                                            };
                                        };
                                        readonly id: 4691;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "27943:5:21";
                                        readonly memberName: "value";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "27939:9:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "27930:18:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly id: 4693;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "27930:18:21";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly expression: {
                                            readonly id: 4702;
                                            readonly name: "msg";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -15;
                                            readonly src: "28169:3:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_message";
                                                readonly typeString: "msg";
                                            };
                                        };
                                        readonly id: 4703;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "28173:6:21";
                                        readonly memberName: "sender";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "28169:10:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly arguments: readonly [{
                                            readonly id: 4706;
                                            readonly name: "this";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -28;
                                            readonly src: "28205:4:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_HyperdriveFactory_$5331";
                                                readonly typeString: "contract HyperdriveFactory";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_contract$_HyperdriveFactory_$5331";
                                                readonly typeString: "contract HyperdriveFactory";
                                            }];
                                            readonly id: 4705;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "ElementaryTypeNameExpression";
                                            readonly src: "28197:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_address_$";
                                                readonly typeString: "type(address)";
                                            };
                                            readonly typeName: {
                                                readonly id: 4704;
                                                readonly name: "address";
                                                readonly nodeType: "ElementaryTypeName";
                                                readonly src: "28197:7:21";
                                                readonly typeDescriptions: {};
                                            };
                                        };
                                        readonly id: 4707;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "28197:13:21";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 4708;
                                        readonly name: "_contribution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4562;
                                        readonly src: "28228:13:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly arguments: readonly [{
                                                readonly arguments: readonly [{
                                                    readonly expression: {
                                                        readonly id: 4697;
                                                        readonly name: "_config";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 4558;
                                                        readonly src: "28115:7:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                        };
                                                    };
                                                    readonly id: 4698;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "28123:9:21";
                                                    readonly memberName: "baseToken";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 7144;
                                                    readonly src: "28115:17:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_contract$_IERC20_$6740";
                                                        readonly typeString: "contract IERC20";
                                                    };
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_contract$_IERC20_$6740";
                                                        readonly typeString: "contract IERC20";
                                                    }];
                                                    readonly id: 4696;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly lValueRequested: false;
                                                    readonly nodeType: "ElementaryTypeNameExpression";
                                                    readonly src: "28107:7:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_type$_t_address_$";
                                                        readonly typeString: "type(address)";
                                                    };
                                                    readonly typeName: {
                                                        readonly id: 4695;
                                                        readonly name: "address";
                                                        readonly nodeType: "ElementaryTypeName";
                                                        readonly src: "28107:7:21";
                                                        readonly typeDescriptions: {};
                                                    };
                                                };
                                                readonly id: 4699;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly kind: "typeConversion";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "28107:26:21";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_address";
                                                    readonly typeString: "address";
                                                };
                                            }];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [{
                                                    readonly typeIdentifier: "t_address";
                                                    readonly typeString: "address";
                                                }];
                                                readonly id: 4694;
                                                readonly name: "ERC20";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 66324;
                                                readonly src: "28101:5:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_type$_t_contract$_ERC20_$66324_$";
                                                    readonly typeString: "type(contract ERC20)";
                                                };
                                            };
                                            readonly id: 4700;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "typeConversion";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "28101:33:21";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_ERC20_$66324";
                                                readonly typeString: "contract ERC20";
                                            };
                                        };
                                        readonly id: 4701;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "28135:16:21";
                                        readonly memberName: "safeTransferFrom";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 66541;
                                        readonly src: "28101:50:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_contract$_IERC20_$66402_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$66402_$";
                                            readonly typeString: "function (contract IERC20,address,address,uint256)";
                                        };
                                    };
                                    readonly id: 4709;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "28101:154:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4710;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "28101:154:21";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly arguments: readonly [{
                                            readonly id: 4721;
                                            readonly name: "hyperdrive";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4595;
                                            readonly src: "28341:10:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                                readonly typeString: "contract IHyperdrive";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                                readonly typeString: "contract IHyperdrive";
                                            }];
                                            readonly id: 4720;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "ElementaryTypeNameExpression";
                                            readonly src: "28333:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_address_$";
                                                readonly typeString: "type(address)";
                                            };
                                            readonly typeName: {
                                                readonly id: 4719;
                                                readonly name: "address";
                                                readonly nodeType: "ElementaryTypeName";
                                                readonly src: "28333:7:21";
                                                readonly typeDescriptions: {};
                                            };
                                        };
                                        readonly id: 4722;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "28333:19:21";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 4723;
                                        readonly name: "_contribution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4562;
                                        readonly src: "28370:13:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly arguments: readonly [{
                                                readonly arguments: readonly [{
                                                    readonly expression: {
                                                        readonly id: 4714;
                                                        readonly name: "_config";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 4558;
                                                        readonly src: "28283:7:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                        };
                                                    };
                                                    readonly id: 4715;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "28291:9:21";
                                                    readonly memberName: "baseToken";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 7144;
                                                    readonly src: "28283:17:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_contract$_IERC20_$6740";
                                                        readonly typeString: "contract IERC20";
                                                    };
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_contract$_IERC20_$6740";
                                                        readonly typeString: "contract IERC20";
                                                    }];
                                                    readonly id: 4713;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly lValueRequested: false;
                                                    readonly nodeType: "ElementaryTypeNameExpression";
                                                    readonly src: "28275:7:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_type$_t_address_$";
                                                        readonly typeString: "type(address)";
                                                    };
                                                    readonly typeName: {
                                                        readonly id: 4712;
                                                        readonly name: "address";
                                                        readonly nodeType: "ElementaryTypeName";
                                                        readonly src: "28275:7:21";
                                                        readonly typeDescriptions: {};
                                                    };
                                                };
                                                readonly id: 4716;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly kind: "typeConversion";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "28275:26:21";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_address";
                                                    readonly typeString: "address";
                                                };
                                            }];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [{
                                                    readonly typeIdentifier: "t_address";
                                                    readonly typeString: "address";
                                                }];
                                                readonly id: 4711;
                                                readonly name: "ERC20";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 66324;
                                                readonly src: "28269:5:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_type$_t_contract$_ERC20_$66324_$";
                                                    readonly typeString: "type(contract ERC20)";
                                                };
                                            };
                                            readonly id: 4717;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "typeConversion";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "28269:33:21";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_ERC20_$66324";
                                                readonly typeString: "contract ERC20";
                                            };
                                        };
                                        readonly id: 4718;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "28303:12:21";
                                        readonly memberName: "forceApprove";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 66662;
                                        readonly src: "28269:46:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_contract$_IERC20_$66402_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$66402_$";
                                            readonly typeString: "function (contract IERC20,address,uint256)";
                                        };
                                    };
                                    readonly id: 4724;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "28269:128:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4725;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "28269:128:21";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 4729;
                                        readonly name: "_contribution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4562;
                                        readonly src: "28502:13:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 4730;
                                        readonly name: "_fixedAPR";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4564;
                                        readonly src: "28533:9:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly arguments: readonly [{
                                            readonly expression: {
                                                readonly id: 4733;
                                                readonly name: "msg";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -15;
                                                readonly src: "28615:3:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_magic_message";
                                                    readonly typeString: "msg";
                                                };
                                            };
                                            readonly id: 4734;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "28619:6:21";
                                            readonly memberName: "sender";
                                            readonly nodeType: "MemberAccess";
                                            readonly src: "28615:10:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        }, {
                                            readonly hexValue: "74727565";
                                            readonly id: 4735;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "bool";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "28655:4:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                            readonly value: "true";
                                        }, {
                                            readonly id: 4736;
                                            readonly name: "_initializeExtraData";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4568;
                                            readonly src: "28692:20:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bytes_memory_ptr";
                                                readonly typeString: "bytes memory";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            }, {
                                                readonly typeIdentifier: "t_bytes_memory_ptr";
                                                readonly typeString: "bytes memory";
                                            }];
                                            readonly expression: {
                                                readonly id: 4731;
                                                readonly name: "IHyperdrive";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 7411;
                                                readonly src: "28560:11:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_type$_t_contract$_IHyperdrive_$7411_$";
                                                    readonly typeString: "type(contract IHyperdrive)";
                                                };
                                            };
                                            readonly id: 4732;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "28572:7:21";
                                            readonly memberName: "Options";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7271;
                                            readonly src: "28560:19:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_struct$_Options_$7271_storage_ptr_$";
                                                readonly typeString: "type(struct IHyperdrive.Options storage pointer)";
                                            };
                                        };
                                        readonly id: 4737;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "structConstructorCall";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly ["28602:11:21", "28647:6:21", "28681:9:21"];
                                        readonly names: readonly ["destination", "asBase", "extraData"];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "28560:171:21";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Options_$7271_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Options memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_struct$_Options_$7271_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Options memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 4726;
                                            readonly name: "hyperdrive";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4595;
                                            readonly src: "28463:10:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                                readonly typeString: "contract IHyperdrive";
                                            };
                                        };
                                        readonly id: 4728;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "28474:10:21";
                                        readonly memberName: "initialize";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7494;
                                        readonly src: "28463:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_payable$_t_uint256_$_t_uint256_$_t_struct$_Options_$7271_memory_ptr_$returns$_t_uint256_$";
                                            readonly typeString: "function (uint256,uint256,struct IHyperdrive.Options memory) payable external returns (uint256)";
                                        };
                                    };
                                    readonly id: 4738;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "28463:282:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly id: 4739;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "28463:282:21";
                            }];
                        };
                        readonly id: 4741;
                        readonly nodeType: "IfStatement";
                        readonly src: "27277:1479:21";
                        readonly trueBody: {
                            readonly id: 4688;
                            readonly nodeType: "Block";
                            readonly src: "27309:529:21";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly id: 4670;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftHandSide: {
                                        readonly id: 4665;
                                        readonly name: "refund";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4659;
                                        readonly src: "27421:6:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "Assignment";
                                    readonly operator: "=";
                                    readonly rightHandSide: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4669;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly id: 4666;
                                                readonly name: "msg";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -15;
                                                readonly src: "27430:3:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_magic_message";
                                                    readonly typeString: "msg";
                                                };
                                            };
                                            readonly id: 4667;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "27434:5:21";
                                            readonly memberName: "value";
                                            readonly nodeType: "MemberAccess";
                                            readonly src: "27430:9:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "-";
                                        readonly rightExpression: {
                                            readonly id: 4668;
                                            readonly name: "_contribution";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4562;
                                            readonly src: "27442:13:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "27430:25:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "27421:34:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly id: 4671;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "27421:34:21";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 4677;
                                        readonly name: "_contribution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4562;
                                        readonly src: "27584:13:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 4678;
                                        readonly name: "_fixedAPR";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4564;
                                        readonly src: "27615:9:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly arguments: readonly [{
                                            readonly expression: {
                                                readonly id: 4681;
                                                readonly name: "msg";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -15;
                                                readonly src: "27697:3:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_magic_message";
                                                    readonly typeString: "msg";
                                                };
                                            };
                                            readonly id: 4682;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "27701:6:21";
                                            readonly memberName: "sender";
                                            readonly nodeType: "MemberAccess";
                                            readonly src: "27697:10:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        }, {
                                            readonly hexValue: "74727565";
                                            readonly id: 4683;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "bool";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "27737:4:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                            readonly value: "true";
                                        }, {
                                            readonly id: 4684;
                                            readonly name: "_initializeExtraData";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4568;
                                            readonly src: "27774:20:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bytes_memory_ptr";
                                                readonly typeString: "bytes memory";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            }, {
                                                readonly typeIdentifier: "t_bytes_memory_ptr";
                                                readonly typeString: "bytes memory";
                                            }];
                                            readonly expression: {
                                                readonly id: 4679;
                                                readonly name: "IHyperdrive";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 7411;
                                                readonly src: "27642:11:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_type$_t_contract$_IHyperdrive_$7411_$";
                                                    readonly typeString: "type(contract IHyperdrive)";
                                                };
                                            };
                                            readonly id: 4680;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "27654:7:21";
                                            readonly memberName: "Options";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7271;
                                            readonly src: "27642:19:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_struct$_Options_$7271_storage_ptr_$";
                                                readonly typeString: "type(struct IHyperdrive.Options storage pointer)";
                                            };
                                        };
                                        readonly id: 4685;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "structConstructorCall";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly ["27684:11:21", "27729:6:21", "27763:9:21"];
                                        readonly names: readonly ["destination", "asBase", "extraData"];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "27642:171:21";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Options_$7271_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Options memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_struct$_Options_$7271_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Options memory";
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            }, {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            }, {
                                                readonly typeIdentifier: "t_struct$_Options_$7271_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Options memory";
                                            }];
                                            readonly expression: {
                                                readonly id: 4672;
                                                readonly name: "hyperdrive";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 4595;
                                                readonly src: "27521:10:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                                    readonly typeString: "contract IHyperdrive";
                                                };
                                            };
                                            readonly id: 4674;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "27532:10:21";
                                            readonly memberName: "initialize";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7494;
                                            readonly src: "27521:21:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_function_external_payable$_t_uint256_$_t_uint256_$_t_struct$_Options_$7271_memory_ptr_$returns$_t_uint256_$";
                                                readonly typeString: "function (uint256,uint256,struct IHyperdrive.Options memory) payable external returns (uint256)";
                                            };
                                        };
                                        readonly id: 4676;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly names: readonly ["value"];
                                        readonly nodeType: "FunctionCallOptions";
                                        readonly options: readonly [{
                                            readonly id: 4675;
                                            readonly name: "_contribution";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4562;
                                            readonly src: "27551:13:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        }];
                                        readonly src: "27521:45:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_payable$_t_uint256_$_t_uint256_$_t_struct$_Options_$7271_memory_ptr_$returns$_t_uint256_$value";
                                            readonly typeString: "function (uint256,uint256,struct IHyperdrive.Options memory) payable external returns (uint256)";
                                        };
                                    };
                                    readonly id: 4686;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "27521:306:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly id: 4687;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "27521:306:21";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 4744;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 4742;
                                readonly name: "refund";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4659;
                                readonly src: "28837:6:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 4743;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "28846:1:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "28837:10:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4768;
                        readonly nodeType: "IfStatement";
                        readonly src: "28833:207:21";
                        readonly trueBody: {
                            readonly id: 4767;
                            readonly nodeType: "Block";
                            readonly src: "28849:191:21";
                            readonly statements: readonly [{
                                readonly assignments: readonly [4746, null];
                                readonly declarations: readonly [{
                                    readonly constant: false;
                                    readonly id: 4746;
                                    readonly mutability: "mutable";
                                    readonly name: "success";
                                    readonly nameLocation: "28869:7:21";
                                    readonly nodeType: "VariableDeclaration";
                                    readonly scope: 4767;
                                    readonly src: "28864:12:21";
                                    readonly stateVariable: false;
                                    readonly storageLocation: "default";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly typeName: {
                                        readonly id: 4745;
                                        readonly name: "bool";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "28864:4:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly visibility: "internal";
                                }, null];
                                readonly id: 4757;
                                readonly initialValue: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "";
                                        readonly id: 4755;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "28924:2:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470";
                                            readonly typeString: "literal_string \"\"";
                                        };
                                        readonly value: "";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470";
                                            readonly typeString: "literal_string \"\"";
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470";
                                                readonly typeString: "literal_string \"\"";
                                            }];
                                            readonly expression: {
                                                readonly arguments: readonly [{
                                                    readonly expression: {
                                                        readonly id: 4749;
                                                        readonly name: "msg";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: -15;
                                                        readonly src: "28890:3:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_magic_message";
                                                            readonly typeString: "msg";
                                                        };
                                                    };
                                                    readonly id: 4750;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "28894:6:21";
                                                    readonly memberName: "sender";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly src: "28890:10:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    };
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    }];
                                                    readonly id: 4748;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly lValueRequested: false;
                                                    readonly nodeType: "ElementaryTypeNameExpression";
                                                    readonly src: "28882:8:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_type$_t_address_payable_$";
                                                        readonly typeString: "type(address payable)";
                                                    };
                                                    readonly typeName: {
                                                        readonly id: 4747;
                                                        readonly name: "address";
                                                        readonly nodeType: "ElementaryTypeName";
                                                        readonly src: "28882:8:21";
                                                        readonly stateMutability: "payable";
                                                        readonly typeDescriptions: {};
                                                    };
                                                };
                                                readonly id: 4751;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly kind: "typeConversion";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "28882:19:21";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_address_payable";
                                                    readonly typeString: "address payable";
                                                };
                                            };
                                            readonly id: 4752;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "28902:4:21";
                                            readonly memberName: "call";
                                            readonly nodeType: "MemberAccess";
                                            readonly src: "28882:24:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$";
                                                readonly typeString: "function (bytes memory) payable returns (bool,bytes memory)";
                                            };
                                        };
                                        readonly id: 4754;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly names: readonly ["value"];
                                        readonly nodeType: "FunctionCallOptions";
                                        readonly options: readonly [{
                                            readonly id: 4753;
                                            readonly name: "refund";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4659;
                                            readonly src: "28915:6:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        }];
                                        readonly src: "28882:41:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value";
                                            readonly typeString: "function (bytes memory) payable returns (bool,bytes memory)";
                                        };
                                    };
                                    readonly id: 4756;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "28882:45:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$_t_bool_$_t_bytes_memory_ptr_$";
                                        readonly typeString: "tuple(bool,bytes memory)";
                                    };
                                };
                                readonly nodeType: "VariableDeclarationStatement";
                                readonly src: "28863:64:21";
                            }, {
                                readonly condition: {
                                    readonly id: 4759;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "UnaryOperation";
                                    readonly operator: "!";
                                    readonly prefix: true;
                                    readonly src: "28945:8:21";
                                    readonly subExpression: {
                                        readonly id: 4758;
                                        readonly name: "success";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4746;
                                        readonly src: "28946:7:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly id: 4766;
                                readonly nodeType: "IfStatement";
                                readonly src: "28941:89:21";
                                readonly trueBody: {
                                    readonly id: 4765;
                                    readonly nodeType: "Block";
                                    readonly src: "28955:75:21";
                                    readonly statements: readonly [{
                                        readonly errorCall: {
                                            readonly arguments: readonly [];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [];
                                                readonly expression: {
                                                    readonly id: 4760;
                                                    readonly name: "IHyperdriveFactory";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 7965;
                                                    readonly src: "28980:18:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                        readonly typeString: "type(contract IHyperdriveFactory)";
                                                    };
                                                };
                                                readonly id: 4762;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "28999:14:21";
                                                readonly memberName: "TransferFailed";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 7962;
                                                readonly src: "28980:33:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                                    readonly typeString: "function () pure";
                                                };
                                            };
                                            readonly id: 4763;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "28980:35:21";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_tuple$__$";
                                                readonly typeString: "tuple()";
                                            };
                                        };
                                        readonly id: 4764;
                                        readonly nodeType: "RevertStatement";
                                        readonly src: "28973:42:21";
                                    }];
                                };
                            }];
                        };
                    }, {
                        readonly body: {
                            readonly id: 4790;
                            readonly nodeType: "Block";
                            readonly src: "29219:130:21";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly baseExpression: {
                                            readonly id: 4780;
                                            readonly name: "_defaultPausers";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3578;
                                            readonly src: "29254:15:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                                readonly typeString: "address[] storage ref";
                                            };
                                        };
                                        readonly id: 4782;
                                        readonly indexExpression: {
                                            readonly id: 4781;
                                            readonly name: "i";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4770;
                                            readonly src: "29270:1:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "IndexAccess";
                                        readonly src: "29254:18:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly hexValue: "74727565";
                                        readonly id: 4783;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "bool";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "29274:4:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                        readonly value: "true";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        }];
                                        readonly expression: {
                                            readonly id: 4777;
                                            readonly name: "hyperdrive";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4595;
                                            readonly src: "29233:10:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                                readonly typeString: "contract IHyperdrive";
                                            };
                                        };
                                        readonly id: 4779;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "29244:9:21";
                                        readonly memberName: "setPauser";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7570;
                                        readonly src: "29233:20:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$";
                                            readonly typeString: "function (address,bool) external";
                                        };
                                    };
                                    readonly id: 4784;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "29233:46:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4785;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "29233:46:21";
                            }, {
                                readonly id: 4789;
                                readonly nodeType: "UncheckedBlock";
                                readonly src: "29293:46:21";
                                readonly statements: readonly [{
                                    readonly expression: {
                                        readonly id: 4787;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "UnaryOperation";
                                        readonly operator: "++";
                                        readonly prefix: true;
                                        readonly src: "29321:3:21";
                                        readonly subExpression: {
                                            readonly id: 4786;
                                            readonly name: "i";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4770;
                                            readonly src: "29323:1:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly id: 4788;
                                    readonly nodeType: "ExpressionStatement";
                                    readonly src: "29321:3:21";
                                }];
                            }];
                        };
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 4776;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 4773;
                                readonly name: "i";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4770;
                                readonly src: "29189:1:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 4774;
                                    readonly name: "_defaultPausers";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3578;
                                    readonly src: "29193:15:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 4775;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "29209:6:21";
                                readonly memberName: "length";
                                readonly nodeType: "MemberAccess";
                                readonly src: "29193:22:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "29189:26:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4791;
                        readonly initializationExpression: {
                            readonly assignments: readonly [4770];
                            readonly declarations: readonly [{
                                readonly constant: false;
                                readonly id: 4770;
                                readonly mutability: "mutable";
                                readonly name: "i";
                                readonly nameLocation: "29182:1:21";
                                readonly nodeType: "VariableDeclaration";
                                readonly scope: 4791;
                                readonly src: "29174:9:21";
                                readonly stateVariable: false;
                                readonly storageLocation: "default";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly typeName: {
                                    readonly id: 4769;
                                    readonly name: "uint256";
                                    readonly nodeType: "ElementaryTypeName";
                                    readonly src: "29174:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly visibility: "internal";
                            }];
                            readonly id: 4772;
                            readonly initialValue: {
                                readonly hexValue: "30";
                                readonly id: 4771;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "29186:1:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly nodeType: "VariableDeclarationStatement";
                            readonly src: "29174:13:21";
                        };
                        readonly nodeType: "ForStatement";
                        readonly src: "29169:180:21";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 4795;
                                readonly name: "hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3530;
                                readonly src: "29383:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly expression: {
                                    readonly id: 4792;
                                    readonly name: "hyperdrive";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4595;
                                    readonly src: "29358:10:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                        readonly typeString: "contract IHyperdrive";
                                    };
                                };
                                readonly id: 4794;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "29369:13:21";
                                readonly memberName: "setGovernance";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7563;
                                readonly src: "29358:24:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address) external";
                                };
                            };
                            readonly id: 4796;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "29358:46:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4797;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "29358:46:21";
                    }, {
                        readonly expression: {
                            readonly id: 4798;
                            readonly name: "hyperdrive";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 4595;
                            readonly src: "29422:10:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                readonly typeString: "contract IHyperdrive";
                            };
                        };
                        readonly functionReturnParameters: 4575;
                        readonly id: 4799;
                        readonly nodeType: "Return";
                        readonly src: "29415:17:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4551;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "24270:1031:21";
                    readonly text: "@notice Deploys a Hyperdrive instance with the factory's configuration.\n @dev This function is declared as payable to allow payable overrides\n      to accept ether on initialization, but payability is not supported\n      by default.\n @param _deploymentId The deployment ID to use when deploying the pool.\n @param _deployerCoordinator The deployer coordinator to use in this\n        deployment.\n @param _config The configuration of the Hyperdrive pool.\n @param _extraData The extra data that contains data necessary for the\n        specific deployer.\n @param _contribution The contribution amount in base to the pool.\n @param _fixedAPR The fixed APR used to initialize the pool.\n @param _timeStretchAPR The time stretch APR used to initialize the pool.\n @param _initializeExtraData The extra data for the `initialize` call.\n @param _salt The create2 salt to use for the deployment.\n @return The hyperdrive address deployed.";
                };
                readonly functionSelector: "7324b145";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "deployAndInitialize";
                readonly nameLocation: "25315:19:21";
                readonly parameters: {
                    readonly id: 4571;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4553;
                        readonly mutability: "mutable";
                        readonly name: "_deploymentId";
                        readonly nameLocation: "25352:13:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4801;
                        readonly src: "25344:21:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 4552;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "25344:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4555;
                        readonly mutability: "mutable";
                        readonly name: "_deployerCoordinator";
                        readonly nameLocation: "25383:20:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4801;
                        readonly src: "25375:28:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 4554;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "25375:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4558;
                        readonly mutability: "mutable";
                        readonly name: "_config";
                        readonly nameLocation: "25449:7:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4801;
                        readonly src: "25413:43:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 4557;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 4556;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["25413:11:21", "25425:16:21"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7176;
                                readonly src: "25413:28:21";
                            };
                            readonly referencedDeclaration: 7176;
                            readonly src: "25413:28:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4560;
                        readonly mutability: "mutable";
                        readonly name: "_extraData";
                        readonly nameLocation: "25479:10:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4801;
                        readonly src: "25466:23:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 4559;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "25466:5:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4562;
                        readonly mutability: "mutable";
                        readonly name: "_contribution";
                        readonly nameLocation: "25507:13:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4801;
                        readonly src: "25499:21:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4561;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "25499:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4564;
                        readonly mutability: "mutable";
                        readonly name: "_fixedAPR";
                        readonly nameLocation: "25538:9:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4801;
                        readonly src: "25530:17:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4563;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "25530:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4566;
                        readonly mutability: "mutable";
                        readonly name: "_timeStretchAPR";
                        readonly nameLocation: "25565:15:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4801;
                        readonly src: "25557:23:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4565;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "25557:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4568;
                        readonly mutability: "mutable";
                        readonly name: "_initializeExtraData";
                        readonly nameLocation: "25603:20:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4801;
                        readonly src: "25590:33:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 4567;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "25590:5:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4570;
                        readonly mutability: "mutable";
                        readonly name: "_salt";
                        readonly nameLocation: "25641:5:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4801;
                        readonly src: "25633:13:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 4569;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "25633:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "25334:318:21";
                };
                readonly returnParameters: {
                    readonly id: 4575;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4574;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4801;
                        readonly src: "25679:11:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                            readonly typeString: "contract IHyperdrive";
                        };
                        readonly typeName: {
                            readonly id: 4573;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 4572;
                                readonly name: "IHyperdrive";
                                readonly nameLocations: readonly ["25679:11:21"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7411;
                                readonly src: "25679:11:21";
                            };
                            readonly referencedDeclaration: 7411;
                            readonly src: "25679:11:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$7411";
                                readonly typeString: "contract IHyperdrive";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "25678:13:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "payable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4864;
                readonly nodeType: "FunctionDefinition";
                readonly src: "30204:1269:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4863;
                    readonly nodeType: "Block";
                    readonly src: "30527:946:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly id: 4827;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "UnaryOperation";
                            readonly operator: "!";
                            readonly prefix: true;
                            readonly src: "30610:44:21";
                            readonly subExpression: {
                                readonly baseExpression: {
                                    readonly id: 4824;
                                    readonly name: "isDeployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3642;
                                    readonly src: "30611:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 4826;
                                readonly indexExpression: {
                                    readonly id: 4825;
                                    readonly name: "_deployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4806;
                                    readonly src: "30633:20:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "IndexAccess";
                                readonly src: "30611:43:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4834;
                        readonly nodeType: "IfStatement";
                        readonly src: "30606:129:21";
                        readonly trueBody: {
                            readonly id: 4833;
                            readonly nodeType: "Block";
                            readonly src: "30656:79:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4828;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "30677:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4830;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "30696:26:21";
                                        readonly memberName: "InvalidDeployerCoordinator";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7930;
                                        readonly src: "30677:45:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4831;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "30677:47:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4832;
                                readonly nodeType: "RevertStatement";
                                readonly src: "30670:54:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 4836;
                                readonly name: "_config";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4809;
                                readonly src: "30887:7:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }, {
                                readonly id: 4837;
                                readonly name: "_fixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4813;
                                readonly src: "30896:9:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 4838;
                                readonly name: "_timeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4815;
                                readonly src: "30907:15:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 4835;
                                readonly name: "_overrideConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5330;
                                readonly src: "30871:15:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$7176_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory,uint256,uint256) view";
                                };
                            };
                            readonly id: 4839;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "30871:52:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 4840;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "30871:52:21";
                    }, {
                        readonly assignments: readonly [4842];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 4842;
                            readonly mutability: "mutable";
                            readonly name: "target";
                            readonly nameLocation: "31021:6:21";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 4863;
                            readonly src: "31013:14:21";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly typeName: {
                                readonly id: 4841;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "31013:7:21";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 4860;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly expression: {
                                            readonly id: 4850;
                                            readonly name: "msg";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -15;
                                            readonly src: "31295:3:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_message";
                                                readonly typeString: "msg";
                                            };
                                        };
                                        readonly id: 4851;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "31299:6:21";
                                        readonly memberName: "sender";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "31295:10:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 4852;
                                        readonly name: "_deploymentId";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4804;
                                        readonly src: "31307:13:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes32";
                                            readonly typeString: "bytes32";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_bytes32";
                                            readonly typeString: "bytes32";
                                        }];
                                        readonly expression: {
                                            readonly id: 4848;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "31284:3:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 4849;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "31288:6:21";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "31284:10:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 4853;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "31284:37:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 4847;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "31274:9:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 4854;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "31274:48:21";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            }, {
                                readonly id: 4855;
                                readonly name: "_config";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4809;
                                readonly src: "31340:7:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }, {
                                readonly id: 4856;
                                readonly name: "_extraData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4811;
                                readonly src: "31365:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 4857;
                                readonly name: "_targetIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4817;
                                readonly src: "31393:12:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 4858;
                                readonly name: "_salt";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4819;
                                readonly src: "31423:5:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                }, {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 4844;
                                        readonly name: "_deployerCoordinator";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 4806;
                                        readonly src: "31061:20:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 4843;
                                        readonly name: "IHyperdriveDeployerCoordinator";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 7673;
                                        readonly src: "31030:30:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$7673_$";
                                            readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                        };
                                    };
                                    readonly id: 4845;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "31030:52:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IHyperdriveDeployerCoordinator_$7673";
                                        readonly typeString: "contract IHyperdriveDeployerCoordinator";
                                    };
                                };
                                readonly id: 4846;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "31096:12:21";
                                readonly memberName: "deployTarget";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7672;
                                readonly src: "31030:78:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_bytes32_$_t_struct$_PoolDeployConfig_$7176_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes32_$returns$_t_address_$";
                                    readonly typeString: "function (bytes32,struct IHyperdrive.PoolDeployConfig memory,bytes memory,uint256,bytes32) external returns (address)";
                                };
                            };
                            readonly id: 4859;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "31030:412:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "31013:429:21";
                    }, {
                        readonly expression: {
                            readonly id: 4861;
                            readonly name: "target";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 4842;
                            readonly src: "31460:6:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly functionReturnParameters: 4823;
                        readonly id: 4862;
                        readonly nodeType: "Return";
                        readonly src: "31453:13:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4802;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "29445:754:21";
                    readonly text: "@notice Deploys a Hyperdrive target with the factory's configuration.\n @param _deploymentId The deployment ID to use when deploying the pool.\n @param _deployerCoordinator The deployer coordinator to use in this\n        deployment.\n @param _config The configuration of the Hyperdrive pool.\n @param _extraData The extra data that contains data necessary for the\n        specific deployer.\n @param _fixedAPR The fixed APR used to initialize the pool.\n @param _timeStretchAPR The time stretch APR used to initialize the pool.\n @param _targetIndex The index of the target to deploy.\n @param _salt The create2 salt to use for the deployment.\n @return The target address deployed.";
                };
                readonly functionSelector: "6be6d7d4";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "deployTarget";
                readonly nameLocation: "30213:12:21";
                readonly parameters: {
                    readonly id: 4820;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4804;
                        readonly mutability: "mutable";
                        readonly name: "_deploymentId";
                        readonly nameLocation: "30243:13:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4864;
                        readonly src: "30235:21:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 4803;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "30235:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4806;
                        readonly mutability: "mutable";
                        readonly name: "_deployerCoordinator";
                        readonly nameLocation: "30274:20:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4864;
                        readonly src: "30266:28:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 4805;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "30266:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4809;
                        readonly mutability: "mutable";
                        readonly name: "_config";
                        readonly nameLocation: "30340:7:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4864;
                        readonly src: "30304:43:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 4808;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 4807;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["30304:11:21", "30316:16:21"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7176;
                                readonly src: "30304:28:21";
                            };
                            readonly referencedDeclaration: 7176;
                            readonly src: "30304:28:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4811;
                        readonly mutability: "mutable";
                        readonly name: "_extraData";
                        readonly nameLocation: "30370:10:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4864;
                        readonly src: "30357:23:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 4810;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "30357:5:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4813;
                        readonly mutability: "mutable";
                        readonly name: "_fixedAPR";
                        readonly nameLocation: "30398:9:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4864;
                        readonly src: "30390:17:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4812;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "30390:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4815;
                        readonly mutability: "mutable";
                        readonly name: "_timeStretchAPR";
                        readonly nameLocation: "30425:15:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4864;
                        readonly src: "30417:23:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4814;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "30417:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4817;
                        readonly mutability: "mutable";
                        readonly name: "_targetIndex";
                        readonly nameLocation: "30458:12:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4864;
                        readonly src: "30450:20:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4816;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "30450:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4819;
                        readonly mutability: "mutable";
                        readonly name: "_salt";
                        readonly nameLocation: "30488:5:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4864;
                        readonly src: "30480:13:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 4818;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "30480:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "30225:274:21";
                };
                readonly returnParameters: {
                    readonly id: 4823;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4822;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4864;
                        readonly src: "30518:7:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 4821;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "30518:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "30517:9:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4874;
                readonly nodeType: "FunctionDefinition";
                readonly src: "31544:99:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4873;
                    readonly nodeType: "Block";
                    readonly src: "31611:32:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 4871;
                            readonly name: "_maxFees";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 3574;
                            readonly src: "31628:8:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly functionReturnParameters: 4870;
                        readonly id: 4872;
                        readonly nodeType: "Return";
                        readonly src: "31621:15:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4865;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "31479:60:21";
                    readonly text: "@notice Gets the max fees.\n @return The max fees.";
                };
                readonly functionSelector: "e83e34b1";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "maxFees";
                readonly nameLocation: "31553:7:21";
                readonly parameters: {
                    readonly id: 4866;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "31560:2:21";
                };
                readonly returnParameters: {
                    readonly id: 4870;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4869;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4874;
                        readonly src: "31586:23:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                        readonly typeName: {
                            readonly id: 4868;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 4867;
                                readonly name: "IHyperdrive.Fees";
                                readonly nameLocations: readonly ["31586:11:21", "31598:4:21"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7140;
                                readonly src: "31586:16:21";
                            };
                            readonly referencedDeclaration: 7140;
                            readonly src: "31586:16:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Fees";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "31585:25:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4884;
                readonly nodeType: "FunctionDefinition";
                readonly src: "31714:99:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4883;
                    readonly nodeType: "Block";
                    readonly src: "31781:32:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 4881;
                            readonly name: "_minFees";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 3570;
                            readonly src: "31798:8:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly functionReturnParameters: 4880;
                        readonly id: 4882;
                        readonly nodeType: "Return";
                        readonly src: "31791:15:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4875;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "31649:60:21";
                    readonly text: "@notice Gets the min fees.\n @return The min fees.";
                };
                readonly functionSelector: "c1722563";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "minFees";
                readonly nameLocation: "31723:7:21";
                readonly parameters: {
                    readonly id: 4876;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "31730:2:21";
                };
                readonly returnParameters: {
                    readonly id: 4880;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4879;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4884;
                        readonly src: "31756:23:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                        readonly typeName: {
                            readonly id: 4878;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 4877;
                                readonly name: "IHyperdrive.Fees";
                                readonly nameLocations: readonly ["31756:11:21", "31768:4:21"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7140;
                                readonly src: "31756:16:21";
                            };
                            readonly referencedDeclaration: 7140;
                            readonly src: "31756:16:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Fees";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "31755:25:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4894;
                readonly nodeType: "FunctionDefinition";
                readonly src: "31898:106:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4893;
                    readonly nodeType: "Block";
                    readonly src: "31965:39:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 4891;
                            readonly name: "_defaultPausers";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 3578;
                            readonly src: "31982:15:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                readonly typeString: "address[] storage ref";
                            };
                        };
                        readonly functionReturnParameters: 4890;
                        readonly id: 4892;
                        readonly nodeType: "Return";
                        readonly src: "31975:22:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4885;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "31819:74:21";
                    readonly text: "@notice Gets the default pausers.\n @return The default pausers.";
                };
                readonly functionSelector: "a64c90bf";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "defaultPausers";
                readonly nameLocation: "31907:14:21";
                readonly parameters: {
                    readonly id: 4886;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "31921:2:21";
                };
                readonly returnParameters: {
                    readonly id: 4890;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4889;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4894;
                        readonly src: "31947:16:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 4887;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "31947:7:21";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 4888;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "31947:9:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "31946:18:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4904;
                readonly nodeType: "FunctionDefinition";
                readonly src: "32147:105:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4903;
                    readonly nodeType: "Block";
                    readonly src: "32211:41:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly expression: {
                                readonly id: 4900;
                                readonly name: "_instances";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3651;
                                readonly src: "32228:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly id: 4901;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly memberLocation: "32239:6:21";
                            readonly memberName: "length";
                            readonly nodeType: "MemberAccess";
                            readonly src: "32228:17:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 4899;
                        readonly id: 4902;
                        readonly nodeType: "Return";
                        readonly src: "32221:24:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4895;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "32010:132:21";
                    readonly text: "@notice Gets the number of instances deployed by this factory.\n @return The number of instances deployed by this factory.";
                };
                readonly functionSelector: "6e95d67c";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getNumberOfInstances";
                readonly nameLocation: "32156:20:21";
                readonly parameters: {
                    readonly id: 4896;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "32176:2:21";
                };
                readonly returnParameters: {
                    readonly id: 4899;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4898;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4904;
                        readonly src: "32202:7:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4897;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "32202:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "32201:9:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4917;
                readonly nodeType: "FunctionDefinition";
                readonly src: "32424:116:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4916;
                    readonly nodeType: "Block";
                    readonly src: "32499:41:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly baseExpression: {
                                readonly id: 4912;
                                readonly name: "_instances";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3651;
                                readonly src: "32516:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly id: 4914;
                            readonly indexExpression: {
                                readonly id: 4913;
                                readonly name: "index";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4907;
                                readonly src: "32527:5:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly isConstant: false;
                            readonly isLValue: true;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "IndexAccess";
                            readonly src: "32516:17:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly functionReturnParameters: 4911;
                        readonly id: 4915;
                        readonly nodeType: "Return";
                        readonly src: "32509:24:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4905;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "32258:161:21";
                    readonly text: "@notice Gets the instance at the specified index.\n @param index The index of the instance to get.\n @return The instance at the specified index.";
                };
                readonly functionSelector: "daac24da";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getInstanceAtIndex";
                readonly nameLocation: "32433:18:21";
                readonly parameters: {
                    readonly id: 4908;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4907;
                        readonly mutability: "mutable";
                        readonly name: "index";
                        readonly nameLocation: "32460:5:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4917;
                        readonly src: "32452:13:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4906;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "32452:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "32451:15:21";
                };
                readonly returnParameters: {
                    readonly id: 4911;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4910;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4917;
                        readonly src: "32490:7:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 4909;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "32490:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "32489:9:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4984;
                readonly nodeType: "FunctionDefinition";
                readonly src: "32835:628:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4983;
                    readonly nodeType: "Block";
                    readonly src: "32971:492:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 4930;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 4928;
                                readonly name: "startIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4920;
                                readonly src: "33034:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 4929;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4922;
                                readonly src: "33047:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "33034:21:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4937;
                        readonly nodeType: "IfStatement";
                        readonly src: "33030:94:21";
                        readonly trueBody: {
                            readonly id: 4936;
                            readonly nodeType: "Block";
                            readonly src: "33057:67:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4931;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "33078:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4933;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "33097:14:21";
                                        readonly memberName: "InvalidIndexes";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7934;
                                        readonly src: "33078:33:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4934;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "33078:35:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4935;
                                readonly nodeType: "RevertStatement";
                                readonly src: "33071:42:21";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 4941;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 4938;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4922;
                                readonly src: "33137:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 4939;
                                    readonly name: "_instances";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3651;
                                    readonly src: "33148:10:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 4940;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "33159:6:21";
                                readonly memberName: "length";
                                readonly nodeType: "MemberAccess";
                                readonly src: "33148:17:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "33137:28:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4948;
                        readonly nodeType: "IfStatement";
                        readonly src: "33133:103:21";
                        readonly trueBody: {
                            readonly id: 4947;
                            readonly nodeType: "Block";
                            readonly src: "33167:69:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 4942;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "33188:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 4944;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "33207:16:21";
                                        readonly memberName: "EndIndexTooLarge";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7922;
                                        readonly src: "33188:35:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 4945;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "33188:37:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 4946;
                                readonly nodeType: "RevertStatement";
                                readonly src: "33181:44:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 4959;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 4949;
                                readonly name: "range";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4926;
                                readonly src: "33288:5:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                    readonly typeString: "address[] memory";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 4957;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 4955;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 4953;
                                            readonly name: "endIndex";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4922;
                                            readonly src: "33310:8:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "-";
                                        readonly rightExpression: {
                                            readonly id: 4954;
                                            readonly name: "startIndex";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4920;
                                            readonly src: "33321:10:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "33310:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "+";
                                    readonly rightExpression: {
                                        readonly hexValue: "31";
                                        readonly id: 4956;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "33334:1:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_1_by_1";
                                            readonly typeString: "int_const 1";
                                        };
                                        readonly value: "1";
                                    };
                                    readonly src: "33310:25:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 4952;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "NewExpression";
                                    readonly src: "33296:13:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$";
                                        readonly typeString: "function (uint256) pure returns (address[] memory)";
                                    };
                                    readonly typeName: {
                                        readonly baseType: {
                                            readonly id: 4950;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "33300:7:21";
                                            readonly stateMutability: "nonpayable";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly id: 4951;
                                        readonly nodeType: "ArrayTypeName";
                                        readonly src: "33300:9:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                            readonly typeString: "address[]";
                                        };
                                    };
                                };
                                readonly id: 4958;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "33296:40:21";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                    readonly typeString: "address[] memory";
                                };
                            };
                            readonly src: "33288:48:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                readonly typeString: "address[] memory";
                            };
                        };
                        readonly id: 4960;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "33288:48:21";
                    }, {
                        readonly body: {
                            readonly id: 4981;
                            readonly nodeType: "Block";
                            readonly src: "33395:62:21";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly id: 4979;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftHandSide: {
                                        readonly baseExpression: {
                                            readonly id: 4971;
                                            readonly name: "range";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4926;
                                            readonly src: "33409:5:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                                readonly typeString: "address[] memory";
                                            };
                                        };
                                        readonly id: 4975;
                                        readonly indexExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                            readonly id: 4974;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly id: 4972;
                                                readonly name: "i";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 4962;
                                                readonly src: "33415:1:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "-";
                                            readonly rightExpression: {
                                                readonly id: 4973;
                                                readonly name: "startIndex";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 4920;
                                                readonly src: "33419:10:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly src: "33415:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: true;
                                        readonly nodeType: "IndexAccess";
                                        readonly src: "33409:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    };
                                    readonly nodeType: "Assignment";
                                    readonly operator: "=";
                                    readonly rightHandSide: {
                                        readonly baseExpression: {
                                            readonly id: 4976;
                                            readonly name: "_instances";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3651;
                                            readonly src: "33433:10:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                                readonly typeString: "address[] storage ref";
                                            };
                                        };
                                        readonly id: 4978;
                                        readonly indexExpression: {
                                            readonly id: 4977;
                                            readonly name: "i";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 4962;
                                            readonly src: "33444:1:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "IndexAccess";
                                        readonly src: "33433:13:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    };
                                    readonly src: "33409:37:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly id: 4980;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "33409:37:21";
                            }];
                        };
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 4967;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 4965;
                                readonly name: "i";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4962;
                                readonly src: "33375:1:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<=";
                            readonly rightExpression: {
                                readonly id: 4966;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4922;
                                readonly src: "33380:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "33375:13:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 4982;
                        readonly initializationExpression: {
                            readonly assignments: readonly [4962];
                            readonly declarations: readonly [{
                                readonly constant: false;
                                readonly id: 4962;
                                readonly mutability: "mutable";
                                readonly name: "i";
                                readonly nameLocation: "33359:1:21";
                                readonly nodeType: "VariableDeclaration";
                                readonly scope: 4982;
                                readonly src: "33351:9:21";
                                readonly stateVariable: false;
                                readonly storageLocation: "default";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly typeName: {
                                    readonly id: 4961;
                                    readonly name: "uint256";
                                    readonly nodeType: "ElementaryTypeName";
                                    readonly src: "33351:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly visibility: "internal";
                            }];
                            readonly id: 4964;
                            readonly initialValue: {
                                readonly id: 4963;
                                readonly name: "startIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4920;
                                readonly src: "33363:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "VariableDeclarationStatement";
                            readonly src: "33351:22:21";
                        };
                        readonly loopExpression: {
                            readonly expression: {
                                readonly id: 4969;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "++";
                                readonly prefix: false;
                                readonly src: "33390:3:21";
                                readonly subExpression: {
                                    readonly id: 4968;
                                    readonly name: "i";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 4962;
                                    readonly src: "33390:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 4970;
                            readonly nodeType: "ExpressionStatement";
                            readonly src: "33390:3:21";
                        };
                        readonly nodeType: "ForStatement";
                        readonly src: "33346:111:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4918;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "32546:284:21";
                    readonly text: "@notice Returns the _instances array according to specified indices.\n @param startIndex The starting index of the instances to get.\n @param endIndex The ending index of the instances to get.\n @return range The resulting custom portion of the _instances array.";
                };
                readonly functionSelector: "bc30e7a1";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getInstancesInRange";
                readonly nameLocation: "32844:19:21";
                readonly parameters: {
                    readonly id: 4923;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4920;
                        readonly mutability: "mutable";
                        readonly name: "startIndex";
                        readonly nameLocation: "32881:10:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4984;
                        readonly src: "32873:18:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4919;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "32873:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 4922;
                        readonly mutability: "mutable";
                        readonly name: "endIndex";
                        readonly nameLocation: "32909:8:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4984;
                        readonly src: "32901:16:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4921;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "32901:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "32863:60:21";
                };
                readonly returnParameters: {
                    readonly id: 4927;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4926;
                        readonly mutability: "mutable";
                        readonly name: "range";
                        readonly nameLocation: "32964:5:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4984;
                        readonly src: "32947:22:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 4924;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "32947:7:21";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 4925;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "32947:9:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "32946:24:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 4994;
                readonly nodeType: "FunctionDefinition";
                readonly src: "33648:127:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 4993;
                    readonly nodeType: "Block";
                    readonly src: "33723:52:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly expression: {
                                readonly id: 4990;
                                readonly name: "_deployerCoordinators";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3637;
                                readonly src: "33740:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly id: 4991;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly memberLocation: "33762:6:21";
                            readonly memberName: "length";
                            readonly nodeType: "MemberAccess";
                            readonly src: "33740:28:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 4989;
                        readonly id: 4992;
                        readonly nodeType: "Return";
                        readonly src: "33733:35:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4985;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "33469:174:21";
                    readonly text: "@notice Gets the number of deployer coordinators registered in this\n         factory.\n @return The number of deployer coordinators deployed by this factory.";
                };
                readonly functionSelector: "e1b39c80";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getNumberOfDeployerCoordinators";
                readonly nameLocation: "33657:31:21";
                readonly parameters: {
                    readonly id: 4986;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "33688:2:21";
                };
                readonly returnParameters: {
                    readonly id: 4989;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4988;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 4994;
                        readonly src: "33714:7:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4987;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "33714:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "33713:9:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 5007;
                readonly nodeType: "FunctionDefinition";
                readonly src: "33983:152:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 5006;
                    readonly nodeType: "Block";
                    readonly src: "34083:52:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly baseExpression: {
                                readonly id: 5002;
                                readonly name: "_deployerCoordinators";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3637;
                                readonly src: "34100:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly id: 5004;
                            readonly indexExpression: {
                                readonly id: 5003;
                                readonly name: "index";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 4997;
                                readonly src: "34122:5:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly isConstant: false;
                            readonly isLValue: true;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "IndexAccess";
                            readonly src: "34100:28:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly functionReturnParameters: 5001;
                        readonly id: 5005;
                        readonly nodeType: "Return";
                        readonly src: "34093:35:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 4995;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "33781:197:21";
                    readonly text: "@notice Gets the deployer coordinator at the specified index.\n @param index The index of the deployer coordinator to get.\n @return The deployer coordinator at the specified index.";
                };
                readonly functionSelector: "fe3d5aeb";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getDeployerCoordinatorAtIndex";
                readonly nameLocation: "33992:29:21";
                readonly parameters: {
                    readonly id: 4998;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 4997;
                        readonly mutability: "mutable";
                        readonly name: "index";
                        readonly nameLocation: "34039:5:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 5007;
                        readonly src: "34031:13:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 4996;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "34031:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "34021:29:21";
                };
                readonly returnParameters: {
                    readonly id: 5001;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 5000;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 5007;
                        readonly src: "34074:7:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 4999;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "34074:7:21";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "34073:9:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 5074;
                readonly nodeType: "FunctionDefinition";
                readonly src: "34462:661:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 5073;
                    readonly nodeType: "Block";
                    readonly src: "34609:514:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 5020;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 5018;
                                readonly name: "startIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5010;
                                readonly src: "34672:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 5019;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5012;
                                readonly src: "34685:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "34672:21:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5027;
                        readonly nodeType: "IfStatement";
                        readonly src: "34668:94:21";
                        readonly trueBody: {
                            readonly id: 5026;
                            readonly nodeType: "Block";
                            readonly src: "34695:67:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 5021;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "34716:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 5023;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "34735:14:21";
                                        readonly memberName: "InvalidIndexes";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7934;
                                        readonly src: "34716:33:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 5024;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "34716:35:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 5025;
                                readonly nodeType: "RevertStatement";
                                readonly src: "34709:42:21";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 5031;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 5028;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5012;
                                readonly src: "34775:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 5029;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3637;
                                    readonly src: "34786:21:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 5030;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "34808:6:21";
                                readonly memberName: "length";
                                readonly nodeType: "MemberAccess";
                                readonly src: "34786:28:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "34775:39:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5038;
                        readonly nodeType: "IfStatement";
                        readonly src: "34771:114:21";
                        readonly trueBody: {
                            readonly id: 5037;
                            readonly nodeType: "Block";
                            readonly src: "34816:69:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 5032;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "34837:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 5034;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "34856:16:21";
                                        readonly memberName: "EndIndexTooLarge";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7922;
                                        readonly src: "34837:35:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 5035;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "34837:37:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 5036;
                                readonly nodeType: "RevertStatement";
                                readonly src: "34830:44:21";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 5049;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 5039;
                                readonly name: "range";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5016;
                                readonly src: "34937:5:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                    readonly typeString: "address[] memory";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 5047;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 5045;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 5043;
                                            readonly name: "endIndex";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5012;
                                            readonly src: "34959:8:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "-";
                                        readonly rightExpression: {
                                            readonly id: 5044;
                                            readonly name: "startIndex";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5010;
                                            readonly src: "34970:10:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "34959:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "+";
                                    readonly rightExpression: {
                                        readonly hexValue: "31";
                                        readonly id: 5046;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "34983:1:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_1_by_1";
                                            readonly typeString: "int_const 1";
                                        };
                                        readonly value: "1";
                                    };
                                    readonly src: "34959:25:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 5042;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "NewExpression";
                                    readonly src: "34945:13:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$";
                                        readonly typeString: "function (uint256) pure returns (address[] memory)";
                                    };
                                    readonly typeName: {
                                        readonly baseType: {
                                            readonly id: 5040;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "34949:7:21";
                                            readonly stateMutability: "nonpayable";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly id: 5041;
                                        readonly nodeType: "ArrayTypeName";
                                        readonly src: "34949:9:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                            readonly typeString: "address[]";
                                        };
                                    };
                                };
                                readonly id: 5048;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "34945:40:21";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                    readonly typeString: "address[] memory";
                                };
                            };
                            readonly src: "34937:48:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                readonly typeString: "address[] memory";
                            };
                        };
                        readonly id: 5050;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "34937:48:21";
                    }, {
                        readonly body: {
                            readonly id: 5071;
                            readonly nodeType: "Block";
                            readonly src: "35044:73:21";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly id: 5069;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftHandSide: {
                                        readonly baseExpression: {
                                            readonly id: 5061;
                                            readonly name: "range";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5016;
                                            readonly src: "35058:5:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                                readonly typeString: "address[] memory";
                                            };
                                        };
                                        readonly id: 5065;
                                        readonly indexExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                            readonly id: 5064;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly id: 5062;
                                                readonly name: "i";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5052;
                                                readonly src: "35064:1:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "-";
                                            readonly rightExpression: {
                                                readonly id: 5063;
                                                readonly name: "startIndex";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5010;
                                                readonly src: "35068:10:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly src: "35064:14:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: true;
                                        readonly nodeType: "IndexAccess";
                                        readonly src: "35058:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    };
                                    readonly nodeType: "Assignment";
                                    readonly operator: "=";
                                    readonly rightHandSide: {
                                        readonly baseExpression: {
                                            readonly id: 5066;
                                            readonly name: "_deployerCoordinators";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3637;
                                            readonly src: "35082:21:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                                readonly typeString: "address[] storage ref";
                                            };
                                        };
                                        readonly id: 5068;
                                        readonly indexExpression: {
                                            readonly id: 5067;
                                            readonly name: "i";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5052;
                                            readonly src: "35104:1:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "IndexAccess";
                                        readonly src: "35082:24:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    };
                                    readonly src: "35058:48:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly id: 5070;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "35058:48:21";
                            }];
                        };
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 5057;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 5055;
                                readonly name: "i";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5052;
                                readonly src: "35024:1:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<=";
                            readonly rightExpression: {
                                readonly id: 5056;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5012;
                                readonly src: "35029:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "35024:13:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5072;
                        readonly initializationExpression: {
                            readonly assignments: readonly [5052];
                            readonly declarations: readonly [{
                                readonly constant: false;
                                readonly id: 5052;
                                readonly mutability: "mutable";
                                readonly name: "i";
                                readonly nameLocation: "35008:1:21";
                                readonly nodeType: "VariableDeclaration";
                                readonly scope: 5072;
                                readonly src: "35000:9:21";
                                readonly stateVariable: false;
                                readonly storageLocation: "default";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly typeName: {
                                    readonly id: 5051;
                                    readonly name: "uint256";
                                    readonly nodeType: "ElementaryTypeName";
                                    readonly src: "35000:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly visibility: "internal";
                            }];
                            readonly id: 5054;
                            readonly initialValue: {
                                readonly id: 5053;
                                readonly name: "startIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5010;
                                readonly src: "35012:10:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "VariableDeclarationStatement";
                            readonly src: "35000:22:21";
                        };
                        readonly loopExpression: {
                            readonly expression: {
                                readonly id: 5059;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "++";
                                readonly prefix: false;
                                readonly src: "35039:3:21";
                                readonly subExpression: {
                                    readonly id: 5058;
                                    readonly name: "i";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5052;
                                    readonly src: "35039:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 5060;
                            readonly nodeType: "ExpressionStatement";
                            readonly src: "35039:3:21";
                        };
                        readonly nodeType: "ForStatement";
                        readonly src: "34995:122:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 5008;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "34141:316:21";
                    readonly text: "@notice Returns the deployer coordinators with an index between the\n         starting and ending indexes (inclusive).\n @param startIndex The starting index (inclusive).\n @param endIndex The ending index (inclusive).\n @return range The deployer coordinators within the specified range.";
                };
                readonly functionSelector: "ec895f11";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getDeployerCoordinatorsInRange";
                readonly nameLocation: "34471:30:21";
                readonly parameters: {
                    readonly id: 5013;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 5010;
                        readonly mutability: "mutable";
                        readonly name: "startIndex";
                        readonly nameLocation: "34519:10:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 5074;
                        readonly src: "34511:18:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 5009;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "34511:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 5012;
                        readonly mutability: "mutable";
                        readonly name: "endIndex";
                        readonly nameLocation: "34547:8:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 5074;
                        readonly src: "34539:16:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 5011;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "34539:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "34501:60:21";
                };
                readonly returnParameters: {
                    readonly id: 5017;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 5016;
                        readonly mutability: "mutable";
                        readonly name: "range";
                        readonly nameLocation: "34602:5:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 5074;
                        readonly src: "34585:22:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 5014;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "34585:7:21";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 5015;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "34585:9:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "34584:24:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 5330;
                readonly nodeType: "FunctionDefinition";
                readonly src: "35520:3784:21";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 5329;
                    readonly nodeType: "Block";
                    readonly src: "35678:3626:21";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 5100;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 5093;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 5088;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 5085;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5078;
                                            readonly src: "35896:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 5086;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "35904:18:21";
                                        readonly memberName: "checkpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7162;
                                        readonly src: "35896:26:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 5087;
                                        readonly name: "minCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3545;
                                        readonly src: "35925:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "35896:50:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 5092;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 5089;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5078;
                                            readonly src: "35962:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 5090;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "35970:18:21";
                                        readonly memberName: "checkpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7162;
                                        readonly src: "35962:26:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: ">";
                                    readonly rightExpression: {
                                        readonly id: 5091;
                                        readonly name: "maxCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3548;
                                        readonly src: "35991:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "35962:50:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "35896:116:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5099;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 5097;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 5094;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5078;
                                            readonly src: "36028:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 5095;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "36036:18:21";
                                        readonly memberName: "checkpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7162;
                                        readonly src: "36028:26:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly id: 5096;
                                        readonly name: "checkpointDurationResolution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3542;
                                        readonly src: "36057:28:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "36028:57:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 5098;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "36089:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "36028:62:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "35896:194:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5107;
                        readonly nodeType: "IfStatement";
                        readonly src: "35879:300:21";
                        readonly trueBody: {
                            readonly id: 5106;
                            readonly nodeType: "Block";
                            readonly src: "36101:78:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 5101;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "36122:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 5103;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "36141:25:21";
                                        readonly memberName: "InvalidCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7924;
                                        readonly src: "36122:44:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 5104;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "36122:46:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 5105;
                                readonly nodeType: "RevertStatement";
                                readonly src: "36115:53:21";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 5124;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 5116;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 5111;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 5108;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5078;
                                            readonly src: "36394:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 5109;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "36402:16:21";
                                        readonly memberName: "positionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7159;
                                        readonly src: "36394:24:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 5110;
                                        readonly name: "minPositionDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3551;
                                        readonly src: "36421:19:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "36394:46:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 5115;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 5112;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5078;
                                            readonly src: "36456:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 5113;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "36464:16:21";
                                        readonly memberName: "positionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7159;
                                        readonly src: "36456:24:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: ">";
                                    readonly rightExpression: {
                                        readonly id: 5114;
                                        readonly name: "maxPositionDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3554;
                                        readonly src: "36483:19:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "36456:46:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "36394:108:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5123;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 5121;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 5117;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5078;
                                            readonly src: "36518:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 5118;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "36526:16:21";
                                        readonly memberName: "positionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7159;
                                        readonly src: "36518:24:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 5119;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5078;
                                            readonly src: "36545:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 5120;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "36553:18:21";
                                        readonly memberName: "checkpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7162;
                                        readonly src: "36545:26:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "36518:53:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 5122;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "36575:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "36518:58:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "36394:182:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5131;
                        readonly nodeType: "IfStatement";
                        readonly src: "36377:286:21";
                        readonly trueBody: {
                            readonly id: 5130;
                            readonly nodeType: "Block";
                            readonly src: "36587:76:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 5125;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "36608:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 5127;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "36627:23:21";
                                        readonly memberName: "InvalidPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7948;
                                        readonly src: "36608:42:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 5128;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "36608:44:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 5129;
                                readonly nodeType: "RevertStatement";
                                readonly src: "36601:51:21";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 5186;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 5179;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 5172;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                        readonly id: 5165;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                            readonly id: 5158;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                                readonly id: 5151;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly commonType: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                    readonly id: 5144;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly leftExpression: {
                                                        readonly commonType: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                        readonly id: 5137;
                                                        readonly isConstant: false;
                                                        readonly isLValue: false;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly leftExpression: {
                                                            readonly expression: {
                                                                readonly expression: {
                                                                    readonly id: 5132;
                                                                    readonly name: "_config";
                                                                    readonly nodeType: "Identifier";
                                                                    readonly overloadedDeclarations: readonly [];
                                                                    readonly referencedDeclaration: 5078;
                                                                    readonly src: "36773:7:21";
                                                                    readonly typeDescriptions: {
                                                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                                    };
                                                                };
                                                                readonly id: 5133;
                                                                readonly isConstant: false;
                                                                readonly isLValue: true;
                                                                readonly isPure: false;
                                                                readonly lValueRequested: false;
                                                                readonly memberLocation: "36781:4:21";
                                                                readonly memberName: "fees";
                                                                readonly nodeType: "MemberAccess";
                                                                readonly referencedDeclaration: 7175;
                                                                readonly src: "36773:12:21";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                                };
                                                            };
                                                            readonly id: 5134;
                                                            readonly isConstant: false;
                                                            readonly isLValue: true;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "36786:5:21";
                                                            readonly memberName: "curve";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 7130;
                                                            readonly src: "36773:18:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly nodeType: "BinaryOperation";
                                                        readonly operator: ">";
                                                        readonly rightExpression: {
                                                            readonly expression: {
                                                                readonly id: 5135;
                                                                readonly name: "_maxFees";
                                                                readonly nodeType: "Identifier";
                                                                readonly overloadedDeclarations: readonly [];
                                                                readonly referencedDeclaration: 3574;
                                                                readonly src: "36794:8:21";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                                };
                                                            };
                                                            readonly id: 5136;
                                                            readonly isConstant: false;
                                                            readonly isLValue: true;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "36803:5:21";
                                                            readonly memberName: "curve";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 7130;
                                                            readonly src: "36794:14:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly src: "36773:35:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_bool";
                                                            readonly typeString: "bool";
                                                        };
                                                    };
                                                    readonly nodeType: "BinaryOperation";
                                                    readonly operator: "||";
                                                    readonly rightExpression: {
                                                        readonly commonType: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                        readonly id: 5143;
                                                        readonly isConstant: false;
                                                        readonly isLValue: false;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly leftExpression: {
                                                            readonly expression: {
                                                                readonly expression: {
                                                                    readonly id: 5138;
                                                                    readonly name: "_config";
                                                                    readonly nodeType: "Identifier";
                                                                    readonly overloadedDeclarations: readonly [];
                                                                    readonly referencedDeclaration: 5078;
                                                                    readonly src: "36824:7:21";
                                                                    readonly typeDescriptions: {
                                                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                                    };
                                                                };
                                                                readonly id: 5139;
                                                                readonly isConstant: false;
                                                                readonly isLValue: true;
                                                                readonly isPure: false;
                                                                readonly lValueRequested: false;
                                                                readonly memberLocation: "36832:4:21";
                                                                readonly memberName: "fees";
                                                                readonly nodeType: "MemberAccess";
                                                                readonly referencedDeclaration: 7175;
                                                                readonly src: "36824:12:21";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                                };
                                                            };
                                                            readonly id: 5140;
                                                            readonly isConstant: false;
                                                            readonly isLValue: true;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "36837:4:21";
                                                            readonly memberName: "flat";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 7133;
                                                            readonly src: "36824:17:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly nodeType: "BinaryOperation";
                                                        readonly operator: ">";
                                                        readonly rightExpression: {
                                                            readonly expression: {
                                                                readonly id: 5141;
                                                                readonly name: "_maxFees";
                                                                readonly nodeType: "Identifier";
                                                                readonly overloadedDeclarations: readonly [];
                                                                readonly referencedDeclaration: 3574;
                                                                readonly src: "36844:8:21";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                                };
                                                            };
                                                            readonly id: 5142;
                                                            readonly isConstant: false;
                                                            readonly isLValue: true;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "36853:4:21";
                                                            readonly memberName: "flat";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 7133;
                                                            readonly src: "36844:13:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly src: "36824:33:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_bool";
                                                            readonly typeString: "bool";
                                                        };
                                                    };
                                                    readonly src: "36773:84:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: "||";
                                                readonly rightExpression: {
                                                    readonly commonType: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                    readonly id: 5150;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly leftExpression: {
                                                        readonly expression: {
                                                            readonly expression: {
                                                                readonly id: 5145;
                                                                readonly name: "_config";
                                                                readonly nodeType: "Identifier";
                                                                readonly overloadedDeclarations: readonly [];
                                                                readonly referencedDeclaration: 5078;
                                                                readonly src: "36873:7:21";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                                };
                                                            };
                                                            readonly id: 5146;
                                                            readonly isConstant: false;
                                                            readonly isLValue: true;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "36881:4:21";
                                                            readonly memberName: "fees";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 7175;
                                                            readonly src: "36873:12:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                                            };
                                                        };
                                                        readonly id: 5147;
                                                        readonly isConstant: false;
                                                        readonly isLValue: true;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly memberLocation: "36886:12:21";
                                                        readonly memberName: "governanceLP";
                                                        readonly nodeType: "MemberAccess";
                                                        readonly referencedDeclaration: 7136;
                                                        readonly src: "36873:25:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                    };
                                                    readonly nodeType: "BinaryOperation";
                                                    readonly operator: ">";
                                                    readonly rightExpression: {
                                                        readonly expression: {
                                                            readonly id: 5148;
                                                            readonly name: "_maxFees";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 3574;
                                                            readonly src: "36901:8:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                            };
                                                        };
                                                        readonly id: 5149;
                                                        readonly isConstant: false;
                                                        readonly isLValue: true;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly memberLocation: "36910:12:21";
                                                        readonly memberName: "governanceLP";
                                                        readonly nodeType: "MemberAccess";
                                                        readonly referencedDeclaration: 7136;
                                                        readonly src: "36901:21:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                    };
                                                    readonly src: "36873:49:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                };
                                                readonly src: "36773:149:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "||";
                                            readonly rightExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                                readonly id: 5157;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly expression: {
                                                        readonly expression: {
                                                            readonly id: 5152;
                                                            readonly name: "_config";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 5078;
                                                            readonly src: "36938:7:21";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                            };
                                                        };
                                                        readonly id: 5153;
                                                        readonly isConstant: false;
                                                        readonly isLValue: true;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly memberLocation: "36946:4:21";
                                                        readonly memberName: "fees";
                                                        readonly nodeType: "MemberAccess";
                                                        readonly referencedDeclaration: 7175;
                                                        readonly src: "36938:12:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                                        };
                                                    };
                                                    readonly id: 5154;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "36951:16:21";
                                                    readonly memberName: "governanceZombie";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 7139;
                                                    readonly src: "36938:29:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: ">";
                                                readonly rightExpression: {
                                                    readonly expression: {
                                                        readonly id: 5155;
                                                        readonly name: "_maxFees";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 3574;
                                                        readonly src: "36970:8:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                            readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                        };
                                                    };
                                                    readonly id: 5156;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "36979:16:21";
                                                    readonly memberName: "governanceZombie";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 7139;
                                                    readonly src: "36970:25:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly src: "36938:57:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                            };
                                            readonly src: "36773:222:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "||";
                                        readonly rightExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                            readonly id: 5164;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly expression: {
                                                    readonly expression: {
                                                        readonly id: 5159;
                                                        readonly name: "_config";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 5078;
                                                        readonly src: "37011:7:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                        };
                                                    };
                                                    readonly id: 5160;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "37019:4:21";
                                                    readonly memberName: "fees";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 7175;
                                                    readonly src: "37011:12:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                        readonly typeString: "struct IHyperdrive.Fees memory";
                                                    };
                                                };
                                                readonly id: 5161;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "37024:5:21";
                                                readonly memberName: "curve";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 7130;
                                                readonly src: "37011:18:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "<";
                                            readonly rightExpression: {
                                                readonly expression: {
                                                    readonly id: 5162;
                                                    readonly name: "_minFees";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 3570;
                                                    readonly src: "37032:8:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                        readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                    };
                                                };
                                                readonly id: 5163;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "37041:5:21";
                                                readonly memberName: "curve";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 7130;
                                                readonly src: "37032:14:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly src: "37011:35:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly src: "36773:273:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 5171;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 5166;
                                                    readonly name: "_config";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5078;
                                                    readonly src: "37062:7:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                    };
                                                };
                                                readonly id: 5167;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "37070:4:21";
                                                readonly memberName: "fees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 7175;
                                                readonly src: "37062:12:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 5168;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "37075:4:21";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7133;
                                            readonly src: "37062:17:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "<";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly id: 5169;
                                                readonly name: "_minFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 3570;
                                                readonly src: "37082:8:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                };
                                            };
                                            readonly id: 5170;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "37091:4:21";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7133;
                                            readonly src: "37082:13:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "37062:33:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "36773:322:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 5178;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly expression: {
                                                readonly id: 5173;
                                                readonly name: "_config";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5078;
                                                readonly src: "37111:7:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                };
                                            };
                                            readonly id: 5174;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "37119:4:21";
                                            readonly memberName: "fees";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7175;
                                            readonly src: "37111:12:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                            };
                                        };
                                        readonly id: 5175;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37124:12:21";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7136;
                                        readonly src: "37111:25:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 5176;
                                            readonly name: "_minFees";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3570;
                                            readonly src: "37139:8:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                                            };
                                        };
                                        readonly id: 5177;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37148:12:21";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7136;
                                        readonly src: "37139:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "37111:49:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "36773:387:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5185;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly expression: {
                                            readonly id: 5180;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5078;
                                            readonly src: "37176:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 5181;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37184:4:21";
                                        readonly memberName: "fees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7175;
                                        readonly src: "37176:12:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$7140_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                        };
                                    };
                                    readonly id: 5182;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "37189:16:21";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7139;
                                    readonly src: "37176:29:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 5183;
                                        readonly name: "_minFees";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3570;
                                        readonly src: "37208:8:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$7140_storage";
                                            readonly typeString: "struct IHyperdrive.Fees storage ref";
                                        };
                                    };
                                    readonly id: 5184;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "37217:16:21";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7139;
                                    readonly src: "37208:25:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "37176:57:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "36773:460:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5193;
                        readonly nodeType: "IfStatement";
                        readonly src: "36756:552:21";
                        readonly trueBody: {
                            readonly id: 5192;
                            readonly nodeType: "Block";
                            readonly src: "37244:64:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 5187;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "37265:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 5189;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37284:11:21";
                                        readonly memberName: "InvalidFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7932;
                                        readonly src: "37265:30:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 5190;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "37265:32:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 5191;
                                readonly nodeType: "RevertStatement";
                                readonly src: "37258:39:21";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 5229;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 5224;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 5216;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                        readonly id: 5208;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                            readonly id: 5200;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly expression: {
                                                    readonly id: 5194;
                                                    readonly name: "_config";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5078;
                                                    readonly src: "37552:7:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                    };
                                                };
                                                readonly id: 5195;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "37560:13:21";
                                                readonly memberName: "linkerFactory";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 7147;
                                                readonly src: "37552:21:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_address";
                                                    readonly typeString: "address";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "!=";
                                            readonly rightExpression: {
                                                readonly arguments: readonly [{
                                                    readonly hexValue: "30";
                                                    readonly id: 5198;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly kind: "number";
                                                    readonly lValueRequested: false;
                                                    readonly nodeType: "Literal";
                                                    readonly src: "37585:1:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_rational_0_by_1";
                                                        readonly typeString: "int_const 0";
                                                    };
                                                    readonly value: "0";
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_rational_0_by_1";
                                                        readonly typeString: "int_const 0";
                                                    }];
                                                    readonly id: 5197;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly lValueRequested: false;
                                                    readonly nodeType: "ElementaryTypeNameExpression";
                                                    readonly src: "37577:7:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_type$_t_address_$";
                                                        readonly typeString: "type(address)";
                                                    };
                                                    readonly typeName: {
                                                        readonly id: 5196;
                                                        readonly name: "address";
                                                        readonly nodeType: "ElementaryTypeName";
                                                        readonly src: "37577:7:21";
                                                        readonly typeDescriptions: {};
                                                    };
                                                };
                                                readonly id: 5199;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: true;
                                                readonly kind: "typeConversion";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "37577:10:21";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_address";
                                                    readonly typeString: "address";
                                                };
                                            };
                                            readonly src: "37552:35:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "||";
                                        readonly rightExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_bytes32";
                                                readonly typeString: "bytes32";
                                            };
                                            readonly id: 5207;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly expression: {
                                                    readonly id: 5201;
                                                    readonly name: "_config";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5078;
                                                    readonly src: "37603:7:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                    };
                                                };
                                                readonly id: 5202;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "37611:14:21";
                                                readonly memberName: "linkerCodeHash";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 7150;
                                                readonly src: "37603:22:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bytes32";
                                                    readonly typeString: "bytes32";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "!=";
                                            readonly rightExpression: {
                                                readonly arguments: readonly [{
                                                    readonly hexValue: "30";
                                                    readonly id: 5205;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly kind: "number";
                                                    readonly lValueRequested: false;
                                                    readonly nodeType: "Literal";
                                                    readonly src: "37637:1:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_rational_0_by_1";
                                                        readonly typeString: "int_const 0";
                                                    };
                                                    readonly value: "0";
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_rational_0_by_1";
                                                        readonly typeString: "int_const 0";
                                                    }];
                                                    readonly id: 5204;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly lValueRequested: false;
                                                    readonly nodeType: "ElementaryTypeNameExpression";
                                                    readonly src: "37629:7:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_type$_t_bytes32_$";
                                                        readonly typeString: "type(bytes32)";
                                                    };
                                                    readonly typeName: {
                                                        readonly id: 5203;
                                                        readonly name: "bytes32";
                                                        readonly nodeType: "ElementaryTypeName";
                                                        readonly src: "37629:7:21";
                                                        readonly typeDescriptions: {};
                                                    };
                                                };
                                                readonly id: 5206;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: true;
                                                readonly kind: "typeConversion";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "37629:10:21";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bytes32";
                                                    readonly typeString: "bytes32";
                                                };
                                            };
                                            readonly src: "37603:36:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly src: "37552:87:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                        readonly id: 5215;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly id: 5209;
                                                readonly name: "_config";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5078;
                                                readonly src: "37655:7:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                };
                                            };
                                            readonly id: 5210;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "37663:12:21";
                                            readonly memberName: "feeCollector";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 7171;
                                            readonly src: "37655:20:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "!=";
                                        readonly rightExpression: {
                                            readonly arguments: readonly [{
                                                readonly hexValue: "30";
                                                readonly id: 5213;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: true;
                                                readonly kind: "number";
                                                readonly lValueRequested: false;
                                                readonly nodeType: "Literal";
                                                readonly src: "37687:1:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_rational_0_by_1";
                                                    readonly typeString: "int_const 0";
                                                };
                                                readonly value: "0";
                                            }];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [{
                                                    readonly typeIdentifier: "t_rational_0_by_1";
                                                    readonly typeString: "int_const 0";
                                                }];
                                                readonly id: 5212;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: true;
                                                readonly lValueRequested: false;
                                                readonly nodeType: "ElementaryTypeNameExpression";
                                                readonly src: "37679:7:21";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_type$_t_address_$";
                                                    readonly typeString: "type(address)";
                                                };
                                                readonly typeName: {
                                                    readonly id: 5211;
                                                    readonly name: "address";
                                                    readonly nodeType: "ElementaryTypeName";
                                                    readonly src: "37679:7:21";
                                                    readonly typeDescriptions: {};
                                                };
                                            };
                                            readonly id: 5214;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "typeConversion";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "37679:10:21";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly src: "37655:34:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "37552:137:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                    readonly id: 5223;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 5217;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5078;
                                            readonly src: "37705:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 5218;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37713:10:21";
                                        readonly memberName: "governance";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7168;
                                        readonly src: "37705:18:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "!=";
                                    readonly rightExpression: {
                                        readonly arguments: readonly [{
                                            readonly hexValue: "30";
                                            readonly id: 5221;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "37735:1:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_0_by_1";
                                                readonly typeString: "int_const 0";
                                            };
                                            readonly value: "0";
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_rational_0_by_1";
                                                readonly typeString: "int_const 0";
                                            }];
                                            readonly id: 5220;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "ElementaryTypeNameExpression";
                                            readonly src: "37727:7:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_address_$";
                                                readonly typeString: "type(address)";
                                            };
                                            readonly typeName: {
                                                readonly id: 5219;
                                                readonly name: "address";
                                                readonly nodeType: "ElementaryTypeName";
                                                readonly src: "37727:7:21";
                                                readonly typeDescriptions: {};
                                            };
                                        };
                                        readonly id: 5222;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "37727:10:21";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    };
                                    readonly src: "37705:32:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "37552:185:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5228;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 5225;
                                        readonly name: "_config";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5078;
                                        readonly src: "37753:7:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                        };
                                    };
                                    readonly id: 5226;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "37761:11:21";
                                    readonly memberName: "timeStretch";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 7165;
                                    readonly src: "37753:19:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 5227;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "37776:1:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "37753:24:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "37552:225:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5236;
                        readonly nodeType: "IfStatement";
                        readonly src: "37535:325:21";
                        readonly trueBody: {
                            readonly id: 5235;
                            readonly nodeType: "Block";
                            readonly src: "37788:72:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 5230;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "37809:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 5232;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37828:19:21";
                                        readonly memberName: "InvalidDeployConfig";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7928;
                                        readonly src: "37809:38:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 5233;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "37809:40:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 5234;
                                readonly nodeType: "RevertStatement";
                                readonly src: "37802:47:21";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 5243;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5239;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 5237;
                                    readonly name: "_fixedAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5080;
                                    readonly src: "37974:9:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly id: 5238;
                                    readonly name: "minFixedAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3557;
                                    readonly src: "37986:11:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "37974:23:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5242;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 5240;
                                    readonly name: "_fixedAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5080;
                                    readonly src: "38001:9:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly id: 5241;
                                    readonly name: "maxFixedAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3560;
                                    readonly src: "38013:11:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "38001:23:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "37974:50:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5250;
                        readonly nodeType: "IfStatement";
                        readonly src: "37970:124:21";
                        readonly trueBody: {
                            readonly id: 5249;
                            readonly nodeType: "Block";
                            readonly src: "38026:68:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 5244;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "38047:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 5246;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "38066:15:21";
                                        readonly memberName: "InvalidFixedAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7954;
                                        readonly src: "38047:34:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 5247;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "38047:36:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 5248;
                                readonly nodeType: "RevertStatement";
                                readonly src: "38040:43:21";
                            }];
                        };
                    }, {
                        readonly assignments: readonly [5252];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 5252;
                            readonly mutability: "mutable";
                            readonly name: "lowerBound";
                            readonly nameLocation: "38294:10:21";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 5329;
                            readonly src: "38286:18:21";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 5251;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "38286:7:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 5260;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly hexValue: "302e303035653138";
                                readonly id: 5258;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "38335:8:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_5000000000000000_by_1";
                                    readonly typeString: "int_const 5000000000000000";
                                };
                                readonly value: "0.005e18";
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_rational_5000000000000000_by_1";
                                    readonly typeString: "int_const 5000000000000000";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "32653138";
                                        readonly id: 5255;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "38325:4:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_2000000000000000000_by_1";
                                            readonly typeString: "int_const 2000000000000000000";
                                        };
                                        readonly value: "2e18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_rational_2000000000000000000_by_1";
                                            readonly typeString: "int_const 2000000000000000000";
                                        }];
                                        readonly expression: {
                                            readonly id: 5253;
                                            readonly name: "_fixedAPR";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5080;
                                            readonly src: "38307:9:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly id: 5254;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "38317:7:21";
                                        readonly memberName: "divDown";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 13590;
                                        readonly src: "38307:17:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                            readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                        };
                                    };
                                    readonly id: 5256;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "38307:23:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly id: 5257;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "38331:3:21";
                                readonly memberName: "max";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 14257;
                                readonly src: "38307:27:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 5259;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "38307:37:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "38286:58:21";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 5279;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5266;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 5261;
                                    readonly name: "_timeStretchAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5082;
                                    readonly src: "38371:15:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly arguments: readonly [{
                                        readonly id: 5264;
                                        readonly name: "lowerBound";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5252;
                                        readonly src: "38411:10:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly id: 5262;
                                            readonly name: "minTimeStretchAPR";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3563;
                                            readonly src: "38389:17:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly id: 5263;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "38407:3:21";
                                        readonly memberName: "max";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 14257;
                                        readonly src: "38389:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                            readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                        };
                                    };
                                    readonly id: 5265;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "38389:33:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "38371:51:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5278;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 5267;
                                    readonly name: "_timeStretchAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5082;
                                    readonly src: "38438:15:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly arguments: readonly [{
                                        readonly arguments: readonly [{
                                            readonly hexValue: "32653138";
                                            readonly id: 5275;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "38524:4:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_2000000000000000000_by_1";
                                                readonly typeString: "int_const 2000000000000000000";
                                            };
                                            readonly value: "2e18";
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_rational_2000000000000000000_by_1";
                                                readonly typeString: "int_const 2000000000000000000";
                                            }];
                                            readonly expression: {
                                                readonly arguments: readonly [{
                                                    readonly id: 5272;
                                                    readonly name: "lowerBound";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5252;
                                                    readonly src: "38504:10:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    }];
                                                    readonly expression: {
                                                        readonly id: 5270;
                                                        readonly name: "_fixedAPR";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 5080;
                                                        readonly src: "38490:9:21";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                    };
                                                    readonly id: 5271;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "38500:3:21";
                                                    readonly memberName: "max";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 14257;
                                                    readonly src: "38490:13:21";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                                        readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                                    };
                                                };
                                                readonly id: 5273;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly kind: "functionCall";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "38490:25:21";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly id: 5274;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "38516:7:21";
                                            readonly memberName: "mulDown";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 13572;
                                            readonly src: "38490:33:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                                readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                            };
                                        };
                                        readonly id: 5276;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "functionCall";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "38490:39:21";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly id: 5268;
                                            readonly name: "maxTimeStretchAPR";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3566;
                                            readonly src: "38468:17:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly id: 5269;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "38486:3:21";
                                        readonly memberName: "min";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 14239;
                                        readonly src: "38468:21:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                            readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                        };
                                    };
                                    readonly id: 5277;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "38468:62:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "38438:92:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "38371:159:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5286;
                        readonly nodeType: "IfStatement";
                        readonly src: "38354:261:21";
                        readonly trueBody: {
                            readonly id: 5285;
                            readonly nodeType: "Block";
                            readonly src: "38541:74:21";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 5280;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7965;
                                            readonly src: "38562:18:21";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$7965_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 5282;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "38581:21:21";
                                        readonly memberName: "InvalidTimeStretchAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7960;
                                        readonly src: "38562:40:21";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 5283;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "38562:42:21";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 5284;
                                readonly nodeType: "RevertStatement";
                                readonly src: "38555:49:21";
                            }];
                        };
                    }, {
                        readonly assignments: readonly [5288];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 5288;
                            readonly mutability: "mutable";
                            readonly name: "timeStretch";
                            readonly nameLocation: "38632:11:21";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 5329;
                            readonly src: "38624:19:21";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 5287;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "38624:7:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 5295;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 5291;
                                readonly name: "_timeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5082;
                                readonly src: "38695:15:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly expression: {
                                    readonly id: 5292;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5078;
                                    readonly src: "38724:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 5293;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "38732:16:21";
                                readonly memberName: "positionDuration";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7159;
                                readonly src: "38724:24:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 5289;
                                    readonly name: "HyperdriveMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 15024;
                                    readonly src: "38646:14:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_HyperdriveMath_$15024_$";
                                        readonly typeString: "type(library HyperdriveMath)";
                                    };
                                };
                                readonly id: 5290;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "38661:20:21";
                                readonly memberName: "calculateTimeStretch";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 14407;
                                readonly src: "38646:35:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 5294;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "38646:112:21";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "38624:134:21";
                    }, {
                        readonly expression: {
                            readonly id: 5300;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 5296;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5078;
                                    readonly src: "39079:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 5298;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "39087:13:21";
                                readonly memberName: "linkerFactory";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7147;
                                readonly src: "39079:21:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 5299;
                                readonly name: "linkerFactory";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3533;
                                readonly src: "39103:13:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "39079:37:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 5301;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "39079:37:21";
                    }, {
                        readonly expression: {
                            readonly id: 5306;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 5302;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5078;
                                    readonly src: "39126:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 5304;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "39134:14:21";
                                readonly memberName: "linkerCodeHash";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7150;
                                readonly src: "39126:22:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 5305;
                                readonly name: "linkerCodeHash";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3536;
                                readonly src: "39151:14:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "39126:39:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly id: 5307;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "39126:39:21";
                    }, {
                        readonly expression: {
                            readonly id: 5312;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 5308;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5078;
                                    readonly src: "39175:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 5310;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "39183:12:21";
                                readonly memberName: "feeCollector";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7171;
                                readonly src: "39175:20:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 5311;
                                readonly name: "feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3539;
                                readonly src: "39198:12:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "39175:35:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 5313;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "39175:35:21";
                    }, {
                        readonly expression: {
                            readonly id: 5321;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 5314;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5078;
                                    readonly src: "39220:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 5316;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "39228:10:21";
                                readonly memberName: "governance";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7168;
                                readonly src: "39220:18:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly id: 5319;
                                    readonly name: "this";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -28;
                                    readonly src: "39249:4:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_HyperdriveFactory_$5331";
                                        readonly typeString: "contract HyperdriveFactory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_HyperdriveFactory_$5331";
                                        readonly typeString: "contract HyperdriveFactory";
                                    }];
                                    readonly id: 5318;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "39241:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 5317;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "39241:7:21";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 5320;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "39241:13:21";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "39220:34:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 5322;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "39220:34:21";
                    }, {
                        readonly expression: {
                            readonly id: 5327;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 5323;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5078;
                                    readonly src: "39264:7:21";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 5325;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "39272:11:21";
                                readonly memberName: "timeStretch";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7165;
                                readonly src: "39264:19:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 5326;
                                readonly name: "timeStretch";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5288;
                                readonly src: "39286:11:21";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "39264:33:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 5328;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "39264:33:21";
                    }];
                };
                readonly documentation: {
                    readonly id: 5075;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "35129:386:21";
                    readonly text: "@dev Overrides the config values to the default values set by\n      governance. In the process of overriding these parameters, this\n      verifies that the specified config is valid.\n @param _config The config to override.\n @param _fixedAPR The fixed APR to use in the override.\n @param _timeStretchAPR The time stretch APR to use in the override.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_overrideConfig";
                readonly nameLocation: "35529:15:21";
                readonly parameters: {
                    readonly id: 5083;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 5078;
                        readonly mutability: "mutable";
                        readonly name: "_config";
                        readonly nameLocation: "35590:7:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 5330;
                        readonly src: "35554:43:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 5077;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 5076;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["35554:11:21", "35566:16:21"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7176;
                                readonly src: "35554:28:21";
                            };
                            readonly referencedDeclaration: 7176;
                            readonly src: "35554:28:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7176_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 5080;
                        readonly mutability: "mutable";
                        readonly name: "_fixedAPR";
                        readonly nameLocation: "35615:9:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 5330;
                        readonly src: "35607:17:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 5079;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "35607:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 5082;
                        readonly mutability: "mutable";
                        readonly name: "_timeStretchAPR";
                        readonly nameLocation: "35642:15:21";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 5330;
                        readonly src: "35634:23:21";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 5081;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "35634:7:21";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "35544:119:21";
                };
                readonly returnParameters: {
                    readonly id: 5084;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "35678:0:21";
                };
                readonly scope: 5331;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 3516;
                    readonly name: "IHyperdriveFactory";
                    readonly nameLocations: readonly ["1009:18:21"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 7965;
                    readonly src: "1009:18:21";
                };
                readonly id: 3517;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "1009:18:21";
            }];
            readonly canonicalName: "HyperdriveFactory";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 3515;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "571:408:21";
                readonly text: "@author DELV\n @title HyperdriveFactory\n @notice Deploys hyperdrive instances and initializes them. It also holds a\n         registry of all deployed hyperdrive instances.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [5331, 7965];
            readonly name: "HyperdriveFactory";
            readonly nameLocation: "988:17:21";
            readonly scope: 5332;
            readonly usedErrors: readonly [7286, 7328, 7916, 7918, 7920, 7922, 7924, 7926, 7928, 7930, 7932, 7934, 7936, 7938, 7940, 7942, 7944, 7946, 7948, 7950, 7952, 7954, 7956, 7958, 7960, 7962, 7964, 66481, 66762, 66767, 66770];
            readonly usedEvents: readonly [7830, 7834, 7838, 7843, 7847, 7851, 7855, 7859, 7863, 7867, 7871, 7875, 7879, 7883, 7887, 7891, 7895, 7899, 7903, 7908, 7913];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 21;
};
//# sourceMappingURL=HyperdriveFactory.d.ts.map