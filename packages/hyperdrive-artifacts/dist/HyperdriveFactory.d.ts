export declare const HyperdriveFactory: {
    readonly abi: readonly [{
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "_factoryConfig";
            readonly type: "tuple";
            readonly internalType: "struct HyperdriveFactory.FactoryConfig";
            readonly components: readonly [{
                readonly name: "governance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "hyperdriveGovernance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "defaultPausers";
                readonly type: "address[]";
                readonly internalType: "address[]";
            }, {
                readonly name: "feeCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sweepCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "checkpointDurationResolution";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minCheckpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "maxCheckpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minPositionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "maxPositionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minFixedAPR";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "maxFixedAPR";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minTimeStretchAPR";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "maxTimeStretchAPR";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minFees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }, {
                readonly name: "maxFees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }, {
                readonly name: "linkerFactory";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }];
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "receive";
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly name: "addDeployerCoordinator";
        readonly inputs: readonly [{
            readonly name: "_deployerCoordinator";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "checkpointDurationResolution";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "defaultPausers";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "deployAndInitialize";
        readonly inputs: readonly [{
            readonly name: "_deploymentId";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }, {
            readonly name: "_deployerCoordinator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_config";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly components: readonly [{
                readonly name: "baseToken";
                readonly type: "address";
                readonly internalType: "contract IERC20";
            }, {
                readonly name: "linkerFactory";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "positionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "checkpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "timeStretch";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "feeCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sweepCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }];
        }, {
            readonly name: "_extraData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "_contribution";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_fixedAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_timeStretchAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_options";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.Options";
            readonly components: readonly [{
                readonly name: "destination";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "asBase";
                readonly type: "bool";
                readonly internalType: "bool";
            }, {
                readonly name: "extraData";
                readonly type: "bytes";
                readonly internalType: "bytes";
            }];
        }, {
            readonly name: "_salt";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "contract IHyperdrive";
        }];
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly name: "deployTarget";
        readonly inputs: readonly [{
            readonly name: "_deploymentId";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }, {
            readonly name: "_deployerCoordinator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_config";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly components: readonly [{
                readonly name: "baseToken";
                readonly type: "address";
                readonly internalType: "contract IERC20";
            }, {
                readonly name: "linkerFactory";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "positionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "checkpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "timeStretch";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "feeCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sweepCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }];
        }, {
            readonly name: "_extraData";
            readonly type: "bytes";
            readonly internalType: "bytes";
        }, {
            readonly name: "_fixedAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_timeStretchAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_targetIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "_salt";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "feeCollector";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getDeployerCoordinatorAtIndex";
        readonly inputs: readonly [{
            readonly name: "index";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getDeployerCoordinatorsInRange";
        readonly inputs: readonly [{
            readonly name: "startIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "endIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "range";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getInstanceAtIndex";
        readonly inputs: readonly [{
            readonly name: "index";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getInstancesInRange";
        readonly inputs: readonly [{
            readonly name: "startIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }, {
            readonly name: "endIndex";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [{
            readonly name: "range";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getNumberOfDeployerCoordinators";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "getNumberOfInstances";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "governance";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "hyperdriveGovernance";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "instancesToDeployerCoordinators";
        readonly inputs: readonly [{
            readonly name: "instance";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [{
            readonly name: "deployCoordinator";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "isDeployerCoordinator";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "isInstance";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "linkerCodeHash";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "linkerFactory";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "maxCheckpointDuration";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "maxFees";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "maxFixedAPR";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "maxPositionDuration";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "maxTimeStretchAPR";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "minCheckpointDuration";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "minFees";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "minFixedAPR";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "minPositionDuration";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "minTimeStretchAPR";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "removeDeployerCoordinator";
        readonly inputs: readonly [{
            readonly name: "_deployerCoordinator";
            readonly type: "address";
            readonly internalType: "address";
        }, {
            readonly name: "_index";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "sweepCollector";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "updateCheckpointDurationResolution";
        readonly inputs: readonly [{
            readonly name: "_checkpointDurationResolution";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateDefaultPausers";
        readonly inputs: readonly [{
            readonly name: "_defaultPausers_";
            readonly type: "address[]";
            readonly internalType: "address[]";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateFeeCollector";
        readonly inputs: readonly [{
            readonly name: "_feeCollector";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateGovernance";
        readonly inputs: readonly [{
            readonly name: "_governance";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateHyperdriveGovernance";
        readonly inputs: readonly [{
            readonly name: "_hyperdriveGovernance";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateLinkerCodeHash";
        readonly inputs: readonly [{
            readonly name: "_linkerCodeHash";
            readonly type: "bytes32";
            readonly internalType: "bytes32";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateLinkerFactory";
        readonly inputs: readonly [{
            readonly name: "_linkerFactory";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMaxCheckpointDuration";
        readonly inputs: readonly [{
            readonly name: "_maxCheckpointDuration";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMaxFees";
        readonly inputs: readonly [{
            readonly name: "__maxFees";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMaxFixedAPR";
        readonly inputs: readonly [{
            readonly name: "_maxFixedAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMaxPositionDuration";
        readonly inputs: readonly [{
            readonly name: "_maxPositionDuration";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMaxTimeStretchAPR";
        readonly inputs: readonly [{
            readonly name: "_maxTimeStretchAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMinCheckpointDuration";
        readonly inputs: readonly [{
            readonly name: "_minCheckpointDuration";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMinFees";
        readonly inputs: readonly [{
            readonly name: "__minFees";
            readonly type: "tuple";
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMinFixedAPR";
        readonly inputs: readonly [{
            readonly name: "_minFixedAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMinPositionDuration";
        readonly inputs: readonly [{
            readonly name: "_minPositionDuration";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateMinTimeStretchAPR";
        readonly inputs: readonly [{
            readonly name: "_minTimeStretchAPR";
            readonly type: "uint256";
            readonly internalType: "uint256";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly name: "updateSweepCollector";
        readonly inputs: readonly [{
            readonly name: "_sweepCollector";
            readonly type: "address";
            readonly internalType: "address";
        }];
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "event";
        readonly name: "CheckpointDurationResolutionUpdated";
        readonly inputs: readonly [{
            readonly name: "newCheckpointDurationResolution";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "DefaultPausersUpdated";
        readonly inputs: readonly [{
            readonly name: "newDefaultPausers";
            readonly type: "address[]";
            readonly indexed: false;
            readonly internalType: "address[]";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "Deployed";
        readonly inputs: readonly [{
            readonly name: "deployerCoordinator";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }, {
            readonly name: "hyperdrive";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }, {
            readonly name: "config";
            readonly type: "tuple";
            readonly indexed: false;
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly components: readonly [{
                readonly name: "baseToken";
                readonly type: "address";
                readonly internalType: "contract IERC20";
            }, {
                readonly name: "linkerFactory";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
                readonly internalType: "bytes32";
            }, {
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "positionDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "checkpointDuration";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "timeStretch";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governance";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "feeCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "sweepCollector";
                readonly type: "address";
                readonly internalType: "address";
            }, {
                readonly name: "fees";
                readonly type: "tuple";
                readonly internalType: "struct IHyperdrive.Fees";
                readonly components: readonly [{
                    readonly name: "curve";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "flat";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }, {
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                    readonly internalType: "uint256";
                }];
            }];
        }, {
            readonly name: "extraData";
            readonly type: "bytes";
            readonly indexed: false;
            readonly internalType: "bytes";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "DeployerCoordinatorAdded";
        readonly inputs: readonly [{
            readonly name: "deployerCoordinator";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "DeployerCoordinatorRemoved";
        readonly inputs: readonly [{
            readonly name: "deployerCoordinator";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "FeeCollectorUpdated";
        readonly inputs: readonly [{
            readonly name: "newFeeCollector";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "GovernanceUpdated";
        readonly inputs: readonly [{
            readonly name: "governance";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "HyperdriveGovernanceUpdated";
        readonly inputs: readonly [{
            readonly name: "hyperdriveGovernance";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LinkerCodeHashUpdated";
        readonly inputs: readonly [{
            readonly name: "newLinkerCodeHash";
            readonly type: "bytes32";
            readonly indexed: true;
            readonly internalType: "bytes32";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "LinkerFactoryUpdated";
        readonly inputs: readonly [{
            readonly name: "newLinkerFactory";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MaxCheckpointDurationUpdated";
        readonly inputs: readonly [{
            readonly name: "newMaxCheckpointDuration";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MaxFeesUpdated";
        readonly inputs: readonly [{
            readonly name: "newMaxFees";
            readonly type: "tuple";
            readonly indexed: false;
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MaxFixedAPRUpdated";
        readonly inputs: readonly [{
            readonly name: "newMaxFixedAPR";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MaxPositionDurationUpdated";
        readonly inputs: readonly [{
            readonly name: "newMaxPositionDuration";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MaxTimeStretchAPRUpdated";
        readonly inputs: readonly [{
            readonly name: "newMaxTimeStretchAPR";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MinCheckpointDurationUpdated";
        readonly inputs: readonly [{
            readonly name: "newMinCheckpointDuration";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MinFeesUpdated";
        readonly inputs: readonly [{
            readonly name: "newMinFees";
            readonly type: "tuple";
            readonly indexed: false;
            readonly internalType: "struct IHyperdrive.Fees";
            readonly components: readonly [{
                readonly name: "curve";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "flat";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceLP";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }, {
                readonly name: "governanceZombie";
                readonly type: "uint256";
                readonly internalType: "uint256";
            }];
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MinFixedAPRUpdated";
        readonly inputs: readonly [{
            readonly name: "newMinFixedAPR";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MinPositionDurationUpdated";
        readonly inputs: readonly [{
            readonly name: "newMinPositionDuration";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "MinTimeStretchAPRUpdated";
        readonly inputs: readonly [{
            readonly name: "newMinTimeStretchAPR";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "SweepCollectorUpdated";
        readonly inputs: readonly [{
            readonly name: "newSweepCollector";
            readonly type: "address";
            readonly indexed: true;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "error";
        readonly name: "DeployerCoordinatorAlreadyAdded";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "DeployerCoordinatorIndexMismatch";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "DeployerCoordinatorNotAdded";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "EndIndexTooLarge";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidCheckpointDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidCheckpointDurationResolution";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidDeployConfig";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidDeployerCoordinator";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidFees";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidFixedAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidIndexes";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMaxCheckpointDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMaxFees";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMaxFixedAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMaxPositionDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMaxTimeStretchAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinCheckpointDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinFees";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinFixedAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinPositionDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidMinTimeStretchAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidPositionDuration";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "InvalidTimeStretchAPR";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "LnInvalidInput";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "ReceiveLocked";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "TransferFailed";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "Unauthorized";
        readonly inputs: readonly [];
    }, {
        readonly type: "error";
        readonly name: "UnsafeCastToInt256";
        readonly inputs: readonly [];
    }];
    readonly bytecode: {
        readonly object: "0x60806040526000805460ff191660011790553480156200001e57600080fd5b5060405162003773380380620037738339810160408190526200004191620005fd565b8060a001518160c0015110806200006c57508060a001518160c001516200006991906200076d565b15155b156200008b57604051630219d66360e11b815260040160405180910390fd5b60c0810151600781905560e08201511080620000bb57508060a001518160e00151620000b891906200076d565b15155b15620000da5760405163f9c0959d60e01b815260040160405180910390fd5b60e0810151600881905561010082015110806200010c57508060a001518161010001516200010991906200076d565b15155b156200012b57604051633007ad0160e11b815260040160405180910390fd5b610100810151600981905561012082015110806200015e57508060a001518161012001516200015b91906200076d565b15155b156200017d5760405163cfb699cb60e01b815260040160405180910390fd5b610120810151600a556101608101516101408201511115620001b2576040516330554de160e01b815260040160405180910390fd5b610140810151600b55610160810151600c556101a08101516101808201511115620001f0576040516383ebdfb760e01b815260040160405180910390fd5b610180810151600d556101a0810151600e556101e081015151670de0b6b3a764000010806200022f5750670de0b6b3a7640000816101e0015160200151115b806200024b5750670de0b6b3a7640000816101e0015160400151115b80620002675750670de0b6b3a7640000816101e0015160600151115b15620002865760405163161071fb60e11b815260040160405180910390fd5b6101e081015180516013819055602082015160145560408201516015556060909101516016556101c0820151511180620002d15750806101e0015160200151816101c0015160200151115b80620002ee5750806101e0015160400151816101c0015160400151115b806200030b5750806101e0015160600151816101c0015160600151115b156200032a576040516315b05a8f60e01b815260040160405180910390fd5b6101c08101518051600f55602080820151601055604080830151601155606092830151601255835160008054610100600160a81b0319166101006001600160a01b039384160217905582850151600180546001600160a01b031990811692841692909217905593850151600480548616918316919091179055608085015160058054909516911617909255908201518051620003cb92601792019062000407565b50610200810151600280546001600160a01b0319166001600160a01b0390921691909117905561022081015160035560a0015160065562000790565b8280548282559060005260206000209081019282156200045f579160200282015b828111156200045f57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000428565b506200046d92915062000471565b5090565b5b808211156200046d576000815560010162000472565b634e487b7160e01b600052604160045260246000fd5b60405161024081016001600160401b0381118282101715620004c457620004c462000488565b60405290565b80516001600160a01b0381168114620004e257600080fd5b919050565b600082601f830112620004f957600080fd5b815160206001600160401b038083111562000518576200051862000488565b8260051b604051601f19603f8301168101818110848211171562000540576200054062000488565b6040529384528581018301938381019250878511156200055f57600080fd5b83870191505b8482101562000589576200057982620004ca565b8352918301919083019062000565565b979650505050505050565b600060808284031215620005a757600080fd5b604051608081016001600160401b0381118282101715620005cc57620005cc62000488565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201525092915050565b6000602082840312156200061057600080fd5b81516001600160401b03808211156200062857600080fd5b9083019061030082860312156200063e57600080fd5b620006486200049e565b6200065383620004ca565b81526200066360208401620004ca565b60208201526040830151828111156200067b57600080fd5b6200068987828601620004e7565b6040830152506200069d60608401620004ca565b6060820152620006b060808401620004ca565b608082015260a0838101519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c09150620007288683850162000594565b828201526200073c86610240850162000594565b6101e0820152620007516102c08401620004ca565b6102008201526102e09290920151610220830152509392505050565b6000826200078b57634e487b7160e01b600052601260045260246000fd5b500690565b612fd380620007a06000396000f3fe6080604052600436106102b25760003560e01c80639cafb91911610175578063d6f50169116100dc578063e333155511610095578063eb71f66c1161006f578063eb71f66c1461085a578063ec895f111461087a578063f8c09e591461089a578063fe3d5aeb146108ca57600080fd5b8063e333155514610805578063e71f34b314610825578063e83e34b11461084557600080fd5b8063d6f501691461076e578063daac24da14610784578063daf012e6146107a4578063dd2b8fbb146107ba578063e0e2daaa146107da578063e1b39c80146107f057600080fd5b8063c17225631161012e578063c1722563146106ca578063c415b95c146106ec578063c905a4b51461070c578063d0f96b9214610722578063d23d7ea314610738578063d2c35ce81461074e57600080fd5b80639cafb9191461061f578063a18cb81a14610632578063a64c90bf14610652578063b256126314610674578063bc30e7a114610694578063bf9bd5cd146106b457600080fd5b80636b44e6be116102195780638627a4f0116101d25780638627a4f0146105695780638e127cf5146105895780638efc0986146105a957806397b0e8ce146105bf57806399623bb1146105df5780639af25262146105ff57600080fd5b80636b44e6be1461047e5780636c8cc865146104be5780636e95d67c146104f45780636f6d5c4a1461050957806383b361e814610529578063852297851461054957600080fd5b8063421caba81161026b578063421caba8146103bf57806348800760146103df5780634fbfee77146104035780635720c9d5146104235780635aa6e67514610439578063628027a31461045e57600080fd5b806310780f73146102e257806310d1dc3e1461031f57806311e77bfe1461033f5780631978ebcf1461035f5780632885e3ac1461037f578063411c30351461039f57600080fd5b366102dd5760005460ff16156102db57604051630aac75b560e31b815260040160405180910390fd5b005b600080fd5b3480156102ee57600080fd5b50600554610302906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561032b57600080fd5b506102db61033a3660046126ba565b6108ea565b34801561034b57600080fd5b506102db61035a3660046126cc565b610a08565b34801561036b57600080fd5b506102db61037a3660046126cc565b610ae6565b34801561038b57600080fd5b506102db61039a3660046126ba565b610b6d565b3480156103ab57600080fd5b506102db6103ba36600461270d565b610cd8565b3480156103cb57600080fd5b506102db6103da366004612739565b610e95565b3480156103eb57600080fd5b506103f5600e5481565b604051908152602001610316565b34801561040f57600080fd5b506102db61041e3660046126cc565b610f8a565b34801561042f57600080fd5b506103f560075481565b34801561044557600080fd5b506000546103029061010090046001600160a01b031681565b34801561046a57600080fd5b506102db6104793660046126cc565b610fec565b34801561048a57600080fd5b506104ae610499366004612739565b601c6020526000908152604090205460ff1681565b6040519015158152602001610316565b3480156104ca57600080fd5b506103026104d9366004612739565b601a602052600090815260409020546001600160a01b031681565b34801561050057600080fd5b50601b546103f5565b34801561051557600080fd5b506102db6105243660046126cc565b611073565b34801561053557600080fd5b506102db6105443660046126cc565b61111c565b34801561055557600080fd5b506102db610564366004612739565b6111a3565b34801561057557600080fd5b506102db610584366004612739565b61121c565b34801561059557600080fd5b506102db6105a43660046126cc565b611295565b3480156105b557600080fd5b506103f5600a5481565b3480156105cb57600080fd5b506102db6105da3660046126cc565b61133e565b3480156105eb57600080fd5b50600254610302906001600160a01b031681565b34801561060b57600080fd5b506102db61061a36600461275d565b6113c5565b61030261062d3660046129c9565b611432565b34801561063e57600080fd5b5061030261064d366004612af8565b61182f565b34801561065e57600080fd5b50610667611921565b6040516103169190612b8c565b34801561068057600080fd5b506102db61068f366004612739565b611983565b3480156106a057600080fd5b506106676106af366004612bd9565b611a02565b3480156106c057600080fd5b506103f5600c5481565b3480156106d657600080fd5b506106df611b1f565b6040516103169190612bfb565b3480156106f857600080fd5b50600454610302906001600160a01b031681565b34801561071857600080fd5b506103f560035481565b34801561072e57600080fd5b506103f560065481565b34801561074457600080fd5b506103f5600b5481565b34801561075a57600080fd5b506102db610769366004612739565b611b77565b34801561077a57600080fd5b506103f5600d5481565b34801561079057600080fd5b5061030261079f3660046126cc565b611bf0565b3480156107b057600080fd5b506103f560095481565b3480156107c657600080fd5b506102db6107d5366004612739565b611c20565b3480156107e657600080fd5b506103f560085481565b3480156107fc57600080fd5b506018546103f5565b34801561081157600080fd5b50600154610302906001600160a01b031681565b34801561083157600080fd5b506102db6108403660046126cc565b611c99565b34801561085157600080fd5b506106df611d42565b34801561086657600080fd5b506102db6108753660046126cc565b611d9a565b34801561088657600080fd5b50610667610895366004612bd9565b611e37565b3480156108a657600080fd5b506104ae6108b5366004612739565b60196020526000908152604090205460ff1681565b3480156108d657600080fd5b506103026108e53660046126cc565b611f4d565b60005461010090046001600160a01b03163314610919576040516282b42960e81b815260040160405180910390fd5b6040805160808101825260135480825260145460208301526015549282019290925260165460608201529082351180610959575080602001518260200135115b8061096b575080604001518260400135115b8061097d575080606001518260600135115b1561099b576040516315b05a8f60e01b815260040160405180910390fd5b8135600f819055602080840135601081905560408086013560118190556060808801356012819055835196875294860193909352908401528201527fe1c45f8aeb543f30b37cc2fccfbac0f32cc8f234284df921d71cff04e51ef421906080015b60405180910390a15050565b60005461010090046001600160a01b03163314610a37576040516282b42960e81b815260040160405180910390fd5b80600754610a459190612c26565b151580610a5e575080600854610a5b9190612c26565b15155b80610a75575080600954610a729190612c26565b15155b80610a8c575080600a54610a899190612c26565b15155b15610aaa576040516311b75c1560e31b815260040160405180910390fd5b60068190556040518181527f04ed835b488b4fcf0a212a46ed67cbbffc2fc81b5cb6a12c546572cbf7b7e06a906020015b60405180910390a150565b60005461010090046001600160a01b03163314610b15576040516282b42960e81b815260040160405180910390fd5b600c54811115610b3857604051631670f79760e01b815260040160405180910390fd5b600b8190556040518181527faab0ee9100629c405a4d75336e1640cc81e0608fb0d7f17389c06ee8d4f0219190602001610adb565b60005461010090046001600160a01b03163314610b9c576040516282b42960e81b815260040160405180910390fd5b60408051608081018252600f5481526010546020820152601154918101919091526012546060820152670de0b6b3a764000082351180610be75750670de0b6b3a76400008260200135115b80610bfd5750670de0b6b3a76400008260400135115b80610c135750670de0b6b3a76400008260600135115b80610c1f575080518235105b80610c31575080602001518260200135105b80610c43575080604001518260400135105b80610c55575080606001518260600135105b15610c735760405163161071fb60e11b815260040160405180910390fd5b81356013819055602080840135601481905560408086013560158190556060808801356016819055835196875294860193909352908401528201527f8c6093c7e65dd862e88162770c4e156e8a0da57d25d961e0fb6f28cfb7ff89a7906080016109fc565b60005461010090046001600160a01b03163314610d07576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03821660009081526019602052604090205460ff16610d4057604051634bf121ab60e01b815260040160405180910390fd5b816001600160a01b031660188281548110610d5d57610d5d612c48565b6000918252602090912001546001600160a01b031614610d9057604051630f2700cb60e21b815260040160405180910390fd5b6001600160a01b0382166000908152601960205260409020805460ff1916905560188054610dc090600190612c74565b81548110610dd057610dd0612c48565b600091825260209091200154601880546001600160a01b039092169183908110610dfc57610dfc612c48565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506018805480610e3b57610e3b612c87565b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038416917f709b7450bfafda93efd91d29149870a794637ac9d696ca61625fd2f53548afe091a25050565b60005461010090046001600160a01b03163314610ec4576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03811660009081526019602052604090205460ff1615610efe5760405163bd34634f60e01b815260040160405180910390fd5b6001600160a01b038116600081815260196020526040808220805460ff1916600190811790915560188054918201815583527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e0180546001600160a01b03191684179055517f16ce88285cfd59829a5aa04370a5ec8090a18c14e7e7fb9d4b12a42291c098e39190a250565b60005461010090046001600160a01b03163314610fb9576040516282b42960e81b815260040160405180910390fd5b600381905560405181907f395a61259037298d1c4cd4bf177b64ad5995d38a9394573fcd9060d649314ad090600090a250565b60005461010090046001600160a01b0316331461101b576040516282b42960e81b815260040160405180910390fd5b600d5481101561103e57604051630a35539d60e41b815260040160405180910390fd5b600e8190556040518181527fa9e7961bb3342715dbecc208087a6a9df8986d524b3a0a829fd90f5a2f5ba53e90602001610adb565b60005461010090046001600160a01b031633146110a2576040516282b42960e81b815260040160405180910390fd5b6007548110806110bd57506006546110ba9082612c26565b15155b806110c9575060095481115b156110e75760405163f9c0959d60e01b815260040160405180910390fd5b60088190556040518181527f31407ddd1722f500b8aa2c18e112398626dd7c2869a5f80731ec30b244d9b5f290602001610adb565b60005461010090046001600160a01b0316331461114b576040516282b42960e81b815260040160405180910390fd5b600e5481111561116e57604051635a8f655760e01b815260040160405180910390fd5b600d8190556040518181527f490eb2a91746aa933c9ffe2f7939aa06498f3259139f8805f008b12c8c697a4690602001610adb565b60005461010090046001600160a01b031633146111d2576040516282b42960e81b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040517f03aa5b0fb65014eea89fda04a7bc11742014881f3c078f2c75b7226ce10d941890600090a250565b60005461010090046001600160a01b0316331461124b576040516282b42960e81b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517fc049058b1df2dd8902739ceb78992df12fa8369c06c450b3c6787137b452fdd290600090a250565b60005461010090046001600160a01b031633146112c4576040516282b42960e81b815260040160405180910390fd5b6006548110806112df57506006546112dc9082612c26565b15155b806112eb575060085481115b1561130957604051630219d66360e11b815260040160405180910390fd5b60078190556040518181527f6f8175cdbac1b4d238abba24a17d2554d7b9750bbeda6414e191c478384b763190602001610adb565b60005461010090046001600160a01b0316331461136d576040516282b42960e81b815260040160405180910390fd5b600b548110156113905760405163019cfb7b60e61b815260040160405180910390fd5b600c8190556040518181527f4fa35c11ce9a45ae882c154ecb53ab5cac52a74a5b9b0373be36deb30c78297890602001610adb565b60005461010090046001600160a01b031633146113f4576040516282b42960e81b815260040160405180910390fd5b6114006017838361264b565b507f2a85276cf604a3822e19b29a3e97aebfbc47a19025c2e8f6e80b3af774dcbc3882826040516109fc929190612c9d565b6001600160a01b03881660009081526019602052604081205460ff1661146b57604051636e623f0f60e01b815260040160405180910390fd5b611476888686611f62565b60408051336020808301919091528183018d905282518083038401815260608301938490528051910120638d10a15b60e01b9092526000916001600160a01b038c1691638d10a15b916114d1918d908d908990606401612e0c565b6020604051808303816000875af11580156114f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115149190612e47565b6001600160a01b038181166000908152601a60205260409081902080546001600160a01b0319168e84169081179091556001549092166101008d015251919250907fabd0a413b2318f33298ccd074a9909d411d3f249cf2e65761d2dd1002e1cb7e5906115869084908d908d90612e64565b60405180910390a2601b805460018082019092557f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b0319166001600160a01b038481169182179092556000908152601c60209081526040808320805460ff1990811690961790558254909416909155825133918101919091529182018d90528b16906316abfc7090349060600160405160208183030381529060405280519060200120338b8b8a6040518763ffffffff1660e01b8152600401611657959493929190612e9f565b60206040518083038185885af1158015611675573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061169a9190612f02565b506000805460ff191660011781555b60175481101561174c57816001600160a01b0316637180c8ca601783815481106116d5576116d5612c48565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b15801561172957600080fd5b505af115801561173d573d6000803e3d6000fd5b505050508060010190506116a9565b5060015460405163ab033ea960e01b81526001600160a01b0391821660048201529082169063ab033ea990602401600060405180830381600087803b15801561179457600080fd5b505af11580156117a8573d6000803e3d6000fd5b50479250508115905061182057604051600090339083908381818185875af1925050503d80600081146117f7576040519150601f19603f3d011682016040523d82523d6000602084013e6117fc565b606091505b505090508061181e576040516312171d8360e31b815260040160405180910390fd5b505b509a9950505050505050505050565b6001600160a01b03871660009081526019602052604081205460ff1661186857604051636e623f0f60e01b815260040160405180910390fd5b611873878686611f62565b60408051336020808301919091528183018c905282518083038401815260608301938490528051910120631b06a35b60e01b9092526000916001600160a01b038b1691631b06a35b916118d0918c908c908a908a90606401612f1b565b6020604051808303816000875af11580156118ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119139190612e47565b9a9950505050505050505050565b6060601780548060200260200160405190810160405280929190818152602001828054801561197957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161195b575b5050505050905090565b60005461010090046001600160a01b031633146119b2576040516282b42960e81b815260040160405180910390fd5b60008054610100600160a81b0319166101006001600160a01b03841690810291909117825560405190917f9d3e522e1e47a2f6009739342b9cc7b252a1888154e843ab55ee1c81745795ab91a250565b606081831115611a2557604051633b2735ab60e11b815260040160405180910390fd5b601b548210611a475760405163e0f7becb60e01b815260040160405180910390fd5b611a518383612c74565b611a5c906001612f5a565b67ffffffffffffffff811115611a7457611a746127d2565b604051908082528060200260200182016040528015611a9d578160200160208202803683370190505b509050825b828111611b1857601b8181548110611abc57611abc612c48565b9060005260206000200160009054906101000a90046001600160a01b03168285830381518110611aee57611aee612c48565b6001600160a01b039092166020928302919091019091015280611b1081612f6d565b915050611aa2565b5092915050565b611b4a6040518060800160405280600081526020016000815260200160008152602001600081525090565b5060408051608081018252600f548152601054602082015260115491810191909152601254606082015290565b60005461010090046001600160a01b03163314611ba6576040516282b42960e81b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f90600090a250565b6000601b8281548110611c0557611c05612c48565b6000918252602090912001546001600160a01b031692915050565b60005461010090046001600160a01b03163314611c4f576040516282b42960e81b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517ff3e07b4bb4394f2ff320bd1dd151551dff304d5e948b401d8558b228482c97d890600090a250565b60005461010090046001600160a01b03163314611cc8576040516282b42960e81b815260040160405180910390fd5b600854811080611ce35750600654611ce09082612c26565b15155b80611cef5750600a5481115b15611d0d57604051633007ad0160e11b815260040160405180910390fd5b60098190556040518181527fe9ef3e93dff799d4db8a12ff79e0918a5a78d75b10527864f4b1c920f6f4f17890602001610adb565b611d6d6040518060800160405280600081526020016000815260200160008152602001600081525090565b50604080516080810182526013548152601454602082015260155491810191909152601654606082015290565b60005461010090046001600160a01b03163314611dc9576040516282b42960e81b815260040160405180910390fd5b600954811080611de45750600654611de19082612c26565b15155b15611e025760405163cfb699cb60e01b815260040160405180910390fd5b600a8190556040518181527f866fe9485f9983afceaa1385307b6eb0fd3df5a250ae2b0bf76dc9ddd316926b90602001610adb565b606081831115611e5a57604051633b2735ab60e11b815260040160405180910390fd5b6018548210611e7c5760405163e0f7becb60e01b815260040160405180910390fd5b611e868383612c74565b611e91906001612f5a565b67ffffffffffffffff811115611ea957611ea96127d2565b604051908082528060200260200182016040528015611ed2578160200160208202803683370190505b509050825b828111611b185760188181548110611ef157611ef1612c48565b9060005260206000200160009054906101000a90046001600160a01b03168285830381518110611f2357611f23612c48565b6001600160a01b039092166020928302919091019091015280611f4581612f6d565b915050611ed7565b600060188281548110611c0557611c05612c48565b6007548360c001511080611f7b57506008548360c00151115b80611f9657506006548360c00151611f939190612c26565b15155b15611fb457604051635428734d60e01b815260040160405180910390fd5b6009548360a001511080611fcd5750600a548360a00151115b80611fea57508260c001518360a00151611fe79190612c26565b15155b156120085760405163253fffcf60e11b815260040160405180910390fd5b60135461016084015151118061203c575060145460a08401516101608501516020015161203a916301e13380906122a7565b115b80612051575060155461016084015160400151115b80612066575060165461016084015160600151115b806120785750600f5461016084015151105b806120a1575060105460a08401516101608501516020015161209f916301e13380906122c5565b105b806120b6575060115461016084015160400151105b806120cb575060125461016084015160600151105b156120e957604051632d8768f960e01b815260040160405180910390fd5b600b548210806120fa5750600c5482115b15612118576040516330554de160e01b815260040160405180910390fd5b600061213d6611c37937e0800061213785671bc16d674ec800006122eb565b90612309565b600d5490915061214d9082612309565b821080612180575061217d612174671bc16d674ec8000061216e8685612309565b9061231f565b600e5490612334565b82115b1561219e576040516383ebdfb760e01b815260040160405180910390fd5b60006121ae838660a00151612349565b60025460208701519192506001600160a01b0391821691161415806121d95750600354856040015114155b806121f857506004546101208601516001600160a01b03908116911614155b8061221757506005546101408601516001600160a01b03908116911614155b8061223657506001546101008601516001600160a01b03908116911614155b80612244575060e085015115155b156122625760405163e8c02dd760e01b815260040160405180910390fd5b6002546001600160a01b03908116602087015260035460408701526004548116610120870152600554166101408601523061010086015260e090940193909352505050565b60008260001904841183021582026122be57600080fd5b5091020490565b60008260001904841183021582026122dc57600080fd5b50910281810615159190040190565b600061230083670de0b6b3a7640000846122a7565b90505b92915050565b60008183116123185781612300565b5090919050565b60006123008383670de0b6b3a76400006122a7565b60008183116123435782612300565b50919050565b60008061237a61236b61235d866064612f86565b66a5bbed86c5a0009061231f565b6748cd4072281e0000906122eb565b905061238e670de0b6b3a7640000826122eb565b90506123e68161216e6123b96123b46123af89670de0b6b3a7640000612f5a565b6123ee565b61241c565b6123e06123b46123ce8a8a6301e133806122a7565b6123af90670de0b6b3a7640000612f5a565b906122eb565b949350505050565b60006001600160ff1b038211156124185760405163396ea70160e11b815260040160405180910390fd5b5090565b600080821361243e5760405163e61b497560e01b815260040160405180910390fd5b506fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906124ca9084901c6123ee565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b82805482825590600052602060002090810192821561269e579160200282015b8281111561269e5781546001600160a01b0319166001600160a01b0384351617825560209092019160019091019061266b565b506124189291505b8082111561241857600081556001016126a6565b60006080828403121561234357600080fd5b6000602082840312156126de57600080fd5b5035919050565b6001600160a01b03811681146126fa57600080fd5b50565b8035612708816126e5565b919050565b6000806040838503121561272057600080fd5b823561272b816126e5565b946020939093013593505050565b60006020828403121561274b57600080fd5b8135612756816126e5565b9392505050565b6000806020838503121561277057600080fd5b823567ffffffffffffffff8082111561278857600080fd5b818501915085601f83011261279c57600080fd5b8135818111156127ab57600080fd5b8660208260051b85010111156127c057600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171561280c5761280c6127d2565b60405290565b60006080828403121561282457600080fd5b6040516080810181811067ffffffffffffffff82111715612847576128476127d2565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b60006101e0828403121561288b57600080fd5b6128936127e8565b905061289e826126fd565b81526128ac602083016126fd565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101006128fb8184016126fd565b9082015261012061290d8382016126fd565b9082015261014061291f8382016126fd565b9082015261016061293284848301612812565b9082015292915050565b600082601f83011261294d57600080fd5b813567ffffffffffffffff80821115612968576129686127d2565b604051601f8301601f19908116603f01168101908282118183101715612990576129906127d2565b816040528381528660208588010111156129a957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060008060006102e08a8c0312156129e857600080fd5b8935985060208a01356129fa816126e5565b9750612a098b60408c01612878565b96506102208a013567ffffffffffffffff80821115612a2757600080fd5b612a338d838e0161293c565b97506102408c013596506102608c013595506102808c013594506102a08c0135915080821115612a6257600080fd5b908b01906060828e031215612a7657600080fd5b604051606081018181108382111715612a9157612a916127d2565b6040528235612a9f816126e5565b815260208301358015158114612ab457600080fd5b6020820152604083013582811115612acb57600080fd5b612ad78f82860161293c565b6040830152508094505050506102c08a013590509295985092959850929598565b6000806000806000806000806102c0898b031215612b1557600080fd5b883597506020890135612b27816126e5565b9650612b368a60408b01612878565b955061022089013567ffffffffffffffff811115612b5357600080fd5b612b5f8b828c0161293c565b989b979a50959861024081013597610260820135975061028082013596506102a090910135945092505050565b6020808252825182820181905260009190848201906040850190845b81811015612bcd5783516001600160a01b031683529284019291840191600101612ba8565b50909695505050505050565b60008060408385031215612bec57600080fd5b50508035926020909101359150565b8151815260208083015190820152604080830151908201526060808301519082015260808101612303565b600082612c4357634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561230357612303612c5e565b634e487b7160e01b600052603160045260246000fd5b60208082528181018390526000908460408401835b86811015612ce0578235612cc5816126e5565b6001600160a01b031682529183019190830190600101612cb2565b509695505050505050565b80516001600160a01b031682526020810151612d1260208401826001600160a01b03169052565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151612d6a828501826001600160a01b03169052565b5050610120818101516001600160a01b0390811691840191909152610140808301519091169083015261016090810151805191830191909152602081015161018083015260408101516101a0830152606001516101c090910152565b6000815180845260005b81811015612dec57602081850181015186830182015201612dd0565b506000602082860101526020601f19601f83011685010191505092915050565b6000610240868352612e216020840187612ceb565b80610200840152612e3481840186612dc6565b9150508261022083015295945050505050565b600060208284031215612e5957600080fd5b8151612756816126e5565b6001600160a01b03841681526000610220612e826020840186612ceb565b80610200840152612e9581840185612dc6565b9695505050505050565b858152600060018060a01b03808716602084015285604084015284606084015260a060808401528084511660a0840152506020830151151560c08301526040830151606060e0840152612ef6610100840182612dc6565b98975050505050505050565b600060208284031215612f1457600080fd5b5051919050565b6000610260878352612f306020840188612ceb565b80610200840152612f4381840187612dc6565b610220840195909552505061024001529392505050565b8082018082111561230357612303612c5e565b600060018201612f7f57612f7f612c5e565b5060010190565b808202811582820484141761230357612303612c5e56fea26469706673582212202a0dedc739ec319748b4ad36ab20f7d9ed5a84fd53ddc96a82dbb3369175f16b64736f6c63430008140033";
        readonly sourceMap: "895:40057:42:-:0;;;1170:35;;;-1:-1:-1;;1170:35:42;1201:4;1170:35;;;7374:4822;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7698:14;:43;;;7647:14;:36;;;:94;:225;;;;7812:14;:43;;;7757:14;:36;;;:98;;;;:::i;:::-;:115;;7647:225;7630:334;;;7904:49;;-1:-1:-1;;;7904:49:42;;;;;;;;;;;7630:334;7997:36;;;;7973:21;:60;;;8255:36;;;;:87;;:218;;;8413:14;:43;;;8358:14;:36;;;:98;;;;:::i;:::-;:115;;8255:218;8238:327;;;8505:49;;-1:-1:-1;;;8505:49:42;;;;;;;;;;;8238:327;8598:36;;;;8574:21;:60;;;8854:34;;;;:85;;:214;;;9008:14;:43;;;8955:14;:34;;;:96;;;;:::i;:::-;:113;;8854:214;8837:321;;;9100:47;;-1:-1:-1;;;9100:47:42;;;;;;;;;;;8837:321;9189:34;;;;9167:19;:56;;;9441:34;;;;:83;;:212;;;9593:14;:43;;;9540:14;:34;;;:96;;;;:::i;:::-;:113;;9441:212;9424:319;;;9685:47;;-1:-1:-1;;;9685:47:42;;;;;;;;;;;9424:319;9774:34;;;;9752:19;:56;9956:26;;;;9927;;;;:55;9923:129;;;10005:36;;-1:-1:-1;;;10005:36:42;;;;;;;;;;;9923:129;10075:26;;;;10061:11;:40;10125:26;;;;10111:11;:40;10332:32;;;;10297;;;;:67;10280:169;;;10396:42;;-1:-1:-1;;;10396:42:42;;;;;;;;;;;10280:169;10478:32;;;;10458:17;:52;10540:32;;;;10520:17;:52;10701:22;;;;:28;193:4:128;-1:-1:-1;10701:34:42;:83;;;193:4:128;10751:14:42;:22;;;:27;;;:33;10701:83;:140;;;;193:4:128;10800:14:42;:22;;;:35;;;:41;10701:140;:201;;;;193:4:128;10857:14:42;:22;;;:39;;;:45;10701:201;10684:296;;;10934:35;;-1:-1:-1;;;10934:35:42;;;;;;;;;;;10684:296;11000:22;;;;10989:33;;:8;:33;;;;;;;;;;;;;;;;;;;;;;11194:22;;;;:28;:59;;:132;;;11299:14;:22;;;:27;;;11269:14;:22;;;:27;;;:57;11194:132;:233;;;;11392:14;:22;;;:35;;;11342:14;:22;;;:35;;;:85;11194:233;:342;;;;11497:14;:22;;;:39;;;11443:14;:22;;;:39;;;:93;11194:342;11177:437;;;11568:35;;-1:-1:-1;;;11568:35:42;;;;;;;;;;;11177:437;11634:22;;;;11623:33;;:8;:33;;;;;;;;;;;;;;;;;;;;;;11724:25;;-1:-1:-1;11711:38:42;;-1:-1:-1;;;;;;11711:38:42;;-1:-1:-1;;;;;11711:38:42;;;;;;;11782:35;;;;-1:-1:-1;11759:58:42;;-1:-1:-1;;;;;;11759:58:42;;;;;;;;;;;;11842:27;;;;11827:12;:42;;;;;;;;;;;;;11896:29;;;;11879:14;:46;;;;;;;;;;;11953:29;;;;11935:47;;;;:15;;:47;;;:::i;:::-;-1:-1:-1;12008:28:42;;;;11992:13;:44;;-1:-1:-1;;;;;;11992:44:42;-1:-1:-1;;;;;11992:44:42;;;;;;;;;12063:29;;;;12046:14;:46;12133:56;;;12102:28;:87;895:40057;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;895:40057:42;-1:-1:-1;;;;;895:40057:42;;;;;;;;;;;-1:-1:-1;895:40057:42;;;;;;;-1:-1:-1;895:40057:42;;;-1:-1:-1;895:40057:42;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:239;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;213:2;207:9;255:6;243:19;;-1:-1:-1;;;;;277:34:239;;313:22;;;274:62;271:88;;;339:18;;:::i;:::-;375:2;368:22;146:250;:::o;401:177::-;480:13;;-1:-1:-1;;;;;522:31:239;;512:42;;502:70;;568:1;565;558:12;502:70;401:177;;;:::o;583:923::-;648:5;701:3;694:4;686:6;682:17;678:27;668:55;;719:1;716;709:12;668:55;742:13;;774:4;-1:-1:-1;;;;;827:10:239;;;824:36;;;840:18;;:::i;:::-;886:2;883:1;879:10;918:2;912:9;981:2;977:7;972:2;968;964:11;960:25;952:6;948:38;1036:6;1024:10;1021:22;1016:2;1004:10;1001:18;998:46;995:72;;;1047:18;;:::i;:::-;1083:2;1076:22;1133:18;;;1209:15;;;1205:24;;;1167:15;;;;-1:-1:-1;1241:15:239;;;1238:35;;;1269:1;1266;1259:12;1238:35;1305:2;1297:6;1293:15;1282:26;;1317:159;1333:6;1328:3;1325:15;1317:159;;;1399:34;1429:3;1399:34;:::i;:::-;1387:47;;1454:12;;;;1350;;;;1317:159;;;1494:6;583:923;-1:-1:-1;;;;;;;583:923:239:o;1511:584::-;1573:5;1621:4;1609:9;1604:3;1600:19;1596:30;1593:50;;;1639:1;1636;1629:12;1593:50;1672:2;1666:9;1714:4;1702:17;;-1:-1:-1;;;;;1734:34:239;;1770:22;;;1731:62;1728:88;;;1796:18;;:::i;:::-;1836:10;1832:2;1825:22;;1865:6;1856:15;;1901:9;1895:16;1887:6;1880:32;1966:2;1955:9;1951:18;1945:25;1940:2;1932:6;1928:15;1921:50;2025:2;2014:9;2010:18;2004:25;1999:2;1991:6;1987:15;1980:50;2084:2;2073:9;2069:18;2063:25;2058:2;2050:6;2046:15;2039:50;;1511:584;;;;:::o;2100:1872::-;2201:6;2254:2;2242:9;2233:7;2229:23;2225:32;2222:52;;;2270:1;2267;2260:12;2222:52;2297:16;;-1:-1:-1;;;;;2362:14:239;;;2359:34;;;2389:1;2386;2379:12;2359:34;2412:22;;;;2468:6;2450:16;;;2446:29;2443:49;;;2488:1;2485;2478:12;2443:49;2514:17;;:::i;:::-;2554:33;2584:2;2554:33;:::i;:::-;2547:5;2540:48;2620:42;2658:2;2654;2650:11;2620:42;:::i;:::-;2615:2;2608:5;2604:14;2597:66;2702:2;2698;2694:11;2688:18;2731:2;2721:8;2718:16;2715:36;;;2747:1;2744;2737:12;2715:36;2783:67;2842:7;2831:8;2827:2;2823:17;2783:67;:::i;:::-;2778:2;2771:5;2767:14;2760:91;;2883:42;2921:2;2917;2913:11;2883:42;:::i;:::-;2878:2;2871:5;2867:14;2860:66;2959:43;2997:3;2993:2;2989:12;2959:43;:::i;:::-;2953:3;2942:15;;2935:68;3050:3;3042:12;;;3036:19;3019:15;;;3012:44;3103:3;3095:12;;;3089:19;3072:15;;;3065:44;3156:3;3148:12;;;3142:19;3125:15;;;3118:44;3181:3;3222:11;;;3216:18;3200:14;;;3193:42;3254:3;3295:11;;;3289:18;3273:14;;;3266:42;3327:3;3368:11;;;3362:18;3346:14;;;3339:42;3400:3;3441:11;;;3435:18;3419:14;;;3412:42;3473:3;3514:11;;;3508:18;3492:14;;;3485:42;3546:3;3587:11;;;3581:18;3565:14;;;3558:42;3619:3;;-1:-1:-1;3654:55:239;3701:7;3688:11;;;3654:55;:::i;:::-;3649:2;3642:5;3638:14;3631:79;3746:59;3797:7;3788:6;3784:2;3780:15;3746:59;:::i;:::-;3737:6;3730:5;3726:18;3719:87;3842:43;3880:3;3876:2;3872:12;3842:43;:::i;:::-;3833:6;3822:18;;3815:71;3936:3;3928:12;;;;3922:19;3913:6;3902:18;;3895:47;-1:-1:-1;3826:5:239;2100:1872;-1:-1:-1;;;2100:1872:239:o;3977:209::-;4009:1;4035;4025:132;;4079:10;4074:3;4070:20;4067:1;4060:31;4114:4;4111:1;4104:15;4142:4;4139:1;4132:15;4025:132;-1:-1:-1;4171:9:239;;3977:209::o;:::-;895:40057:42;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "0x6080604052600436106102b25760003560e01c80639cafb91911610175578063d6f50169116100dc578063e333155511610095578063eb71f66c1161006f578063eb71f66c1461085a578063ec895f111461087a578063f8c09e591461089a578063fe3d5aeb146108ca57600080fd5b8063e333155514610805578063e71f34b314610825578063e83e34b11461084557600080fd5b8063d6f501691461076e578063daac24da14610784578063daf012e6146107a4578063dd2b8fbb146107ba578063e0e2daaa146107da578063e1b39c80146107f057600080fd5b8063c17225631161012e578063c1722563146106ca578063c415b95c146106ec578063c905a4b51461070c578063d0f96b9214610722578063d23d7ea314610738578063d2c35ce81461074e57600080fd5b80639cafb9191461061f578063a18cb81a14610632578063a64c90bf14610652578063b256126314610674578063bc30e7a114610694578063bf9bd5cd146106b457600080fd5b80636b44e6be116102195780638627a4f0116101d25780638627a4f0146105695780638e127cf5146105895780638efc0986146105a957806397b0e8ce146105bf57806399623bb1146105df5780639af25262146105ff57600080fd5b80636b44e6be1461047e5780636c8cc865146104be5780636e95d67c146104f45780636f6d5c4a1461050957806383b361e814610529578063852297851461054957600080fd5b8063421caba81161026b578063421caba8146103bf57806348800760146103df5780634fbfee77146104035780635720c9d5146104235780635aa6e67514610439578063628027a31461045e57600080fd5b806310780f73146102e257806310d1dc3e1461031f57806311e77bfe1461033f5780631978ebcf1461035f5780632885e3ac1461037f578063411c30351461039f57600080fd5b366102dd5760005460ff16156102db57604051630aac75b560e31b815260040160405180910390fd5b005b600080fd5b3480156102ee57600080fd5b50600554610302906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561032b57600080fd5b506102db61033a3660046126ba565b6108ea565b34801561034b57600080fd5b506102db61035a3660046126cc565b610a08565b34801561036b57600080fd5b506102db61037a3660046126cc565b610ae6565b34801561038b57600080fd5b506102db61039a3660046126ba565b610b6d565b3480156103ab57600080fd5b506102db6103ba36600461270d565b610cd8565b3480156103cb57600080fd5b506102db6103da366004612739565b610e95565b3480156103eb57600080fd5b506103f5600e5481565b604051908152602001610316565b34801561040f57600080fd5b506102db61041e3660046126cc565b610f8a565b34801561042f57600080fd5b506103f560075481565b34801561044557600080fd5b506000546103029061010090046001600160a01b031681565b34801561046a57600080fd5b506102db6104793660046126cc565b610fec565b34801561048a57600080fd5b506104ae610499366004612739565b601c6020526000908152604090205460ff1681565b6040519015158152602001610316565b3480156104ca57600080fd5b506103026104d9366004612739565b601a602052600090815260409020546001600160a01b031681565b34801561050057600080fd5b50601b546103f5565b34801561051557600080fd5b506102db6105243660046126cc565b611073565b34801561053557600080fd5b506102db6105443660046126cc565b61111c565b34801561055557600080fd5b506102db610564366004612739565b6111a3565b34801561057557600080fd5b506102db610584366004612739565b61121c565b34801561059557600080fd5b506102db6105a43660046126cc565b611295565b3480156105b557600080fd5b506103f5600a5481565b3480156105cb57600080fd5b506102db6105da3660046126cc565b61133e565b3480156105eb57600080fd5b50600254610302906001600160a01b031681565b34801561060b57600080fd5b506102db61061a36600461275d565b6113c5565b61030261062d3660046129c9565b611432565b34801561063e57600080fd5b5061030261064d366004612af8565b61182f565b34801561065e57600080fd5b50610667611921565b6040516103169190612b8c565b34801561068057600080fd5b506102db61068f366004612739565b611983565b3480156106a057600080fd5b506106676106af366004612bd9565b611a02565b3480156106c057600080fd5b506103f5600c5481565b3480156106d657600080fd5b506106df611b1f565b6040516103169190612bfb565b3480156106f857600080fd5b50600454610302906001600160a01b031681565b34801561071857600080fd5b506103f560035481565b34801561072e57600080fd5b506103f560065481565b34801561074457600080fd5b506103f5600b5481565b34801561075a57600080fd5b506102db610769366004612739565b611b77565b34801561077a57600080fd5b506103f5600d5481565b34801561079057600080fd5b5061030261079f3660046126cc565b611bf0565b3480156107b057600080fd5b506103f560095481565b3480156107c657600080fd5b506102db6107d5366004612739565b611c20565b3480156107e657600080fd5b506103f560085481565b3480156107fc57600080fd5b506018546103f5565b34801561081157600080fd5b50600154610302906001600160a01b031681565b34801561083157600080fd5b506102db6108403660046126cc565b611c99565b34801561085157600080fd5b506106df611d42565b34801561086657600080fd5b506102db6108753660046126cc565b611d9a565b34801561088657600080fd5b50610667610895366004612bd9565b611e37565b3480156108a657600080fd5b506104ae6108b5366004612739565b60196020526000908152604090205460ff1681565b3480156108d657600080fd5b506103026108e53660046126cc565b611f4d565b60005461010090046001600160a01b03163314610919576040516282b42960e81b815260040160405180910390fd5b6040805160808101825260135480825260145460208301526015549282019290925260165460608201529082351180610959575080602001518260200135115b8061096b575080604001518260400135115b8061097d575080606001518260600135115b1561099b576040516315b05a8f60e01b815260040160405180910390fd5b8135600f819055602080840135601081905560408086013560118190556060808801356012819055835196875294860193909352908401528201527fe1c45f8aeb543f30b37cc2fccfbac0f32cc8f234284df921d71cff04e51ef421906080015b60405180910390a15050565b60005461010090046001600160a01b03163314610a37576040516282b42960e81b815260040160405180910390fd5b80600754610a459190612c26565b151580610a5e575080600854610a5b9190612c26565b15155b80610a75575080600954610a729190612c26565b15155b80610a8c575080600a54610a899190612c26565b15155b15610aaa576040516311b75c1560e31b815260040160405180910390fd5b60068190556040518181527f04ed835b488b4fcf0a212a46ed67cbbffc2fc81b5cb6a12c546572cbf7b7e06a906020015b60405180910390a150565b60005461010090046001600160a01b03163314610b15576040516282b42960e81b815260040160405180910390fd5b600c54811115610b3857604051631670f79760e01b815260040160405180910390fd5b600b8190556040518181527faab0ee9100629c405a4d75336e1640cc81e0608fb0d7f17389c06ee8d4f0219190602001610adb565b60005461010090046001600160a01b03163314610b9c576040516282b42960e81b815260040160405180910390fd5b60408051608081018252600f5481526010546020820152601154918101919091526012546060820152670de0b6b3a764000082351180610be75750670de0b6b3a76400008260200135115b80610bfd5750670de0b6b3a76400008260400135115b80610c135750670de0b6b3a76400008260600135115b80610c1f575080518235105b80610c31575080602001518260200135105b80610c43575080604001518260400135105b80610c55575080606001518260600135105b15610c735760405163161071fb60e11b815260040160405180910390fd5b81356013819055602080840135601481905560408086013560158190556060808801356016819055835196875294860193909352908401528201527f8c6093c7e65dd862e88162770c4e156e8a0da57d25d961e0fb6f28cfb7ff89a7906080016109fc565b60005461010090046001600160a01b03163314610d07576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03821660009081526019602052604090205460ff16610d4057604051634bf121ab60e01b815260040160405180910390fd5b816001600160a01b031660188281548110610d5d57610d5d612c48565b6000918252602090912001546001600160a01b031614610d9057604051630f2700cb60e21b815260040160405180910390fd5b6001600160a01b0382166000908152601960205260409020805460ff1916905560188054610dc090600190612c74565b81548110610dd057610dd0612c48565b600091825260209091200154601880546001600160a01b039092169183908110610dfc57610dfc612c48565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506018805480610e3b57610e3b612c87565b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038416917f709b7450bfafda93efd91d29149870a794637ac9d696ca61625fd2f53548afe091a25050565b60005461010090046001600160a01b03163314610ec4576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03811660009081526019602052604090205460ff1615610efe5760405163bd34634f60e01b815260040160405180910390fd5b6001600160a01b038116600081815260196020526040808220805460ff1916600190811790915560188054918201815583527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e0180546001600160a01b03191684179055517f16ce88285cfd59829a5aa04370a5ec8090a18c14e7e7fb9d4b12a42291c098e39190a250565b60005461010090046001600160a01b03163314610fb9576040516282b42960e81b815260040160405180910390fd5b600381905560405181907f395a61259037298d1c4cd4bf177b64ad5995d38a9394573fcd9060d649314ad090600090a250565b60005461010090046001600160a01b0316331461101b576040516282b42960e81b815260040160405180910390fd5b600d5481101561103e57604051630a35539d60e41b815260040160405180910390fd5b600e8190556040518181527fa9e7961bb3342715dbecc208087a6a9df8986d524b3a0a829fd90f5a2f5ba53e90602001610adb565b60005461010090046001600160a01b031633146110a2576040516282b42960e81b815260040160405180910390fd5b6007548110806110bd57506006546110ba9082612c26565b15155b806110c9575060095481115b156110e75760405163f9c0959d60e01b815260040160405180910390fd5b60088190556040518181527f31407ddd1722f500b8aa2c18e112398626dd7c2869a5f80731ec30b244d9b5f290602001610adb565b60005461010090046001600160a01b0316331461114b576040516282b42960e81b815260040160405180910390fd5b600e5481111561116e57604051635a8f655760e01b815260040160405180910390fd5b600d8190556040518181527f490eb2a91746aa933c9ffe2f7939aa06498f3259139f8805f008b12c8c697a4690602001610adb565b60005461010090046001600160a01b031633146111d2576040516282b42960e81b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0383169081179091556040517f03aa5b0fb65014eea89fda04a7bc11742014881f3c078f2c75b7226ce10d941890600090a250565b60005461010090046001600160a01b0316331461124b576040516282b42960e81b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517fc049058b1df2dd8902739ceb78992df12fa8369c06c450b3c6787137b452fdd290600090a250565b60005461010090046001600160a01b031633146112c4576040516282b42960e81b815260040160405180910390fd5b6006548110806112df57506006546112dc9082612c26565b15155b806112eb575060085481115b1561130957604051630219d66360e11b815260040160405180910390fd5b60078190556040518181527f6f8175cdbac1b4d238abba24a17d2554d7b9750bbeda6414e191c478384b763190602001610adb565b60005461010090046001600160a01b0316331461136d576040516282b42960e81b815260040160405180910390fd5b600b548110156113905760405163019cfb7b60e61b815260040160405180910390fd5b600c8190556040518181527f4fa35c11ce9a45ae882c154ecb53ab5cac52a74a5b9b0373be36deb30c78297890602001610adb565b60005461010090046001600160a01b031633146113f4576040516282b42960e81b815260040160405180910390fd5b6114006017838361264b565b507f2a85276cf604a3822e19b29a3e97aebfbc47a19025c2e8f6e80b3af774dcbc3882826040516109fc929190612c9d565b6001600160a01b03881660009081526019602052604081205460ff1661146b57604051636e623f0f60e01b815260040160405180910390fd5b611476888686611f62565b60408051336020808301919091528183018d905282518083038401815260608301938490528051910120638d10a15b60e01b9092526000916001600160a01b038c1691638d10a15b916114d1918d908d908990606401612e0c565b6020604051808303816000875af11580156114f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115149190612e47565b6001600160a01b038181166000908152601a60205260409081902080546001600160a01b0319168e84169081179091556001549092166101008d015251919250907fabd0a413b2318f33298ccd074a9909d411d3f249cf2e65761d2dd1002e1cb7e5906115869084908d908d90612e64565b60405180910390a2601b805460018082019092557f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc10180546001600160a01b0319166001600160a01b038481169182179092556000908152601c60209081526040808320805460ff1990811690961790558254909416909155825133918101919091529182018d90528b16906316abfc7090349060600160405160208183030381529060405280519060200120338b8b8a6040518763ffffffff1660e01b8152600401611657959493929190612e9f565b60206040518083038185885af1158015611675573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061169a9190612f02565b506000805460ff191660011781555b60175481101561174c57816001600160a01b0316637180c8ca601783815481106116d5576116d5612c48565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b15801561172957600080fd5b505af115801561173d573d6000803e3d6000fd5b505050508060010190506116a9565b5060015460405163ab033ea960e01b81526001600160a01b0391821660048201529082169063ab033ea990602401600060405180830381600087803b15801561179457600080fd5b505af11580156117a8573d6000803e3d6000fd5b50479250508115905061182057604051600090339083908381818185875af1925050503d80600081146117f7576040519150601f19603f3d011682016040523d82523d6000602084013e6117fc565b606091505b505090508061181e576040516312171d8360e31b815260040160405180910390fd5b505b509a9950505050505050505050565b6001600160a01b03871660009081526019602052604081205460ff1661186857604051636e623f0f60e01b815260040160405180910390fd5b611873878686611f62565b60408051336020808301919091528183018c905282518083038401815260608301938490528051910120631b06a35b60e01b9092526000916001600160a01b038b1691631b06a35b916118d0918c908c908a908a90606401612f1b565b6020604051808303816000875af11580156118ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119139190612e47565b9a9950505050505050505050565b6060601780548060200260200160405190810160405280929190818152602001828054801561197957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161195b575b5050505050905090565b60005461010090046001600160a01b031633146119b2576040516282b42960e81b815260040160405180910390fd5b60008054610100600160a81b0319166101006001600160a01b03841690810291909117825560405190917f9d3e522e1e47a2f6009739342b9cc7b252a1888154e843ab55ee1c81745795ab91a250565b606081831115611a2557604051633b2735ab60e11b815260040160405180910390fd5b601b548210611a475760405163e0f7becb60e01b815260040160405180910390fd5b611a518383612c74565b611a5c906001612f5a565b67ffffffffffffffff811115611a7457611a746127d2565b604051908082528060200260200182016040528015611a9d578160200160208202803683370190505b509050825b828111611b1857601b8181548110611abc57611abc612c48565b9060005260206000200160009054906101000a90046001600160a01b03168285830381518110611aee57611aee612c48565b6001600160a01b039092166020928302919091019091015280611b1081612f6d565b915050611aa2565b5092915050565b611b4a6040518060800160405280600081526020016000815260200160008152602001600081525090565b5060408051608081018252600f548152601054602082015260115491810191909152601254606082015290565b60005461010090046001600160a01b03163314611ba6576040516282b42960e81b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f90600090a250565b6000601b8281548110611c0557611c05612c48565b6000918252602090912001546001600160a01b031692915050565b60005461010090046001600160a01b03163314611c4f576040516282b42960e81b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517ff3e07b4bb4394f2ff320bd1dd151551dff304d5e948b401d8558b228482c97d890600090a250565b60005461010090046001600160a01b03163314611cc8576040516282b42960e81b815260040160405180910390fd5b600854811080611ce35750600654611ce09082612c26565b15155b80611cef5750600a5481115b15611d0d57604051633007ad0160e11b815260040160405180910390fd5b60098190556040518181527fe9ef3e93dff799d4db8a12ff79e0918a5a78d75b10527864f4b1c920f6f4f17890602001610adb565b611d6d6040518060800160405280600081526020016000815260200160008152602001600081525090565b50604080516080810182526013548152601454602082015260155491810191909152601654606082015290565b60005461010090046001600160a01b03163314611dc9576040516282b42960e81b815260040160405180910390fd5b600954811080611de45750600654611de19082612c26565b15155b15611e025760405163cfb699cb60e01b815260040160405180910390fd5b600a8190556040518181527f866fe9485f9983afceaa1385307b6eb0fd3df5a250ae2b0bf76dc9ddd316926b90602001610adb565b606081831115611e5a57604051633b2735ab60e11b815260040160405180910390fd5b6018548210611e7c5760405163e0f7becb60e01b815260040160405180910390fd5b611e868383612c74565b611e91906001612f5a565b67ffffffffffffffff811115611ea957611ea96127d2565b604051908082528060200260200182016040528015611ed2578160200160208202803683370190505b509050825b828111611b185760188181548110611ef157611ef1612c48565b9060005260206000200160009054906101000a90046001600160a01b03168285830381518110611f2357611f23612c48565b6001600160a01b039092166020928302919091019091015280611f4581612f6d565b915050611ed7565b600060188281548110611c0557611c05612c48565b6007548360c001511080611f7b57506008548360c00151115b80611f9657506006548360c00151611f939190612c26565b15155b15611fb457604051635428734d60e01b815260040160405180910390fd5b6009548360a001511080611fcd5750600a548360a00151115b80611fea57508260c001518360a00151611fe79190612c26565b15155b156120085760405163253fffcf60e11b815260040160405180910390fd5b60135461016084015151118061203c575060145460a08401516101608501516020015161203a916301e13380906122a7565b115b80612051575060155461016084015160400151115b80612066575060165461016084015160600151115b806120785750600f5461016084015151105b806120a1575060105460a08401516101608501516020015161209f916301e13380906122c5565b105b806120b6575060115461016084015160400151105b806120cb575060125461016084015160600151105b156120e957604051632d8768f960e01b815260040160405180910390fd5b600b548210806120fa5750600c5482115b15612118576040516330554de160e01b815260040160405180910390fd5b600061213d6611c37937e0800061213785671bc16d674ec800006122eb565b90612309565b600d5490915061214d9082612309565b821080612180575061217d612174671bc16d674ec8000061216e8685612309565b9061231f565b600e5490612334565b82115b1561219e576040516383ebdfb760e01b815260040160405180910390fd5b60006121ae838660a00151612349565b60025460208701519192506001600160a01b0391821691161415806121d95750600354856040015114155b806121f857506004546101208601516001600160a01b03908116911614155b8061221757506005546101408601516001600160a01b03908116911614155b8061223657506001546101008601516001600160a01b03908116911614155b80612244575060e085015115155b156122625760405163e8c02dd760e01b815260040160405180910390fd5b6002546001600160a01b03908116602087015260035460408701526004548116610120870152600554166101408601523061010086015260e090940193909352505050565b60008260001904841183021582026122be57600080fd5b5091020490565b60008260001904841183021582026122dc57600080fd5b50910281810615159190040190565b600061230083670de0b6b3a7640000846122a7565b90505b92915050565b60008183116123185781612300565b5090919050565b60006123008383670de0b6b3a76400006122a7565b60008183116123435782612300565b50919050565b60008061237a61236b61235d866064612f86565b66a5bbed86c5a0009061231f565b6748cd4072281e0000906122eb565b905061238e670de0b6b3a7640000826122eb565b90506123e68161216e6123b96123b46123af89670de0b6b3a7640000612f5a565b6123ee565b61241c565b6123e06123b46123ce8a8a6301e133806122a7565b6123af90670de0b6b3a7640000612f5a565b906122eb565b949350505050565b60006001600160ff1b038211156124185760405163396ea70160e11b815260040160405180910390fd5b5090565b600080821361243e5760405163e61b497560e01b815260040160405180910390fd5b506fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff10600390811b90911782811c600f1060021b1782811c909110600190811b90911782811c90911017609f8181036060019290921b91605f198201906124ca9084901c6123ee565b6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d6c8c3f38e95a6b1ff2ab1c3b343619018302821d6d02384773bdf1ac5676facced60901901830290911d6cb9a025d814b29c212b8b1a07cd1901909102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b391909102017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b82805482825590600052602060002090810192821561269e579160200282015b8281111561269e5781546001600160a01b0319166001600160a01b0384351617825560209092019160019091019061266b565b506124189291505b8082111561241857600081556001016126a6565b60006080828403121561234357600080fd5b6000602082840312156126de57600080fd5b5035919050565b6001600160a01b03811681146126fa57600080fd5b50565b8035612708816126e5565b919050565b6000806040838503121561272057600080fd5b823561272b816126e5565b946020939093013593505050565b60006020828403121561274b57600080fd5b8135612756816126e5565b9392505050565b6000806020838503121561277057600080fd5b823567ffffffffffffffff8082111561278857600080fd5b818501915085601f83011261279c57600080fd5b8135818111156127ab57600080fd5b8660208260051b85010111156127c057600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171561280c5761280c6127d2565b60405290565b60006080828403121561282457600080fd5b6040516080810181811067ffffffffffffffff82111715612847576128476127d2565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b60006101e0828403121561288b57600080fd5b6128936127e8565b905061289e826126fd565b81526128ac602083016126fd565b602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101006128fb8184016126fd565b9082015261012061290d8382016126fd565b9082015261014061291f8382016126fd565b9082015261016061293284848301612812565b9082015292915050565b600082601f83011261294d57600080fd5b813567ffffffffffffffff80821115612968576129686127d2565b604051601f8301601f19908116603f01168101908282118183101715612990576129906127d2565b816040528381528660208588010111156129a957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060008060008060006102e08a8c0312156129e857600080fd5b8935985060208a01356129fa816126e5565b9750612a098b60408c01612878565b96506102208a013567ffffffffffffffff80821115612a2757600080fd5b612a338d838e0161293c565b97506102408c013596506102608c013595506102808c013594506102a08c0135915080821115612a6257600080fd5b908b01906060828e031215612a7657600080fd5b604051606081018181108382111715612a9157612a916127d2565b6040528235612a9f816126e5565b815260208301358015158114612ab457600080fd5b6020820152604083013582811115612acb57600080fd5b612ad78f82860161293c565b6040830152508094505050506102c08a013590509295985092959850929598565b6000806000806000806000806102c0898b031215612b1557600080fd5b883597506020890135612b27816126e5565b9650612b368a60408b01612878565b955061022089013567ffffffffffffffff811115612b5357600080fd5b612b5f8b828c0161293c565b989b979a50959861024081013597610260820135975061028082013596506102a090910135945092505050565b6020808252825182820181905260009190848201906040850190845b81811015612bcd5783516001600160a01b031683529284019291840191600101612ba8565b50909695505050505050565b60008060408385031215612bec57600080fd5b50508035926020909101359150565b8151815260208083015190820152604080830151908201526060808301519082015260808101612303565b600082612c4357634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561230357612303612c5e565b634e487b7160e01b600052603160045260246000fd5b60208082528181018390526000908460408401835b86811015612ce0578235612cc5816126e5565b6001600160a01b031682529183019190830190600101612cb2565b509695505050505050565b80516001600160a01b031682526020810151612d1260208401826001600160a01b03169052565b5060408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151612d6a828501826001600160a01b03169052565b5050610120818101516001600160a01b0390811691840191909152610140808301519091169083015261016090810151805191830191909152602081015161018083015260408101516101a0830152606001516101c090910152565b6000815180845260005b81811015612dec57602081850181015186830182015201612dd0565b506000602082860101526020601f19601f83011685010191505092915050565b6000610240868352612e216020840187612ceb565b80610200840152612e3481840186612dc6565b9150508261022083015295945050505050565b600060208284031215612e5957600080fd5b8151612756816126e5565b6001600160a01b03841681526000610220612e826020840186612ceb565b80610200840152612e9581840185612dc6565b9695505050505050565b858152600060018060a01b03808716602084015285604084015284606084015260a060808401528084511660a0840152506020830151151560c08301526040830151606060e0840152612ef6610100840182612dc6565b98975050505050505050565b600060208284031215612f1457600080fd5b5051919050565b6000610260878352612f306020840188612ceb565b80610200840152612f4381840187612dc6565b610220840195909552505061024001529392505050565b8082018082111561230357612303612c5e565b600060018201612f7f57612f7f612c5e565b5060010190565b808202811582820484141761230357612303612c5e56fea26469706673582212202a0dedc739ec319748b4ad36ab20f7d9ed5a84fd53ddc96a82dbb3369175f16b64736f6c63430008140033";
        readonly sourceMap: "895:40057:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12611:15;;;;12607:87;;;12649:34;;-1:-1:-1;;;12649:34:42;;;;;;;;;;;12607:87;895:40057;;;;;1843:29;;;;;;;;;;-1:-1:-1;1843:29:42;;;;-1:-1:-1;;;;;1843:29:42;;;;;;-1:-1:-1;;;;;287:32:239;;;269:51;;257:2;242:18;1843:29:42;;;;;;;;23693:689;;;;;;;;;;-1:-1:-1;23693:689:42;;;;;:::i;:::-;;:::i;14934:974::-;;;;;;;;;;-1:-1:-1;14934:974:42;;;;;:::i;:::-;;:::i;20694:439::-;;;;;;;;;;-1:-1:-1;20694:439:42;;;;;:::i;:::-;;:::i;22623:935::-;;;;;;;;;;-1:-1:-1;22623:935:42;;;;;:::i;:::-;;:::i;25524:706::-;;;;;;;;;;-1:-1:-1;25524:706:42;;;;;:::i;:::-;;:::i;24869:428::-;;;;;;;;;;-1:-1:-1;24869:428:42;;;;;:::i;:::-;;:::i;3057:32::-;;;;;;;;;;;;;;;;;;;1706:25:239;;;1694:2;1679:18;3057:32:42;1560:177:239;13909:195:42;;;;;;;;;;-1:-1:-1;13909:195:42;;;;;:::i;:::-;;:::i;2171:36::-;;;;;;;;;;;;;;;;1293:25;;;;;;;;;;-1:-1:-1;1293:25:42;;;;;;;-1:-1:-1;;;;;1293:25:42;;;21281:531;;;;;;;;;;-1:-1:-1;21281:531:42;;;;;:::i;:::-;;:::i;7213:42::-;;;;;;;;;;-1:-1:-1;7213:42:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2092:14:239;;2085:22;2067:41;;2055:2;2040:18;7213:42:42;1927:187:239;6934:101:42;;;;;;;;;;-1:-1:-1;6934:101:42;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;6934:101:42;;;33122:105;;;;;;;;;;-1:-1:-1;33203:10:42;:17;33122:105;;16066:926;;;;;;;;;;-1:-1:-1;16066:926:42;;;;;:::i;:::-;;:::i;21960:528::-;;;;;;;;;;-1:-1:-1;21960:528:42;;;;;:::i;:::-;;:::i;13500:189::-;;;;;;;;;;-1:-1:-1;13500:189:42;;;;;:::i;:::-;;:::i;14553:195::-;;;;;;;;;;-1:-1:-1;14553:195:42;;;;;:::i;:::-;;:::i;17150:940::-;;;;;;;;;;-1:-1:-1;17150:940:42;;;;;:::i;:::-;;:::i;2597:34::-;;;;;;;;;;;;;;;;20124:442;;;;;;;;;;-1:-1:-1;20124:442:42;;;;;:::i;:::-;;:::i;1517:28::-;;;;;;;;;;-1:-1:-1;1517:28:42;;;;-1:-1:-1;;;;;1517:28:42;;;24518:210;;;;;;;;;;-1:-1:-1;24518:210:42;;;;;:::i;:::-;;:::i;27257:3157::-;;;;;;:::i;:::-;;:::i;31179:1269::-;;;;;;;;;;-1:-1:-1;31179:1269:42;;;;;:::i;:::-;;:::i;32873:106::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;12828:157::-;;;;;;;;;;-1:-1:-1;12828:157:42;;;;;:::i;:::-;;:::i;33810:671::-;;;;;;;;;;-1:-1:-1;33810:671:42;;;;;:::i;:::-;;:::i;2821:26::-;;;;;;;;;;;;;;;;32689:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1735:27::-;;;;;;;;;;-1:-1:-1;1735:27:42;;;;-1:-1:-1;;;;;1735:27:42;;;1627:29;;;;;;;;;;;;;;;;2020:43;;;;;;;;;;;;;;;;2713:26;;;;;;;;;;;;;;;;14241:169;;;;;;;;;;-1:-1:-1;14241:169:42;;;;;:::i;:::-;;:::i;2936:32::-;;;;;;;;;;;;;;;;33399:116;;;;;;;;;;-1:-1:-1;33399:116:42;;;;;:::i;:::-;;:::i;2457:34::-;;;;;;;;;;;;;;;;13145:231;;;;;;;;;;-1:-1:-1;13145:231:42;;;;;:::i;:::-;;:::i;2315:36::-;;;;;;;;;;;;;;;;34666:127;;;;;;;;;;-1:-1:-1;34758:21:42;:28;34666:127;;1402:35;;;;;;;;;;-1:-1:-1;1402:35:42;;;;-1:-1:-1;;;;;1402:35:42;;;19107:889;;;;;;;;;;-1:-1:-1;19107:889:42;;;;;:::i;:::-;;:::i;32519:99::-;;;;;;;;;;;;;:::i;18242:713::-;;;;;;;;;;-1:-1:-1;18242:713:42;;;;;:::i;:::-;;:::i;35480:704::-;;;;;;;;;;-1:-1:-1;35480:704:42;;;;;:::i;:::-;;:::i;6653:53::-;;;;;;;;;;-1:-1:-1;6653:53:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;35001:152;;;;;;;;;;-1:-1:-1;35001:152:42;;;;;:::i;:::-;;:::i;23693:689::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;23897:43:::1;::::0;;::::1;::::0;::::1;::::0;;23932:8:::1;23897:43:::0;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;23967:15;::::1;:32;::::0;:78:::1;;;24032:8;:13;;;24015:9;:14;;;:30;23967:78;:140;;;;24086:8;:21;;;24061:9;:22;;;:46;23967:140;:210;;;;24152:8;:25;;;24123:9;:26;;;:54;23967:210;23950:305;;;24209:35;;-1:-1:-1::0;;;24209:35:42::1;;;;;;;;;;;23950:305;10328:19:239::0;;24315:8:42::1;10315:33:239::0;;;10402:2;10391:14;;;10378:28;10364:12;10357:50;;;10461:2;10450:14;;;10437:28;10423:12;10416:50;;;10520:2;10509:14;;;10496:28;10482:12;10475:50;;;24350:25:42;;10731:39:239;;;10786:20;;;10779:61;;;;10856:20;;;10849:61;10926:20;;10919:61;24350:25:42::1;::::0;10718:3:239;10703:19;24350:25:42::1;;;;;;;;23791:591;23693:689:::0;:::o;14934:974::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;15327:29:::1;15303:21;;:53;;;;:::i;:::-;:58:::0;::::1;::::0;:132:::1;;;15401:29;15377:21;;:53;;;;:::i;:::-;:58:::0;::::1;15303:132;:204;;;;15473:29;15451:19;;:51;;;;:::i;:::-;:56:::0;::::1;15303:204;:276;;;;15545:29;15523:19;;:51;;;;:::i;:::-;:56:::0;::::1;15303:276;15286:392;;;15611:56;;-1:-1:-1::0;;;15611:56:42::1;;;;;;;;;;;15286:392;15760:28;:60:::0;;;15835:66:::1;::::0;1706:25:239;;;15835:66:42::1;::::0;1694:2:239;1679:18;15835:66:42::1;;;;;;;;14934:974:::0;:::o;20694:439::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;20900:11:::1;;20885:12;:26;20881:103;;;20934:39;;-1:-1:-1::0;;;20934:39:42::1;;;;;;;;;;;20881:103;21053:11;:26:::0;;;21094:32:::1;::::0;1706:25:239;;;21094:32:42::1;::::0;1694:2:239;1679:18;21094:32:42::1;1560:177:239::0;22623:935:42;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;22908:43:::1;::::0;;::::1;::::0;::::1;::::0;;22943:8:::1;22908:43:::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;193:4:128::1;22978:15:42::0;::::1;:21;::::0;:57:::1;;;193:4:128;23015:9:42;:14;;;:20;22978:57;:101;;;;193:4:128;23051:9:42;:22;;;:28;22978:101;:149;;;;193:4:128;23095:9:42;:26;;;:32;22978:149;:197;;;-1:-1:-1::0;23161:14:42;;23143:15;::::1;:32;22978:197;:243;;;;23208:8;:13;;;23191:9;:14;;;:30;22978:243;:305;;;;23262:8;:21;;;23237:9;:22;;;:46;22978:305;:375;;;;23328:8;:25;;;23299:9;:26;;;:54;22978:375;22961:470;;;23385:35;;-1:-1:-1::0;;;23385:35:42::1;;;;;;;;;;;22961:470;10328:19:239::0;;23491:8:42::1;10315:33:239::0;;;10402:2;10391:14;;;10378:28;10364:12;10357:50;;;10461:2;10450:14;;;10437:28;10423:12;10416:50;;;10520:2;10509:14;;;10496:28;10482:12;10475:50;;;23526:25:42;;10731:39:239;;;10786:20;;;10779:61;;;;10856:20;;;10849:61;10926:20;;10919:61;23526:25:42::1;::::0;10718:3:239;10703:19;23526:25:42::1;10536:450:239::0;25524:706:42;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;-1:-1:-1;;;;;25666:43:42;::::1;;::::0;;;:21:::1;:43;::::0;;;;;::::1;;25661:130;;25732:48;;-1:-1:-1::0;;;25732:48:42::1;;;;;;;;;;;25661:130;25837:20;-1:-1:-1::0;;;;;25804:53:42::1;:21;25826:6;25804:29;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;25804:29:42::1;:53;25800:144;;25880:53;;-1:-1:-1::0;;;25880:53:42::1;;;;;;;;;;;25800:144;-1:-1:-1::0;;;;;25953:43:42;::::1;25999:5;25953:43:::0;;;:21:::1;:43;::::0;;;;:51;;-1:-1:-1;;25953:51:42::1;::::0;;26046:21:::1;26081:28:::0;;:32:::1;::::0;25953:51;;26081:32:::1;:::i;:::-;26046:77;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;26014:21:::1;:29:::0;;-1:-1:-1;;;;;26046:77:42;;::::1;::::0;26036:6;;26014:29;::::1;;;;;:::i;:::-;;;;;;;;;:109;;;;;-1:-1:-1::0;;;;;26014:109:42::1;;;;;-1:-1:-1::0;;;;;26014:109:42::1;;;;;;26133:21;:27;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;26133:27:42;;;;;-1:-1:-1;;;;;;26133:27:42::1;::::0;;;;;;;;26175:48:::1;::::0;-1:-1:-1;;;;;26175:48:42;::::1;::::0;::::1;::::0;::::1;25524:706:::0;;:::o;24869:428::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;-1:-1:-1;;;;;24983:43:42;::::1;;::::0;;;:21:::1;:43;::::0;;;;;::::1;;24979:133;;;25049:52;;-1:-1:-1::0;;;25049:52:42::1;;;;;;;;;;;24979:133;-1:-1:-1::0;;;;;25121:43:42;::::1;;::::0;;;:21:::1;:43;::::0;;;;;:50;;-1:-1:-1;;25121:50:42::1;25167:4;25121:50:::0;;::::1;::::0;;;25181:21:::1;:48:::0;;;;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;25181:48:42::1;::::0;::::1;::::0;;25244:46;::::1;::::0;25121:43;25244:46:::1;24869:428:::0;:::o;13909:195::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;14012:14:::1;:32:::0;;;14059:38:::1;::::0;14029:15;;14059:38:::1;::::0;;;::::1;13909:195:::0;:::o;21281:531::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;21536:17:::1;;21515:18;:38;21511:121;;;21576:45;;-1:-1:-1::0;;;21576:45:42::1;;;;;;;;;;;21511:121;21708:17;:38:::0;;;21761:44:::1;::::0;1706:25:239;;;21761:44:42::1;::::0;1694:2:239;1679:18;21761:44:42::1;1560:177:239::0;16066:926:42;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;16546:21:::1;;16521:22;:46;:120;;;-1:-1:-1::0;16608:28:42::1;::::0;16583:53:::1;::::0;:22;:53:::1;:::i;:::-;:58:::0;::::1;16521:120;:180;;;;16682:19;;16657:22;:44;16521:180;16504:289;;;16733:49;;-1:-1:-1::0;;;16733:49:42::1;;;;;;;;;;;16504:289;16872:21;:46:::0;;;16933:52:::1;::::0;1706:25:239;;;16933:52:42::1;::::0;1694:2:239;1679:18;16933:52:42::1;1560:177:239::0;21960:528:42;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;22212:17:::1;;22191:18;:38;22187:121;;;22252:45;;-1:-1:-1::0;;;22252:45:42::1;;;;;;;;;;;22187:121;22384:17;:38:::0;;;22437:44:::1;::::0;1706:25:239;;;22437:44:42::1;::::0;1694:2:239;1679:18;22437:44:42::1;1560:177:239::0;13500:189:42;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;13601:13:::1;:30:::0;;-1:-1:-1;;;;;;13601:30:42::1;-1:-1:-1::0;;;;;13601:30:42;::::1;::::0;;::::1;::::0;;;13646:36:::1;::::0;::::1;::::0;-1:-1:-1;;13646:36:42::1;13500:189:::0;:::o;14553:195::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;14656:14:::1;:32:::0;;-1:-1:-1;;;;;;14656:32:42::1;-1:-1:-1::0;;;;;14656:32:42;::::1;::::0;;::::1;::::0;;;14703:38:::1;::::0;::::1;::::0;-1:-1:-1;;14703:38:42::1;14553:195:::0;:::o;17150:940::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;17635:28:::1;;17610:22;:53;:127;;;-1:-1:-1::0;17704:28:42::1;::::0;17679:53:::1;::::0;:22;:53:::1;:::i;:::-;:58:::0;::::1;17610:127;:189;;;;17778:21;;17753:22;:46;17610:189;17593:298;;;17831:49;;-1:-1:-1::0;;;17831:49:42::1;;;;;;;;;;;17593:298;17970:21;:46:::0;;;18031:52:::1;::::0;1706:25:239;;;18031:52:42::1;::::0;1694:2:239;1679:18;18031:52:42::1;1560:177:239::0;20124:442:42;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;20333:11:::1;;20318:12;:26;20314:103;;;20367:39;;-1:-1:-1::0;;;20367:39:42::1;;;;;;;;;;;20314:103;20486:11;:26:::0;;;20527:32:::1;::::0;1706:25:239;;;20527:32:42::1;::::0;1694:2:239;1679:18;20527:32:42::1;1560:177:239::0;24518:210:42;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;24633:34:::1;:15;24651:16:::0;;24633:34:::1;:::i;:::-;;24682:39;24704:16;;24682:39;;;;;;;:::i;27257:3157::-:0;-1:-1:-1;;;;;27729:43:42;;27632:11;27729:43;;;:21;:43;;;;;;;;27724:129;;27795:47;;-1:-1:-1;;;27795:47:42;;;;;;;;;;;27724:129;27989:52;28005:7;28014:9;28025:15;27989;:52::i;:::-;28431:37;;;28442:10;28431:37;;;;12618:51:239;;;;12685:18;;;12678:34;;;28431:37:42;;;;;;;;;12591:18:239;;;28431:37:42;;;;28421:48;;;;;-1:-1:-1;;;28196:363:42;;;-1:-1:-1;;;;;;;28196:59:42;;;;;:363;;28487:7;;28512:10;;28540:5;;28196:363;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;28689:74:42;;;;;;;:31;:74;;;;;;;:97;;-1:-1:-1;;;;;;28689:97:42;;;;;;;;;;-1:-1:-1;28817:20:42;;;;28689:97;28796:18;;:41;28852:130;28689:74;;-1:-1:-1;28689:97:42;28852:130;;;;28689:74;;28796:18;;28962:10;;28852:130;:::i;:::-;;;;;;;;29064:10;:36;;;;;;;;;;;;;-1:-1:-1;;;;;;29064:36:42;-1:-1:-1;;;;;29064:36:42;;;;;;;;;-1:-1:-1;29110:31:42;;;:10;29064:36;29110:31;;;;;;;:38;;-1:-1:-1;;29110:38:42;;;;;;;;29206:23;;;;;;;;29506:37;;29517:10;29506:37;;;12618:51:239;;;;12685:18;;;12678:34;;;29239:63:42;;;;;29323:9;;12591:18:239;;29506:37:42;;;;;;;;;;;;29496:48;;;;;;29558:10;29582:13;29609:9;29632:8;29239:411;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;29660:15:42;:22;;-1:-1:-1;;29660:22:42;29678:4;29660:22;;;29812:180;29836:15;:22;29832:26;;29812:180;;;29876:10;-1:-1:-1;;;;;29876:20:42;;29897:15;29913:1;29897:18;;;;;;;;:::i;:::-;;;;;;;;;;;29876:46;;;;;;-1:-1:-1;;;;;;29876:46:42;;;-1:-1:-1;;;;;29897:18:42;;;29876:46;;;16757:51:239;29897:18:42;16824::239;;;16817:50;16730:18;;29876:46:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29964:3;;;;;29812:180;;;-1:-1:-1;30026:20:42;;30001:46;;-1:-1:-1;;;30001:46:42;;-1:-1:-1;;;;;30026:20:42;;;30001:46;;;269:51:239;30001:24:42;;;;;;242:18:239;;30001:46:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;30142:21:42;;-1:-1:-1;;30177:10:42;;;-1:-1:-1;30173:207:42;;30222:45;;30204:12;;30230:10;;30255:6;;30204:12;30222:45;30204:12;30222:45;30255:6;30230:10;30222:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30203:64;;;30286:7;30281:89;;30320:35;;-1:-1:-1;;;30320:35:42;;;;;;;;;;;30281:89;30189:191;30173:207;-1:-1:-1;30397:10:42;27257:3157;-1:-1:-1;;;;;;;;;;27257:3157:42:o;31179:1269::-;-1:-1:-1;;;;;31586:43:42;;31493:7;31586:43;;;:21;:43;;;;;;;;31581:129;;31652:47;;-1:-1:-1;;;31652:47:42;;;;;;;;;;;31581:129;31846:52;31862:7;31871:9;31882:15;31846;:52::i;:::-;32259:37;;;32270:10;32259:37;;;;12618:51:239;;;;12685:18;;;12678:34;;;32259:37:42;;;;;;;;;12591:18:239;;;32259:37:42;;;;32249:48;;;;;-1:-1:-1;;;32005:412:42;;;-1:-1:-1;;;;;;;32005:78:42;;;;;:412;;32315:7;;32340:10;;32368:12;;32398:5;;32005:412;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31988:429;31179:1269;-1:-1:-1;;;;;;;;;;31179:1269:42:o;32873:106::-;32922:16;32957:15;32950:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;32950:22:42;;;;;;;;;;;;;;;;;;;;;;;32873:106;:::o;12828:157::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;12909:10:::1;:24:::0;;-1:-1:-1;;;;;;12909:24:42::1;;-1:-1:-1::0;;;;;12909:24:42;::::1;::::0;;::::1;::::0;;;::::1;::::0;;12948:30:::1;::::0;12909:24;;12948:30:::1;::::0;::::1;12828:157:::0;:::o;33810:671::-;33922:22;34022:8;34009:10;:21;34005:94;;;34053:35;;-1:-1:-1;;;34053:35:42;;;;;;;;;;;34005:94;34124:10;:17;34112:29;;34108:104;;34164:37;;-1:-1:-1;;;34164:37:42;;;;;;;;;;;34108:104;34286:21;34297:10;34286:8;:21;:::i;:::-;:25;;34310:1;34286:25;:::i;:::-;34272:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;34272:40:42;-1:-1:-1;34264:48:42;-1:-1:-1;34339:10:42;34322:153;34356:8;34351:1;:13;34322:153;;34437:10;34448:1;34437:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;34437:13:42;34413:5;34423:10;34419:1;:14;34413:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;34413:37:42;;;:21;;;;;;;;;;;:37;34366:3;;;;:::i;:::-;;;;34322:153;;;;33810:671;;;;:::o;32689:99::-;32731:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32731:23:42;-1:-1:-1;32766:15:42;;;;;;;;32773:8;32766:15;;;;;;;;;;;;;;;;;;;;;;;;;32689:99::o;14241:169::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;14326:12:::1;:28:::0;;-1:-1:-1;;;;;;14326:28:42::1;-1:-1:-1::0;;;;;14326:28:42;::::1;::::0;;::::1;::::0;;;14369:34:::1;::::0;::::1;::::0;-1:-1:-1;;14369:34:42::1;14241:169:::0;:::o;33399:116::-;33465:7;33491:10;33502:5;33491:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;33491:17:42;;33399:116;-1:-1:-1;;33399:116:42:o;13145:231::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;13260:20:::1;:44:::0;;-1:-1:-1;;;;;;13260:44:42::1;-1:-1:-1::0;;;;;13260:44:42;::::1;::::0;;::::1;::::0;;;13319:50:::1;::::0;::::1;::::0;-1:-1:-1;;13319:50:42::1;13145:231:::0;:::o;19107:889::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;19566:21:::1;;19543:20;:44;:116;;;-1:-1:-1::0;19626:28:42::1;::::0;19603:51:::1;::::0;:20;:51:::1;:::i;:::-;:56:::0;::::1;19543:116;:174;;;;19698:19;;19675:20;:42;19543:174;19526:281;;;19749:47;;-1:-1:-1::0;;;19749:47:42::1;;;;;;;;;;;19526:281;19884:19;:42:::0;;;19941:48:::1;::::0;1706:25:239;;;19941:48:42::1;::::0;1694:2:239;1679:18;19941:48:42::1;1560:177:239::0;32519:99:42;32561:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32561:23:42;-1:-1:-1;32596:15:42;;;;;;;;32603:8;32596:15;;;;;;;;;;;;;;;;;;;;;;;;;32519:99::o;18242:713::-;12319:10;;;;;-1:-1:-1;;;;;12319:10:42;12305;:24;12301:95;;12352:33;;-1:-1:-1;;;12352:33:42;;;;;;;;;;;12301:95;18585:19:::1;;18562:20;:42;:114;;;-1:-1:-1::0;18643:28:42::1;::::0;18620:51:::1;::::0;:20;:51:::1;:::i;:::-;:56:::0;::::1;18562:114;18545:221;;;18708:47;;-1:-1:-1::0;;;18708:47:42::1;;;;;;;;;;;18545:221;18843:19;:42:::0;;;18900:48:::1;::::0;1706:25:239;;;18900:48:42::1;::::0;1694:2:239;1679:18;18900:48:42::1;1560:177:239::0;35480:704:42;35603:22;35703:8;35690:10;:21;35686:94;;;35734:35;;-1:-1:-1;;;35734:35:42;;;;;;;;;;;35686:94;35805:21;:28;35793:40;;35789:115;;35856:37;;-1:-1:-1;;;35856:37:42;;;;;;;;;;;35789:115;35978:21;35989:10;35978:8;:21;:::i;:::-;:25;;36002:1;35978:25;:::i;:::-;35964:40;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35964:40:42;-1:-1:-1;35956:48:42;-1:-1:-1;36031:10:42;36014:164;36048:8;36043:1;:13;36014:164;;36129:21;36151:1;36129:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;36129:24:42;36105:5;36115:10;36111:1;:14;36105:21;;;;;;;;:::i;:::-;-1:-1:-1;;;;;36105:48:42;;;:21;;;;;;;;;;;:48;36058:3;;;;:::i;:::-;;;;36014:164;;35001:152;35092:7;35118:21;35140:5;35118:28;;;;;;;;:::i;36581:4369::-;36986:21;;36957:7;:26;;;:50;:116;;;;37052:21;;37023:7;:26;;;:50;36957:116;:194;;;;37118:28;;37089:7;:26;;;:57;;;;:::i;:::-;:62;;36957:194;36940:300;;;37183:46;;-1:-1:-1;;;37183:46:42;;;;;;;;;;;36940:300;37482:19;;37455:7;:24;;;:46;:108;;;;37544:19;;37517:7;:24;;;:46;37455:108;:182;;;;37606:7;:26;;;37579:7;:24;;;:53;;;;:::i;:::-;:58;;37455:182;37438:286;;;37669:44;;-1:-1:-1;;;37669:44:42;;;;;;;;;;;37438:286;37954:8;:14;37933:12;;;;:18;:35;;:203;;-1:-1:-1;38123:13:42;;38083:24;;;;38044:12;;;;:17;;;:64;;38073:8;;38044:28;:64::i;:::-;:92;37933:203;:268;;;-1:-1:-1;38180:21:42;;38152:12;;;;:25;;;:49;37933:268;:341;;;-1:-1:-1;38249:25:42;;38217:12;;;;:29;;;:57;37933:341;:392;;;-1:-1:-1;38311:8:42;:14;38290:12;;;;:18;:35;37933:392;:556;;;-1:-1:-1;38476:13:42;;38436:24;;;;38399:12;;;;:17;;;:62;;38426:8;;38399:26;:62::i;:::-;:90;37933:556;:621;;;-1:-1:-1;38533:21:42;;38505:12;;;;:25;;;:49;37933:621;:694;;;-1:-1:-1;38602:25:42;;38570:12;;;;:29;;;:57;37933:694;37916:786;;;38659:32;;-1:-1:-1;;;38659:32:42;;;;;;;;;;;37916:786;38828:11;;38816:9;:23;:50;;;;38855:11;;38843:9;:23;38816:50;38812:124;;;38889:36;;-1:-1:-1;;;38889:36:42;;;;;;;;;;;38812:124;39128:18;39149:37;39177:8;39149:23;:9;39167:4;39149:17;:23::i;:::-;:27;;:37::i;:::-;39231:17;;39128:58;;-1:-1:-1;39231:33:42;;39128:58;39231:21;:33::i;:::-;39213:15;:51;:159;;;-1:-1:-1;39310:62:42;39332:39;39366:4;39332:25;:9;39346:10;39332:13;:25::i;:::-;:33;;:39::i;:::-;39310:17;;;:21;:62::i;:::-;39280:15;:92;39213:159;39196:261;;;39404:42;;-1:-1:-1;;;39404:42:42;;;;;;;;;;;39196:261;39466:19;39488:112;39537:15;39566:7;:24;;;39488:35;:112::i;:::-;39998:13;;39973:21;;;;39466:134;;-1:-1:-1;;;;;;39973:38:42;;;39998:13;;39973:38;;;:94;;;40053:14;;40027:7;:22;;;:40;;39973:94;:146;;;-1:-1:-1;40107:12:42;;40083:20;;;;-1:-1:-1;;;;;40083:36:42;;;40107:12;;40083:36;;39973:146;:202;;;-1:-1:-1;40161:14:42;;40135:22;;;;-1:-1:-1;;;;;40135:40:42;;;40161:14;;40135:40;;39973:202;:260;;;-1:-1:-1;40213:20:42;;;40191:18;;;-1:-1:-1;;;;;40191:42:42;;;40213:20;;40191:42;;39973:260;:300;;;-1:-1:-1;40249:19:42;;;;:24;;39973:300;39956:400;;;40305:40;;-1:-1:-1;;;40305:40:42;;;;;;;;;;;39956:400;40700:13;;-1:-1:-1;;;;;40700:13:42;;;40676:21;;;:37;40748:14;;40723:22;;;:39;40795:12;;;;40772:20;;;:35;40842:14;;;40817:22;;;:39;40895:4;40700:13;40866:18;;:34;40910:19;;;;:33;;;;-1:-1:-1;;;36581:4369:42:o;898:556:128:-;1014:9;1279:1;-1:-1:-1;;1262:19:128;1259:1;1256:26;1253:1;1249:34;1242:42;1229:11;1225:60;1198:146;;1328:1;1325;1318:12;1198:146;-1:-1:-1;1415:9:128;;1411:27;;898:556::o;2284:748::-;2398:9;2663:1;-1:-1:-1;;2646:19:128;2643:1;2640:26;2637:1;2633:34;2626:42;2613:11;2609:60;2582:146;;2712:1;2709;2702:12;2582:146;-1:-1:-1;2979:9:128;;2926:27;;;2923:34;;2975:27;;;2902:114;;2284:748::o;1884:164::-;1946:7;1973:21;1984:1;193:4;1992:1;1973:10;:21::i;:::-;1965:30;;1884:164;;;;;:::o;15264:104::-;15322:7;15352:1;15348;:5;:13;;15360:1;15348:13;;;-1:-1:-1;15356:1:128;;15264:104;-1:-1:-1;15264:104:128:o;1610:118::-;1672:7;1699:21;1710:1;1713;193:4;1699:10;:21::i;14987:104::-;15045:7;15075:1;15071;:5;:13;;15083:1;15071:13;;;-1:-1:-1;15079:1:128;14987:104;-1:-1:-1;14987:104:128:o;1405:1330:129:-;1521:7;;1684:90;1725:39;1753:10;:4;1760:3;1753:10;:::i;:::-;1733;;1725:27;:39::i;:::-;1692:10;;1684:27;:90::i;:::-;1662:112;-1:-1:-1;1798:24:129;193:4:128;1662:112:129;1798:11;:24::i;:::-;1784:38;-1:-1:-1;2463:265:129;1784:38;2481:212;2663:28;:23;2664:10;2670:4;193::128;2664:10:129;:::i;:::-;2663:21;:23::i;:::-;:26;:28::i;:::-;2510:118;:88;2517:44;:4;2533:17;2552:8;2517:15;:44::i;:::-;2511:50;;193:4:128;2511:50:129;:::i;2510:118::-;2481:173;;:212::i;2463:265::-;2444:284;1405:1330;-1:-1:-1;;;;1405:1330:129:o;2001:204:131:-;2053:8;-1:-1:-1;;;;;2079:1:131;:30;;2073:103;;2133:32;;-1:-1:-1;;;2133:32:131;;;;;;;;;;;2073:103;-1:-1:-1;2196:1:131;2001:204::o;8508:3846:128:-;8553:8;8606:1;8601;:6;8597:80;;8634:28;;-1:-1:-1;;;8634:28:128;;;;;;;;;;;8597:80;-1:-1:-1;9289:34:128;9286:41;-1:-1:-1;9283:1:128;9279:49;9386:9;;;9366:18;9363:33;9360:1;9356:41;9350:48;9448:9;;;9436:10;9433:25;9430:1;9426:33;9420:40;9506:9;;;9498:6;9495:21;9492:1;9488:29;9482:36;9562:9;;;9556:4;9553:19;9550:1;9546:27;;;9540:34;;;9617:9;;;9612:3;9609:18;9606:1;9602:26;9596:33;9672:9;;;9664:18;;;9661:1;9657:26;;;9651:33;;;9720:9;;;9712:18;;;9706:25;9902:3;:7;;;9872:2;9902:7;9888:22;;;;;-1:-1:-1;;9868:6:128;;;9928:30;;9929:17;;;9928:28;:30::i;:::-;10733:31;10729:35;;10784:5;;10191:2;10783:13;;;10800:32;10782:50;10852:5;;10851:13;;10868:33;10850:51;10921:5;;10920:13;;10937:33;10919:51;10990:5;;10989:13;;11006:33;10988:51;11059:5;;11058:13;;11075:32;11057:50;11127:5;;11126:13;;11143:30;11125:48;10130:31;10126:35;;10181:5;;10180:13;;10197:32;10179:50;10249:5;;10248:13;;10265:32;10247:50;10317:5;;10316:13;;-1:-1:-1;;10315:50:128;10385:5;;10384:13;;-1:-1:-1;;10383:50:128;10453:5;;10452:13;;;-1:-1:-1;;10451:50:128;10519:5;;;-1:-1:-1;;10519:46:128;11514:10;11904:43;11899:48;12027:71;:91;;;;12006:112;12191:72;12186:77;12334:3;12328:9;;;-1:-1:-1;;8508:3846:128:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;331:192:239;415:6;468:3;456:9;447:7;443:23;439:33;436:53;;;485:1;482;475:12;528:180;587:6;640:2;628:9;619:7;615:23;611:32;608:52;;;656:1;653;646:12;608:52;-1:-1:-1;679:23:239;;528:180;-1:-1:-1;528:180:239:o;713:131::-;-1:-1:-1;;;;;788:31:239;;778:42;;768:70;;834:1;831;824:12;768:70;713:131;:::o;849:134::-;917:20;;946:31;917:20;946:31;:::i;:::-;849:134;;;:::o;988:315::-;1056:6;1064;1117:2;1105:9;1096:7;1092:23;1088:32;1085:52;;;1133:1;1130;1123:12;1085:52;1172:9;1159:23;1191:31;1216:5;1191:31;:::i;:::-;1241:5;1293:2;1278:18;;;;1265:32;;-1:-1:-1;;;988:315:239:o;1308:247::-;1367:6;1420:2;1408:9;1399:7;1395:23;1391:32;1388:52;;;1436:1;1433;1426:12;1388:52;1475:9;1462:23;1494:31;1519:5;1494:31;:::i;:::-;1544:5;1308:247;-1:-1:-1;;;1308:247:239:o;2119:615::-;2205:6;2213;2266:2;2254:9;2245:7;2241:23;2237:32;2234:52;;;2282:1;2279;2272:12;2234:52;2322:9;2309:23;2351:18;2392:2;2384:6;2381:14;2378:34;;;2408:1;2405;2398:12;2378:34;2446:6;2435:9;2431:22;2421:32;;2491:7;2484:4;2480:2;2476:13;2472:27;2462:55;;2513:1;2510;2503:12;2462:55;2553:2;2540:16;2579:2;2571:6;2568:14;2565:34;;;2595:1;2592;2585:12;2565:34;2648:7;2643:2;2633:6;2630:1;2626:14;2622:2;2618:23;2614:32;2611:45;2608:65;;;2669:1;2666;2659:12;2608:65;2700:2;2692:11;;;;;2722:6;;-1:-1:-1;2119:615:239;;-1:-1:-1;;;;2119:615:239:o;2739:127::-;2800:10;2795:3;2791:20;2788:1;2781:31;2831:4;2828:1;2821:15;2855:4;2852:1;2845:15;2871:250;2938:2;2932:9;2980:6;2968:19;;3017:18;3002:34;;3038:22;;;2999:62;2996:88;;;3064:18;;:::i;:::-;3100:2;3093:22;2871:250;:::o;3126:601::-;3177:5;3225:4;3213:9;3208:3;3204:19;3200:30;3197:50;;;3243:1;3240;3233:12;3197:50;3276:2;3270:9;3318:4;3310:6;3306:17;3389:6;3377:10;3374:22;3353:18;3341:10;3338:34;3335:62;3332:88;;;3400:18;;:::i;:::-;3440:10;3436:2;3429:22;;3469:6;3460:15;;3512:9;3499:23;3491:6;3484:39;3584:2;3573:9;3569:18;3556:32;3551:2;3543:6;3539:15;3532:57;3650:2;3639:9;3635:18;3622:32;3617:2;3609:6;3605:15;3598:57;3716:2;3705:9;3701:18;3688:32;3683:2;3675:6;3671:15;3664:57;;3126:601;;;;:::o;3732:1079::-;3795:5;3843:6;3831:9;3826:3;3822:19;3818:32;3815:52;;;3863:1;3860;3853:12;3815:52;3885:17;;:::i;:::-;3876:26;;3925:29;3944:9;3925:29;:::i;:::-;3918:5;3911:44;3987:38;4021:2;4010:9;4006:18;3987:38;:::i;:::-;3982:2;3975:5;3971:14;3964:62;4086:2;4075:9;4071:18;4058:32;4053:2;4046:5;4042:14;4035:56;4151:2;4140:9;4136:18;4123:32;4118:2;4111:5;4107:14;4100:56;4217:3;4206:9;4202:19;4189:33;4183:3;4176:5;4172:15;4165:58;4284:3;4273:9;4269:19;4256:33;4250:3;4243:5;4239:15;4232:58;4351:3;4340:9;4336:19;4323:33;4317:3;4310:5;4306:15;4299:58;4418:3;4407:9;4403:19;4390:33;4384:3;4377:5;4373:15;4366:58;4443:3;4478:38;4512:2;4501:9;4497:18;4478:38;:::i;:::-;4462:14;;;4455:62;4536:3;4571:38;4590:18;;;4571:38;:::i;:::-;4555:14;;;4548:62;4629:3;4664:38;4683:18;;;4664:38;:::i;:::-;4648:14;;;4641:62;4722:3;4757:47;4800:3;4780:18;;;4757:47;:::i;:::-;4741:14;;;4734:71;4745:5;3732:1079;-1:-1:-1;;3732:1079:239:o;4816:718::-;4858:5;4911:3;4904:4;4896:6;4892:17;4888:27;4878:55;;4929:1;4926;4919:12;4878:55;4965:6;4952:20;4991:18;5028:2;5024;5021:10;5018:36;;;5034:18;;:::i;:::-;5109:2;5103:9;5077:2;5163:13;;-1:-1:-1;;5159:22:239;;;5183:2;5155:31;5151:40;5139:53;;;5207:18;;;5227:22;;;5204:46;5201:72;;;5253:18;;:::i;:::-;5293:10;5289:2;5282:22;5328:2;5320:6;5313:18;5374:3;5367:4;5362:2;5354:6;5350:15;5346:26;5343:35;5340:55;;;5391:1;5388;5381:12;5340:55;5455:2;5448:4;5440:6;5436:17;5429:4;5421:6;5417:17;5404:54;5502:1;5495:4;5490:2;5482:6;5478:15;5474:26;5467:37;5522:6;5513:15;;;;;;4816:718;;;;:::o;5539:1864::-;5740:6;5748;5756;5764;5772;5780;5788;5796;5804;5857:3;5845:9;5836:7;5832:23;5828:33;5825:53;;;5874:1;5871;5864:12;5825:53;5910:9;5897:23;5887:33;;5970:2;5959:9;5955:18;5942:32;5983:31;6008:5;5983:31;:::i;:::-;6033:5;-1:-1:-1;6057:63:239;6112:7;6107:2;6092:18;;6057:63;:::i;:::-;6047:73;;6171:3;6160:9;6156:19;6143:33;6195:18;6236:2;6228:6;6225:14;6222:34;;;6252:1;6249;6242:12;6222:34;6275:49;6316:7;6307:6;6296:9;6292:22;6275:49;:::i;:::-;6265:59;;6371:3;6360:9;6356:19;6343:33;6333:43;;6423:3;6412:9;6408:19;6395:33;6385:43;;6475:3;6464:9;6460:19;6447:33;6437:43;;6533:3;6522:9;6518:19;6505:33;6489:49;;6563:2;6553:8;6550:16;6547:36;;;6579:1;6576;6569:12;6547:36;6602:24;;;;6660:4;6642:16;;;6638:27;6635:47;;;6678:1;6675;6668:12;6635:47;6711:2;6705:9;6753:4;6745:6;6741:17;6808:6;6796:10;6793:22;6788:2;6776:10;6773:18;6770:46;6767:72;;;6819:18;;:::i;:::-;6855:2;6848:22;6894:16;;6919:33;6894:16;6919:33;:::i;:::-;6961:23;;7029:2;7021:11;;7008:25;7071:15;;7064:23;7052:36;;7042:64;;7102:1;7099;7092:12;7042:64;7134:2;7122:15;;7115:32;7193:2;7185:11;;7172:25;7209:16;;;7206:36;;;7238:1;7235;7228:12;7206:36;7275:44;7311:7;7300:8;7296:2;7292:17;7275:44;:::i;:::-;7270:2;7262:6;7258:15;7251:69;;7339:6;7329:16;;;;;7392:3;7381:9;7377:19;7364:33;7354:43;;5539:1864;;;;;;;;;;;:::o;7637:935::-;7803:6;7811;7819;7827;7835;7843;7851;7859;7912:3;7900:9;7891:7;7887:23;7883:33;7880:53;;;7929:1;7926;7919:12;7880:53;7965:9;7952:23;7942:33;;8025:2;8014:9;8010:18;7997:32;8038:31;8063:5;8038:31;:::i;:::-;8088:5;-1:-1:-1;8112:63:239;8167:7;8162:2;8147:18;;8112:63;:::i;:::-;8102:73;;8226:3;8215:9;8211:19;8198:33;8254:18;8246:6;8243:30;8240:50;;;8286:1;8283;8276:12;8240:50;8309:49;8350:7;8341:6;8330:9;8326:22;8309:49;:::i;:::-;7637:935;;;;-1:-1:-1;7637:935:239;;8405:3;8390:19;;8377:33;;8457:3;8442:19;;8429:33;;-1:-1:-1;8509:3:239;8494:19;;8481:33;;-1:-1:-1;8561:3:239;8546:19;;;8533:33;;-1:-1:-1;7637:935:239;-1:-1:-1;;;7637:935:239:o;8577:658::-;8748:2;8800:21;;;8870:13;;8773:18;;;8892:22;;;8719:4;;8748:2;8971:15;;;;8945:2;8930:18;;;8719:4;9014:195;9028:6;9025:1;9022:13;9014:195;;;9093:13;;-1:-1:-1;;;;;9089:39:239;9077:52;;9184:15;;;;9149:12;;;;9125:1;9043:9;9014:195;;;-1:-1:-1;9226:3:239;;8577:658;-1:-1:-1;;;;;;8577:658:239:o;9240:248::-;9308:6;9316;9369:2;9357:9;9348:7;9344:23;9340:32;9337:52;;;9385:1;9382;9375:12;9337:52;-1:-1:-1;;9408:23:239;;;9478:2;9463:18;;;9450:32;;-1:-1:-1;9240:248:239:o;9755:240::-;9563:12;;9551:25;;9625:4;9614:16;;;9608:23;9592:14;;;9585:47;9681:4;9670:16;;;9664:23;9648:14;;;9641:47;9737:4;9726:16;;;9720:23;9704:14;;;9697:47;9935:3;9920:19;;9948:41;9493:257;10991:209;11023:1;11049;11039:132;;11093:10;11088:3;11084:20;11081:1;11074:31;11128:4;11125:1;11118:15;11156:4;11153:1;11146:15;11039:132;-1:-1:-1;11185:9:239;;10991:209::o;11205:127::-;11266:10;11261:3;11257:20;11254:1;11247:31;11297:4;11294:1;11287:15;11321:4;11318:1;11311:15;11337:127;11398:10;11393:3;11389:20;11386:1;11379:31;11429:4;11426:1;11419:15;11453:4;11450:1;11443:15;11469:128;11536:9;;;11557:11;;;11554:37;;;11571:18;;:::i;11602:127::-;11663:10;11658:3;11654:20;11651:1;11644:31;11694:4;11691:1;11684:15;11718:4;11715:1;11708:15;11734:705;11915:2;11967:21;;;11940:18;;;12023:22;;;11886:4;;12102:6;12076:2;12061:18;;11886:4;12136:277;12150:6;12147:1;12144:13;12136:277;;;12225:6;12212:20;12245:31;12270:5;12245:31;:::i;:::-;-1:-1:-1;;;;;12301:31:239;12289:44;;12388:15;;;;12353:12;;;;12329:1;12165:9;12136:277;;;-1:-1:-1;12430:3:239;11734:705;-1:-1:-1;;;;;;11734:705:239:o;12723:1098::-;12812:12;;-1:-1:-1;;;;;80:31:239;68:44;;12876:4;12869:5;12865:16;12859:23;12891:48;12933:4;12928:3;12924:14;12910:12;-1:-1:-1;;;;;80:31:239;68:44;;14:104;12891:48;;12988:4;12981:5;12977:16;12971:23;12964:4;12959:3;12955:14;12948:47;13044:4;13037:5;13033:16;13027:23;13020:4;13015:3;13011:14;13004:47;13100:4;13093:5;13089:16;13083:23;13076:4;13071:3;13067:14;13060:47;13156:4;13149:5;13145:16;13139:23;13132:4;13127:3;13123:14;13116:47;13212:4;13205:5;13201:16;13195:23;13188:4;13183:3;13179:14;13172:47;13268:4;13261:5;13257:16;13251:23;13244:4;13239:3;13235:14;13228:47;13294:6;13348:2;13341:5;13337:14;13331:21;13361:48;13405:2;13400:3;13396:12;13380:14;-1:-1:-1;;;;;80:31:239;68:44;;14:104;13361:48;-1:-1:-1;;13428:6:239;13471:14;;;13465:21;-1:-1:-1;;;;;80:31:239;;;13530:12;;;68:44;;;;13562:6;13605:14;;;13599:21;80:31;;;13664:12;;;68:44;13696:6;13739:14;;;13733:21;9563:12;;13802;;;9551:25;;;;9625:4;9614:16;;9608:23;9592:14;;;9585:47;9681:4;9670:16;;9664:23;9648:14;;;9641:47;9737:4;9726:16;9720:23;9704:14;;;;9697:47;12723:1098::o;13826:422::-;13867:3;13905:5;13899:12;13932:6;13927:3;13920:19;13957:1;13967:162;13981:6;13978:1;13975:13;13967:162;;;14043:4;14099:13;;;14095:22;;14089:29;14071:11;;;14067:20;;14060:59;13996:12;13967:162;;;13971:3;14174:1;14167:4;14158:6;14153:3;14149:16;14145:27;14138:38;14237:4;14230:2;14226:7;14221:2;14213:6;14209:15;14205:29;14200:3;14196:39;14192:50;14185:57;;;13826:422;;;;:::o;14253:552::-;14517:4;14546:3;14576:6;14565:9;14558:25;14592:62;14650:2;14639:9;14635:18;14627:6;14592:62;:::i;:::-;14691:2;14685:3;14674:9;14670:19;14663:31;14711:44;14751:2;14740:9;14736:18;14728:6;14711:44;:::i;:::-;14703:52;;;14792:6;14786:3;14775:9;14771:19;14764:35;14253:552;;;;;;;:::o;14810:251::-;14880:6;14933:2;14921:9;14912:7;14908:23;14904:32;14901:52;;;14949:1;14946;14939:12;14901:52;14981:9;14975:16;15000:31;15025:5;15000:31;:::i;15066:506::-;-1:-1:-1;;;;;15361:32:239;;15343:51;;15302:4;15331:3;15403:62;15461:2;15446:18;;15438:6;15403:62;:::i;:::-;15502:2;15496:3;15485:9;15481:19;15474:31;15522:44;15562:2;15551:9;15547:18;15539:6;15522:44;:::i;:::-;15514:52;15066:506;-1:-1:-1;;;;;;15066:506:239:o;15577:818::-;15870:6;15859:9;15852:25;15833:4;15913:1;15909;15904:3;15900:11;15896:19;15963:2;15955:6;15951:15;15946:2;15935:9;15931:18;15924:43;16003:6;15998:2;15987:9;15983:18;15976:34;16046:6;16041:2;16030:9;16026:18;16019:34;16090:3;16084;16073:9;16069:19;16062:32;16150:2;16141:6;16135:13;16131:22;16125:3;16114:9;16110:19;16103:51;;16223:2;16215:6;16211:15;16205:22;16198:30;16191:38;16185:3;16174:9;16170:19;16163:67;16277:2;16269:6;16265:15;16259:22;16318:2;16312:3;16301:9;16297:19;16290:31;16338:51;16384:3;16373:9;16369:19;16355:12;16338:51;:::i;:::-;16330:59;15577:818;-1:-1:-1;;;;;;;;15577:818:239:o;16400:184::-;16470:6;16523:2;16511:9;16502:7;16498:23;16494:32;16491:52;;;16539:1;16536;16529:12;16491:52;-1:-1:-1;16562:16:239;;16400:184;-1:-1:-1;16400:184:239:o;17088:624::-;17380:4;17409:3;17439:6;17428:9;17421:25;17455:62;17513:2;17502:9;17498:18;17490:6;17455:62;:::i;:::-;17554:2;17548:3;17537:9;17533:19;17526:31;17574:44;17614:2;17603:9;17599:18;17591:6;17574:44;:::i;:::-;17649:3;17634:19;;17627:35;;;;-1:-1:-1;;17693:3:239;17678:19;17671:35;17566:52;17088:624;-1:-1:-1;;;17088:624:239:o;17717:125::-;17782:9;;;17803:10;;;17800:36;;;17816:18;;:::i;17847:135::-;17886:3;17907:17;;;17904:43;;17927:18;;:::i;:::-;-1:-1:-1;17974:1:239;17963:13;;17847:135::o;17987:168::-;18060:9;;;18091;;18108:15;;;18102:22;;18088:37;18078:71;;18129:18;;:::i";
        readonly linkReferences: {};
    };
    readonly methodIdentifiers: {
        readonly "addDeployerCoordinator(address)": "421caba8";
        readonly "checkpointDurationResolution()": "d0f96b92";
        readonly "defaultPausers()": "a64c90bf";
        readonly "deployAndInitialize(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,(address,bool,bytes),bytes32)": "9cafb919";
        readonly "deployTarget(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes32)": "a18cb81a";
        readonly "feeCollector()": "c415b95c";
        readonly "getDeployerCoordinatorAtIndex(uint256)": "fe3d5aeb";
        readonly "getDeployerCoordinatorsInRange(uint256,uint256)": "ec895f11";
        readonly "getInstanceAtIndex(uint256)": "daac24da";
        readonly "getInstancesInRange(uint256,uint256)": "bc30e7a1";
        readonly "getNumberOfDeployerCoordinators()": "e1b39c80";
        readonly "getNumberOfInstances()": "6e95d67c";
        readonly "governance()": "5aa6e675";
        readonly "hyperdriveGovernance()": "e3331555";
        readonly "instancesToDeployerCoordinators(address)": "6c8cc865";
        readonly "isDeployerCoordinator(address)": "f8c09e59";
        readonly "isInstance(address)": "6b44e6be";
        readonly "linkerCodeHash()": "c905a4b5";
        readonly "linkerFactory()": "99623bb1";
        readonly "maxCheckpointDuration()": "e0e2daaa";
        readonly "maxFees()": "e83e34b1";
        readonly "maxFixedAPR()": "bf9bd5cd";
        readonly "maxPositionDuration()": "8efc0986";
        readonly "maxTimeStretchAPR()": "48800760";
        readonly "minCheckpointDuration()": "5720c9d5";
        readonly "minFees()": "c1722563";
        readonly "minFixedAPR()": "d23d7ea3";
        readonly "minPositionDuration()": "daf012e6";
        readonly "minTimeStretchAPR()": "d6f50169";
        readonly "removeDeployerCoordinator(address,uint256)": "411c3035";
        readonly "sweepCollector()": "10780f73";
        readonly "updateCheckpointDurationResolution(uint256)": "11e77bfe";
        readonly "updateDefaultPausers(address[])": "9af25262";
        readonly "updateFeeCollector(address)": "d2c35ce8";
        readonly "updateGovernance(address)": "b2561263";
        readonly "updateHyperdriveGovernance(address)": "dd2b8fbb";
        readonly "updateLinkerCodeHash(bytes32)": "4fbfee77";
        readonly "updateLinkerFactory(address)": "85229785";
        readonly "updateMaxCheckpointDuration(uint256)": "6f6d5c4a";
        readonly "updateMaxFees((uint256,uint256,uint256,uint256))": "2885e3ac";
        readonly "updateMaxFixedAPR(uint256)": "97b0e8ce";
        readonly "updateMaxPositionDuration(uint256)": "eb71f66c";
        readonly "updateMaxTimeStretchAPR(uint256)": "628027a3";
        readonly "updateMinCheckpointDuration(uint256)": "8e127cf5";
        readonly "updateMinFees((uint256,uint256,uint256,uint256))": "10d1dc3e";
        readonly "updateMinFixedAPR(uint256)": "1978ebcf";
        readonly "updateMinPositionDuration(uint256)": "e71f34b3";
        readonly "updateMinTimeStretchAPR(uint256)": "83b361e8";
        readonly "updateSweepCollector(address)": "8627a4f0";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hyperdriveGovernance\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"defaultPausers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDurationResolution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minCheckpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCheckpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPositionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPositionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minFixedAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFixedAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minTimeStretchAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTimeStretchAPR\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"minFees\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"maxFees\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct HyperdriveFactory.FactoryConfig\",\"name\":\"_factoryConfig\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeployerCoordinatorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeployerCoordinatorIndexMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeployerCoordinatorNotAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EndIndexTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDurationResolution\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDeployConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDeployerCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFixedAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidIndexes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxFixedAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaxTimeStretchAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinFixedAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinTimeStretchAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimeStretchAPR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LnInvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReceiveLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeCastToInt256\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCheckpointDurationResolution\",\"type\":\"uint256\"}],\"name\":\"CheckpointDurationResolutionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newDefaultPausers\",\"type\":\"address[]\"}],\"name\":\"DefaultPausersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployerCoordinator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"hyperdrive\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"indexed\":false,\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployerCoordinator\",\"type\":\"address\"}],\"name\":\"DeployerCoordinatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployerCoordinator\",\"type\":\"address\"}],\"name\":\"DeployerCoordinatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"}],\"name\":\"GovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hyperdriveGovernance\",\"type\":\"address\"}],\"name\":\"HyperdriveGovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newLinkerCodeHash\",\"type\":\"bytes32\"}],\"name\":\"LinkerCodeHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newLinkerFactory\",\"type\":\"address\"}],\"name\":\"LinkerFactoryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxCheckpointDuration\",\"type\":\"uint256\"}],\"name\":\"MaxCheckpointDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"newMaxFees\",\"type\":\"tuple\"}],\"name\":\"MaxFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxFixedAPR\",\"type\":\"uint256\"}],\"name\":\"MaxFixedAPRUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxPositionDuration\",\"type\":\"uint256\"}],\"name\":\"MaxPositionDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxTimeStretchAPR\",\"type\":\"uint256\"}],\"name\":\"MaxTimeStretchAPRUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinCheckpointDuration\",\"type\":\"uint256\"}],\"name\":\"MinCheckpointDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"newMinFees\",\"type\":\"tuple\"}],\"name\":\"MinFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinFixedAPR\",\"type\":\"uint256\"}],\"name\":\"MinFixedAPRUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinPositionDuration\",\"type\":\"uint256\"}],\"name\":\"MinPositionDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMinTimeStretchAPR\",\"type\":\"uint256\"}],\"name\":\"MinTimeStretchAPRUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSweepCollector\",\"type\":\"address\"}],\"name\":\"SweepCollectorUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployerCoordinator\",\"type\":\"address\"}],\"name\":\"addDeployerCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkpointDurationResolution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultPausers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_deployerCoordinator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fixedAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeStretchAPR\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployAndInitialize\",\"outputs\":[{\"internalType\":\"contract IHyperdrive\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_deployerCoordinator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_config\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_fixedAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeStretchAPR\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDeployerCoordinatorAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"getDeployerCoordinatorsInRange\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"range\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getInstanceAtIndex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"getInstancesInRange\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"range\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfDeployerCoordinators\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfInstances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hyperdriveGovernance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"}],\"name\":\"instancesToDeployerCoordinators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployCoordinator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDeployerCoordinator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInstance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkerCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkerFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCheckpointDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFixedAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPositionDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTimeStretchAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minCheckpointDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFixedAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPositionDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTimeStretchAPR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployerCoordinator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"removeDeployerCoordinator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sweepCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_checkpointDurationResolution\",\"type\":\"uint256\"}],\"name\":\"updateCheckpointDurationResolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_defaultPausers_\",\"type\":\"address[]\"}],\"name\":\"updateDefaultPausers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"name\":\"updateFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"updateGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hyperdriveGovernance\",\"type\":\"address\"}],\"name\":\"updateHyperdriveGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_linkerCodeHash\",\"type\":\"bytes32\"}],\"name\":\"updateLinkerCodeHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_linkerFactory\",\"type\":\"address\"}],\"name\":\"updateLinkerFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxCheckpointDuration\",\"type\":\"uint256\"}],\"name\":\"updateMaxCheckpointDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"__maxFees\",\"type\":\"tuple\"}],\"name\":\"updateMaxFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxFixedAPR\",\"type\":\"uint256\"}],\"name\":\"updateMaxFixedAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxPositionDuration\",\"type\":\"uint256\"}],\"name\":\"updateMaxPositionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTimeStretchAPR\",\"type\":\"uint256\"}],\"name\":\"updateMaxTimeStretchAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minCheckpointDuration\",\"type\":\"uint256\"}],\"name\":\"updateMinCheckpointDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"__minFees\",\"type\":\"tuple\"}],\"name\":\"updateMinFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minFixedAPR\",\"type\":\"uint256\"}],\"name\":\"updateMinFixedAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minPositionDuration\",\"type\":\"uint256\"}],\"name\":\"updateMinPositionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minTimeStretchAPR\",\"type\":\"uint256\"}],\"name\":\"updateMinTimeStretchAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sweepCollector\",\"type\":\"address\"}],\"name\":\"updateSweepCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"addDeployerCoordinator(address)\":{\"params\":{\"_deployerCoordinator\":\"The new deployer coordinator.\"}},\"constructor\":{\"params\":{\"_factoryConfig\":\"Configuration of the Hyperdrive Factory.\"}},\"defaultPausers()\":{\"returns\":{\"_0\":\"The default pausers.\"}},\"deployAndInitialize(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,(address,bool,bytes),bytes32)\":{\"details\":\"This function is declared as payable to allow payable overrides      to accept ether on initialization, but payability is not supported      by default.\",\"params\":{\"_config\":\"The configuration of the Hyperdrive pool.\",\"_contribution\":\"The contribution amount in base to the pool.\",\"_deployerCoordinator\":\"The deployer coordinator to use in this        deployment.\",\"_deploymentId\":\"The deployment ID to use when deploying the pool.\",\"_extraData\":\"The extra data that contains data necessary for the        specific deployer.\",\"_fixedAPR\":\"The fixed APR used to initialize the pool.\",\"_options\":\"The options for the `initialize` call.\",\"_salt\":\"The create2 salt to use for the deployment.\",\"_timeStretchAPR\":\"The time stretch APR used to initialize the pool.\"},\"returns\":{\"_0\":\"The hyperdrive address deployed.\"}},\"deployTarget(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes32)\":{\"params\":{\"_config\":\"The configuration of the Hyperdrive pool.\",\"_deployerCoordinator\":\"The deployer coordinator to use in this        deployment.\",\"_deploymentId\":\"The deployment ID to use when deploying the pool.\",\"_extraData\":\"The extra data that contains data necessary for the        specific deployer.\",\"_fixedAPR\":\"The fixed APR used to initialize the pool.\",\"_salt\":\"The create2 salt to use for the deployment.\",\"_targetIndex\":\"The index of the target to deploy.\",\"_timeStretchAPR\":\"The time stretch APR used to initialize the pool.\"},\"returns\":{\"_0\":\"The target address deployed.\"}},\"getDeployerCoordinatorAtIndex(uint256)\":{\"params\":{\"index\":\"The index of the deployer coordinator to get.\"},\"returns\":{\"_0\":\"The deployer coordinator at the specified index.\"}},\"getDeployerCoordinatorsInRange(uint256,uint256)\":{\"params\":{\"endIndex\":\"The ending index (inclusive).\",\"startIndex\":\"The starting index (inclusive).\"},\"returns\":{\"range\":\"The deployer coordinators within the specified range.\"}},\"getInstanceAtIndex(uint256)\":{\"params\":{\"index\":\"The index of the instance to get.\"},\"returns\":{\"_0\":\"The instance at the specified index.\"}},\"getInstancesInRange(uint256,uint256)\":{\"params\":{\"endIndex\":\"The ending index of the instances to get.\",\"startIndex\":\"The starting index of the instances to get.\"},\"returns\":{\"range\":\"The resulting custom portion of the _instances array.\"}},\"getNumberOfDeployerCoordinators()\":{\"returns\":{\"_0\":\"The number of deployer coordinators deployed by this factory.\"}},\"getNumberOfInstances()\":{\"returns\":{\"_0\":\"The number of instances deployed by this factory.\"}},\"maxFees()\":{\"returns\":{\"_0\":\"The max fees.\"}},\"minFees()\":{\"returns\":{\"_0\":\"The min fees.\"}},\"removeDeployerCoordinator(address,uint256)\":{\"params\":{\"_deployerCoordinator\":\"The deployer coordinator to remove.\",\"_index\":\"The index of the deployer coordinator to remove.\"}},\"updateCheckpointDurationResolution(uint256)\":{\"params\":{\"_checkpointDurationResolution\":\"The new checkpoint duration        resolution.\"}},\"updateDefaultPausers(address[])\":{\"params\":{\"_defaultPausers_\":\"The new list of default pausers.\"}},\"updateFeeCollector(address)\":{\"params\":{\"_feeCollector\":\"The new fee collector address.\"}},\"updateGovernance(address)\":{\"params\":{\"_governance\":\"The new governance address.\"}},\"updateHyperdriveGovernance(address)\":{\"params\":{\"_hyperdriveGovernance\":\"The new hyperdrive governance address.\"}},\"updateLinkerCodeHash(bytes32)\":{\"params\":{\"_linkerCodeHash\":\"The new linker code hash.\"}},\"updateLinkerFactory(address)\":{\"params\":{\"_linkerFactory\":\"The new linker factory.\"}},\"updateMaxCheckpointDuration(uint256)\":{\"params\":{\"_maxCheckpointDuration\":\"The new maximum checkpoint duration.\"}},\"updateMaxFees((uint256,uint256,uint256,uint256))\":{\"params\":{\"__maxFees\":\"The new maximum fee parameters.\"}},\"updateMaxFixedAPR(uint256)\":{\"params\":{\"_maxFixedAPR\":\"The new maximum fixed APR.\"}},\"updateMaxPositionDuration(uint256)\":{\"params\":{\"_maxPositionDuration\":\"The new maximum position duration.\"}},\"updateMaxTimeStretchAPR(uint256)\":{\"params\":{\"_maxTimeStretchAPR\":\"The new maximum time stretch APR.\"}},\"updateMinCheckpointDuration(uint256)\":{\"params\":{\"_minCheckpointDuration\":\"The new minimum checkpoint duration.\"}},\"updateMinFees((uint256,uint256,uint256,uint256))\":{\"params\":{\"__minFees\":\"The new minimum fee parameters.\"}},\"updateMinFixedAPR(uint256)\":{\"params\":{\"_minFixedAPR\":\"The new minimum fixed APR.\"}},\"updateMinPositionDuration(uint256)\":{\"params\":{\"_minPositionDuration\":\"The new minimum position duration.\"}},\"updateMinTimeStretchAPR(uint256)\":{\"params\":{\"_minTimeStretchAPR\":\"The new minimum time stretch APR.\"}},\"updateSweepCollector(address)\":{\"params\":{\"_sweepCollector\":\"The new sweep collector address.\"}}},\"stateVariables\":{\"_deployerCoordinators\":{\"details\":\"List of all deployer coordinators registered by governance.\"},\"_instances\":{\"details\":\"Array of all instances deployed by this factory.\"},\"isInstance\":{\"details\":\"Mapping to check if an instance is in the _instances array.\"},\"isReceiveLocked\":{\"details\":\"Locks the receive function. This can be used to prevent stuck ether      from ending up in the contract but still allowing refunds to be      received.\"}},\"title\":\"HyperdriveFactory\",\"version\":1},\"userdoc\":{\"errors\":{\"DeployerCoordinatorAlreadyAdded()\":[{\"notice\":\"Thrown when governance attempts to add a deployer coordinator         that has already been added.\"}],\"DeployerCoordinatorIndexMismatch()\":[{\"notice\":\"Thrown when governance attempts to remove a deployer coordinator         but specifies the wrong index within the list of deployer         coordinators.\"}],\"DeployerCoordinatorNotAdded()\":[{\"notice\":\"Thrown when governance attempts to remove a deployer coordinator         that was never added.\"}],\"EndIndexTooLarge()\":[{\"notice\":\"Thrown when the ending index of a range is larger than the         underlying list.\"}],\"InvalidCheckpointDuration()\":[{\"notice\":\"Thrown when the checkpoint duration supplied to `deployTarget`         or `deployAndInitialize` isn't a multiple of the checkpoint         duration resolution or isn't within the range specified by the         minimum and maximum checkpoint durations.\"}],\"InvalidCheckpointDurationResolution()\":[{\"notice\":\"Thrown when governance attempts to set the checkpoint duration         resolution to a value that doesn't evenly divide the minimum         checkpoint duration, maximum checkpoint duration, minimum         position duration, or maximum position duration.\"}],\"InvalidDeployConfig()\":[{\"notice\":\"Thrown when the deploy configuration passed to         `deployAndInitialize` has fields set that will be overridden by         governance.\"}],\"InvalidDeployerCoordinator()\":[{\"notice\":\"Thrown when the deployer coordinator passed to         `deployAndInitialize` hasn't been added to the factory.\"}],\"InvalidFees()\":[{\"notice\":\"Thrown when the fee parameters passed to `deployAndInitialize`         aren't within the range specified by the minimum and maximum         fees.\"}],\"InvalidFixedAPR()\":[{\"notice\":\"Thrown when the fixed APR passed to `deployAndInitialize` isn't         within the range specified by the minimum and maximum fixed         APRs.\"}],\"InvalidIndexes()\":[{\"notice\":\"Thrown when the starting index of a range is larger than the         ending index.\"}],\"InvalidMaxCheckpointDuration()\":[{\"notice\":\"Thrown when governance attempts to set the maximum checkpoint         duration to a value that isn't a multiple of the checkpoint         duration resolution or is smaller than the minimum checkpoint         duration.\"}],\"InvalidMaxFees()\":[{\"notice\":\"Thrown when governance attempts to set one of the maximum fee         parameters to a smaller value than the corresponding minimum fee         parameter.\"}],\"InvalidMaxFixedAPR()\":[{\"notice\":\"Thrown when governance attempts to set the maximum fixed APR to         a value that is smaller than the minimum fixed APR.\"}],\"InvalidMaxPositionDuration()\":[{\"notice\":\"Thrown when governance attempts to set the maximum position         duration to a value that isn't a multiple of the checkpoint         duration resolution or is smaller than the minimum position         duration.\"}],\"InvalidMaxTimeStretchAPR()\":[{\"notice\":\"Thrown when governance attempts to set the maximum time stretch         APR to a value that is smaller than the minimum time stretch         APR.\"}],\"InvalidMinCheckpointDuration()\":[{\"notice\":\"Thrown when governance attempts to set the minimum checkpoint         duration to a value that isn't a multiple of the checkpoint         duration resolution or is larger than the maximum checkpoint         duration.\"}],\"InvalidMinFees()\":[{\"notice\":\"Thrown when governance attempts to set one of the minimum fee         parameters to a larger value than the corresponding maximum fee         parameter.\"}],\"InvalidMinFixedAPR()\":[{\"notice\":\"Thrown when governance attempts to set the minimum fixed APR to         a value that is larger than the maximum fixed APR.\"}],\"InvalidMinPositionDuration()\":[{\"notice\":\"Thrown when governance attempts to set the minimum position         duration to a value that isn't a multiple of the checkpoint         duration resolution or is larger than the maximum position         duration.\"}],\"InvalidMinTimeStretchAPR()\":[{\"notice\":\"Thrown when governance attempts to set the minimum time stretch         APR to a value that is larger than the maximum time stretch         APR.\"}],\"InvalidPositionDuration()\":[{\"notice\":\"Thrown when the position duration passed to `deployAndInitialize`         doesn't fall within the range specified by the minimum and         maximum position durations.\"}],\"InvalidTimeStretchAPR()\":[{\"notice\":\"Thrown when a time stretch APR is passed to `deployAndInitialize`         that isn't within the range specified by the minimum and maximum         time stretch APRs or doesn't satisfy the lower and upper safe         bounds implied by the fixed APR.\"}],\"LnInvalidInput()\":[{\"notice\":\"Thrown when the input to `FixedPointMath.ln` is less than or         equal to zero.\"}],\"ReceiveLocked()\":[{\"notice\":\"Thrown when ether is sent to the factory when `receive` is         locked.\"}],\"TransferFailed()\":[{\"notice\":\"Thrown when an ether transfer fails.\"}],\"Unauthorized()\":[{\"notice\":\"Thrown when an unauthorized caller attempts to update one of the         governance administered parameters.\"}],\"UnsafeCastToInt256()\":[{\"notice\":\"Thrown when casting a value to a int256 that is outside of the         int256 scale.\"}]},\"events\":{\"CheckpointDurationResolutionUpdated(uint256)\":{\"notice\":\"Emitted when the checkpoint duration resolution is updated.\"},\"DefaultPausersUpdated(address[])\":{\"notice\":\"Emitted when the list of default pausers is updated.\"},\"Deployed(address,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes)\":{\"notice\":\"Emitted when a Hyperdrive pool is deployed.\"},\"DeployerCoordinatorAdded(address)\":{\"notice\":\"Emitted when a deployer coordinator is added.\"},\"DeployerCoordinatorRemoved(address)\":{\"notice\":\"Emitted when a deployer coordinator is removed.\"},\"FeeCollectorUpdated(address)\":{\"notice\":\"Emitted when the fee collector used in new deployments is updated.\"},\"GovernanceUpdated(address)\":{\"notice\":\"Emitted when the factory's governance is updated.\"},\"HyperdriveGovernanceUpdated(address)\":{\"notice\":\"Emitted when the governance address used in new deployments is         updated.\"},\"LinkerCodeHashUpdated(bytes32)\":{\"notice\":\"Emitted when the linker code hash used in new deployments is         updated.\"},\"LinkerFactoryUpdated(address)\":{\"notice\":\"Emitted when the linker factory used in new deployments is         updated.\"},\"MaxCheckpointDurationUpdated(uint256)\":{\"notice\":\"Emitted when the maximum checkpoint duration is updated.\"},\"MaxFeesUpdated((uint256,uint256,uint256,uint256))\":{\"notice\":\"Emitted when the maximum fees are updated.\"},\"MaxFixedAPRUpdated(uint256)\":{\"notice\":\"Emitted when the maximum fixed APR is updated.\"},\"MaxPositionDurationUpdated(uint256)\":{\"notice\":\"Emitted when the maximum position duration is updated.\"},\"MaxTimeStretchAPRUpdated(uint256)\":{\"notice\":\"Emitted when the maximum time stretch APR is updated.\"},\"MinCheckpointDurationUpdated(uint256)\":{\"notice\":\"Emitted when the minimum checkpoint duration is updated.\"},\"MinFeesUpdated((uint256,uint256,uint256,uint256))\":{\"notice\":\"Emitted when the minimum fees are updated.\"},\"MinFixedAPRUpdated(uint256)\":{\"notice\":\"Emitted when the minimum fixed APR is updated.\"},\"MinPositionDurationUpdated(uint256)\":{\"notice\":\"Emitted when the minimum position duration is updated.\"},\"MinTimeStretchAPRUpdated(uint256)\":{\"notice\":\"Emitted when the minimum time stretch APR is updated.\"},\"SweepCollectorUpdated(address)\":{\"notice\":\"Emitted when the sweep collector used in new deployments is         updated.\"}},\"kind\":\"user\",\"methods\":{\"addDeployerCoordinator(address)\":{\"notice\":\"Allows governance to add a new deployer coordinator.\"},\"checkpointDurationResolution()\":{\"notice\":\"The resolution for the checkpoint duration. Every checkpoint         duration must be a multiple of this resolution.\"},\"constructor\":{\"notice\":\"Initializes the factory.\"},\"defaultPausers()\":{\"notice\":\"Gets the default pausers.\"},\"deployAndInitialize(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,(address,bool,bytes),bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the factory's configuration.\"},\"deployTarget(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes32)\":{\"notice\":\"Deploys a Hyperdrive target with the factory's configuration.\"},\"feeCollector()\":{\"notice\":\"The fee collector used when new instances are deployed.\"},\"getDeployerCoordinatorAtIndex(uint256)\":{\"notice\":\"Gets the deployer coordinator at the specified index.\"},\"getDeployerCoordinatorsInRange(uint256,uint256)\":{\"notice\":\"Returns the deployer coordinators with an index between the         starting and ending indexes (inclusive).\"},\"getInstanceAtIndex(uint256)\":{\"notice\":\"Gets the instance at the specified index.\"},\"getInstancesInRange(uint256,uint256)\":{\"notice\":\"Returns the _instances array according to specified indices.\"},\"getNumberOfDeployerCoordinators()\":{\"notice\":\"Gets the number of deployer coordinators registered in this         factory.\"},\"getNumberOfInstances()\":{\"notice\":\"Gets the number of instances deployed by this factory.\"},\"governance()\":{\"notice\":\"The governance address that updates the factory's configuration.\"},\"hyperdriveGovernance()\":{\"notice\":\"The governance address used when new instances are deployed.\"},\"instancesToDeployerCoordinators(address)\":{\"notice\":\"A mapping from deployed Hyperdrive instances to the deployer         coordinator that deployed them. This is useful for verifying         the bytecode that was used to deploy the instance.\"},\"isDeployerCoordinator(address)\":{\"notice\":\"Mapping to check if a deployer coordinator has been registered         by governance.\"},\"linkerCodeHash()\":{\"notice\":\"The linker code hash used when new instances are deployed.\"},\"linkerFactory()\":{\"notice\":\"The linker factory used when new instances are deployed.\"},\"maxCheckpointDuration()\":{\"notice\":\"The maximum checkpoint duration that can be used by new         deployments.\"},\"maxFees()\":{\"notice\":\"Gets the max fees.\"},\"maxFixedAPR()\":{\"notice\":\"The maximum fixed APR that can be used by new deployments.\"},\"maxPositionDuration()\":{\"notice\":\"The maximum position duration that can be used by new         deployments.\"},\"maxTimeStretchAPR()\":{\"notice\":\"The maximum time stretch APR that can be used by new deployments.\"},\"minCheckpointDuration()\":{\"notice\":\"The minimum checkpoint duration that can be used by new         deployments.\"},\"minFees()\":{\"notice\":\"Gets the min fees.\"},\"minFixedAPR()\":{\"notice\":\"The minimum fixed APR that can be used by new deployments.\"},\"minPositionDuration()\":{\"notice\":\"The minimum position duration that can be used by new         deployments.\"},\"minTimeStretchAPR()\":{\"notice\":\"The minimum time stretch APR that can be used by new deployments.\"},\"removeDeployerCoordinator(address,uint256)\":{\"notice\":\"Allows governance to remove an existing deployer coordinator.\"},\"sweepCollector()\":{\"notice\":\"The sweep collector used when new instances are deployed.\"},\"updateCheckpointDurationResolution(uint256)\":{\"notice\":\"Allows governance to change the checkpoint duration resolution.\"},\"updateDefaultPausers(address[])\":{\"notice\":\"Allows governance to change the default pausers.\"},\"updateFeeCollector(address)\":{\"notice\":\"Allows governance to change the fee collector address.\"},\"updateGovernance(address)\":{\"notice\":\"Allows governance to transfer the governance role.\"},\"updateHyperdriveGovernance(address)\":{\"notice\":\"Allows governance to change the hyperdrive governance address\"},\"updateLinkerCodeHash(bytes32)\":{\"notice\":\"Allows governance to change the linker code hash. This allows         governance to update the implementation of the ERC20Forwarder.\"},\"updateLinkerFactory(address)\":{\"notice\":\"Allows governance to change the linker factory.\"},\"updateMaxCheckpointDuration(uint256)\":{\"notice\":\"Allows governance to update the maximum checkpoint duration.\"},\"updateMaxFees((uint256,uint256,uint256,uint256))\":{\"notice\":\"Allows governance to update the maximum fee parameters.\"},\"updateMaxFixedAPR(uint256)\":{\"notice\":\"Allows governance to update the maximum fixed APR.\"},\"updateMaxPositionDuration(uint256)\":{\"notice\":\"Allows governance to update the maximum position duration.\"},\"updateMaxTimeStretchAPR(uint256)\":{\"notice\":\"Allows governance to update the maximum time stretch APR.\"},\"updateMinCheckpointDuration(uint256)\":{\"notice\":\"Allows governance to update the minimum checkpoint duration.\"},\"updateMinFees((uint256,uint256,uint256,uint256))\":{\"notice\":\"Allows governance to update the minimum fee parameters.\"},\"updateMinFixedAPR(uint256)\":{\"notice\":\"Allows governance to update the minimum fixed APR.\"},\"updateMinPositionDuration(uint256)\":{\"notice\":\"Allows governance to update the minimum position duration.\"},\"updateMinTimeStretchAPR(uint256)\":{\"notice\":\"Allows governance to update the minimum time stretch APR.\"},\"updateSweepCollector(address)\":{\"notice\":\"Allows governance to change the sweep collector address.\"}},\"notice\":\"Deploys hyperdrive instances and initializes them. It also holds a         registry of all deployed hyperdrive instances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/factory/HyperdriveFactory.sol\":\"HyperdriveFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/factory/HyperdriveFactory.sol\":{\"keccak256\":\"0x6cdf88e6900eb562a1563e0dfad6c2d2df192a3b0e98bb4cd07a05315d893953\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5fc4b1b8c96d3216d6c6f75163cf19f3e6276d12207185e74f07c14b0b6c947a\",\"dweb:/ipfs/Qmb7Akb3PyGEgAXRhCov6mj4x1t8QmuhoApfUYLXnUgqfo\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf\",\"dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24\",\"dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h\"]},\"contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xb21fef06e9a50d1dd8fb765fe9efe9dd0cf01dfba1edf519743930e64b6cec9b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f5dba59592d1f4ff5359367ceadac86a19dbb976958c5abf632c953ae10b8799\",\"dweb:/ipfs/QmTfWhYzcMaLtmJFymXPweCXu6njXQPtHf4mhPEWErR8V5\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c\",\"dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG\"]},\"contracts/src/interfaces/IHyperdriveFactory.sol\":{\"keccak256\":\"0x5f7850059953850a99bba38ebd44d8c6346cd151e2d7f7af250a06edec603e9f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://01c6772ed3e05ac9148c2b1cba8efb582d90fc8cd770fc14e80a2807bee93cc6\",\"dweb:/ipfs/QmThmQJSqs7qwKDyVa2NniN7sqT8Ez6zyLGdTMWr3Hfaew\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/libraries/Constants.sol\":{\"keccak256\":\"0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418\",\"dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88\",\"dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0xcf305dde8aa320d1e1b767734ce8edce456af537525d40e30d5345f09f6e34ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://056c9a563f1a9e0133e17463497ad19be517d35b770170122edea50ca9fbe002\",\"dweb:/ipfs/QmS6dkVRHzdbv7etumcCtNtm9GuXDCjqZxxhtYfP6keAAY\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c\",\"dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "struct HyperdriveFactory.FactoryConfig";
                    readonly name: "_factoryConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "hyperdriveGovernance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address[]";
                        readonly name: "defaultPausers";
                        readonly type: "address[]";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDurationResolution";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minCheckpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "maxCheckpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minPositionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "maxPositionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minFixedAPR";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "maxFixedAPR";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minTimeStretchAPR";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "maxTimeStretchAPR";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "minFees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "maxFees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }];
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeployerCoordinatorAlreadyAdded";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeployerCoordinatorIndexMismatch";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeployerCoordinatorNotAdded";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "EndIndexTooLarge";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDurationResolution";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidDeployConfig";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidDeployerCoordinator";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFees";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFixedAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidIndexes";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMaxCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMaxFees";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMaxFixedAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMaxPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMaxTimeStretchAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinFees";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinFixedAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinTimeStretchAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidTimeStretchAPR";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "LnInvalidInput";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "ReceiveLocked";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TransferFailed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "Unauthorized";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "UnsafeCastToInt256";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newCheckpointDurationResolution";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "CheckpointDurationResolutionUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "newDefaultPausers";
                    readonly type: "address[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "DefaultPausersUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "deployerCoordinator";
                    readonly type: "address";
                    readonly indexed: true;
                }, {
                    readonly internalType: "address";
                    readonly name: "hyperdrive";
                    readonly type: "address";
                    readonly indexed: false;
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "config";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                    readonly indexed: false;
                }, {
                    readonly internalType: "bytes";
                    readonly name: "extraData";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "Deployed";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "deployerCoordinator";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "DeployerCoordinatorAdded";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "deployerCoordinator";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "DeployerCoordinatorRemoved";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "newFeeCollector";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "FeeCollectorUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "governance";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "GovernanceUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "hyperdriveGovernance";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "HyperdriveGovernanceUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "newLinkerCodeHash";
                    readonly type: "bytes32";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "LinkerCodeHashUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "newLinkerFactory";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "LinkerFactoryUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMaxCheckpointDuration";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MaxCheckpointDurationUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "newMaxFees";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MaxFeesUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMaxFixedAPR";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MaxFixedAPRUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMaxPositionDuration";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MaxPositionDurationUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMaxTimeStretchAPR";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MaxTimeStretchAPRUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMinCheckpointDuration";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MinCheckpointDurationUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "newMinFees";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MinFeesUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMinFixedAPR";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MinFixedAPRUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMinPositionDuration";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MinPositionDurationUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "newMinTimeStretchAPR";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "MinTimeStretchAPRUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "newSweepCollector";
                    readonly type: "address";
                    readonly indexed: true;
                }];
                readonly type: "event";
                readonly name: "SweepCollectorUpdated";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_deployerCoordinator";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "addDeployerCoordinator";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "checkpointDurationResolution";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "defaultPausers";
                readonly outputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "";
                    readonly type: "address[]";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "address";
                    readonly name: "_deployerCoordinator";
                    readonly type: "address";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_config";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_contribution";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_fixedAPR";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_timeStretchAPR";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "struct IHyperdrive.Options";
                    readonly name: "_options";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "destination";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bool";
                        readonly name: "asBase";
                        readonly type: "bool";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "extraData";
                        readonly type: "bytes";
                    }];
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "payable";
                readonly type: "function";
                readonly name: "deployAndInitialize";
                readonly outputs: readonly [{
                    readonly internalType: "contract IHyperdrive";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "address";
                    readonly name: "_deployerCoordinator";
                    readonly type: "address";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_config";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_fixedAPR";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_timeStretchAPR";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_targetIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deployTarget";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "feeCollector";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getDeployerCoordinatorAtIndex";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "startIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "endIndex";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getDeployerCoordinatorsInRange";
                readonly outputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "range";
                    readonly type: "address[]";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "index";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getInstanceAtIndex";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "startIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "endIndex";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getInstancesInRange";
                readonly outputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "range";
                    readonly type: "address[]";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getNumberOfDeployerCoordinators";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "getNumberOfInstances";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "governance";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "hyperdriveGovernance";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "instance";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "instancesToDeployerCoordinators";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "deployCoordinator";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "isDeployerCoordinator";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "isInstance";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "linkerCodeHash";
                readonly outputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "linkerFactory";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "maxCheckpointDuration";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "maxFees";
                readonly outputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "maxFixedAPR";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "maxPositionDuration";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "maxTimeStretchAPR";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "minCheckpointDuration";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "minFees";
                readonly outputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "minFixedAPR";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "minPositionDuration";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "minTimeStretchAPR";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_deployerCoordinator";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_index";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "removeDeployerCoordinator";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "sweepCollector";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_checkpointDurationResolution";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateCheckpointDurationResolution";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "_defaultPausers_";
                    readonly type: "address[]";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateDefaultPausers";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_feeCollector";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateFeeCollector";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_governance";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateGovernance";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_hyperdriveGovernance";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateHyperdriveGovernance";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_linkerCodeHash";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateLinkerCodeHash";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_linkerFactory";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateLinkerFactory";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_maxCheckpointDuration";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMaxCheckpointDuration";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "__maxFees";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMaxFees";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_maxFixedAPR";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMaxFixedAPR";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_maxPositionDuration";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMaxPositionDuration";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_maxTimeStretchAPR";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMaxTimeStretchAPR";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_minCheckpointDuration";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMinCheckpointDuration";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "struct IHyperdrive.Fees";
                    readonly name: "__minFees";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "uint256";
                        readonly name: "curve";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "flat";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceLP";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "governanceZombie";
                        readonly type: "uint256";
                    }];
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMinFees";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_minFixedAPR";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMinFixedAPR";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_minPositionDuration";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMinPositionDuration";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "_minTimeStretchAPR";
                    readonly type: "uint256";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateMinTimeStretchAPR";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_sweepCollector";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "updateSweepCollector";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "payable";
                readonly type: "receive";
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly "addDeployerCoordinator(address)": {
                        readonly params: {
                            readonly _deployerCoordinator: "The new deployer coordinator.";
                        };
                    };
                    readonly constructor: {
                        readonly params: {
                            readonly _factoryConfig: "Configuration of the Hyperdrive Factory.";
                        };
                    };
                    readonly "defaultPausers()": {
                        readonly returns: {
                            readonly _0: "The default pausers.";
                        };
                    };
                    readonly "deployAndInitialize(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,(address,bool,bytes),bytes32)": {
                        readonly details: "This function is declared as payable to allow payable overrides      to accept ether on initialization, but payability is not supported      by default.";
                        readonly params: {
                            readonly _config: "The configuration of the Hyperdrive pool.";
                            readonly _contribution: "The contribution amount in base to the pool.";
                            readonly _deployerCoordinator: "The deployer coordinator to use in this        deployment.";
                            readonly _deploymentId: "The deployment ID to use when deploying the pool.";
                            readonly _extraData: "The extra data that contains data necessary for the        specific deployer.";
                            readonly _fixedAPR: "The fixed APR used to initialize the pool.";
                            readonly _options: "The options for the `initialize` call.";
                            readonly _salt: "The create2 salt to use for the deployment.";
                            readonly _timeStretchAPR: "The time stretch APR used to initialize the pool.";
                        };
                        readonly returns: {
                            readonly _0: "The hyperdrive address deployed.";
                        };
                    };
                    readonly "deployTarget(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes32)": {
                        readonly params: {
                            readonly _config: "The configuration of the Hyperdrive pool.";
                            readonly _deployerCoordinator: "The deployer coordinator to use in this        deployment.";
                            readonly _deploymentId: "The deployment ID to use when deploying the pool.";
                            readonly _extraData: "The extra data that contains data necessary for the        specific deployer.";
                            readonly _fixedAPR: "The fixed APR used to initialize the pool.";
                            readonly _salt: "The create2 salt to use for the deployment.";
                            readonly _targetIndex: "The index of the target to deploy.";
                            readonly _timeStretchAPR: "The time stretch APR used to initialize the pool.";
                        };
                        readonly returns: {
                            readonly _0: "The target address deployed.";
                        };
                    };
                    readonly "getDeployerCoordinatorAtIndex(uint256)": {
                        readonly params: {
                            readonly index: "The index of the deployer coordinator to get.";
                        };
                        readonly returns: {
                            readonly _0: "The deployer coordinator at the specified index.";
                        };
                    };
                    readonly "getDeployerCoordinatorsInRange(uint256,uint256)": {
                        readonly params: {
                            readonly endIndex: "The ending index (inclusive).";
                            readonly startIndex: "The starting index (inclusive).";
                        };
                        readonly returns: {
                            readonly range: "The deployer coordinators within the specified range.";
                        };
                    };
                    readonly "getInstanceAtIndex(uint256)": {
                        readonly params: {
                            readonly index: "The index of the instance to get.";
                        };
                        readonly returns: {
                            readonly _0: "The instance at the specified index.";
                        };
                    };
                    readonly "getInstancesInRange(uint256,uint256)": {
                        readonly params: {
                            readonly endIndex: "The ending index of the instances to get.";
                            readonly startIndex: "The starting index of the instances to get.";
                        };
                        readonly returns: {
                            readonly range: "The resulting custom portion of the _instances array.";
                        };
                    };
                    readonly "getNumberOfDeployerCoordinators()": {
                        readonly returns: {
                            readonly _0: "The number of deployer coordinators deployed by this factory.";
                        };
                    };
                    readonly "getNumberOfInstances()": {
                        readonly returns: {
                            readonly _0: "The number of instances deployed by this factory.";
                        };
                    };
                    readonly "maxFees()": {
                        readonly returns: {
                            readonly _0: "The max fees.";
                        };
                    };
                    readonly "minFees()": {
                        readonly returns: {
                            readonly _0: "The min fees.";
                        };
                    };
                    readonly "removeDeployerCoordinator(address,uint256)": {
                        readonly params: {
                            readonly _deployerCoordinator: "The deployer coordinator to remove.";
                            readonly _index: "The index of the deployer coordinator to remove.";
                        };
                    };
                    readonly "updateCheckpointDurationResolution(uint256)": {
                        readonly params: {
                            readonly _checkpointDurationResolution: "The new checkpoint duration        resolution.";
                        };
                    };
                    readonly "updateDefaultPausers(address[])": {
                        readonly params: {
                            readonly _defaultPausers_: "The new list of default pausers.";
                        };
                    };
                    readonly "updateFeeCollector(address)": {
                        readonly params: {
                            readonly _feeCollector: "The new fee collector address.";
                        };
                    };
                    readonly "updateGovernance(address)": {
                        readonly params: {
                            readonly _governance: "The new governance address.";
                        };
                    };
                    readonly "updateHyperdriveGovernance(address)": {
                        readonly params: {
                            readonly _hyperdriveGovernance: "The new hyperdrive governance address.";
                        };
                    };
                    readonly "updateLinkerCodeHash(bytes32)": {
                        readonly params: {
                            readonly _linkerCodeHash: "The new linker code hash.";
                        };
                    };
                    readonly "updateLinkerFactory(address)": {
                        readonly params: {
                            readonly _linkerFactory: "The new linker factory.";
                        };
                    };
                    readonly "updateMaxCheckpointDuration(uint256)": {
                        readonly params: {
                            readonly _maxCheckpointDuration: "The new maximum checkpoint duration.";
                        };
                    };
                    readonly "updateMaxFees((uint256,uint256,uint256,uint256))": {
                        readonly params: {
                            readonly __maxFees: "The new maximum fee parameters.";
                        };
                    };
                    readonly "updateMaxFixedAPR(uint256)": {
                        readonly params: {
                            readonly _maxFixedAPR: "The new maximum fixed APR.";
                        };
                    };
                    readonly "updateMaxPositionDuration(uint256)": {
                        readonly params: {
                            readonly _maxPositionDuration: "The new maximum position duration.";
                        };
                    };
                    readonly "updateMaxTimeStretchAPR(uint256)": {
                        readonly params: {
                            readonly _maxTimeStretchAPR: "The new maximum time stretch APR.";
                        };
                    };
                    readonly "updateMinCheckpointDuration(uint256)": {
                        readonly params: {
                            readonly _minCheckpointDuration: "The new minimum checkpoint duration.";
                        };
                    };
                    readonly "updateMinFees((uint256,uint256,uint256,uint256))": {
                        readonly params: {
                            readonly __minFees: "The new minimum fee parameters.";
                        };
                    };
                    readonly "updateMinFixedAPR(uint256)": {
                        readonly params: {
                            readonly _minFixedAPR: "The new minimum fixed APR.";
                        };
                    };
                    readonly "updateMinPositionDuration(uint256)": {
                        readonly params: {
                            readonly _minPositionDuration: "The new minimum position duration.";
                        };
                    };
                    readonly "updateMinTimeStretchAPR(uint256)": {
                        readonly params: {
                            readonly _minTimeStretchAPR: "The new minimum time stretch APR.";
                        };
                    };
                    readonly "updateSweepCollector(address)": {
                        readonly params: {
                            readonly _sweepCollector: "The new sweep collector address.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly "addDeployerCoordinator(address)": {
                        readonly notice: "Allows governance to add a new deployer coordinator.";
                    };
                    readonly "checkpointDurationResolution()": {
                        readonly notice: "The resolution for the checkpoint duration. Every checkpoint         duration must be a multiple of this resolution.";
                    };
                    readonly constructor: {
                        readonly notice: "Initializes the factory.";
                    };
                    readonly "defaultPausers()": {
                        readonly notice: "Gets the default pausers.";
                    };
                    readonly "deployAndInitialize(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,(address,bool,bytes),bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the factory's configuration.";
                    };
                    readonly "deployTarget(bytes32,address,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,uint256,uint256,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive target with the factory's configuration.";
                    };
                    readonly "feeCollector()": {
                        readonly notice: "The fee collector used when new instances are deployed.";
                    };
                    readonly "getDeployerCoordinatorAtIndex(uint256)": {
                        readonly notice: "Gets the deployer coordinator at the specified index.";
                    };
                    readonly "getDeployerCoordinatorsInRange(uint256,uint256)": {
                        readonly notice: "Returns the deployer coordinators with an index between the         starting and ending indexes (inclusive).";
                    };
                    readonly "getInstanceAtIndex(uint256)": {
                        readonly notice: "Gets the instance at the specified index.";
                    };
                    readonly "getInstancesInRange(uint256,uint256)": {
                        readonly notice: "Returns the _instances array according to specified indices.";
                    };
                    readonly "getNumberOfDeployerCoordinators()": {
                        readonly notice: "Gets the number of deployer coordinators registered in this         factory.";
                    };
                    readonly "getNumberOfInstances()": {
                        readonly notice: "Gets the number of instances deployed by this factory.";
                    };
                    readonly "governance()": {
                        readonly notice: "The governance address that updates the factory's configuration.";
                    };
                    readonly "hyperdriveGovernance()": {
                        readonly notice: "The governance address used when new instances are deployed.";
                    };
                    readonly "instancesToDeployerCoordinators(address)": {
                        readonly notice: "A mapping from deployed Hyperdrive instances to the deployer         coordinator that deployed them. This is useful for verifying         the bytecode that was used to deploy the instance.";
                    };
                    readonly "isDeployerCoordinator(address)": {
                        readonly notice: "Mapping to check if a deployer coordinator has been registered         by governance.";
                    };
                    readonly "linkerCodeHash()": {
                        readonly notice: "The linker code hash used when new instances are deployed.";
                    };
                    readonly "linkerFactory()": {
                        readonly notice: "The linker factory used when new instances are deployed.";
                    };
                    readonly "maxCheckpointDuration()": {
                        readonly notice: "The maximum checkpoint duration that can be used by new         deployments.";
                    };
                    readonly "maxFees()": {
                        readonly notice: "Gets the max fees.";
                    };
                    readonly "maxFixedAPR()": {
                        readonly notice: "The maximum fixed APR that can be used by new deployments.";
                    };
                    readonly "maxPositionDuration()": {
                        readonly notice: "The maximum position duration that can be used by new         deployments.";
                    };
                    readonly "maxTimeStretchAPR()": {
                        readonly notice: "The maximum time stretch APR that can be used by new deployments.";
                    };
                    readonly "minCheckpointDuration()": {
                        readonly notice: "The minimum checkpoint duration that can be used by new         deployments.";
                    };
                    readonly "minFees()": {
                        readonly notice: "Gets the min fees.";
                    };
                    readonly "minFixedAPR()": {
                        readonly notice: "The minimum fixed APR that can be used by new deployments.";
                    };
                    readonly "minPositionDuration()": {
                        readonly notice: "The minimum position duration that can be used by new         deployments.";
                    };
                    readonly "minTimeStretchAPR()": {
                        readonly notice: "The minimum time stretch APR that can be used by new deployments.";
                    };
                    readonly "removeDeployerCoordinator(address,uint256)": {
                        readonly notice: "Allows governance to remove an existing deployer coordinator.";
                    };
                    readonly "sweepCollector()": {
                        readonly notice: "The sweep collector used when new instances are deployed.";
                    };
                    readonly "updateCheckpointDurationResolution(uint256)": {
                        readonly notice: "Allows governance to change the checkpoint duration resolution.";
                    };
                    readonly "updateDefaultPausers(address[])": {
                        readonly notice: "Allows governance to change the default pausers.";
                    };
                    readonly "updateFeeCollector(address)": {
                        readonly notice: "Allows governance to change the fee collector address.";
                    };
                    readonly "updateGovernance(address)": {
                        readonly notice: "Allows governance to transfer the governance role.";
                    };
                    readonly "updateHyperdriveGovernance(address)": {
                        readonly notice: "Allows governance to change the hyperdrive governance address";
                    };
                    readonly "updateLinkerCodeHash(bytes32)": {
                        readonly notice: "Allows governance to change the linker code hash. This allows         governance to update the implementation of the ERC20Forwarder.";
                    };
                    readonly "updateLinkerFactory(address)": {
                        readonly notice: "Allows governance to change the linker factory.";
                    };
                    readonly "updateMaxCheckpointDuration(uint256)": {
                        readonly notice: "Allows governance to update the maximum checkpoint duration.";
                    };
                    readonly "updateMaxFees((uint256,uint256,uint256,uint256))": {
                        readonly notice: "Allows governance to update the maximum fee parameters.";
                    };
                    readonly "updateMaxFixedAPR(uint256)": {
                        readonly notice: "Allows governance to update the maximum fixed APR.";
                    };
                    readonly "updateMaxPositionDuration(uint256)": {
                        readonly notice: "Allows governance to update the maximum position duration.";
                    };
                    readonly "updateMaxTimeStretchAPR(uint256)": {
                        readonly notice: "Allows governance to update the maximum time stretch APR.";
                    };
                    readonly "updateMinCheckpointDuration(uint256)": {
                        readonly notice: "Allows governance to update the minimum checkpoint duration.";
                    };
                    readonly "updateMinFees((uint256,uint256,uint256,uint256))": {
                        readonly notice: "Allows governance to update the minimum fee parameters.";
                    };
                    readonly "updateMinFixedAPR(uint256)": {
                        readonly notice: "Allows governance to update the minimum fixed APR.";
                    };
                    readonly "updateMinPositionDuration(uint256)": {
                        readonly notice: "Allows governance to update the minimum position duration.";
                    };
                    readonly "updateMinTimeStretchAPR(uint256)": {
                        readonly notice: "Allows governance to update the minimum time stretch APR.";
                    };
                    readonly "updateSweepCollector(address)": {
                        readonly notice: "Allows governance to change the sweep collector address.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/factory/HyperdriveFactory.sol": "HyperdriveFactory";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/factory/HyperdriveFactory.sol": {
                readonly keccak256: "0x6cdf88e6900eb562a1563e0dfad6c2d2df192a3b0e98bb4cd07a05315d893953";
                readonly urls: readonly ["bzz-raw://5fc4b1b8c96d3216d6c6f75163cf19f3e6276d12207185e74f07c14b0b6c947a", "dweb:/ipfs/Qmb7Akb3PyGEgAXRhCov6mj4x1t8QmuhoApfUYLXnUgqfo"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952";
                readonly urls: readonly ["bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf", "dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e";
                readonly urls: readonly ["bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24", "dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xb21fef06e9a50d1dd8fb765fe9efe9dd0cf01dfba1edf519743930e64b6cec9b";
                readonly urls: readonly ["bzz-raw://f5dba59592d1f4ff5359367ceadac86a19dbb976958c5abf632c953ae10b8799", "dweb:/ipfs/QmTfWhYzcMaLtmJFymXPweCXu6njXQPtHf4mhPEWErR8V5"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0";
                readonly urls: readonly ["bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c", "dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveFactory.sol": {
                readonly keccak256: "0x5f7850059953850a99bba38ebd44d8c6346cd151e2d7f7af250a06edec603e9f";
                readonly urls: readonly ["bzz-raw://01c6772ed3e05ac9148c2b1cba8efb582d90fc8cd770fc14e80a2807bee93cc6", "dweb:/ipfs/QmThmQJSqs7qwKDyVa2NniN7sqT8Ez6zyLGdTMWr3Hfaew"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55";
                readonly urls: readonly ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501";
                readonly urls: readonly ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca";
                readonly urls: readonly ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0";
                readonly urls: readonly ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/Constants.sol": {
                readonly keccak256: "0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d";
                readonly urls: readonly ["bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418", "dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/Errors.sol": {
                readonly keccak256: "0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0";
                readonly urls: readonly ["bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88", "dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076";
                readonly urls: readonly ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/HyperdriveMath.sol": {
                readonly keccak256: "0xcf305dde8aa320d1e1b767734ce8edce456af537525d40e30d5345f09f6e34ab";
                readonly urls: readonly ["bzz-raw://056c9a563f1a9e0133e17463497ad19be517d35b770170122edea50ca9fbe002", "dweb:/ipfs/QmS6dkVRHzdbv7etumcCtNtm9GuXDCjqZxxhtYfP6keAAY"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/SafeCast.sol": {
                readonly keccak256: "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148";
                readonly urls: readonly ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/YieldSpaceMath.sol": {
                readonly keccak256: "0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891";
                readonly urls: readonly ["bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c", "dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy"];
                readonly license: "Apache-2.0";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/factory/HyperdriveFactory.sol";
        readonly id: 7632;
        readonly exportedSymbols: {
            readonly ETH: readonly [18778];
            readonly FixedPointMath: readonly [19572];
            readonly HyperdriveFactory: readonly [7631];
            readonly HyperdriveMath: readonly [20320];
            readonly IHyperdrive: readonly [11143];
            readonly IHyperdriveDeployerCoordinator: readonly [11465];
            readonly IHyperdriveFactory: readonly [11864];
            readonly ONE: readonly [18806];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:40914:42";
        readonly nodes: readonly [{
            readonly id: 5780;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:42";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 5782;
            readonly nodeType: "ImportDirective";
            readonly src: "64:60:42";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 7632;
            readonly sourceUnit: 11144;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 5781;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11143;
                    readonly src: "73:11:42";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 5784;
            readonly nodeType: "ImportDirective";
            readonly src: "125:74:42";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveFactory.sol";
            readonly file: "../interfaces/IHyperdriveFactory.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 7632;
            readonly sourceUnit: 11865;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 5783;
                    readonly name: "IHyperdriveFactory";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11864;
                    readonly src: "134:18:42";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 5786;
            readonly nodeType: "ImportDirective";
            readonly src: "200:98:42";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly file: "../interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 7632;
            readonly sourceUnit: 11466;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 5785;
                    readonly name: "IHyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11465;
                    readonly src: "209:30:42";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 5788;
            readonly nodeType: "ImportDirective";
            readonly src: "299:49:42";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/Constants.sol";
            readonly file: "../libraries/Constants.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 7632;
            readonly sourceUnit: 18779;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 5787;
                    readonly name: "ETH";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 18778;
                    readonly src: "308:3:42";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 5791;
            readonly nodeType: "ImportDirective";
            readonly src: "349:70:42";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/FixedPointMath.sol";
            readonly file: "../libraries/FixedPointMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 7632;
            readonly sourceUnit: 19573;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 5789;
                    readonly name: "FixedPointMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 19572;
                    readonly src: "358:14:42";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }, {
                readonly foreign: {
                    readonly id: 5790;
                    readonly name: "ONE";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 18806;
                    readonly src: "374:3:42";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 5793;
            readonly nodeType: "ImportDirective";
            readonly src: "420:65:42";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/HyperdriveMath.sol";
            readonly file: "../libraries/HyperdriveMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 7632;
            readonly sourceUnit: 20321;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 5792;
                    readonly name: "HyperdriveMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 20320;
                    readonly src: "429:14:42";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 7631;
            readonly nodeType: "ContractDefinition";
            readonly src: "895:40057:42";
            readonly nodes: readonly [{
                readonly id: 5799;
                readonly nodeType: "UsingForDirective";
                readonly src: "950:33:42";
                readonly nodes: readonly [];
                readonly global: false;
                readonly libraryName: {
                    readonly id: 5797;
                    readonly name: "FixedPointMath";
                    readonly nameLocations: readonly ["956:14:42"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 19572;
                    readonly src: "956:14:42";
                };
                readonly typeName: {
                    readonly id: 5798;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "975:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
            }, {
                readonly id: 5803;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1170:35:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5800;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "989:176:42";
                    readonly text: "@dev Locks the receive function. This can be used to prevent stuck ether\n      from ending up in the contract but still allowing refunds to be\n      received.";
                };
                readonly mutability: "mutable";
                readonly name: "isReceiveLocked";
                readonly nameLocation: "1183:15:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_bool";
                    readonly typeString: "bool";
                };
                readonly typeName: {
                    readonly id: 5801;
                    readonly name: "bool";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1170:4:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_bool";
                        readonly typeString: "bool";
                    };
                };
                readonly value: {
                    readonly hexValue: "74727565";
                    readonly id: 5802;
                    readonly isConstant: false;
                    readonly isLValue: false;
                    readonly isPure: true;
                    readonly kind: "bool";
                    readonly lValueRequested: false;
                    readonly nodeType: "Literal";
                    readonly src: "1201:4:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_bool";
                        readonly typeString: "bool";
                    };
                    readonly value: "true";
                };
                readonly visibility: "private";
            }, {
                readonly id: 5806;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1293:25:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5804;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1212:76:42";
                    readonly text: "@notice The governance address that updates the factory's configuration.";
                };
                readonly functionSelector: "5aa6e675";
                readonly mutability: "mutable";
                readonly name: "governance";
                readonly nameLocation: "1308:10:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 5805;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1293:7:42";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5809;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1402:35:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5807;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1325:72:42";
                    readonly text: "@notice The governance address used when new instances are deployed.";
                };
                readonly functionSelector: "e3331555";
                readonly mutability: "mutable";
                readonly name: "hyperdriveGovernance";
                readonly nameLocation: "1417:20:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 5808;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1402:7:42";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5812;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1517:28:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5810;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1444:68:42";
                    readonly text: "@notice The linker factory used when new instances are deployed.";
                };
                readonly functionSelector: "99623bb1";
                readonly mutability: "mutable";
                readonly name: "linkerFactory";
                readonly nameLocation: "1532:13:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 5811;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1517:7:42";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5815;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1627:29:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5813;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1552:70:42";
                    readonly text: "@notice The linker code hash used when new instances are deployed.";
                };
                readonly functionSelector: "c905a4b5";
                readonly mutability: "mutable";
                readonly name: "linkerCodeHash";
                readonly nameLocation: "1642:14:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_bytes32";
                    readonly typeString: "bytes32";
                };
                readonly typeName: {
                    readonly id: 5814;
                    readonly name: "bytes32";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1627:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_bytes32";
                        readonly typeString: "bytes32";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5818;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1735:27:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5816;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1663:67:42";
                    readonly text: "@notice The fee collector used when new instances are deployed.";
                };
                readonly functionSelector: "c415b95c";
                readonly mutability: "mutable";
                readonly name: "feeCollector";
                readonly nameLocation: "1750:12:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 5817;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1735:7:42";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5821;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1843:29:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5819;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1769:69:42";
                    readonly text: "@notice The sweep collector used when new instances are deployed.";
                };
                readonly functionSelector: "10780f73";
                readonly mutability: "mutable";
                readonly name: "sweepCollector";
                readonly nameLocation: "1858:14:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 5820;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1843:7:42";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5824;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2020:43:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5822;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1879:136:42";
                    readonly text: "@notice The resolution for the checkpoint duration. Every checkpoint\n         duration must be a multiple of this resolution.";
                };
                readonly functionSelector: "d0f96b92";
                readonly mutability: "mutable";
                readonly name: "checkpointDurationResolution";
                readonly nameLocation: "2035:28:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 5823;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2020:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5827;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2171:36:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5825;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2070:96:42";
                    readonly text: "@notice The minimum checkpoint duration that can be used by new\n         deployments.";
                };
                readonly functionSelector: "5720c9d5";
                readonly mutability: "mutable";
                readonly name: "minCheckpointDuration";
                readonly nameLocation: "2186:21:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 5826;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2171:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5830;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2315:36:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5828;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2214:96:42";
                    readonly text: "@notice The maximum checkpoint duration that can be used by new\n         deployments.";
                };
                readonly functionSelector: "e0e2daaa";
                readonly mutability: "mutable";
                readonly name: "maxCheckpointDuration";
                readonly nameLocation: "2330:21:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 5829;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2315:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5833;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2457:34:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5831;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2358:94:42";
                    readonly text: "@notice The minimum position duration that can be used by new\n         deployments.";
                };
                readonly functionSelector: "daf012e6";
                readonly mutability: "mutable";
                readonly name: "minPositionDuration";
                readonly nameLocation: "2472:19:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 5832;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2457:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5836;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2597:34:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5834;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2498:94:42";
                    readonly text: "@notice The maximum position duration that can be used by new\n         deployments.";
                };
                readonly functionSelector: "8efc0986";
                readonly mutability: "mutable";
                readonly name: "maxPositionDuration";
                readonly nameLocation: "2612:19:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 5835;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2597:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5839;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2713:26:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5837;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2638:70:42";
                    readonly text: "@notice The minimum fixed APR that can be used by new deployments.";
                };
                readonly functionSelector: "d23d7ea3";
                readonly mutability: "mutable";
                readonly name: "minFixedAPR";
                readonly nameLocation: "2728:11:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 5838;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2713:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5842;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2821:26:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5840;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2746:70:42";
                    readonly text: "@notice The maximum fixed APR that can be used by new deployments.";
                };
                readonly functionSelector: "bf9bd5cd";
                readonly mutability: "mutable";
                readonly name: "maxFixedAPR";
                readonly nameLocation: "2836:11:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 5841;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2821:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5845;
                readonly nodeType: "VariableDeclaration";
                readonly src: "2936:32:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5843;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2854:77:42";
                    readonly text: "@notice The minimum time stretch APR that can be used by new deployments.";
                };
                readonly functionSelector: "d6f50169";
                readonly mutability: "mutable";
                readonly name: "minTimeStretchAPR";
                readonly nameLocation: "2951:17:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 5844;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "2936:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5848;
                readonly nodeType: "VariableDeclaration";
                readonly src: "3057:32:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5846;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2975:77:42";
                    readonly text: "@notice The maximum time stretch APR that can be used by new deployments.";
                };
                readonly functionSelector: "48800760";
                readonly mutability: "mutable";
                readonly name: "maxTimeStretchAPR";
                readonly nameLocation: "3072:17:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 5847;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "3057:7:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5852;
                readonly nodeType: "VariableDeclaration";
                readonly src: "3176:34:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5849;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3096:75:42";
                    readonly text: "@notice The minimum fee parameters that can be used by new deployments.";
                };
                readonly mutability: "mutable";
                readonly name: "_minFees";
                readonly nameLocation: "3202:8:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                    readonly typeString: "struct IHyperdrive.Fees";
                };
                readonly typeName: {
                    readonly id: 5851;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 5850;
                        readonly name: "IHyperdrive.Fees";
                        readonly nameLocations: readonly ["3176:11:42", "3188:4:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 10853;
                        readonly src: "3176:16:42";
                    };
                    readonly referencedDeclaration: 10853;
                    readonly src: "3176:16:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                        readonly typeString: "struct IHyperdrive.Fees";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 5856;
                readonly nodeType: "VariableDeclaration";
                readonly src: "3297:34:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5853;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3217:75:42";
                    readonly text: "@notice The maximum fee parameters that can be used by new deployments.";
                };
                readonly mutability: "mutable";
                readonly name: "_maxFees";
                readonly nameLocation: "3323:8:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                    readonly typeString: "struct IHyperdrive.Fees";
                };
                readonly typeName: {
                    readonly id: 5855;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 5854;
                        readonly name: "IHyperdrive.Fees";
                        readonly nameLocations: readonly ["3297:11:42", "3309:4:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 10853;
                        readonly src: "3297:16:42";
                    };
                    readonly referencedDeclaration: 10853;
                    readonly src: "3297:16:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                        readonly typeString: "struct IHyperdrive.Fees";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 5860;
                readonly nodeType: "VariableDeclaration";
                readonly src: "3411:34:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5857;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3338:68:42";
                    readonly text: "@notice The defaultPausers used when new instances are deployed.";
                };
                readonly mutability: "mutable";
                readonly name: "_defaultPausers";
                readonly nameLocation: "3430:15:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                    readonly typeString: "address[]";
                };
                readonly typeName: {
                    readonly baseType: {
                        readonly id: 5858;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3411:7:42";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly id: 5859;
                    readonly nodeType: "ArrayTypeName";
                    readonly src: "3411:9:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                        readonly typeString: "address[]";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 5918;
                readonly nodeType: "StructDefinition";
                readonly src: "3452:2965:42";
                readonly nodes: readonly [];
                readonly canonicalName: "HyperdriveFactory.FactoryConfig";
                readonly members: readonly [{
                    readonly constant: false;
                    readonly id: 5863;
                    readonly mutability: "mutable";
                    readonly name: "governance";
                    readonly nameLocation: "3548:10:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "3540:18:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                    readonly typeName: {
                        readonly id: 5862;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3540:7:42";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5866;
                    readonly mutability: "mutable";
                    readonly name: "hyperdriveGovernance";
                    readonly nameLocation: "3649:20:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "3641:28:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                    readonly typeName: {
                        readonly id: 5865;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3641:7:42";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5870;
                    readonly mutability: "mutable";
                    readonly name: "defaultPausers";
                    readonly nameLocation: "3771:14:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "3761:24:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                        readonly typeString: "address[]";
                    };
                    readonly typeName: {
                        readonly baseType: {
                            readonly id: 5868;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3761:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 5869;
                        readonly nodeType: "ArrayTypeName";
                        readonly src: "3761:9:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                            readonly typeString: "address[]";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5873;
                    readonly mutability: "mutable";
                    readonly name: "feeCollector";
                    readonly nameLocation: "3875:12:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "3867:20:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                    readonly typeName: {
                        readonly id: 5872;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3867:7:42";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5876;
                    readonly mutability: "mutable";
                    readonly name: "sweepCollector";
                    readonly nameLocation: "3974:14:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "3966:22:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                    readonly typeName: {
                        readonly id: 5875;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "3966:7:42";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5879;
                    readonly mutability: "mutable";
                    readonly name: "checkpointDurationResolution";
                    readonly nameLocation: "4067:28:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "4059:36:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 5878;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4059:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5882;
                    readonly mutability: "mutable";
                    readonly name: "minCheckpointDuration";
                    readonly nameLocation: "4216:21:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "4208:29:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 5881;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4208:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5885;
                    readonly mutability: "mutable";
                    readonly name: "maxCheckpointDuration";
                    readonly nameLocation: "4358:21:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "4350:29:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 5884;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4350:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5888;
                    readonly mutability: "mutable";
                    readonly name: "minPositionDuration";
                    readonly nameLocation: "4498:19:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "4490:27:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 5887;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4490:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5891;
                    readonly mutability: "mutable";
                    readonly name: "maxPositionDuration";
                    readonly nameLocation: "4636:19:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "4628:27:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 5890;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4628:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5894;
                    readonly mutability: "mutable";
                    readonly name: "minFixedAPR";
                    readonly nameLocation: "4749:11:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "4741:19:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 5893;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4741:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5897;
                    readonly mutability: "mutable";
                    readonly name: "maxFixedAPR";
                    readonly nameLocation: "4854:11:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "4846:19:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 5896;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4846:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5900;
                    readonly mutability: "mutable";
                    readonly name: "minTimeStretchAPR";
                    readonly nameLocation: "4983:17:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "4975:25:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 5899;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "4975:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5903;
                    readonly mutability: "mutable";
                    readonly name: "maxTimeStretchAPR";
                    readonly nameLocation: "5118:17:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "5110:25:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                    readonly typeName: {
                        readonly id: 5902;
                        readonly name: "uint256";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "5110:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5907;
                    readonly mutability: "mutable";
                    readonly name: "minFees";
                    readonly nameLocation: "5671:7:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "5654:24:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                        readonly typeString: "struct IHyperdrive.Fees";
                    };
                    readonly typeName: {
                        readonly id: 5906;
                        readonly nodeType: "UserDefinedTypeName";
                        readonly pathNode: {
                            readonly id: 5905;
                            readonly name: "IHyperdrive.Fees";
                            readonly nameLocations: readonly ["5654:11:42", "5666:4:42"];
                            readonly nodeType: "IdentifierPath";
                            readonly referencedDeclaration: 10853;
                            readonly src: "5654:16:42";
                        };
                        readonly referencedDeclaration: 10853;
                        readonly src: "5654:16:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5911;
                    readonly mutability: "mutable";
                    readonly name: "maxFees";
                    readonly nameLocation: "6219:7:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "6202:24:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                        readonly typeString: "struct IHyperdrive.Fees";
                    };
                    readonly typeName: {
                        readonly id: 5910;
                        readonly nodeType: "UserDefinedTypeName";
                        readonly pathNode: {
                            readonly id: 5909;
                            readonly name: "IHyperdrive.Fees";
                            readonly nameLocations: readonly ["6202:11:42", "6214:4:42"];
                            readonly nodeType: "IdentifierPath";
                            readonly referencedDeclaration: 10853;
                            readonly src: "6202:16:42";
                        };
                        readonly referencedDeclaration: 10853;
                        readonly src: "6202:16:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5914;
                    readonly mutability: "mutable";
                    readonly name: "linkerFactory";
                    readonly nameLocation: "6296:13:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "6288:21:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                    readonly typeName: {
                        readonly id: 5913;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "6288:7:42";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly visibility: "internal";
                }, {
                    readonly constant: false;
                    readonly id: 5917;
                    readonly mutability: "mutable";
                    readonly name: "linkerCodeHash";
                    readonly nameLocation: "6396:14:42";
                    readonly nodeType: "VariableDeclaration";
                    readonly scope: 5918;
                    readonly src: "6388:22:42";
                    readonly stateVariable: false;
                    readonly storageLocation: "default";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_bytes32";
                        readonly typeString: "bytes32";
                    };
                    readonly typeName: {
                        readonly id: 5916;
                        readonly name: "bytes32";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "6388:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                    };
                    readonly visibility: "internal";
                }];
                readonly name: "FactoryConfig";
                readonly nameLocation: "3459:13:42";
                readonly scope: 7631;
                readonly visibility: "public";
            }, {
                readonly id: 5922;
                readonly nodeType: "VariableDeclaration";
                readonly src: "6496:40:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5919;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "6423:68:42";
                    readonly text: "@dev List of all deployer coordinators registered by governance.";
                };
                readonly mutability: "mutable";
                readonly name: "_deployerCoordinators";
                readonly nameLocation: "6515:21:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                    readonly typeString: "address[]";
                };
                readonly typeName: {
                    readonly baseType: {
                        readonly id: 5920;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "6496:7:42";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly id: 5921;
                    readonly nodeType: "ArrayTypeName";
                    readonly src: "6496:9:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                        readonly typeString: "address[]";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 5927;
                readonly nodeType: "VariableDeclaration";
                readonly src: "6653:53:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5923;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "6543:105:42";
                    readonly text: "@notice Mapping to check if a deployer coordinator has been registered\n         by governance.";
                };
                readonly functionSelector: "f8c09e59";
                readonly mutability: "mutable";
                readonly name: "isDeployerCoordinator";
                readonly nameLocation: "6685:21:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                    readonly typeString: "mapping(address => bool)";
                };
                readonly typeName: {
                    readonly id: 5926;
                    readonly keyName: "";
                    readonly keyNameLocation: "-1:-1:-1";
                    readonly keyType: {
                        readonly id: 5924;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "6661:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly nodeType: "Mapping";
                    readonly src: "6653:24:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                        readonly typeString: "mapping(address => bool)";
                    };
                    readonly valueName: "";
                    readonly valueNameLocation: "-1:-1:-1";
                    readonly valueType: {
                        readonly id: 5925;
                        readonly name: "bool";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "6672:4:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5932;
                readonly nodeType: "VariableDeclaration";
                readonly src: "6934:101:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5928;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "6713:216:42";
                    readonly text: "@notice A mapping from deployed Hyperdrive instances to the deployer\n         coordinator that deployed them. This is useful for verifying\n         the bytecode that was used to deploy the instance.";
                };
                readonly functionSelector: "6c8cc865";
                readonly mutability: "mutable";
                readonly name: "instancesToDeployerCoordinators";
                readonly nameLocation: "7004:31:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_mapping$_t_address_$_t_address_$";
                    readonly typeString: "mapping(address => address)";
                };
                readonly typeName: {
                    readonly id: 5931;
                    readonly keyName: "instance";
                    readonly keyNameLocation: "6950:8:42";
                    readonly keyType: {
                        readonly id: 5929;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "6942:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly nodeType: "Mapping";
                    readonly src: "6934:54:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_mapping$_t_address_$_t_address_$";
                        readonly typeString: "mapping(address => address)";
                    };
                    readonly valueName: "deployCoordinator";
                    readonly valueNameLocation: "6970:17:42";
                    readonly valueType: {
                        readonly id: 5930;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "6962:7:42";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 5936;
                readonly nodeType: "VariableDeclaration";
                readonly src: "7104:29:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5933;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "7042:57:42";
                    readonly text: "@dev Array of all instances deployed by this factory.";
                };
                readonly mutability: "mutable";
                readonly name: "_instances";
                readonly nameLocation: "7123:10:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                    readonly typeString: "address[]";
                };
                readonly typeName: {
                    readonly baseType: {
                        readonly id: 5934;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "7104:7:42";
                        readonly stateMutability: "nonpayable";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly id: 5935;
                    readonly nodeType: "ArrayTypeName";
                    readonly src: "7104:9:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                        readonly typeString: "address[]";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 5941;
                readonly nodeType: "VariableDeclaration";
                readonly src: "7213:42:42";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 5937;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "7140:68:42";
                    readonly text: "@dev Mapping to check if an instance is in the _instances array.";
                };
                readonly functionSelector: "6b44e6be";
                readonly mutability: "mutable";
                readonly name: "isInstance";
                readonly nameLocation: "7245:10:42";
                readonly scope: 7631;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                    readonly typeString: "mapping(address => bool)";
                };
                readonly typeName: {
                    readonly id: 5940;
                    readonly keyName: "";
                    readonly keyNameLocation: "-1:-1:-1";
                    readonly keyType: {
                        readonly id: 5938;
                        readonly name: "address";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "7221:7:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    };
                    readonly nodeType: "Mapping";
                    readonly src: "7213:24:42";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                        readonly typeString: "mapping(address => bool)";
                    };
                    readonly valueName: "";
                    readonly valueNameLocation: "-1:-1:-1";
                    readonly valueType: {
                        readonly id: 5939;
                        readonly name: "bool";
                        readonly nodeType: "ElementaryTypeName";
                        readonly src: "7232:4:42";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 6211;
                readonly nodeType: "FunctionDefinition";
                readonly src: "7374:4822:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6210;
                    readonly nodeType: "Block";
                    readonly src: "7423:4773:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 5960;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5952;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 5948;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5945;
                                        readonly src: "7647:14:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 5949;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "7662:21:42";
                                    readonly memberName: "minCheckpointDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 5882;
                                    readonly src: "7647:36:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 5950;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5945;
                                        readonly src: "7698:14:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 5951;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "7713:28:42";
                                    readonly memberName: "checkpointDurationResolution";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 5879;
                                    readonly src: "7698:43:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "7647:94:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5959;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 5957;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 5953;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "7757:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 5954;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "7772:21:42";
                                        readonly memberName: "minCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5882;
                                        readonly src: "7757:36:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 5955;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "7812:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 5956;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "7827:28:42";
                                        readonly memberName: "checkpointDurationResolution";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5879;
                                        readonly src: "7812:43:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "7757:98:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 5958;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "7871:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "7757:115:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "7647:225:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5967;
                        readonly nodeType: "IfStatement";
                        readonly src: "7630:334:42";
                        readonly trueBody: {
                            readonly id: 5966;
                            readonly nodeType: "Block";
                            readonly src: "7883:81:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 5961;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "7904:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 5963;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "7923:28:42";
                                        readonly memberName: "InvalidMinCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11827;
                                        readonly src: "7904:47:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 5964;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7904:49:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 5965;
                                readonly nodeType: "RevertStatement";
                                readonly src: "7897:56:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 5971;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 5968;
                                readonly name: "minCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5827;
                                readonly src: "7973:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 5969;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "7997:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 5970;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8012:21:42";
                                readonly memberName: "minCheckpointDuration";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5882;
                                readonly src: "7997:36:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "7973:60:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 5972;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "7973:60:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 5985;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5977;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 5973;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5945;
                                        readonly src: "8255:14:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 5974;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "8270:21:42";
                                    readonly memberName: "maxCheckpointDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 5885;
                                    readonly src: "8255:36:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 5975;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5945;
                                        readonly src: "8306:14:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 5976;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "8321:21:42";
                                    readonly memberName: "minCheckpointDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 5882;
                                    readonly src: "8306:36:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "8255:87:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 5984;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 5982;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 5978;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "8358:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 5979;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "8373:21:42";
                                        readonly memberName: "maxCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5885;
                                        readonly src: "8358:36:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 5980;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "8413:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 5981;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "8428:28:42";
                                        readonly memberName: "checkpointDurationResolution";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5879;
                                        readonly src: "8413:43:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "8358:98:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 5983;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "8472:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "8358:115:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "8255:218:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 5992;
                        readonly nodeType: "IfStatement";
                        readonly src: "8238:327:42";
                        readonly trueBody: {
                            readonly id: 5991;
                            readonly nodeType: "Block";
                            readonly src: "8484:81:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 5986;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "8505:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 5988;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "8524:28:42";
                                        readonly memberName: "InvalidMaxCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11824;
                                        readonly src: "8505:47:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 5989;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8505:49:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 5990;
                                readonly nodeType: "RevertStatement";
                                readonly src: "8498:56:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 5996;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 5993;
                                readonly name: "maxCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5830;
                                readonly src: "8574:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 5994;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "8598:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 5995;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8613:21:42";
                                readonly memberName: "maxCheckpointDuration";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5885;
                                readonly src: "8598:36:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8574:60:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 5997;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "8574:60:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6010;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6002;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 5998;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5945;
                                        readonly src: "8854:14:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 5999;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "8869:19:42";
                                    readonly memberName: "minPositionDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 5888;
                                    readonly src: "8854:34:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 6000;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5945;
                                        readonly src: "8903:14:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 6001;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "8918:21:42";
                                    readonly memberName: "maxCheckpointDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 5885;
                                    readonly src: "8903:36:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "8854:85:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6009;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6007;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 6003;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "8955:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 6004;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "8970:19:42";
                                        readonly memberName: "minPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5888;
                                        readonly src: "8955:34:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 6005;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "9008:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 6006;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "9023:28:42";
                                        readonly memberName: "checkpointDurationResolution";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5879;
                                        readonly src: "9008:43:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "8955:96:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 6008;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "9067:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "8955:113:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "8854:214:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6017;
                        readonly nodeType: "IfStatement";
                        readonly src: "8837:321:42";
                        readonly trueBody: {
                            readonly id: 6016;
                            readonly nodeType: "Block";
                            readonly src: "9079:79:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6011;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "9100:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6013;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "9119:26:42";
                                        readonly memberName: "InvalidMinPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11833;
                                        readonly src: "9100:45:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6014;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9100:47:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6015;
                                readonly nodeType: "RevertStatement";
                                readonly src: "9093:54:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6021;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6018;
                                readonly name: "minPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5833;
                                readonly src: "9167:19:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6019;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "9189:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6020;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9204:19:42";
                                readonly memberName: "minPositionDuration";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5888;
                                readonly src: "9189:34:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9167:56:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6022;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "9167:56:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6035;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6027;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 6023;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5945;
                                        readonly src: "9441:14:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 6024;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "9456:19:42";
                                    readonly memberName: "maxPositionDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 5891;
                                    readonly src: "9441:34:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 6025;
                                        readonly name: "_factoryConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5945;
                                        readonly src: "9490:14:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                            readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                        };
                                    };
                                    readonly id: 6026;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "9505:19:42";
                                    readonly memberName: "minPositionDuration";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 5888;
                                    readonly src: "9490:34:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "9441:83:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6034;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6032;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 6028;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "9540:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 6029;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "9555:19:42";
                                        readonly memberName: "maxPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5891;
                                        readonly src: "9540:34:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 6030;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "9593:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 6031;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "9608:28:42";
                                        readonly memberName: "checkpointDurationResolution";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5879;
                                        readonly src: "9593:43:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "9540:96:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 6033;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "9652:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "9540:113:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "9441:212:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6042;
                        readonly nodeType: "IfStatement";
                        readonly src: "9424:319:42";
                        readonly trueBody: {
                            readonly id: 6041;
                            readonly nodeType: "Block";
                            readonly src: "9664:79:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6036;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "9685:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6038;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "9704:26:42";
                                        readonly memberName: "InvalidMaxPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11830;
                                        readonly src: "9685:45:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6039;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9685:47:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6040;
                                readonly nodeType: "RevertStatement";
                                readonly src: "9678:54:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6046;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6043;
                                readonly name: "maxPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5836;
                                readonly src: "9752:19:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6044;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "9774:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6045;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9789:19:42";
                                readonly memberName: "maxPositionDuration";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5891;
                                readonly src: "9774:34:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9752:56:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6047;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "9752:56:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 6052;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 6048;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "9927:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6049;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9942:11:42";
                                readonly memberName: "minFixedAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5894;
                                readonly src: "9927:26:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 6050;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "9956:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6051;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9971:11:42";
                                readonly memberName: "maxFixedAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5897;
                                readonly src: "9956:26:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9927:55:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6059;
                        readonly nodeType: "IfStatement";
                        readonly src: "9923:129:42";
                        readonly trueBody: {
                            readonly id: 6058;
                            readonly nodeType: "Block";
                            readonly src: "9984:68:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6053;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "10005:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6055;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "10024:15:42";
                                        readonly memberName: "InvalidFixedAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11845;
                                        readonly src: "10005:34:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6056;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10005:36:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6057;
                                readonly nodeType: "RevertStatement";
                                readonly src: "9998:43:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6063;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6060;
                                readonly name: "minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5839;
                                readonly src: "10061:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6061;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "10075:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6062;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10090:11:42";
                                readonly memberName: "minFixedAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5894;
                                readonly src: "10075:26:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10061:40:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6064;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10061:40:42";
                    }, {
                        readonly expression: {
                            readonly id: 6068;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6065;
                                readonly name: "maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5842;
                                readonly src: "10111:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6066;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "10125:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6067;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10140:11:42";
                                readonly memberName: "maxFixedAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5897;
                                readonly src: "10125:26:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10111:40:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6069;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10111:40:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 6074;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 6070;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "10297:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6071;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10312:17:42";
                                readonly memberName: "minTimeStretchAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5900;
                                readonly src: "10297:32:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 6072;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "10332:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6073;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10347:17:42";
                                readonly memberName: "maxTimeStretchAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5903;
                                readonly src: "10332:32:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10297:67:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6081;
                        readonly nodeType: "IfStatement";
                        readonly src: "10280:169:42";
                        readonly trueBody: {
                            readonly id: 6080;
                            readonly nodeType: "Block";
                            readonly src: "10375:74:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6075;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "10396:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6077;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "10415:21:42";
                                        readonly memberName: "InvalidTimeStretchAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11854;
                                        readonly src: "10396:40:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6078;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10396:42:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6079;
                                readonly nodeType: "RevertStatement";
                                readonly src: "10389:49:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6085;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6082;
                                readonly name: "minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5845;
                                readonly src: "10458:17:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6083;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "10478:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6084;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10493:17:42";
                                readonly memberName: "minTimeStretchAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5900;
                                readonly src: "10478:32:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10458:52:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6086;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10458:52:42";
                    }, {
                        readonly expression: {
                            readonly id: 6090;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6087;
                                readonly name: "maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5848;
                                readonly src: "10520:17:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6088;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "10540:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6089;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10555:17:42";
                                readonly memberName: "maxTimeStretchAPR";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5903;
                                readonly src: "10540:32:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10520:52:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6091;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10520:52:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6114;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 6108;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 6102;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6096;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 6092;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5945;
                                                    readonly src: "10701:14:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 6093;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "10716:7:42";
                                                readonly memberName: "maxFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 5911;
                                                readonly src: "10701:22:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 6094;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "10724:5:42";
                                            readonly memberName: "curve";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10843;
                                            readonly src: "10701:28:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly id: 6095;
                                            readonly name: "ONE";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 18806;
                                            readonly src: "10732:3:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "10701:34:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6101;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 6097;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5945;
                                                    readonly src: "10751:14:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 6098;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "10766:7:42";
                                                readonly memberName: "maxFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 5911;
                                                readonly src: "10751:22:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 6099;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "10774:4:42";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10846;
                                            readonly src: "10751:27:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly id: 6100;
                                            readonly name: "ONE";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 18806;
                                            readonly src: "10781:3:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "10751:33:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "10701:83:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6107;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly expression: {
                                                readonly id: 6103;
                                                readonly name: "_factoryConfig";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5945;
                                                readonly src: "10800:14:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                    readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                };
                                            };
                                            readonly id: 6104;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "10815:7:42";
                                            readonly memberName: "maxFees";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 5911;
                                            readonly src: "10800:22:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                            };
                                        };
                                        readonly id: 6105;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "10823:12:42";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10849;
                                        readonly src: "10800:35:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: ">";
                                    readonly rightExpression: {
                                        readonly id: 6106;
                                        readonly name: "ONE";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 18806;
                                        readonly src: "10838:3:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "10800:41:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "10701:140:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6113;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly expression: {
                                            readonly id: 6109;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "10857:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 6110;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "10872:7:42";
                                        readonly memberName: "maxFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5911;
                                        readonly src: "10857:22:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                        };
                                    };
                                    readonly id: 6111;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "10880:16:42";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10852;
                                    readonly src: "10857:39:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly id: 6112;
                                    readonly name: "ONE";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 18806;
                                    readonly src: "10899:3:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "10857:45:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "10701:201:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6121;
                        readonly nodeType: "IfStatement";
                        readonly src: "10684:296:42";
                        readonly trueBody: {
                            readonly id: 6120;
                            readonly nodeType: "Block";
                            readonly src: "10913:67:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6115;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "10934:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6117;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "10953:14:42";
                                        readonly memberName: "InvalidMaxFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11818;
                                        readonly src: "10934:33:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6118;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10934:35:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6119;
                                readonly nodeType: "RevertStatement";
                                readonly src: "10927:42:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6125;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6122;
                                readonly name: "_maxFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5856;
                                readonly src: "10989:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6123;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "11000:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6124;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11015:7:42";
                                readonly memberName: "maxFees";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5911;
                                readonly src: "11000:22:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                };
                            };
                            readonly src: "10989:33:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly id: 6126;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "10989:33:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6157;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 6149;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 6141;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6133;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 6127;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5945;
                                                    readonly src: "11194:14:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 6128;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "11209:7:42";
                                                readonly memberName: "minFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 5907;
                                                readonly src: "11194:22:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 6129;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "11217:5:42";
                                            readonly memberName: "curve";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10843;
                                            readonly src: "11194:28:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 6130;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5945;
                                                    readonly src: "11225:14:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 6131;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "11240:7:42";
                                                readonly memberName: "maxFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 5911;
                                                readonly src: "11225:22:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 6132;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "11248:5:42";
                                            readonly memberName: "curve";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10843;
                                            readonly src: "11225:28:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "11194:59:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6140;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 6134;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5945;
                                                    readonly src: "11269:14:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 6135;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "11284:7:42";
                                                readonly memberName: "minFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 5907;
                                                readonly src: "11269:22:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 6136;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "11292:4:42";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10846;
                                            readonly src: "11269:27:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly expression: {
                                                    readonly id: 6137;
                                                    readonly name: "_factoryConfig";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5945;
                                                    readonly src: "11299:14:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                    };
                                                };
                                                readonly id: 6138;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "11314:7:42";
                                                readonly memberName: "maxFees";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 5911;
                                                readonly src: "11299:22:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 6139;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "11322:4:42";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10846;
                                            readonly src: "11299:27:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "11269:57:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "11194:132:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6148;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly expression: {
                                                readonly id: 6142;
                                                readonly name: "_factoryConfig";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5945;
                                                readonly src: "11342:14:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                    readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                };
                                            };
                                            readonly id: 6143;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "11357:7:42";
                                            readonly memberName: "minFees";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 5907;
                                            readonly src: "11342:22:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                            };
                                        };
                                        readonly id: 6144;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "11365:12:42";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10849;
                                        readonly src: "11342:35:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: ">";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly expression: {
                                                readonly id: 6145;
                                                readonly name: "_factoryConfig";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5945;
                                                readonly src: "11392:14:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                    readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                                };
                                            };
                                            readonly id: 6146;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "11407:7:42";
                                            readonly memberName: "maxFees";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 5911;
                                            readonly src: "11392:22:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                            };
                                        };
                                        readonly id: 6147;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "11415:12:42";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10849;
                                        readonly src: "11392:35:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "11342:85:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "11194:233:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6156;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly expression: {
                                            readonly id: 6150;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "11443:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 6151;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "11458:7:42";
                                        readonly memberName: "minFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5907;
                                        readonly src: "11443:22:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                        };
                                    };
                                    readonly id: 6152;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "11466:16:42";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10852;
                                    readonly src: "11443:39:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly expression: {
                                            readonly id: 6153;
                                            readonly name: "_factoryConfig";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5945;
                                            readonly src: "11497:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                                readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                            };
                                        };
                                        readonly id: 6154;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "11512:7:42";
                                        readonly memberName: "maxFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 5911;
                                        readonly src: "11497:22:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                        };
                                    };
                                    readonly id: 6155;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "11520:16:42";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10852;
                                    readonly src: "11497:39:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "11443:93:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "11194:342:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6164;
                        readonly nodeType: "IfStatement";
                        readonly src: "11177:437:42";
                        readonly trueBody: {
                            readonly id: 6163;
                            readonly nodeType: "Block";
                            readonly src: "11547:67:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6158;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "11568:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6160;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "11587:14:42";
                                        readonly memberName: "InvalidMinFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11821;
                                        readonly src: "11568:33:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6161;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11568:35:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6162;
                                readonly nodeType: "RevertStatement";
                                readonly src: "11561:42:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6168;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6165;
                                readonly name: "_minFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5852;
                                readonly src: "11623:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6166;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "11634:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6167;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11649:7:42";
                                readonly memberName: "minFees";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5907;
                                readonly src: "11634:22:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                };
                            };
                            readonly src: "11623:33:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly id: 6169;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11623:33:42";
                    }, {
                        readonly expression: {
                            readonly id: 6173;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6170;
                                readonly name: "governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5806;
                                readonly src: "11711:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6171;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "11724:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6172;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11739:10:42";
                                readonly memberName: "governance";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5863;
                                readonly src: "11724:25:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "11711:38:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6174;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11711:38:42";
                    }, {
                        readonly expression: {
                            readonly id: 6178;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6175;
                                readonly name: "hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5809;
                                readonly src: "11759:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6176;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "11782:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6177;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11797:20:42";
                                readonly memberName: "hyperdriveGovernance";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5866;
                                readonly src: "11782:35:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "11759:58:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6179;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11759:58:42";
                    }, {
                        readonly expression: {
                            readonly id: 6183;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6180;
                                readonly name: "feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5818;
                                readonly src: "11827:12:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6181;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "11842:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6182;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11857:12:42";
                                readonly memberName: "feeCollector";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5873;
                                readonly src: "11842:27:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "11827:42:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6184;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11827:42:42";
                    }, {
                        readonly expression: {
                            readonly id: 6188;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6185;
                                readonly name: "sweepCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5821;
                                readonly src: "11879:14:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6186;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "11896:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6187;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11911:14:42";
                                readonly memberName: "sweepCollector";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5876;
                                readonly src: "11896:29:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "11879:46:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6189;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11879:46:42";
                    }, {
                        readonly expression: {
                            readonly id: 6193;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6190;
                                readonly name: "_defaultPausers";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5860;
                                readonly src: "11935:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6191;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "11953:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6192;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11968:14:42";
                                readonly memberName: "defaultPausers";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5870;
                                readonly src: "11953:29:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                    readonly typeString: "address[] memory";
                                };
                            };
                            readonly src: "11935:47:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                readonly typeString: "address[] storage ref";
                            };
                        };
                        readonly id: 6194;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11935:47:42";
                    }, {
                        readonly expression: {
                            readonly id: 6198;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6195;
                                readonly name: "linkerFactory";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5812;
                                readonly src: "11992:13:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6196;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "12008:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6197;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "12023:13:42";
                                readonly memberName: "linkerFactory";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5914;
                                readonly src: "12008:28:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "11992:44:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6199;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11992:44:42";
                    }, {
                        readonly expression: {
                            readonly id: 6203;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6200;
                                readonly name: "linkerCodeHash";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5815;
                                readonly src: "12046:14:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6201;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "12063:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6202;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "12078:14:42";
                                readonly memberName: "linkerCodeHash";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5917;
                                readonly src: "12063:29:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "12046:46:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly id: 6204;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12046:46:42";
                    }, {
                        readonly expression: {
                            readonly id: 6208;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6205;
                                readonly name: "checkpointDurationResolution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5824;
                                readonly src: "12102:28:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 6206;
                                    readonly name: "_factoryConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5945;
                                    readonly src: "12133:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                                        readonly typeString: "struct HyperdriveFactory.FactoryConfig memory";
                                    };
                                };
                                readonly id: 6207;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "12161:28:42";
                                readonly memberName: "checkpointDurationResolution";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 5879;
                                readonly src: "12133:56:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "12102:87:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6209;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12102:87:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 5942;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "7262:107:42";
                    readonly text: "@notice Initializes the factory.\n @param _factoryConfig Configuration of the Hyperdrive Factory.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 5946;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 5945;
                        readonly mutability: "mutable";
                        readonly name: "_factoryConfig";
                        readonly nameLocation: "7407:14:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6211;
                        readonly src: "7386:35:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_memory_ptr";
                            readonly typeString: "struct HyperdriveFactory.FactoryConfig";
                        };
                        readonly typeName: {
                            readonly id: 5944;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 5943;
                                readonly name: "FactoryConfig";
                                readonly nameLocations: readonly ["7386:13:42"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 5918;
                                readonly src: "7386:13:42";
                            };
                            readonly referencedDeclaration: 5918;
                            readonly src: "7386:13:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_FactoryConfig_$5918_storage_ptr";
                                readonly typeString: "struct HyperdriveFactory.FactoryConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "7385:37:42";
                };
                readonly returnParameters: {
                    readonly id: 5947;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "7423:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 6227;
                readonly nodeType: "ModifierDefinition";
                readonly src: "12265:148:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6226;
                    readonly nodeType: "Block";
                    readonly src: "12291:122:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly id: 6217;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 6214;
                                    readonly name: "msg";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -15;
                                    readonly src: "12305:3:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_magic_message";
                                        readonly typeString: "msg";
                                    };
                                };
                                readonly id: 6215;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "12309:6:42";
                                readonly memberName: "sender";
                                readonly nodeType: "MemberAccess";
                                readonly src: "12305:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 6216;
                                readonly name: "governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5806;
                                readonly src: "12319:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "12305:24:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6224;
                        readonly nodeType: "IfStatement";
                        readonly src: "12301:95:42";
                        readonly trueBody: {
                            readonly id: 6223;
                            readonly nodeType: "Block";
                            readonly src: "12331:65:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6218;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "12352:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6220;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "12371:12:42";
                                        readonly memberName: "Unauthorized";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11863;
                                        readonly src: "12352:31:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6221;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12352:33:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6222;
                                readonly nodeType: "RevertStatement";
                                readonly src: "12345:40:42";
                            }];
                        };
                    }, {
                        readonly id: 6225;
                        readonly nodeType: "PlaceholderStatement";
                        readonly src: "12405:1:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6212;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "12202:58:42";
                    readonly text: "@dev Ensure that the sender is the governance address.";
                };
                readonly name: "onlyGovernance";
                readonly nameLocation: "12274:14:42";
                readonly parameters: {
                    readonly id: 6213;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12288:2:42";
                };
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 6240;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12570:130:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6239;
                    readonly nodeType: "Block";
                    readonly src: "12597:103:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly id: 6231;
                            readonly name: "isReceiveLocked";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 5803;
                            readonly src: "12611:15:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6238;
                        readonly nodeType: "IfStatement";
                        readonly src: "12607:87:42";
                        readonly trueBody: {
                            readonly id: 6237;
                            readonly nodeType: "Block";
                            readonly src: "12628:66:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6232;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "12649:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6234;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "12668:13:42";
                                        readonly memberName: "ReceiveLocked";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11857;
                                        readonly src: "12649:32:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6235;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12649:34:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6236;
                                readonly nodeType: "RevertStatement";
                                readonly src: "12642:41:42";
                            }];
                        };
                    }];
                };
                readonly documentation: {
                    readonly id: 6228;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "12419:146:42";
                    readonly text: "@notice Allows ether to be sent to the contract. This is gated by a lock\n         to prevent ether from becoming stuck in the contract.";
                };
                readonly implemented: true;
                readonly kind: "receive";
                readonly modifiers: readonly [];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 6229;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12577:2:42";
                };
                readonly returnParameters: {
                    readonly id: 6230;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12597:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "payable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6257;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12828:157:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6256;
                    readonly nodeType: "Block";
                    readonly src: "12899:86:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 6250;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6248;
                                readonly name: "governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5806;
                                readonly src: "12909:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6249;
                                readonly name: "_governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6243;
                                readonly src: "12922:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "12909:24:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6251;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12909:24:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6253;
                                readonly name: "_governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6243;
                                readonly src: "12966:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 6252;
                                readonly name: "GovernanceUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11713;
                                readonly src: "12948:17:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 6254;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12948:30:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6255;
                        readonly nodeType: "EmitStatement";
                        readonly src: "12943:35:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6241;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "12706:117:42";
                    readonly text: "@notice Allows governance to transfer the governance role.\n @param _governance The new governance address.";
                };
                readonly functionSelector: "b2561263";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6246;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6245;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["12884:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "12884:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "12884:14:42";
                }];
                readonly name: "updateGovernance";
                readonly nameLocation: "12837:16:42";
                readonly parameters: {
                    readonly id: 6244;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6243;
                        readonly mutability: "mutable";
                        readonly name: "_governance";
                        readonly nameLocation: "12862:11:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6257;
                        readonly src: "12854:19:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 6242;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12854:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12853:21:42";
                };
                readonly returnParameters: {
                    readonly id: 6247;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12899:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6274;
                readonly nodeType: "FunctionDefinition";
                readonly src: "13145:231:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6273;
                    readonly nodeType: "Block";
                    readonly src: "13250:126:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 6267;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6265;
                                readonly name: "hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5809;
                                readonly src: "13260:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6266;
                                readonly name: "_hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6260;
                                readonly src: "13283:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "13260:44:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6268;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "13260:44:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6270;
                                readonly name: "_hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6260;
                                readonly src: "13347:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 6269;
                                readonly name: "HyperdriveGovernanceUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11718;
                                readonly src: "13319:27:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 6271;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "13319:50:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6272;
                        readonly nodeType: "EmitStatement";
                        readonly src: "13314:55:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6258;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "12991:149:42";
                    readonly text: "@notice Allows governance to change the hyperdrive governance address\n @param _hyperdriveGovernance The new hyperdrive governance address.";
                };
                readonly functionSelector: "dd2b8fbb";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6263;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6262;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["13235:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "13235:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "13235:14:42";
                }];
                readonly name: "updateHyperdriveGovernance";
                readonly nameLocation: "13154:26:42";
                readonly parameters: {
                    readonly id: 6261;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6260;
                        readonly mutability: "mutable";
                        readonly name: "_hyperdriveGovernance";
                        readonly nameLocation: "13198:21:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6274;
                        readonly src: "13190:29:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 6259;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "13190:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "13180:45:42";
                };
                readonly returnParameters: {
                    readonly id: 6264;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "13250:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6291;
                readonly nodeType: "FunctionDefinition";
                readonly src: "13500:189:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6290;
                    readonly nodeType: "Block";
                    readonly src: "13591:98:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 6284;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6282;
                                readonly name: "linkerFactory";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5812;
                                readonly src: "13601:13:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6283;
                                readonly name: "_linkerFactory";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6277;
                                readonly src: "13617:14:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "13601:30:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6285;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "13601:30:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6287;
                                readonly name: "_linkerFactory";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6277;
                                readonly src: "13667:14:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 6286;
                                readonly name: "LinkerFactoryUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11723;
                                readonly src: "13646:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 6288;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "13646:36:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6289;
                        readonly nodeType: "EmitStatement";
                        readonly src: "13641:41:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6275;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "13382:113:42";
                    readonly text: "@notice Allows governance to change the linker factory.\n @param _linkerFactory The new linker factory.";
                };
                readonly functionSelector: "85229785";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6280;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6279;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["13576:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "13576:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "13576:14:42";
                }];
                readonly name: "updateLinkerFactory";
                readonly nameLocation: "13509:19:42";
                readonly parameters: {
                    readonly id: 6278;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6277;
                        readonly mutability: "mutable";
                        readonly name: "_linkerFactory";
                        readonly nameLocation: "13546:14:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6291;
                        readonly src: "13538:22:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 6276;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "13538:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "13528:38:42";
                };
                readonly returnParameters: {
                    readonly id: 6281;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "13591:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6308;
                readonly nodeType: "FunctionDefinition";
                readonly src: "13909:195:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6307;
                    readonly nodeType: "Block";
                    readonly src: "14002:102:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 6301;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6299;
                                readonly name: "linkerCodeHash";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5815;
                                readonly src: "14012:14:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6300;
                                readonly name: "_linkerCodeHash";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6294;
                                readonly src: "14029:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "14012:32:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly id: 6302;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "14012:32:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6304;
                                readonly name: "_linkerCodeHash";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6294;
                                readonly src: "14081:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                }];
                                readonly id: 6303;
                                readonly name: "LinkerCodeHashUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11728;
                                readonly src: "14059:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_bytes32_$returns$__$";
                                    readonly typeString: "function (bytes32)";
                                };
                            };
                            readonly id: 6305;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "14059:38:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6306;
                        readonly nodeType: "EmitStatement";
                        readonly src: "14054:43:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6292;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "13695:209:42";
                    readonly text: "@notice Allows governance to change the linker code hash. This allows\n         governance to update the implementation of the ERC20Forwarder.\n @param _linkerCodeHash The new linker code hash.";
                };
                readonly functionSelector: "4fbfee77";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6297;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6296;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["13987:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "13987:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "13987:14:42";
                }];
                readonly name: "updateLinkerCodeHash";
                readonly nameLocation: "13918:20:42";
                readonly parameters: {
                    readonly id: 6295;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6294;
                        readonly mutability: "mutable";
                        readonly name: "_linkerCodeHash";
                        readonly nameLocation: "13956:15:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6308;
                        readonly src: "13948:23:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 6293;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "13948:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "13938:39:42";
                };
                readonly returnParameters: {
                    readonly id: 6298;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "14002:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6325;
                readonly nodeType: "FunctionDefinition";
                readonly src: "14241:169:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6324;
                    readonly nodeType: "Block";
                    readonly src: "14316:94:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 6318;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6316;
                                readonly name: "feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5818;
                                readonly src: "14326:12:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6317;
                                readonly name: "_feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6311;
                                readonly src: "14341:13:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "14326:28:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6319;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "14326:28:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6321;
                                readonly name: "_feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6311;
                                readonly src: "14389:13:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 6320;
                                readonly name: "FeeCollectorUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11703;
                                readonly src: "14369:19:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 6322;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "14369:34:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6323;
                        readonly nodeType: "EmitStatement";
                        readonly src: "14364:39:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6309;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "14110:126:42";
                    readonly text: "@notice Allows governance to change the fee collector address.\n @param _feeCollector The new fee collector address.";
                };
                readonly functionSelector: "d2c35ce8";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6314;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6313;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["14301:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "14301:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "14301:14:42";
                }];
                readonly name: "updateFeeCollector";
                readonly nameLocation: "14250:18:42";
                readonly parameters: {
                    readonly id: 6312;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6311;
                        readonly mutability: "mutable";
                        readonly name: "_feeCollector";
                        readonly nameLocation: "14277:13:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6325;
                        readonly src: "14269:21:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 6310;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "14269:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "14268:23:42";
                };
                readonly returnParameters: {
                    readonly id: 6315;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "14316:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6342;
                readonly nodeType: "FunctionDefinition";
                readonly src: "14553:195:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6341;
                    readonly nodeType: "Block";
                    readonly src: "14646:102:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 6335;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6333;
                                readonly name: "sweepCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5821;
                                readonly src: "14656:14:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6334;
                                readonly name: "_sweepCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6328;
                                readonly src: "14673:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "14656:32:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6336;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "14656:32:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6338;
                                readonly name: "_sweepCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6328;
                                readonly src: "14725:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 6337;
                                readonly name: "SweepCollectorUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11708;
                                readonly src: "14703:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 6339;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "14703:38:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6340;
                        readonly nodeType: "EmitStatement";
                        readonly src: "14698:43:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6326;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "14416:132:42";
                    readonly text: "@notice Allows governance to change the sweep collector address.\n @param _sweepCollector The new sweep collector address.";
                };
                readonly functionSelector: "8627a4f0";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6331;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6330;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["14631:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "14631:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "14631:14:42";
                }];
                readonly name: "updateSweepCollector";
                readonly nameLocation: "14562:20:42";
                readonly parameters: {
                    readonly id: 6329;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6328;
                        readonly mutability: "mutable";
                        readonly name: "_sweepCollector";
                        readonly nameLocation: "14600:15:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6342;
                        readonly src: "14592:23:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 6327;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "14592:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "14582:39:42";
                };
                readonly returnParameters: {
                    readonly id: 6332;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "14646:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6389;
                readonly nodeType: "FunctionDefinition";
                readonly src: "14934:974:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6388;
                    readonly nodeType: "Block";
                    readonly src: "15055:853:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6372;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 6366;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 6360;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6354;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                            readonly id: 6352;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly id: 6350;
                                                readonly name: "minCheckpointDuration";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5827;
                                                readonly src: "15303:21:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "%";
                                            readonly rightExpression: {
                                                readonly id: 6351;
                                                readonly name: "_checkpointDurationResolution";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 6345;
                                                readonly src: "15327:29:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly src: "15303:53:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "!=";
                                        readonly rightExpression: {
                                            readonly hexValue: "30";
                                            readonly id: 6353;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "15360:1:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_0_by_1";
                                                readonly typeString: "int_const 0";
                                            };
                                            readonly value: "0";
                                        };
                                        readonly src: "15303:58:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6359;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                            readonly id: 6357;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly id: 6355;
                                                readonly name: "maxCheckpointDuration";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5830;
                                                readonly src: "15377:21:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "%";
                                            readonly rightExpression: {
                                                readonly id: 6356;
                                                readonly name: "_checkpointDurationResolution";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 6345;
                                                readonly src: "15401:29:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly src: "15377:53:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "!=";
                                        readonly rightExpression: {
                                            readonly hexValue: "30";
                                            readonly id: 6358;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "15434:1:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_0_by_1";
                                                readonly typeString: "int_const 0";
                                            };
                                            readonly value: "0";
                                        };
                                        readonly src: "15377:58:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "15303:132:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6365;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6363;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 6361;
                                            readonly name: "minPositionDuration";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5833;
                                            readonly src: "15451:19:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "%";
                                        readonly rightExpression: {
                                            readonly id: 6362;
                                            readonly name: "_checkpointDurationResolution";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6345;
                                            readonly src: "15473:29:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "15451:51:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "!=";
                                    readonly rightExpression: {
                                        readonly hexValue: "30";
                                        readonly id: 6364;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "15506:1:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_0_by_1";
                                            readonly typeString: "int_const 0";
                                        };
                                        readonly value: "0";
                                    };
                                    readonly src: "15451:56:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "15303:204:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6371;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6369;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly id: 6367;
                                        readonly name: "maxPositionDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5836;
                                        readonly src: "15523:19:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly id: 6368;
                                        readonly name: "_checkpointDurationResolution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6345;
                                        readonly src: "15545:29:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "15523:51:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 6370;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "15578:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "15523:56:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "15303:276:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6379;
                        readonly nodeType: "IfStatement";
                        readonly src: "15286:392:42";
                        readonly trueBody: {
                            readonly id: 6378;
                            readonly nodeType: "Block";
                            readonly src: "15590:88:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6373;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "15611:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6375;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "15630:35:42";
                                        readonly memberName: "InvalidCheckpointDurationResolution";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11803;
                                        readonly src: "15611:54:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6376;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "15611:56:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6377;
                                readonly nodeType: "RevertStatement";
                                readonly src: "15604:63:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6382;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6380;
                                readonly name: "checkpointDurationResolution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5824;
                                readonly src: "15760:28:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6381;
                                readonly name: "_checkpointDurationResolution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6345;
                                readonly src: "15791:29:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "15760:60:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6383;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "15760:60:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6385;
                                readonly name: "_checkpointDurationResolution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6345;
                                readonly src: "15871:29:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 6384;
                                readonly name: "CheckpointDurationResolutionUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11733;
                                readonly src: "15835:35:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 6386;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "15835:66:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6387;
                        readonly nodeType: "EmitStatement";
                        readonly src: "15830:71:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6343;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "14754:175:42";
                    readonly text: "@notice Allows governance to change the checkpoint duration resolution.\n @param _checkpointDurationResolution The new checkpoint duration\n        resolution.";
                };
                readonly functionSelector: "11e77bfe";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6348;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6347;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["15040:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "15040:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "15040:14:42";
                }];
                readonly name: "updateCheckpointDurationResolution";
                readonly nameLocation: "14943:34:42";
                readonly parameters: {
                    readonly id: 6346;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6345;
                        readonly mutability: "mutable";
                        readonly name: "_checkpointDurationResolution";
                        readonly nameLocation: "14995:29:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6389;
                        readonly src: "14987:37:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6344;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "14987:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "14977:53:42";
                };
                readonly returnParameters: {
                    readonly id: 6349;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "15055:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6426;
                readonly nodeType: "FunctionDefinition";
                readonly src: "16066:926:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6425;
                    readonly nodeType: "Block";
                    readonly src: "16173:819:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6409;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 6405;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6399;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly id: 6397;
                                        readonly name: "_maxCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6392;
                                        readonly src: "16521:22:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 6398;
                                        readonly name: "minCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5827;
                                        readonly src: "16546:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "16521:46:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6404;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6402;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 6400;
                                            readonly name: "_maxCheckpointDuration";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6392;
                                            readonly src: "16583:22:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "%";
                                        readonly rightExpression: {
                                            readonly id: 6401;
                                            readonly name: "checkpointDurationResolution";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5824;
                                            readonly src: "16608:28:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "16583:53:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "!=";
                                    readonly rightExpression: {
                                        readonly hexValue: "30";
                                        readonly id: 6403;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "16640:1:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_0_by_1";
                                            readonly typeString: "int_const 0";
                                        };
                                        readonly value: "0";
                                    };
                                    readonly src: "16583:58:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "16521:120:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6408;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 6406;
                                    readonly name: "_maxCheckpointDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6392;
                                    readonly src: "16657:22:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly id: 6407;
                                    readonly name: "minPositionDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5833;
                                    readonly src: "16682:19:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "16657:44:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "16521:180:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6416;
                        readonly nodeType: "IfStatement";
                        readonly src: "16504:289:42";
                        readonly trueBody: {
                            readonly id: 6415;
                            readonly nodeType: "Block";
                            readonly src: "16712:81:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6410;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "16733:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6412;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "16752:28:42";
                                        readonly memberName: "InvalidMaxCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11824;
                                        readonly src: "16733:47:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6413;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "16733:49:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6414;
                                readonly nodeType: "RevertStatement";
                                readonly src: "16726:56:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6419;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6417;
                                readonly name: "maxCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5830;
                                readonly src: "16872:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6418;
                                readonly name: "_maxCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6392;
                                readonly src: "16896:22:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "16872:46:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6420;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "16872:46:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6422;
                                readonly name: "_maxCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6392;
                                readonly src: "16962:22:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 6421;
                                readonly name: "MaxCheckpointDurationUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11738;
                                readonly src: "16933:28:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 6423;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "16933:52:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6424;
                        readonly nodeType: "EmitStatement";
                        readonly src: "16928:57:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6390;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "15914:147:42";
                    readonly text: "@notice Allows governance to update the maximum checkpoint duration.\n @param _maxCheckpointDuration The new maximum checkpoint duration.";
                };
                readonly functionSelector: "6f6d5c4a";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6395;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6394;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["16158:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "16158:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "16158:14:42";
                }];
                readonly name: "updateMaxCheckpointDuration";
                readonly nameLocation: "16075:27:42";
                readonly parameters: {
                    readonly id: 6393;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6392;
                        readonly mutability: "mutable";
                        readonly name: "_maxCheckpointDuration";
                        readonly nameLocation: "16120:22:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6426;
                        readonly src: "16112:30:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6391;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "16112:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "16102:46:42";
                };
                readonly returnParameters: {
                    readonly id: 6396;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "16173:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6463;
                readonly nodeType: "FunctionDefinition";
                readonly src: "17150:940:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6462;
                    readonly nodeType: "Block";
                    readonly src: "17257:833:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6446;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 6442;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6436;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly id: 6434;
                                        readonly name: "_minCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6429;
                                        readonly src: "17610:22:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 6435;
                                        readonly name: "checkpointDurationResolution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5824;
                                        readonly src: "17635:28:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "17610:53:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6441;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6439;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 6437;
                                            readonly name: "_minCheckpointDuration";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6429;
                                            readonly src: "17679:22:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "%";
                                        readonly rightExpression: {
                                            readonly id: 6438;
                                            readonly name: "checkpointDurationResolution";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5824;
                                            readonly src: "17704:28:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "17679:53:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "!=";
                                    readonly rightExpression: {
                                        readonly hexValue: "30";
                                        readonly id: 6440;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "17736:1:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_0_by_1";
                                            readonly typeString: "int_const 0";
                                        };
                                        readonly value: "0";
                                    };
                                    readonly src: "17679:58:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "17610:127:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6445;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 6443;
                                    readonly name: "_minCheckpointDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6429;
                                    readonly src: "17753:22:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly id: 6444;
                                    readonly name: "maxCheckpointDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5830;
                                    readonly src: "17778:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "17753:46:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "17610:189:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6453;
                        readonly nodeType: "IfStatement";
                        readonly src: "17593:298:42";
                        readonly trueBody: {
                            readonly id: 6452;
                            readonly nodeType: "Block";
                            readonly src: "17810:81:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6447;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "17831:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6449;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "17850:28:42";
                                        readonly memberName: "InvalidMinCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11827;
                                        readonly src: "17831:47:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6450;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "17831:49:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6451;
                                readonly nodeType: "RevertStatement";
                                readonly src: "17824:56:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6456;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6454;
                                readonly name: "minCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5827;
                                readonly src: "17970:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6455;
                                readonly name: "_minCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6429;
                                readonly src: "17994:22:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "17970:46:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6457;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "17970:46:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6459;
                                readonly name: "_minCheckpointDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6429;
                                readonly src: "18060:22:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 6458;
                                readonly name: "MinCheckpointDurationUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11743;
                                readonly src: "18031:28:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 6460;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "18031:52:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6461;
                        readonly nodeType: "EmitStatement";
                        readonly src: "18026:57:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6427;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "16998:147:42";
                    readonly text: "@notice Allows governance to update the minimum checkpoint duration.\n @param _minCheckpointDuration The new minimum checkpoint duration.";
                };
                readonly functionSelector: "8e127cf5";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6432;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6431;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["17242:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "17242:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "17242:14:42";
                }];
                readonly name: "updateMinCheckpointDuration";
                readonly nameLocation: "17159:27:42";
                readonly parameters: {
                    readonly id: 6430;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6429;
                        readonly mutability: "mutable";
                        readonly name: "_minCheckpointDuration";
                        readonly nameLocation: "17204:22:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6463;
                        readonly src: "17196:30:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6428;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "17196:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "17186:46:42";
                };
                readonly returnParameters: {
                    readonly id: 6433;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "17257:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6496;
                readonly nodeType: "FunctionDefinition";
                readonly src: "18242:713:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6495;
                    readonly nodeType: "Block";
                    readonly src: "18345:610:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6479;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6473;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 6471;
                                    readonly name: "_maxPositionDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6466;
                                    readonly src: "18562:20:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly id: 6472;
                                    readonly name: "minPositionDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5833;
                                    readonly src: "18585:19:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "18562:42:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6478;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6476;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly id: 6474;
                                        readonly name: "_maxPositionDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6466;
                                        readonly src: "18620:20:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly id: 6475;
                                        readonly name: "checkpointDurationResolution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5824;
                                        readonly src: "18643:28:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "18620:51:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 6477;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "18675:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "18620:56:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "18562:114:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6486;
                        readonly nodeType: "IfStatement";
                        readonly src: "18545:221:42";
                        readonly trueBody: {
                            readonly id: 6485;
                            readonly nodeType: "Block";
                            readonly src: "18687:79:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6480;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "18708:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6482;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "18727:26:42";
                                        readonly memberName: "InvalidMaxPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11830;
                                        readonly src: "18708:45:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6483;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "18708:47:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6484;
                                readonly nodeType: "RevertStatement";
                                readonly src: "18701:54:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6489;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6487;
                                readonly name: "maxPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5836;
                                readonly src: "18843:19:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6488;
                                readonly name: "_maxPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6466;
                                readonly src: "18865:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "18843:42:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6490;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "18843:42:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6492;
                                readonly name: "_maxPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6466;
                                readonly src: "18927:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 6491;
                                readonly name: "MaxPositionDurationUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11748;
                                readonly src: "18900:26:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 6493;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "18900:48:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6494;
                        readonly nodeType: "EmitStatement";
                        readonly src: "18895:53:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6464;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "18096:141:42";
                    readonly text: "@notice Allows governance to update the maximum position duration.\n @param _maxPositionDuration The new maximum position duration.";
                };
                readonly functionSelector: "eb71f66c";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6469;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6468;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["18330:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "18330:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "18330:14:42";
                }];
                readonly name: "updateMaxPositionDuration";
                readonly nameLocation: "18251:25:42";
                readonly parameters: {
                    readonly id: 6467;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6466;
                        readonly mutability: "mutable";
                        readonly name: "_maxPositionDuration";
                        readonly nameLocation: "18294:20:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6496;
                        readonly src: "18286:28:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6465;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "18286:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "18276:44:42";
                };
                readonly returnParameters: {
                    readonly id: 6470;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "18345:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6533;
                readonly nodeType: "FunctionDefinition";
                readonly src: "19107:889:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6532;
                    readonly nodeType: "Block";
                    readonly src: "19210:786:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6516;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 6512;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6506;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly id: 6504;
                                        readonly name: "_minPositionDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6499;
                                        readonly src: "19543:20:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 6505;
                                        readonly name: "maxCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5830;
                                        readonly src: "19566:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "19543:44:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6511;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6509;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 6507;
                                            readonly name: "_minPositionDuration";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6499;
                                            readonly src: "19603:20:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "%";
                                        readonly rightExpression: {
                                            readonly id: 6508;
                                            readonly name: "checkpointDurationResolution";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5824;
                                            readonly src: "19626:28:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "19603:51:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "!=";
                                    readonly rightExpression: {
                                        readonly hexValue: "30";
                                        readonly id: 6510;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "19658:1:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_0_by_1";
                                            readonly typeString: "int_const 0";
                                        };
                                        readonly value: "0";
                                    };
                                    readonly src: "19603:56:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "19543:116:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6515;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 6513;
                                    readonly name: "_minPositionDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6499;
                                    readonly src: "19675:20:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly id: 6514;
                                    readonly name: "maxPositionDuration";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5836;
                                    readonly src: "19698:19:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "19675:42:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "19543:174:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6523;
                        readonly nodeType: "IfStatement";
                        readonly src: "19526:281:42";
                        readonly trueBody: {
                            readonly id: 6522;
                            readonly nodeType: "Block";
                            readonly src: "19728:79:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6517;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "19749:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6519;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "19768:26:42";
                                        readonly memberName: "InvalidMinPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11833;
                                        readonly src: "19749:45:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6520;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "19749:47:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6521;
                                readonly nodeType: "RevertStatement";
                                readonly src: "19742:54:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6526;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6524;
                                readonly name: "minPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5833;
                                readonly src: "19884:19:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6525;
                                readonly name: "_minPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6499;
                                readonly src: "19906:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "19884:42:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6527;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "19884:42:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6529;
                                readonly name: "_minPositionDuration";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6499;
                                readonly src: "19968:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 6528;
                                readonly name: "MinPositionDurationUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11753;
                                readonly src: "19941:26:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 6530;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "19941:48:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6531;
                        readonly nodeType: "EmitStatement";
                        readonly src: "19936:53:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6497;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "18961:141:42";
                    readonly text: "@notice Allows governance to update the minimum position duration.\n @param _minPositionDuration The new minimum position duration.";
                };
                readonly functionSelector: "e71f34b3";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6502;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6501;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["19195:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "19195:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "19195:14:42";
                }];
                readonly name: "updateMinPositionDuration";
                readonly nameLocation: "19116:25:42";
                readonly parameters: {
                    readonly id: 6500;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6499;
                        readonly mutability: "mutable";
                        readonly name: "_minPositionDuration";
                        readonly nameLocation: "19159:20:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6533;
                        readonly src: "19151:28:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6498;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "19151:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "19141:44:42";
                };
                readonly returnParameters: {
                    readonly id: 6503;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "19210:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6560;
                readonly nodeType: "FunctionDefinition";
                readonly src: "20124:442:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6559;
                    readonly nodeType: "Block";
                    readonly src: "20197:369:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 6543;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 6541;
                                readonly name: "_maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6536;
                                readonly src: "20318:12:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly id: 6542;
                                readonly name: "minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5839;
                                readonly src: "20333:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "20318:26:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6550;
                        readonly nodeType: "IfStatement";
                        readonly src: "20314:103:42";
                        readonly trueBody: {
                            readonly id: 6549;
                            readonly nodeType: "Block";
                            readonly src: "20346:71:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6544;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "20367:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6546;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "20386:18:42";
                                        readonly memberName: "InvalidMaxFixedAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11839;
                                        readonly src: "20367:37:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6547;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "20367:39:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6548;
                                readonly nodeType: "RevertStatement";
                                readonly src: "20360:46:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6553;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6551;
                                readonly name: "maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5842;
                                readonly src: "20486:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6552;
                                readonly name: "_maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6536;
                                readonly src: "20500:12:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "20486:26:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6554;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "20486:26:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6556;
                                readonly name: "_maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6536;
                                readonly src: "20546:12:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 6555;
                                readonly name: "MaxFixedAPRUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11758;
                                readonly src: "20527:18:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 6557;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "20527:32:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6558;
                        readonly nodeType: "EmitStatement";
                        readonly src: "20522:37:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6534;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "20002:117:42";
                    readonly text: "@notice Allows governance to update the maximum fixed APR.\n @param _maxFixedAPR The new maximum fixed APR.";
                };
                readonly functionSelector: "97b0e8ce";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6539;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6538;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["20182:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "20182:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "20182:14:42";
                }];
                readonly name: "updateMaxFixedAPR";
                readonly nameLocation: "20133:17:42";
                readonly parameters: {
                    readonly id: 6537;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6536;
                        readonly mutability: "mutable";
                        readonly name: "_maxFixedAPR";
                        readonly nameLocation: "20159:12:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6560;
                        readonly src: "20151:20:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6535;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "20151:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "20150:22:42";
                };
                readonly returnParameters: {
                    readonly id: 6540;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "20197:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6587;
                readonly nodeType: "FunctionDefinition";
                readonly src: "20694:439:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6586;
                    readonly nodeType: "Block";
                    readonly src: "20767:366:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 6570;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 6568;
                                readonly name: "_minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6563;
                                readonly src: "20885:12:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 6569;
                                readonly name: "maxFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5842;
                                readonly src: "20900:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "20885:26:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6577;
                        readonly nodeType: "IfStatement";
                        readonly src: "20881:103:42";
                        readonly trueBody: {
                            readonly id: 6576;
                            readonly nodeType: "Block";
                            readonly src: "20913:71:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6571;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "20934:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6573;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "20953:18:42";
                                        readonly memberName: "InvalidMinFixedAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11842;
                                        readonly src: "20934:37:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6574;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "20934:39:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6575;
                                readonly nodeType: "RevertStatement";
                                readonly src: "20927:46:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6580;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6578;
                                readonly name: "minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5839;
                                readonly src: "21053:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6579;
                                readonly name: "_minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6563;
                                readonly src: "21067:12:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "21053:26:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6581;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "21053:26:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6583;
                                readonly name: "_minFixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6563;
                                readonly src: "21113:12:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 6582;
                                readonly name: "MinFixedAPRUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11763;
                                readonly src: "21094:18:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 6584;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "21094:32:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6585;
                        readonly nodeType: "EmitStatement";
                        readonly src: "21089:37:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6561;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "20572:117:42";
                    readonly text: "@notice Allows governance to update the minimum fixed APR.\n @param _minFixedAPR The new minimum fixed APR.";
                };
                readonly functionSelector: "1978ebcf";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6566;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6565;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["20752:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "20752:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "20752:14:42";
                }];
                readonly name: "updateMinFixedAPR";
                readonly nameLocation: "20703:17:42";
                readonly parameters: {
                    readonly id: 6564;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6563;
                        readonly mutability: "mutable";
                        readonly name: "_minFixedAPR";
                        readonly nameLocation: "20729:12:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6587;
                        readonly src: "20721:20:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6562;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "20721:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "20720:22:42";
                };
                readonly returnParameters: {
                    readonly id: 6567;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "20767:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6614;
                readonly nodeType: "FunctionDefinition";
                readonly src: "21281:531:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6613;
                    readonly nodeType: "Block";
                    readonly src: "21380:432:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 6597;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 6595;
                                readonly name: "_maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6590;
                                readonly src: "21515:18:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly id: 6596;
                                readonly name: "minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5845;
                                readonly src: "21536:17:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "21515:38:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6604;
                        readonly nodeType: "IfStatement";
                        readonly src: "21511:121:42";
                        readonly trueBody: {
                            readonly id: 6603;
                            readonly nodeType: "Block";
                            readonly src: "21555:77:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6598;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "21576:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6600;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "21595:24:42";
                                        readonly memberName: "InvalidMaxTimeStretchAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11848;
                                        readonly src: "21576:43:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6601;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "21576:45:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6602;
                                readonly nodeType: "RevertStatement";
                                readonly src: "21569:52:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6607;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6605;
                                readonly name: "maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5848;
                                readonly src: "21708:17:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6606;
                                readonly name: "_maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6590;
                                readonly src: "21728:18:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "21708:38:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6608;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "21708:38:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6610;
                                readonly name: "_maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6590;
                                readonly src: "21786:18:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 6609;
                                readonly name: "MaxTimeStretchAPRUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11768;
                                readonly src: "21761:24:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 6611;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "21761:44:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6612;
                        readonly nodeType: "EmitStatement";
                        readonly src: "21756:49:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6588;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "21139:137:42";
                    readonly text: "@notice Allows governance to update the maximum time stretch APR.\n @param _maxTimeStretchAPR The new maximum time stretch APR.";
                };
                readonly functionSelector: "628027a3";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6593;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6592;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["21365:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "21365:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "21365:14:42";
                }];
                readonly name: "updateMaxTimeStretchAPR";
                readonly nameLocation: "21290:23:42";
                readonly parameters: {
                    readonly id: 6591;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6590;
                        readonly mutability: "mutable";
                        readonly name: "_maxTimeStretchAPR";
                        readonly nameLocation: "21331:18:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6614;
                        readonly src: "21323:26:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6589;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "21323:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "21313:42:42";
                };
                readonly returnParameters: {
                    readonly id: 6594;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "21380:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6641;
                readonly nodeType: "FunctionDefinition";
                readonly src: "21960:528:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6640;
                    readonly nodeType: "Block";
                    readonly src: "22059:429:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 6624;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 6622;
                                readonly name: "_minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6617;
                                readonly src: "22191:18:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 6623;
                                readonly name: "maxTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5848;
                                readonly src: "22212:17:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "22191:38:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6631;
                        readonly nodeType: "IfStatement";
                        readonly src: "22187:121:42";
                        readonly trueBody: {
                            readonly id: 6630;
                            readonly nodeType: "Block";
                            readonly src: "22231:77:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6625;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "22252:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6627;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "22271:24:42";
                                        readonly memberName: "InvalidMinTimeStretchAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11851;
                                        readonly src: "22252:43:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6628;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "22252:45:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6629;
                                readonly nodeType: "RevertStatement";
                                readonly src: "22245:52:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6634;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6632;
                                readonly name: "minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5845;
                                readonly src: "22384:17:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6633;
                                readonly name: "_minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6617;
                                readonly src: "22404:18:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "22384:38:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 6635;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "22384:38:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6637;
                                readonly name: "_minTimeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6617;
                                readonly src: "22462:18:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 6636;
                                readonly name: "MinTimeStretchAPRUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11773;
                                readonly src: "22437:24:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256)";
                                };
                            };
                            readonly id: 6638;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "22437:44:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6639;
                        readonly nodeType: "EmitStatement";
                        readonly src: "22432:49:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6615;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "21818:137:42";
                    readonly text: "@notice Allows governance to update the minimum time stretch APR.\n @param _minTimeStretchAPR The new minimum time stretch APR.";
                };
                readonly functionSelector: "83b361e8";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6620;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6619;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["22044:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "22044:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "22044:14:42";
                }];
                readonly name: "updateMinTimeStretchAPR";
                readonly nameLocation: "21969:23:42";
                readonly parameters: {
                    readonly id: 6618;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6617;
                        readonly mutability: "mutable";
                        readonly name: "_minTimeStretchAPR";
                        readonly nameLocation: "22010:18:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6641;
                        readonly src: "22002:26:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6616;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "22002:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "21992:42:42";
                };
                readonly returnParameters: {
                    readonly id: 6621;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "22059:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6716;
                readonly nodeType: "FunctionDefinition";
                readonly src: "22623:935:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6715;
                    readonly nodeType: "Block";
                    readonly src: "22721:837:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [6654];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 6654;
                            readonly mutability: "mutable";
                            readonly name: "minFees_";
                            readonly nameLocation: "22932:8:42";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 6715;
                            readonly src: "22908:32:42";
                            readonly stateVariable: false;
                            readonly storageLocation: "memory";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                readonly typeString: "struct IHyperdrive.Fees";
                            };
                            readonly typeName: {
                                readonly id: 6653;
                                readonly nodeType: "UserDefinedTypeName";
                                readonly pathNode: {
                                    readonly id: 6652;
                                    readonly name: "IHyperdrive.Fees";
                                    readonly nameLocations: readonly ["22908:11:42", "22920:4:42"];
                                    readonly nodeType: "IdentifierPath";
                                    readonly referencedDeclaration: 10853;
                                    readonly src: "22908:16:42";
                                };
                                readonly referencedDeclaration: 10853;
                                readonly src: "22908:16:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 6656;
                        readonly initialValue: {
                            readonly id: 6655;
                            readonly name: "_minFees";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 5852;
                            readonly src: "22943:8:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "22908:43:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6699;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 6693;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 6687;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                        readonly id: 6681;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                            readonly id: 6675;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                                readonly id: 6670;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly commonType: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                    readonly id: 6665;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly leftExpression: {
                                                        readonly commonType: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                        readonly id: 6660;
                                                        readonly isConstant: false;
                                                        readonly isLValue: false;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly leftExpression: {
                                                            readonly expression: {
                                                                readonly id: 6657;
                                                                readonly name: "__maxFees";
                                                                readonly nodeType: "Identifier";
                                                                readonly overloadedDeclarations: readonly [];
                                                                readonly referencedDeclaration: 6645;
                                                                readonly src: "22978:9:42";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                                                };
                                                            };
                                                            readonly id: 6658;
                                                            readonly isConstant: false;
                                                            readonly isLValue: false;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "22988:5:42";
                                                            readonly memberName: "curve";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 10843;
                                                            readonly src: "22978:15:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly nodeType: "BinaryOperation";
                                                        readonly operator: ">";
                                                        readonly rightExpression: {
                                                            readonly id: 6659;
                                                            readonly name: "ONE";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 18806;
                                                            readonly src: "22996:3:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly src: "22978:21:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_bool";
                                                            readonly typeString: "bool";
                                                        };
                                                    };
                                                    readonly nodeType: "BinaryOperation";
                                                    readonly operator: "||";
                                                    readonly rightExpression: {
                                                        readonly commonType: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                        readonly id: 6664;
                                                        readonly isConstant: false;
                                                        readonly isLValue: false;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly leftExpression: {
                                                            readonly expression: {
                                                                readonly id: 6661;
                                                                readonly name: "__maxFees";
                                                                readonly nodeType: "Identifier";
                                                                readonly overloadedDeclarations: readonly [];
                                                                readonly referencedDeclaration: 6645;
                                                                readonly src: "23015:9:42";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                                                };
                                                            };
                                                            readonly id: 6662;
                                                            readonly isConstant: false;
                                                            readonly isLValue: false;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "23025:4:42";
                                                            readonly memberName: "flat";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 10846;
                                                            readonly src: "23015:14:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly nodeType: "BinaryOperation";
                                                        readonly operator: ">";
                                                        readonly rightExpression: {
                                                            readonly id: 6663;
                                                            readonly name: "ONE";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 18806;
                                                            readonly src: "23032:3:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly src: "23015:20:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_bool";
                                                            readonly typeString: "bool";
                                                        };
                                                    };
                                                    readonly src: "22978:57:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: "||";
                                                readonly rightExpression: {
                                                    readonly commonType: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                    readonly id: 6669;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly leftExpression: {
                                                        readonly expression: {
                                                            readonly id: 6666;
                                                            readonly name: "__maxFees";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 6645;
                                                            readonly src: "23051:9:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                                                readonly typeString: "struct IHyperdrive.Fees calldata";
                                                            };
                                                        };
                                                        readonly id: 6667;
                                                        readonly isConstant: false;
                                                        readonly isLValue: false;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly memberLocation: "23061:12:42";
                                                        readonly memberName: "governanceLP";
                                                        readonly nodeType: "MemberAccess";
                                                        readonly referencedDeclaration: 10849;
                                                        readonly src: "23051:22:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                    };
                                                    readonly nodeType: "BinaryOperation";
                                                    readonly operator: ">";
                                                    readonly rightExpression: {
                                                        readonly id: 6668;
                                                        readonly name: "ONE";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 18806;
                                                        readonly src: "23076:3:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                    };
                                                    readonly src: "23051:28:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                };
                                                readonly src: "22978:101:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "||";
                                            readonly rightExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                                readonly id: 6674;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly expression: {
                                                        readonly id: 6671;
                                                        readonly name: "__maxFees";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 6645;
                                                        readonly src: "23095:9:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                                            readonly typeString: "struct IHyperdrive.Fees calldata";
                                                        };
                                                    };
                                                    readonly id: 6672;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "23105:16:42";
                                                    readonly memberName: "governanceZombie";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 10852;
                                                    readonly src: "23095:26:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: ">";
                                                readonly rightExpression: {
                                                    readonly id: 6673;
                                                    readonly name: "ONE";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 18806;
                                                    readonly src: "23124:3:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly src: "23095:32:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                            };
                                            readonly src: "22978:149:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "||";
                                        readonly rightExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                            readonly id: 6680;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly expression: {
                                                    readonly id: 6676;
                                                    readonly name: "__maxFees";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 6645;
                                                    readonly src: "23143:9:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                                        readonly typeString: "struct IHyperdrive.Fees calldata";
                                                    };
                                                };
                                                readonly id: 6677;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "23153:5:42";
                                                readonly memberName: "curve";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 10843;
                                                readonly src: "23143:15:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "<";
                                            readonly rightExpression: {
                                                readonly expression: {
                                                    readonly id: 6678;
                                                    readonly name: "minFees_";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 6654;
                                                    readonly src: "23161:8:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                        readonly typeString: "struct IHyperdrive.Fees memory";
                                                    };
                                                };
                                                readonly id: 6679;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "23170:5:42";
                                                readonly memberName: "curve";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 10843;
                                                readonly src: "23161:14:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly src: "23143:32:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly src: "22978:197:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6686;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly id: 6682;
                                                readonly name: "__maxFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 6645;
                                                readonly src: "23191:9:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                                };
                                            };
                                            readonly id: 6683;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "23201:4:42";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10846;
                                            readonly src: "23191:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "<";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly id: 6684;
                                                readonly name: "minFees_";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 6654;
                                                readonly src: "23208:8:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 6685;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "23217:4:42";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10846;
                                            readonly src: "23208:13:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "23191:30:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "22978:243:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6692;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 6688;
                                            readonly name: "__maxFees";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6645;
                                            readonly src: "23237:9:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees calldata";
                                            };
                                        };
                                        readonly id: 6689;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "23247:12:42";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10849;
                                        readonly src: "23237:22:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 6690;
                                            readonly name: "minFees_";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6654;
                                            readonly src: "23262:8:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                            };
                                        };
                                        readonly id: 6691;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "23271:12:42";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10849;
                                        readonly src: "23262:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "23237:46:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "22978:305:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6698;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 6694;
                                        readonly name: "__maxFees";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6645;
                                        readonly src: "23299:9:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees calldata";
                                        };
                                    };
                                    readonly id: 6695;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "23309:16:42";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10852;
                                    readonly src: "23299:26:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 6696;
                                        readonly name: "minFees_";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6654;
                                        readonly src: "23328:8:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                        };
                                    };
                                    readonly id: 6697;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "23337:16:42";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10852;
                                    readonly src: "23328:25:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "23299:54:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "22978:375:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6706;
                        readonly nodeType: "IfStatement";
                        readonly src: "22961:470:42";
                        readonly trueBody: {
                            readonly id: 6705;
                            readonly nodeType: "Block";
                            readonly src: "23364:67:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6700;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "23385:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6702;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "23404:14:42";
                                        readonly memberName: "InvalidMaxFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11818;
                                        readonly src: "23385:33:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6703;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "23385:35:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6704;
                                readonly nodeType: "RevertStatement";
                                readonly src: "23378:42:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6709;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6707;
                                readonly name: "_maxFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5856;
                                readonly src: "23491:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6708;
                                readonly name: "__maxFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6645;
                                readonly src: "23502:9:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                };
                            };
                            readonly src: "23491:20:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly id: 6710;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "23491:20:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6712;
                                readonly name: "__maxFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6645;
                                readonly src: "23541:9:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                }];
                                readonly id: 6711;
                                readonly name: "MaxFeesUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11779;
                                readonly src: "23526:14:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_struct$_Fees_$10853_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.Fees memory)";
                                };
                            };
                            readonly id: 6713;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "23526:25:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6714;
                        readonly nodeType: "EmitStatement";
                        readonly src: "23521:30:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6642;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "22494:124:42";
                    readonly text: "@notice Allows governance to update the maximum fee parameters.\n @param __maxFees The new maximum fee parameters.";
                };
                readonly functionSelector: "2885e3ac";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6648;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6647;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["22706:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "22706:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "22706:14:42";
                }];
                readonly name: "updateMaxFees";
                readonly nameLocation: "22632:13:42";
                readonly parameters: {
                    readonly id: 6646;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6645;
                        readonly mutability: "mutable";
                        readonly name: "__maxFees";
                        readonly nameLocation: "22681:9:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6716;
                        readonly src: "22655:35:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "calldata";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                        readonly typeName: {
                            readonly id: 6644;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 6643;
                                readonly name: "IHyperdrive.Fees";
                                readonly nameLocations: readonly ["22655:11:42", "22667:4:42"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10853;
                                readonly src: "22655:16:42";
                            };
                            readonly referencedDeclaration: 10853;
                            readonly src: "22655:16:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Fees";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "22645:51:42";
                };
                readonly returnParameters: {
                    readonly id: 6649;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "22721:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6771;
                readonly nodeType: "FunctionDefinition";
                readonly src: "23693:689:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6770;
                    readonly nodeType: "Block";
                    readonly src: "23791:591:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [6729];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 6729;
                            readonly mutability: "mutable";
                            readonly name: "maxFees_";
                            readonly nameLocation: "23921:8:42";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 6770;
                            readonly src: "23897:32:42";
                            readonly stateVariable: false;
                            readonly storageLocation: "memory";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                readonly typeString: "struct IHyperdrive.Fees";
                            };
                            readonly typeName: {
                                readonly id: 6728;
                                readonly nodeType: "UserDefinedTypeName";
                                readonly pathNode: {
                                    readonly id: 6727;
                                    readonly name: "IHyperdrive.Fees";
                                    readonly nameLocations: readonly ["23897:11:42", "23909:4:42"];
                                    readonly nodeType: "IdentifierPath";
                                    readonly referencedDeclaration: 10853;
                                    readonly src: "23897:16:42";
                                };
                                readonly referencedDeclaration: 10853;
                                readonly src: "23897:16:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 6731;
                        readonly initialValue: {
                            readonly id: 6730;
                            readonly name: "_maxFees";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 5856;
                            readonly src: "23932:8:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "23897:43:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 6754;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 6748;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 6742;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6736;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly id: 6732;
                                                readonly name: "__minFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 6720;
                                                readonly src: "23967:9:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                                };
                                            };
                                            readonly id: 6733;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "23977:5:42";
                                            readonly memberName: "curve";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10843;
                                            readonly src: "23967:15:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly id: 6734;
                                                readonly name: "maxFees_";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 6729;
                                                readonly src: "23985:8:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 6735;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "23994:5:42";
                                            readonly memberName: "curve";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10843;
                                            readonly src: "23985:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "23967:32:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 6741;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly id: 6737;
                                                readonly name: "__minFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 6720;
                                                readonly src: "24015:9:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                                };
                                            };
                                            readonly id: 6738;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "24025:4:42";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10846;
                                            readonly src: "24015:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: ">";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly id: 6739;
                                                readonly name: "maxFees_";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 6729;
                                                readonly src: "24032:8:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                };
                                            };
                                            readonly id: 6740;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "24041:4:42";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10846;
                                            readonly src: "24032:13:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "24015:30:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "23967:78:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6747;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 6743;
                                            readonly name: "__minFees";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6720;
                                            readonly src: "24061:9:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees calldata";
                                            };
                                        };
                                        readonly id: 6744;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "24071:12:42";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10849;
                                        readonly src: "24061:22:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: ">";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 6745;
                                            readonly name: "maxFees_";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6729;
                                            readonly src: "24086:8:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                            };
                                        };
                                        readonly id: 6746;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "24095:12:42";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10849;
                                        readonly src: "24086:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "24061:46:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "23967:140:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 6753;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 6749;
                                        readonly name: "__minFees";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6720;
                                        readonly src: "24123:9:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees calldata";
                                        };
                                    };
                                    readonly id: 6750;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "24133:16:42";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10852;
                                    readonly src: "24123:26:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 6751;
                                        readonly name: "maxFees_";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6729;
                                        readonly src: "24152:8:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                        };
                                    };
                                    readonly id: 6752;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "24161:16:42";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10852;
                                    readonly src: "24152:25:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "24123:54:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "23967:210:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6761;
                        readonly nodeType: "IfStatement";
                        readonly src: "23950:305:42";
                        readonly trueBody: {
                            readonly id: 6760;
                            readonly nodeType: "Block";
                            readonly src: "24188:67:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6755;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "24209:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6757;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "24228:14:42";
                                        readonly memberName: "InvalidMinFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11821;
                                        readonly src: "24209:33:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6758;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "24209:35:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6759;
                                readonly nodeType: "RevertStatement";
                                readonly src: "24202:42:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6764;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6762;
                                readonly name: "_minFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5852;
                                readonly src: "24315:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6763;
                                readonly name: "__minFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6720;
                                readonly src: "24326:9:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                };
                            };
                            readonly src: "24315:20:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly id: 6765;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "24315:20:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6767;
                                readonly name: "__minFees";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6720;
                                readonly src: "24365:9:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                                    readonly typeString: "struct IHyperdrive.Fees calldata";
                                }];
                                readonly id: 6766;
                                readonly name: "MinFeesUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11785;
                                readonly src: "24350:14:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_struct$_Fees_$10853_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.Fees memory)";
                                };
                            };
                            readonly id: 6768;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "24350:25:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6769;
                        readonly nodeType: "EmitStatement";
                        readonly src: "24345:30:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6717;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "23564:124:42";
                    readonly text: "@notice Allows governance to update the minimum fee parameters.\n @param __minFees The new minimum fee parameters.";
                };
                readonly functionSelector: "10d1dc3e";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6723;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6722;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["23776:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "23776:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "23776:14:42";
                }];
                readonly name: "updateMinFees";
                readonly nameLocation: "23702:13:42";
                readonly parameters: {
                    readonly id: 6721;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6720;
                        readonly mutability: "mutable";
                        readonly name: "__minFees";
                        readonly nameLocation: "23751:9:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6771;
                        readonly src: "23725:35:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "calldata";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$10853_calldata_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                        readonly typeName: {
                            readonly id: 6719;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 6718;
                                readonly name: "IHyperdrive.Fees";
                                readonly nameLocations: readonly ["23725:11:42", "23737:4:42"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10853;
                                readonly src: "23725:16:42";
                            };
                            readonly referencedDeclaration: 10853;
                            readonly src: "23725:16:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Fees";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "23715:51:42";
                };
                readonly returnParameters: {
                    readonly id: 6724;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "23791:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6789;
                readonly nodeType: "FunctionDefinition";
                readonly src: "24518:210:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6788;
                    readonly nodeType: "Block";
                    readonly src: "24623:105:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 6782;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6780;
                                readonly name: "_defaultPausers";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5860;
                                readonly src: "24633:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6781;
                                readonly name: "_defaultPausers_";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6775;
                                readonly src: "24651:16:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_calldata_ptr";
                                    readonly typeString: "address[] calldata";
                                };
                            };
                            readonly src: "24633:34:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                readonly typeString: "address[] storage ref";
                            };
                        };
                        readonly id: 6783;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "24633:34:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6785;
                                readonly name: "_defaultPausers_";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6775;
                                readonly src: "24704:16:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_calldata_ptr";
                                    readonly typeString: "address[] calldata";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_calldata_ptr";
                                    readonly typeString: "address[] calldata";
                                }];
                                readonly id: 6784;
                                readonly name: "DefaultPausersUpdated";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11698;
                                readonly src: "24682:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                    readonly typeString: "function (address[] memory)";
                                };
                            };
                            readonly id: 6786;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "24682:39:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6787;
                        readonly nodeType: "EmitStatement";
                        readonly src: "24677:44:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6772;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "24388:125:42";
                    readonly text: "@notice Allows governance to change the default pausers.\n @param _defaultPausers_ The new list of default pausers.";
                };
                readonly functionSelector: "9af25262";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6778;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6777;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["24608:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "24608:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "24608:14:42";
                }];
                readonly name: "updateDefaultPausers";
                readonly nameLocation: "24527:20:42";
                readonly parameters: {
                    readonly id: 6776;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6775;
                        readonly mutability: "mutable";
                        readonly name: "_defaultPausers_";
                        readonly nameLocation: "24576:16:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6789;
                        readonly src: "24557:35:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "calldata";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_calldata_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 6773;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "24557:7:42";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 6774;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "24557:9:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "24547:51:42";
                };
                readonly returnParameters: {
                    readonly id: 6779;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "24623:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6824;
                readonly nodeType: "FunctionDefinition";
                readonly src: "24869:428:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6823;
                    readonly nodeType: "Block";
                    readonly src: "24969:328:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly baseExpression: {
                                readonly id: 6797;
                                readonly name: "isDeployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5927;
                                readonly src: "24983:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                    readonly typeString: "mapping(address => bool)";
                                };
                            };
                            readonly id: 6799;
                            readonly indexExpression: {
                                readonly id: 6798;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6792;
                                readonly src: "25005:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly isConstant: false;
                            readonly isLValue: true;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "IndexAccess";
                            readonly src: "24983:43:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6806;
                        readonly nodeType: "IfStatement";
                        readonly src: "24979:133:42";
                        readonly trueBody: {
                            readonly id: 6805;
                            readonly nodeType: "Block";
                            readonly src: "25028:84:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6800;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "25049:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6802;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "25068:31:42";
                                        readonly memberName: "DeployerCoordinatorAlreadyAdded";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11788;
                                        readonly src: "25049:50:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6803;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "25049:52:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6804;
                                readonly nodeType: "RevertStatement";
                                readonly src: "25042:59:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6811;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly baseExpression: {
                                    readonly id: 6807;
                                    readonly name: "isDeployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5927;
                                    readonly src: "25121:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 6809;
                                readonly indexExpression: {
                                    readonly id: 6808;
                                    readonly name: "_deployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6792;
                                    readonly src: "25143:20:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly nodeType: "IndexAccess";
                                readonly src: "25121:43:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly hexValue: "74727565";
                                readonly id: 6810;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "25167:4:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            };
                            readonly src: "25121:50:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6812;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "25121:50:42";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 6816;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6792;
                                readonly src: "25208:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly expression: {
                                    readonly id: 6813;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5922;
                                    readonly src: "25181:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 6815;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "25203:4:42";
                                readonly memberName: "push";
                                readonly nodeType: "MemberAccess";
                                readonly src: "25181:26:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$";
                                    readonly typeString: "function (address[] storage pointer,address)";
                                };
                            };
                            readonly id: 6817;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "25181:48:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6818;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "25181:48:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6820;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6792;
                                readonly src: "25269:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 6819;
                                readonly name: "DeployerCoordinatorAdded";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11687;
                                readonly src: "25244:24:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 6821;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "25244:46:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6822;
                        readonly nodeType: "EmitStatement";
                        readonly src: "25239:51:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6790;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "24734:130:42";
                    readonly text: "@notice Allows governance to add a new deployer coordinator.\n @param _deployerCoordinator The new deployer coordinator.";
                };
                readonly functionSelector: "421caba8";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6795;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6794;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["24954:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "24954:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "24954:14:42";
                }];
                readonly name: "addDeployerCoordinator";
                readonly nameLocation: "24878:22:42";
                readonly parameters: {
                    readonly id: 6793;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6792;
                        readonly mutability: "mutable";
                        readonly name: "_deployerCoordinator";
                        readonly nameLocation: "24918:20:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6824;
                        readonly src: "24910:28:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 6791;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "24910:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "24900:44:42";
                };
                readonly returnParameters: {
                    readonly id: 6796;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "24969:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 6884;
                readonly nodeType: "FunctionDefinition";
                readonly src: "25524:706:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 6883;
                    readonly nodeType: "Block";
                    readonly src: "25651:579:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly id: 6837;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "UnaryOperation";
                            readonly operator: "!";
                            readonly prefix: true;
                            readonly src: "25665:44:42";
                            readonly subExpression: {
                                readonly baseExpression: {
                                    readonly id: 6834;
                                    readonly name: "isDeployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5927;
                                    readonly src: "25666:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 6836;
                                readonly indexExpression: {
                                    readonly id: 6835;
                                    readonly name: "_deployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6827;
                                    readonly src: "25688:20:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "IndexAccess";
                                readonly src: "25666:43:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6844;
                        readonly nodeType: "IfStatement";
                        readonly src: "25661:130:42";
                        readonly trueBody: {
                            readonly id: 6843;
                            readonly nodeType: "Block";
                            readonly src: "25711:80:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6838;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "25732:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6840;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "25751:27:42";
                                        readonly memberName: "DeployerCoordinatorNotAdded";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11791;
                                        readonly src: "25732:46:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6841;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "25732:48:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6842;
                                readonly nodeType: "RevertStatement";
                                readonly src: "25725:55:42";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly id: 6849;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly baseExpression: {
                                    readonly id: 6845;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5922;
                                    readonly src: "25804:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 6847;
                                readonly indexExpression: {
                                    readonly id: 6846;
                                    readonly name: "_index";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6829;
                                    readonly src: "25826:6:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "IndexAccess";
                                readonly src: "25804:29:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 6848;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6827;
                                readonly src: "25837:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "25804:53:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6856;
                        readonly nodeType: "IfStatement";
                        readonly src: "25800:144:42";
                        readonly trueBody: {
                            readonly id: 6855;
                            readonly nodeType: "Block";
                            readonly src: "25859:85:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6850;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "25880:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6852;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "25899:32:42";
                                        readonly memberName: "DeployerCoordinatorIndexMismatch";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11794;
                                        readonly src: "25880:51:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6853;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "25880:53:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6854;
                                readonly nodeType: "RevertStatement";
                                readonly src: "25873:60:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 6861;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly baseExpression: {
                                    readonly id: 6857;
                                    readonly name: "isDeployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5927;
                                    readonly src: "25953:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 6859;
                                readonly indexExpression: {
                                    readonly id: 6858;
                                    readonly name: "_deployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6827;
                                    readonly src: "25975:20:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly nodeType: "IndexAccess";
                                readonly src: "25953:43:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly hexValue: "66616c7365";
                                readonly id: 6860;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "25999:5:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "false";
                            };
                            readonly src: "25953:51:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6862;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "25953:51:42";
                    }, {
                        readonly expression: {
                            readonly id: 6872;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly baseExpression: {
                                    readonly id: 6863;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5922;
                                    readonly src: "26014:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 6865;
                                readonly indexExpression: {
                                    readonly id: 6864;
                                    readonly name: "_index";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6829;
                                    readonly src: "26036:6:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly nodeType: "IndexAccess";
                                readonly src: "26014:29:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly baseExpression: {
                                    readonly id: 6866;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5922;
                                    readonly src: "26046:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 6871;
                                readonly indexExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 6870;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 6867;
                                            readonly name: "_deployerCoordinators";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5922;
                                            readonly src: "26081:21:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                                readonly typeString: "address[] storage ref";
                                            };
                                        };
                                        readonly id: 6868;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "26103:6:42";
                                        readonly memberName: "length";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "26081:28:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "-";
                                    readonly rightExpression: {
                                        readonly hexValue: "31";
                                        readonly id: 6869;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "26112:1:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_1_by_1";
                                            readonly typeString: "int_const 1";
                                        };
                                        readonly value: "1";
                                    };
                                    readonly src: "26081:32:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "IndexAccess";
                                readonly src: "26046:77:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "26014:109:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6873;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "26014:109:42";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [];
                            readonly expression: {
                                readonly argumentTypes: readonly [];
                                readonly expression: {
                                    readonly id: 6874;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5922;
                                    readonly src: "26133:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 6876;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "26155:3:42";
                                readonly memberName: "pop";
                                readonly nodeType: "MemberAccess";
                                readonly src: "26133:25:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$";
                                    readonly typeString: "function (address[] storage pointer)";
                                };
                            };
                            readonly id: 6877;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "26133:27:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6878;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "26133:27:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6880;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6827;
                                readonly src: "26202:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 6879;
                                readonly name: "DeployerCoordinatorRemoved";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11692;
                                readonly src: "26175:26:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address)";
                                };
                            };
                            readonly id: 6881;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "26175:48:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6882;
                        readonly nodeType: "EmitStatement";
                        readonly src: "26170:53:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6825;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "25303:216:42";
                    readonly text: "@notice Allows governance to remove an existing deployer coordinator.\n @param _deployerCoordinator The deployer coordinator to remove.\n @param _index The index of the deployer coordinator to remove.";
                };
                readonly functionSelector: "411c3035";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [{
                    readonly id: 6832;
                    readonly kind: "modifierInvocation";
                    readonly modifierName: {
                        readonly id: 6831;
                        readonly name: "onlyGovernance";
                        readonly nameLocations: readonly ["25636:14:42"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 6227;
                        readonly src: "25636:14:42";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "25636:14:42";
                }];
                readonly name: "removeDeployerCoordinator";
                readonly nameLocation: "25533:25:42";
                readonly parameters: {
                    readonly id: 6830;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6827;
                        readonly mutability: "mutable";
                        readonly name: "_deployerCoordinator";
                        readonly nameLocation: "25576:20:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6884;
                        readonly src: "25568:28:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 6826;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "25568:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 6829;
                        readonly mutability: "mutable";
                        readonly name: "_index";
                        readonly nameLocation: "25614:6:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 6884;
                        readonly src: "25606:14:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6828;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "25606:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "25558:68:42";
                };
                readonly returnParameters: {
                    readonly id: 6833;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "25651:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7090;
                readonly nodeType: "FunctionDefinition";
                readonly src: "27257:3157:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7089;
                    readonly nodeType: "Block";
                    readonly src: "27645:2769:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly id: 6914;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "UnaryOperation";
                            readonly operator: "!";
                            readonly prefix: true;
                            readonly src: "27728:44:42";
                            readonly subExpression: {
                                readonly baseExpression: {
                                    readonly id: 6911;
                                    readonly name: "isDeployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5927;
                                    readonly src: "27729:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 6913;
                                readonly indexExpression: {
                                    readonly id: 6912;
                                    readonly name: "_deployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6889;
                                    readonly src: "27751:20:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "IndexAccess";
                                readonly src: "27729:43:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6921;
                        readonly nodeType: "IfStatement";
                        readonly src: "27724:129:42";
                        readonly trueBody: {
                            readonly id: 6920;
                            readonly nodeType: "Block";
                            readonly src: "27774:79:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 6915;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "27795:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 6917;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "27814:26:42";
                                        readonly memberName: "InvalidDeployerCoordinator";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11809;
                                        readonly src: "27795:45:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 6918;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "27795:47:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 6919;
                                readonly nodeType: "RevertStatement";
                                readonly src: "27788:54:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 6923;
                                readonly name: "_config";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6892;
                                readonly src: "28005:7:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }, {
                                readonly id: 6924;
                                readonly name: "_fixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6898;
                                readonly src: "28014:9:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 6925;
                                readonly name: "_timeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6900;
                                readonly src: "28025:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 6922;
                                readonly name: "_overrideConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7630;
                                readonly src: "27989:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$10892_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory,uint256,uint256) view";
                                };
                            };
                            readonly id: 6926;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "27989:52:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6927;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "27989:52:42";
                    }, {
                        readonly assignments: readonly [6930];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 6930;
                            readonly mutability: "mutable";
                            readonly name: "hyperdrive";
                            readonly nameLocation: "28158:10:42";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 7089;
                            readonly src: "28146:22:42";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                readonly typeString: "contract IHyperdrive";
                            };
                            readonly typeName: {
                                readonly id: 6929;
                                readonly nodeType: "UserDefinedTypeName";
                                readonly pathNode: {
                                    readonly id: 6928;
                                    readonly name: "IHyperdrive";
                                    readonly nameLocations: readonly ["28146:11:42"];
                                    readonly nodeType: "IdentifierPath";
                                    readonly referencedDeclaration: 11143;
                                    readonly src: "28146:11:42";
                                };
                                readonly referencedDeclaration: 11143;
                                readonly src: "28146:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                    readonly typeString: "contract IHyperdrive";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 6949;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly arguments: readonly [{
                                            readonly expression: {
                                                readonly id: 6939;
                                                readonly name: "msg";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -15;
                                                readonly src: "28442:3:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_magic_message";
                                                    readonly typeString: "msg";
                                                };
                                            };
                                            readonly id: 6940;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "28446:6:42";
                                            readonly memberName: "sender";
                                            readonly nodeType: "MemberAccess";
                                            readonly src: "28442:10:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        }, {
                                            readonly id: 6941;
                                            readonly name: "_deploymentId";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6887;
                                            readonly src: "28454:13:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bytes32";
                                                readonly typeString: "bytes32";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }, {
                                                readonly typeIdentifier: "t_bytes32";
                                                readonly typeString: "bytes32";
                                            }];
                                            readonly expression: {
                                                readonly id: 6937;
                                                readonly name: "abi";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -1;
                                                readonly src: "28431:3:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_magic_abi";
                                                    readonly typeString: "abi";
                                                };
                                            };
                                            readonly id: 6938;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "28435:6:42";
                                            readonly memberName: "encode";
                                            readonly nodeType: "MemberAccess";
                                            readonly src: "28431:10:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                                readonly typeString: "function () pure returns (bytes memory)";
                                            };
                                        };
                                        readonly id: 6942;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "functionCall";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "28431:37:42";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 6936;
                                        readonly name: "keccak256";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: -8;
                                        readonly src: "28421:9:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                            readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                        };
                                    };
                                    readonly id: 6943;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "28421:48:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes32";
                                        readonly typeString: "bytes32";
                                    };
                                }, {
                                    readonly id: 6944;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6892;
                                    readonly src: "28487:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                }, {
                                    readonly id: 6945;
                                    readonly name: "_extraData";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6894;
                                    readonly src: "28512:10:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }, {
                                    readonly id: 6946;
                                    readonly name: "_salt";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6905;
                                    readonly src: "28540:5:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes32";
                                        readonly typeString: "bytes32";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes32";
                                        readonly typeString: "bytes32";
                                    }, {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    }, {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }, {
                                        readonly typeIdentifier: "t_bytes32";
                                        readonly typeString: "bytes32";
                                    }];
                                    readonly expression: {
                                        readonly arguments: readonly [{
                                            readonly id: 6933;
                                            readonly name: "_deployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6889;
                                            readonly src: "28227:20:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }];
                                            readonly id: 6932;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11465;
                                            readonly src: "28196:30:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$11465_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 6934;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "28196:52:42";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_IHyperdriveDeployerCoordinator_$11465";
                                            readonly typeString: "contract IHyperdriveDeployerCoordinator";
                                        };
                                    };
                                    readonly id: 6935;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "28249:6:42";
                                    readonly memberName: "deploy";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 11430;
                                    readonly src: "28196:59:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_external_nonpayable$_t_bytes32_$_t_struct$_PoolDeployConfig_$10892_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$";
                                        readonly typeString: "function (bytes32,struct IHyperdrive.PoolDeployConfig memory,bytes memory,bytes32) external returns (address)";
                                    };
                                };
                                readonly id: 6947;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "28196:363:42";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 6931;
                                readonly name: "IHyperdrive";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11143;
                                readonly src: "28171:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_type$_t_contract$_IHyperdrive_$11143_$";
                                    readonly typeString: "type(contract IHyperdrive)";
                                };
                            };
                            readonly id: 6948;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "typeConversion";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "28171:398:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                readonly typeString: "contract IHyperdrive";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "28146:423:42";
                    }, {
                        readonly expression: {
                            readonly id: 6957;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly baseExpression: {
                                    readonly id: 6950;
                                    readonly name: "instancesToDeployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5932;
                                    readonly src: "28689:31:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_address_$";
                                        readonly typeString: "mapping(address => address)";
                                    };
                                };
                                readonly id: 6955;
                                readonly indexExpression: {
                                    readonly arguments: readonly [{
                                        readonly id: 6953;
                                        readonly name: "hyperdrive";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6930;
                                        readonly src: "28742:10:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                            readonly typeString: "contract IHyperdrive";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                            readonly typeString: "contract IHyperdrive";
                                        }];
                                        readonly id: 6952;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "28734:7:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 6951;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "28734:7:42";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 6954;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "28734:19:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly nodeType: "IndexAccess";
                                readonly src: "28689:74:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6956;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6889;
                                readonly src: "28766:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "28689:97:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6958;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "28689:97:42";
                    }, {
                        readonly expression: {
                            readonly id: 6963;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 6959;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6892;
                                    readonly src: "28796:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 6961;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "28804:10:42";
                                readonly memberName: "governance";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10881;
                                readonly src: "28796:18:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 6962;
                                readonly name: "hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5809;
                                readonly src: "28817:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "28796:41:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 6964;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "28796:41:42";
                    }, {
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly id: 6966;
                                readonly name: "_deployerCoordinator";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6889;
                                readonly src: "28874:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly arguments: readonly [{
                                    readonly id: 6969;
                                    readonly name: "hyperdrive";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6930;
                                    readonly src: "28916:10:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                        readonly typeString: "contract IHyperdrive";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                        readonly typeString: "contract IHyperdrive";
                                    }];
                                    readonly id: 6968;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "28908:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 6967;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "28908:7:42";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 6970;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "28908:19:42";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 6971;
                                readonly name: "_config";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6892;
                                readonly src: "28941:7:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }, {
                                readonly id: 6972;
                                readonly name: "_extraData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6894;
                                readonly src: "28962:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly id: 6965;
                                readonly name: "Deployed";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 11682;
                                readonly src: "28852:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_PoolDeployConfig_$10892_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                    readonly typeString: "function (address,address,struct IHyperdrive.PoolDeployConfig memory,bytes memory)";
                                };
                            };
                            readonly id: 6973;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "28852:130:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6974;
                        readonly nodeType: "EmitStatement";
                        readonly src: "28847:135:42";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly id: 6980;
                                    readonly name: "hyperdrive";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6930;
                                    readonly src: "29088:10:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                        readonly typeString: "contract IHyperdrive";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                        readonly typeString: "contract IHyperdrive";
                                    }];
                                    readonly id: 6979;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "29080:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 6978;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "29080:7:42";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 6981;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "29080:19:42";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly expression: {
                                    readonly id: 6975;
                                    readonly name: "_instances";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5936;
                                    readonly src: "29064:10:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 6977;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "29075:4:42";
                                readonly memberName: "push";
                                readonly nodeType: "MemberAccess";
                                readonly src: "29064:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$";
                                    readonly typeString: "function (address[] storage pointer,address)";
                                };
                            };
                            readonly id: 6982;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "29064:36:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 6983;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "29064:36:42";
                    }, {
                        readonly expression: {
                            readonly id: 6991;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly baseExpression: {
                                    readonly id: 6984;
                                    readonly name: "isInstance";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5941;
                                    readonly src: "29110:10:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 6989;
                                readonly indexExpression: {
                                    readonly arguments: readonly [{
                                        readonly id: 6987;
                                        readonly name: "hyperdrive";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6930;
                                        readonly src: "29129:10:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                            readonly typeString: "contract IHyperdrive";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                            readonly typeString: "contract IHyperdrive";
                                        }];
                                        readonly id: 6986;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "29121:7:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 6985;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "29121:7:42";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 6988;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "29121:19:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly nodeType: "IndexAccess";
                                readonly src: "29110:31:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly hexValue: "74727565";
                                readonly id: 6990;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "29144:4:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            };
                            readonly src: "29110:38:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6992;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "29110:38:42";
                    }, {
                        readonly expression: {
                            readonly id: 6995;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 6993;
                                readonly name: "isReceiveLocked";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5803;
                                readonly src: "29206:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly hexValue: "66616c7365";
                                readonly id: 6994;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "29224:5:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "false";
                            };
                            readonly src: "29206:23:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 6996;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "29206:23:42";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly expression: {
                                            readonly id: 7007;
                                            readonly name: "msg";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -15;
                                            readonly src: "29517:3:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_message";
                                                readonly typeString: "msg";
                                            };
                                        };
                                        readonly id: 7008;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "29521:6:42";
                                        readonly memberName: "sender";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "29517:10:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 7009;
                                        readonly name: "_deploymentId";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 6887;
                                        readonly src: "29529:13:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes32";
                                            readonly typeString: "bytes32";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_bytes32";
                                            readonly typeString: "bytes32";
                                        }];
                                        readonly expression: {
                                            readonly id: 7005;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "29506:3:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 7006;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "29510:6:42";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "29506:10:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 7010;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "29506:37:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 7004;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "29496:9:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 7011;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "29496:48:42";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            }, {
                                readonly expression: {
                                    readonly id: 7012;
                                    readonly name: "msg";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -15;
                                    readonly src: "29558:3:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_magic_message";
                                        readonly typeString: "msg";
                                    };
                                };
                                readonly id: 7013;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "29562:6:42";
                                readonly memberName: "sender";
                                readonly nodeType: "MemberAccess";
                                readonly src: "29558:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 7014;
                                readonly name: "_contribution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6896;
                                readonly src: "29582:13:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 7015;
                                readonly name: "_fixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6898;
                                readonly src: "29609:9:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 7016;
                                readonly name: "_options";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 6903;
                                readonly src: "29632:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Options_$10990_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.Options memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_struct$_Options_$10990_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.Options memory";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes32";
                                        readonly typeString: "bytes32";
                                    }, {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_struct$_Options_$10990_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.Options memory";
                                    }];
                                    readonly expression: {
                                        readonly arguments: readonly [{
                                            readonly id: 6998;
                                            readonly name: "_deployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6889;
                                            readonly src: "29270:20:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            }];
                                            readonly id: 6997;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11465;
                                            readonly src: "29239:30:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$11465_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 6999;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "29239:52:42";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_IHyperdriveDeployerCoordinator_$11465";
                                            readonly typeString: "contract IHyperdriveDeployerCoordinator";
                                        };
                                    };
                                    readonly id: 7000;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "29292:10:42";
                                    readonly memberName: "initialize";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 11464;
                                    readonly src: "29239:63:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_external_payable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_Options_$10990_memory_ptr_$returns$_t_uint256_$";
                                        readonly typeString: "function (bytes32,address,uint256,uint256,struct IHyperdrive.Options memory) payable external returns (uint256)";
                                    };
                                };
                                readonly id: 7003;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly names: readonly ["value"];
                                readonly nodeType: "FunctionCallOptions";
                                readonly options: readonly [{
                                    readonly expression: {
                                        readonly id: 7001;
                                        readonly name: "msg";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: -15;
                                        readonly src: "29323:3:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_magic_message";
                                            readonly typeString: "msg";
                                        };
                                    };
                                    readonly id: 7002;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "29327:5:42";
                                    readonly memberName: "value";
                                    readonly nodeType: "MemberAccess";
                                    readonly src: "29323:9:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly src: "29239:103:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_payable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_Options_$10990_memory_ptr_$returns$_t_uint256_$value";
                                    readonly typeString: "function (bytes32,address,uint256,uint256,struct IHyperdrive.Options memory) payable external returns (uint256)";
                                };
                            };
                            readonly id: 7017;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "29239:411:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 7018;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "29239:411:42";
                    }, {
                        readonly expression: {
                            readonly id: 7021;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 7019;
                                readonly name: "isReceiveLocked";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5803;
                                readonly src: "29660:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly hexValue: "74727565";
                                readonly id: 7020;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "29678:4:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            };
                            readonly src: "29660:22:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7022;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "29660:22:42";
                    }, {
                        readonly body: {
                            readonly id: 7044;
                            readonly nodeType: "Block";
                            readonly src: "29862:130:42";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly baseExpression: {
                                            readonly id: 7034;
                                            readonly name: "_defaultPausers";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5860;
                                            readonly src: "29897:15:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                                readonly typeString: "address[] storage ref";
                                            };
                                        };
                                        readonly id: 7036;
                                        readonly indexExpression: {
                                            readonly id: 7035;
                                            readonly name: "i";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7024;
                                            readonly src: "29913:1:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "IndexAccess";
                                        readonly src: "29897:18:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly hexValue: "74727565";
                                        readonly id: 7037;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "bool";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "29917:4:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                        readonly value: "true";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        }];
                                        readonly expression: {
                                            readonly id: 7031;
                                            readonly name: "hyperdrive";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 6930;
                                            readonly src: "29876:10:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                                readonly typeString: "contract IHyperdrive";
                                            };
                                        };
                                        readonly id: 7033;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "29887:9:42";
                                        readonly memberName: "setPauser";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11324;
                                        readonly src: "29876:20:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$";
                                            readonly typeString: "function (address,bool) external";
                                        };
                                    };
                                    readonly id: 7038;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "29876:46:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7039;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "29876:46:42";
                            }, {
                                readonly id: 7043;
                                readonly nodeType: "UncheckedBlock";
                                readonly src: "29936:46:42";
                                readonly statements: readonly [{
                                    readonly expression: {
                                        readonly id: 7041;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "UnaryOperation";
                                        readonly operator: "++";
                                        readonly prefix: true;
                                        readonly src: "29964:3:42";
                                        readonly subExpression: {
                                            readonly id: 7040;
                                            readonly name: "i";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7024;
                                            readonly src: "29966:1:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly id: 7042;
                                    readonly nodeType: "ExpressionStatement";
                                    readonly src: "29964:3:42";
                                }];
                            }];
                        };
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 7030;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 7027;
                                readonly name: "i";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7024;
                                readonly src: "29832:1:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 7028;
                                    readonly name: "_defaultPausers";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5860;
                                    readonly src: "29836:15:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 7029;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "29852:6:42";
                                readonly memberName: "length";
                                readonly nodeType: "MemberAccess";
                                readonly src: "29836:22:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "29832:26:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7045;
                        readonly initializationExpression: {
                            readonly assignments: readonly [7024];
                            readonly declarations: readonly [{
                                readonly constant: false;
                                readonly id: 7024;
                                readonly mutability: "mutable";
                                readonly name: "i";
                                readonly nameLocation: "29825:1:42";
                                readonly nodeType: "VariableDeclaration";
                                readonly scope: 7045;
                                readonly src: "29817:9:42";
                                readonly stateVariable: false;
                                readonly storageLocation: "default";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly typeName: {
                                    readonly id: 7023;
                                    readonly name: "uint256";
                                    readonly nodeType: "ElementaryTypeName";
                                    readonly src: "29817:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly visibility: "internal";
                            }];
                            readonly id: 7026;
                            readonly initialValue: {
                                readonly hexValue: "30";
                                readonly id: 7025;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "29829:1:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly nodeType: "VariableDeclarationStatement";
                            readonly src: "29817:13:42";
                        };
                        readonly nodeType: "ForStatement";
                        readonly src: "29812:180:42";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 7049;
                                readonly name: "hyperdriveGovernance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5809;
                                readonly src: "30026:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly expression: {
                                    readonly id: 7046;
                                    readonly name: "hyperdrive";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 6930;
                                    readonly src: "30001:10:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                        readonly typeString: "contract IHyperdrive";
                                    };
                                };
                                readonly id: 7048;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "30012:13:42";
                                readonly memberName: "setGovernance";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 11316;
                                readonly src: "30001:24:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address) external";
                                };
                            };
                            readonly id: 7050;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "30001:46:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 7051;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "30001:46:42";
                    }, {
                        readonly assignments: readonly [7053];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 7053;
                            readonly mutability: "mutable";
                            readonly name: "refund";
                            readonly nameLocation: "30133:6:42";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 7089;
                            readonly src: "30125:14:42";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 7052;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "30125:7:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 7059;
                        readonly initialValue: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 7056;
                                    readonly name: "this";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -28;
                                    readonly src: "30150:4:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_HyperdriveFactory_$7631";
                                        readonly typeString: "contract HyperdriveFactory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_HyperdriveFactory_$7631";
                                        readonly typeString: "contract HyperdriveFactory";
                                    }];
                                    readonly id: 7055;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "30142:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 7054;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "30142:7:42";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 7057;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "30142:13:42";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 7058;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly memberLocation: "30156:7:42";
                            readonly memberName: "balance";
                            readonly nodeType: "MemberAccess";
                            readonly src: "30142:21:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "30125:38:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 7062;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 7060;
                                readonly name: "refund";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7053;
                                readonly src: "30177:6:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 7061;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "30186:1:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "30177:10:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7086;
                        readonly nodeType: "IfStatement";
                        readonly src: "30173:207:42";
                        readonly trueBody: {
                            readonly id: 7085;
                            readonly nodeType: "Block";
                            readonly src: "30189:191:42";
                            readonly statements: readonly [{
                                readonly assignments: readonly [7064, null];
                                readonly declarations: readonly [{
                                    readonly constant: false;
                                    readonly id: 7064;
                                    readonly mutability: "mutable";
                                    readonly name: "success";
                                    readonly nameLocation: "30209:7:42";
                                    readonly nodeType: "VariableDeclaration";
                                    readonly scope: 7085;
                                    readonly src: "30204:12:42";
                                    readonly stateVariable: false;
                                    readonly storageLocation: "default";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly typeName: {
                                        readonly id: 7063;
                                        readonly name: "bool";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "30204:4:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly visibility: "internal";
                                }, null];
                                readonly id: 7075;
                                readonly initialValue: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "";
                                        readonly id: 7073;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "30264:2:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470";
                                            readonly typeString: "literal_string \"\"";
                                        };
                                        readonly value: "";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470";
                                            readonly typeString: "literal_string \"\"";
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470";
                                                readonly typeString: "literal_string \"\"";
                                            }];
                                            readonly expression: {
                                                readonly arguments: readonly [{
                                                    readonly expression: {
                                                        readonly id: 7067;
                                                        readonly name: "msg";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: -15;
                                                        readonly src: "30230:3:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_magic_message";
                                                            readonly typeString: "msg";
                                                        };
                                                    };
                                                    readonly id: 7068;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "30234:6:42";
                                                    readonly memberName: "sender";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly src: "30230:10:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    };
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    }];
                                                    readonly id: 7066;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly lValueRequested: false;
                                                    readonly nodeType: "ElementaryTypeNameExpression";
                                                    readonly src: "30222:8:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_type$_t_address_payable_$";
                                                        readonly typeString: "type(address payable)";
                                                    };
                                                    readonly typeName: {
                                                        readonly id: 7065;
                                                        readonly name: "address";
                                                        readonly nodeType: "ElementaryTypeName";
                                                        readonly src: "30222:8:42";
                                                        readonly stateMutability: "payable";
                                                        readonly typeDescriptions: {};
                                                    };
                                                };
                                                readonly id: 7069;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly kind: "typeConversion";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "30222:19:42";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_address_payable";
                                                    readonly typeString: "address payable";
                                                };
                                            };
                                            readonly id: 7070;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "30242:4:42";
                                            readonly memberName: "call";
                                            readonly nodeType: "MemberAccess";
                                            readonly src: "30222:24:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$";
                                                readonly typeString: "function (bytes memory) payable returns (bool,bytes memory)";
                                            };
                                        };
                                        readonly id: 7072;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly names: readonly ["value"];
                                        readonly nodeType: "FunctionCallOptions";
                                        readonly options: readonly [{
                                            readonly id: 7071;
                                            readonly name: "refund";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7053;
                                            readonly src: "30255:6:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        }];
                                        readonly src: "30222:41:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value";
                                            readonly typeString: "function (bytes memory) payable returns (bool,bytes memory)";
                                        };
                                    };
                                    readonly id: 7074;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "30222:45:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$_t_bool_$_t_bytes_memory_ptr_$";
                                        readonly typeString: "tuple(bool,bytes memory)";
                                    };
                                };
                                readonly nodeType: "VariableDeclarationStatement";
                                readonly src: "30203:64:42";
                            }, {
                                readonly condition: {
                                    readonly id: 7077;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "UnaryOperation";
                                    readonly operator: "!";
                                    readonly prefix: true;
                                    readonly src: "30285:8:42";
                                    readonly subExpression: {
                                        readonly id: 7076;
                                        readonly name: "success";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 7064;
                                        readonly src: "30286:7:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly id: 7084;
                                readonly nodeType: "IfStatement";
                                readonly src: "30281:89:42";
                                readonly trueBody: {
                                    readonly id: 7083;
                                    readonly nodeType: "Block";
                                    readonly src: "30295:75:42";
                                    readonly statements: readonly [{
                                        readonly errorCall: {
                                            readonly arguments: readonly [];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [];
                                                readonly expression: {
                                                    readonly id: 7078;
                                                    readonly name: "IHyperdriveFactory";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 11864;
                                                    readonly src: "30320:18:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                        readonly typeString: "type(contract IHyperdriveFactory)";
                                                    };
                                                };
                                                readonly id: 7080;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "30339:14:42";
                                                readonly memberName: "TransferFailed";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 11860;
                                                readonly src: "30320:33:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                                    readonly typeString: "function () pure";
                                                };
                                            };
                                            readonly id: 7081;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "30320:35:42";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_tuple$__$";
                                                readonly typeString: "tuple()";
                                            };
                                        };
                                        readonly id: 7082;
                                        readonly nodeType: "RevertStatement";
                                        readonly src: "30313:42:42";
                                    }];
                                };
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 7087;
                            readonly name: "hyperdrive";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 6930;
                            readonly src: "30397:10:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                readonly typeString: "contract IHyperdrive";
                            };
                        };
                        readonly functionReturnParameters: 6910;
                        readonly id: 7088;
                        readonly nodeType: "Return";
                        readonly src: "30390:17:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 6885;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "26236:1016:42";
                    readonly text: "@notice Deploys a Hyperdrive instance with the factory's configuration.\n @dev This function is declared as payable to allow payable overrides\n      to accept ether on initialization, but payability is not supported\n      by default.\n @param _deploymentId The deployment ID to use when deploying the pool.\n @param _deployerCoordinator The deployer coordinator to use in this\n        deployment.\n @param _config The configuration of the Hyperdrive pool.\n @param _extraData The extra data that contains data necessary for the\n        specific deployer.\n @param _contribution The contribution amount in base to the pool.\n @param _fixedAPR The fixed APR used to initialize the pool.\n @param _timeStretchAPR The time stretch APR used to initialize the pool.\n @param _options The options for the `initialize` call.\n @param _salt The create2 salt to use for the deployment.\n @return The hyperdrive address deployed.";
                };
                readonly functionSelector: "9cafb919";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "deployAndInitialize";
                readonly nameLocation: "27266:19:42";
                readonly parameters: {
                    readonly id: 6906;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6887;
                        readonly mutability: "mutable";
                        readonly name: "_deploymentId";
                        readonly nameLocation: "27303:13:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7090;
                        readonly src: "27295:21:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 6886;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "27295:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 6889;
                        readonly mutability: "mutable";
                        readonly name: "_deployerCoordinator";
                        readonly nameLocation: "27334:20:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7090;
                        readonly src: "27326:28:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 6888;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "27326:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 6892;
                        readonly mutability: "mutable";
                        readonly name: "_config";
                        readonly nameLocation: "27400:7:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7090;
                        readonly src: "27364:43:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 6891;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 6890;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["27364:11:42", "27376:16:42"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10892;
                                readonly src: "27364:28:42";
                            };
                            readonly referencedDeclaration: 10892;
                            readonly src: "27364:28:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 6894;
                        readonly mutability: "mutable";
                        readonly name: "_extraData";
                        readonly nameLocation: "27430:10:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7090;
                        readonly src: "27417:23:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 6893;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "27417:5:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 6896;
                        readonly mutability: "mutable";
                        readonly name: "_contribution";
                        readonly nameLocation: "27458:13:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7090;
                        readonly src: "27450:21:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6895;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "27450:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 6898;
                        readonly mutability: "mutable";
                        readonly name: "_fixedAPR";
                        readonly nameLocation: "27489:9:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7090;
                        readonly src: "27481:17:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6897;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "27481:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 6900;
                        readonly mutability: "mutable";
                        readonly name: "_timeStretchAPR";
                        readonly nameLocation: "27516:15:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7090;
                        readonly src: "27508:23:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 6899;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "27508:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 6903;
                        readonly mutability: "mutable";
                        readonly name: "_options";
                        readonly nameLocation: "27568:8:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7090;
                        readonly src: "27541:35:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Options_$10990_memory_ptr";
                            readonly typeString: "struct IHyperdrive.Options";
                        };
                        readonly typeName: {
                            readonly id: 6902;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 6901;
                                readonly name: "IHyperdrive.Options";
                                readonly nameLocations: readonly ["27541:11:42", "27553:7:42"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10990;
                                readonly src: "27541:19:42";
                            };
                            readonly referencedDeclaration: 10990;
                            readonly src: "27541:19:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Options_$10990_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Options";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 6905;
                        readonly mutability: "mutable";
                        readonly name: "_salt";
                        readonly nameLocation: "27594:5:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7090;
                        readonly src: "27586:13:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 6904;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "27586:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "27285:320:42";
                };
                readonly returnParameters: {
                    readonly id: 6910;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 6909;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7090;
                        readonly src: "27632:11:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                            readonly typeString: "contract IHyperdrive";
                        };
                        readonly typeName: {
                            readonly id: 6908;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 6907;
                                readonly name: "IHyperdrive";
                                readonly nameLocations: readonly ["27632:11:42"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 11143;
                                readonly src: "27632:11:42";
                            };
                            readonly referencedDeclaration: 11143;
                            readonly src: "27632:11:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$11143";
                                readonly typeString: "contract IHyperdrive";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "27631:13:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "payable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7153;
                readonly nodeType: "FunctionDefinition";
                readonly src: "31179:1269:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7152;
                    readonly nodeType: "Block";
                    readonly src: "31502:946:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly id: 7116;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "UnaryOperation";
                            readonly operator: "!";
                            readonly prefix: true;
                            readonly src: "31585:44:42";
                            readonly subExpression: {
                                readonly baseExpression: {
                                    readonly id: 7113;
                                    readonly name: "isDeployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5927;
                                    readonly src: "31586:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_mapping$_t_address_$_t_bool_$";
                                        readonly typeString: "mapping(address => bool)";
                                    };
                                };
                                readonly id: 7115;
                                readonly indexExpression: {
                                    readonly id: 7114;
                                    readonly name: "_deployerCoordinator";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7095;
                                    readonly src: "31608:20:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "IndexAccess";
                                readonly src: "31586:43:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7123;
                        readonly nodeType: "IfStatement";
                        readonly src: "31581:129:42";
                        readonly trueBody: {
                            readonly id: 7122;
                            readonly nodeType: "Block";
                            readonly src: "31631:79:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7117;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "31652:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7119;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "31671:26:42";
                                        readonly memberName: "InvalidDeployerCoordinator";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11809;
                                        readonly src: "31652:45:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7120;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "31652:47:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7121;
                                readonly nodeType: "RevertStatement";
                                readonly src: "31645:54:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 7125;
                                readonly name: "_config";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7098;
                                readonly src: "31862:7:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }, {
                                readonly id: 7126;
                                readonly name: "_fixedAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7102;
                                readonly src: "31871:9:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 7127;
                                readonly name: "_timeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7104;
                                readonly src: "31882:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 7124;
                                readonly name: "_overrideConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7630;
                                readonly src: "31846:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$10892_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory,uint256,uint256) view";
                                };
                            };
                            readonly id: 7128;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "31846:52:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 7129;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "31846:52:42";
                    }, {
                        readonly assignments: readonly [7131];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 7131;
                            readonly mutability: "mutable";
                            readonly name: "target";
                            readonly nameLocation: "31996:6:42";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 7152;
                            readonly src: "31988:14:42";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly typeName: {
                                readonly id: 7130;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "31988:7:42";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 7149;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly expression: {
                                            readonly id: 7139;
                                            readonly name: "msg";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -15;
                                            readonly src: "32270:3:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_message";
                                                readonly typeString: "msg";
                                            };
                                        };
                                        readonly id: 7140;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "32274:6:42";
                                        readonly memberName: "sender";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "32270:10:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 7141;
                                        readonly name: "_deploymentId";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 7093;
                                        readonly src: "32282:13:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes32";
                                            readonly typeString: "bytes32";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_bytes32";
                                            readonly typeString: "bytes32";
                                        }];
                                        readonly expression: {
                                            readonly id: 7137;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "32259:3:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 7138;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "32263:6:42";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "32259:10:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 7142;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "32259:37:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 7136;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "32249:9:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 7143;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "32249:48:42";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            }, {
                                readonly id: 7144;
                                readonly name: "_config";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7098;
                                readonly src: "32315:7:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }, {
                                readonly id: 7145;
                                readonly name: "_extraData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7100;
                                readonly src: "32340:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 7146;
                                readonly name: "_targetIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7106;
                                readonly src: "32368:12:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 7147;
                                readonly name: "_salt";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7108;
                                readonly src: "32398:5:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                }, {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 7133;
                                        readonly name: "_deployerCoordinator";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 7095;
                                        readonly src: "32036:20:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 7132;
                                        readonly name: "IHyperdriveDeployerCoordinator";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 11465;
                                        readonly src: "32005:30:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$11465_$";
                                            readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                        };
                                    };
                                    readonly id: 7134;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "32005:52:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IHyperdriveDeployerCoordinator_$11465";
                                        readonly typeString: "contract IHyperdriveDeployerCoordinator";
                                    };
                                };
                                readonly id: 7135;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "32071:12:42";
                                readonly memberName: "deployTarget";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 11447;
                                readonly src: "32005:78:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_bytes32_$_t_struct$_PoolDeployConfig_$10892_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes32_$returns$_t_address_$";
                                    readonly typeString: "function (bytes32,struct IHyperdrive.PoolDeployConfig memory,bytes memory,uint256,bytes32) external returns (address)";
                                };
                            };
                            readonly id: 7148;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "32005:412:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "31988:429:42";
                    }, {
                        readonly expression: {
                            readonly id: 7150;
                            readonly name: "target";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 7131;
                            readonly src: "32435:6:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly functionReturnParameters: 7112;
                        readonly id: 7151;
                        readonly nodeType: "Return";
                        readonly src: "32428:13:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7091;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "30420:754:42";
                    readonly text: "@notice Deploys a Hyperdrive target with the factory's configuration.\n @param _deploymentId The deployment ID to use when deploying the pool.\n @param _deployerCoordinator The deployer coordinator to use in this\n        deployment.\n @param _config The configuration of the Hyperdrive pool.\n @param _extraData The extra data that contains data necessary for the\n        specific deployer.\n @param _fixedAPR The fixed APR used to initialize the pool.\n @param _timeStretchAPR The time stretch APR used to initialize the pool.\n @param _targetIndex The index of the target to deploy.\n @param _salt The create2 salt to use for the deployment.\n @return The target address deployed.";
                };
                readonly functionSelector: "a18cb81a";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "deployTarget";
                readonly nameLocation: "31188:12:42";
                readonly parameters: {
                    readonly id: 7109;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7093;
                        readonly mutability: "mutable";
                        readonly name: "_deploymentId";
                        readonly nameLocation: "31218:13:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7153;
                        readonly src: "31210:21:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 7092;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "31210:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7095;
                        readonly mutability: "mutable";
                        readonly name: "_deployerCoordinator";
                        readonly nameLocation: "31249:20:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7153;
                        readonly src: "31241:28:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 7094;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "31241:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7098;
                        readonly mutability: "mutable";
                        readonly name: "_config";
                        readonly nameLocation: "31315:7:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7153;
                        readonly src: "31279:43:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 7097;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 7096;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["31279:11:42", "31291:16:42"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10892;
                                readonly src: "31279:28:42";
                            };
                            readonly referencedDeclaration: 10892;
                            readonly src: "31279:28:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7100;
                        readonly mutability: "mutable";
                        readonly name: "_extraData";
                        readonly nameLocation: "31345:10:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7153;
                        readonly src: "31332:23:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 7099;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "31332:5:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7102;
                        readonly mutability: "mutable";
                        readonly name: "_fixedAPR";
                        readonly nameLocation: "31373:9:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7153;
                        readonly src: "31365:17:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7101;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "31365:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7104;
                        readonly mutability: "mutable";
                        readonly name: "_timeStretchAPR";
                        readonly nameLocation: "31400:15:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7153;
                        readonly src: "31392:23:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7103;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "31392:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7106;
                        readonly mutability: "mutable";
                        readonly name: "_targetIndex";
                        readonly nameLocation: "31433:12:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7153;
                        readonly src: "31425:20:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7105;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "31425:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7108;
                        readonly mutability: "mutable";
                        readonly name: "_salt";
                        readonly nameLocation: "31463:5:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7153;
                        readonly src: "31455:13:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes32";
                            readonly typeString: "bytes32";
                        };
                        readonly typeName: {
                            readonly id: 7107;
                            readonly name: "bytes32";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "31455:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "31200:274:42";
                };
                readonly returnParameters: {
                    readonly id: 7112;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7111;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7153;
                        readonly src: "31493:7:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 7110;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "31493:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "31492:9:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7163;
                readonly nodeType: "FunctionDefinition";
                readonly src: "32519:99:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7162;
                    readonly nodeType: "Block";
                    readonly src: "32586:32:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 7160;
                            readonly name: "_maxFees";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 5856;
                            readonly src: "32603:8:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly functionReturnParameters: 7159;
                        readonly id: 7161;
                        readonly nodeType: "Return";
                        readonly src: "32596:15:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7154;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "32454:60:42";
                    readonly text: "@notice Gets the max fees.\n @return The max fees.";
                };
                readonly functionSelector: "e83e34b1";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "maxFees";
                readonly nameLocation: "32528:7:42";
                readonly parameters: {
                    readonly id: 7155;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "32535:2:42";
                };
                readonly returnParameters: {
                    readonly id: 7159;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7158;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7163;
                        readonly src: "32561:23:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                        readonly typeName: {
                            readonly id: 7157;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 7156;
                                readonly name: "IHyperdrive.Fees";
                                readonly nameLocations: readonly ["32561:11:42", "32573:4:42"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10853;
                                readonly src: "32561:16:42";
                            };
                            readonly referencedDeclaration: 10853;
                            readonly src: "32561:16:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Fees";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "32560:25:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7173;
                readonly nodeType: "FunctionDefinition";
                readonly src: "32689:99:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7172;
                    readonly nodeType: "Block";
                    readonly src: "32756:32:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 7170;
                            readonly name: "_minFees";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 5852;
                            readonly src: "32773:8:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                            };
                        };
                        readonly functionReturnParameters: 7169;
                        readonly id: 7171;
                        readonly nodeType: "Return";
                        readonly src: "32766:15:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7164;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "32624:60:42";
                    readonly text: "@notice Gets the min fees.\n @return The min fees.";
                };
                readonly functionSelector: "c1722563";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "minFees";
                readonly nameLocation: "32698:7:42";
                readonly parameters: {
                    readonly id: 7165;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "32705:2:42";
                };
                readonly returnParameters: {
                    readonly id: 7169;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7168;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7173;
                        readonly src: "32731:23:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                            readonly typeString: "struct IHyperdrive.Fees";
                        };
                        readonly typeName: {
                            readonly id: 7167;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 7166;
                                readonly name: "IHyperdrive.Fees";
                                readonly nameLocations: readonly ["32731:11:42", "32743:4:42"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10853;
                                readonly src: "32731:16:42";
                            };
                            readonly referencedDeclaration: 10853;
                            readonly src: "32731:16:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Fees";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "32730:25:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7183;
                readonly nodeType: "FunctionDefinition";
                readonly src: "32873:106:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7182;
                    readonly nodeType: "Block";
                    readonly src: "32940:39:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 7180;
                            readonly name: "_defaultPausers";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 5860;
                            readonly src: "32957:15:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                readonly typeString: "address[] storage ref";
                            };
                        };
                        readonly functionReturnParameters: 7179;
                        readonly id: 7181;
                        readonly nodeType: "Return";
                        readonly src: "32950:22:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7174;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "32794:74:42";
                    readonly text: "@notice Gets the default pausers.\n @return The default pausers.";
                };
                readonly functionSelector: "a64c90bf";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "defaultPausers";
                readonly nameLocation: "32882:14:42";
                readonly parameters: {
                    readonly id: 7175;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "32896:2:42";
                };
                readonly returnParameters: {
                    readonly id: 7179;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7178;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7183;
                        readonly src: "32922:16:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 7176;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "32922:7:42";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 7177;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "32922:9:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "32921:18:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7193;
                readonly nodeType: "FunctionDefinition";
                readonly src: "33122:105:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7192;
                    readonly nodeType: "Block";
                    readonly src: "33186:41:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly expression: {
                                readonly id: 7189;
                                readonly name: "_instances";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5936;
                                readonly src: "33203:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly id: 7190;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly memberLocation: "33214:6:42";
                            readonly memberName: "length";
                            readonly nodeType: "MemberAccess";
                            readonly src: "33203:17:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 7188;
                        readonly id: 7191;
                        readonly nodeType: "Return";
                        readonly src: "33196:24:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7184;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "32985:132:42";
                    readonly text: "@notice Gets the number of instances deployed by this factory.\n @return The number of instances deployed by this factory.";
                };
                readonly functionSelector: "6e95d67c";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getNumberOfInstances";
                readonly nameLocation: "33131:20:42";
                readonly parameters: {
                    readonly id: 7185;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "33151:2:42";
                };
                readonly returnParameters: {
                    readonly id: 7188;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7187;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7193;
                        readonly src: "33177:7:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7186;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "33177:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "33176:9:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7206;
                readonly nodeType: "FunctionDefinition";
                readonly src: "33399:116:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7205;
                    readonly nodeType: "Block";
                    readonly src: "33474:41:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly baseExpression: {
                                readonly id: 7201;
                                readonly name: "_instances";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5936;
                                readonly src: "33491:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly id: 7203;
                            readonly indexExpression: {
                                readonly id: 7202;
                                readonly name: "index";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7196;
                                readonly src: "33502:5:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly isConstant: false;
                            readonly isLValue: true;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "IndexAccess";
                            readonly src: "33491:17:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly functionReturnParameters: 7200;
                        readonly id: 7204;
                        readonly nodeType: "Return";
                        readonly src: "33484:24:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7194;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "33233:161:42";
                    readonly text: "@notice Gets the instance at the specified index.\n @param index The index of the instance to get.\n @return The instance at the specified index.";
                };
                readonly functionSelector: "daac24da";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getInstanceAtIndex";
                readonly nameLocation: "33408:18:42";
                readonly parameters: {
                    readonly id: 7197;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7196;
                        readonly mutability: "mutable";
                        readonly name: "index";
                        readonly nameLocation: "33435:5:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7206;
                        readonly src: "33427:13:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7195;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "33427:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "33426:15:42";
                };
                readonly returnParameters: {
                    readonly id: 7200;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7199;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7206;
                        readonly src: "33465:7:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 7198;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "33465:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "33464:9:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7274;
                readonly nodeType: "FunctionDefinition";
                readonly src: "33810:671:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7273;
                    readonly nodeType: "Block";
                    readonly src: "33946:535:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 7219;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 7217;
                                readonly name: "startIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7209;
                                readonly src: "34009:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 7218;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7211;
                                readonly src: "34022:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "34009:21:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7226;
                        readonly nodeType: "IfStatement";
                        readonly src: "34005:94:42";
                        readonly trueBody: {
                            readonly id: 7225;
                            readonly nodeType: "Block";
                            readonly src: "34032:67:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7220;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "34053:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7222;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "34072:14:42";
                                        readonly memberName: "InvalidIndexes";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11815;
                                        readonly src: "34053:33:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7223;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "34053:35:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7224;
                                readonly nodeType: "RevertStatement";
                                readonly src: "34046:42:42";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 7230;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 7227;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7211;
                                readonly src: "34112:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">=";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 7228;
                                    readonly name: "_instances";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5936;
                                    readonly src: "34124:10:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 7229;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "34135:6:42";
                                readonly memberName: "length";
                                readonly nodeType: "MemberAccess";
                                readonly src: "34124:17:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "34112:29:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7237;
                        readonly nodeType: "IfStatement";
                        readonly src: "34108:104:42";
                        readonly trueBody: {
                            readonly id: 7236;
                            readonly nodeType: "Block";
                            readonly src: "34143:69:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7231;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "34164:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7233;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "34183:16:42";
                                        readonly memberName: "EndIndexTooLarge";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11797;
                                        readonly src: "34164:35:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7234;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "34164:37:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7235;
                                readonly nodeType: "RevertStatement";
                                readonly src: "34157:44:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 7248;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 7238;
                                readonly name: "range";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7215;
                                readonly src: "34264:5:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                    readonly typeString: "address[] memory";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 7246;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 7244;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 7242;
                                            readonly name: "endIndex";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7211;
                                            readonly src: "34286:8:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "-";
                                        readonly rightExpression: {
                                            readonly id: 7243;
                                            readonly name: "startIndex";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7209;
                                            readonly src: "34297:10:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "34286:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "+";
                                    readonly rightExpression: {
                                        readonly hexValue: "31";
                                        readonly id: 7245;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "34310:1:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_1_by_1";
                                            readonly typeString: "int_const 1";
                                        };
                                        readonly value: "1";
                                    };
                                    readonly src: "34286:25:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 7241;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "NewExpression";
                                    readonly src: "34272:13:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$";
                                        readonly typeString: "function (uint256) pure returns (address[] memory)";
                                    };
                                    readonly typeName: {
                                        readonly baseType: {
                                            readonly id: 7239;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "34276:7:42";
                                            readonly stateMutability: "nonpayable";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly id: 7240;
                                        readonly nodeType: "ArrayTypeName";
                                        readonly src: "34276:9:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                            readonly typeString: "address[]";
                                        };
                                    };
                                };
                                readonly id: 7247;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "34272:40:42";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                    readonly typeString: "address[] memory";
                                };
                            };
                            readonly src: "34264:48:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                readonly typeString: "address[] memory";
                            };
                        };
                        readonly id: 7249;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "34264:48:42";
                    }, {
                        readonly body: {
                            readonly id: 7271;
                            readonly nodeType: "Block";
                            readonly src: "34371:104:42";
                            readonly statements: readonly [{
                                readonly id: 7270;
                                readonly nodeType: "UncheckedBlock";
                                readonly src: "34385:80:42";
                                readonly statements: readonly [{
                                    readonly expression: {
                                        readonly id: 7268;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftHandSide: {
                                            readonly baseExpression: {
                                                readonly id: 7260;
                                                readonly name: "range";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 7215;
                                                readonly src: "34413:5:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                                    readonly typeString: "address[] memory";
                                                };
                                            };
                                            readonly id: 7264;
                                            readonly indexExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                                readonly id: 7263;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly id: 7261;
                                                    readonly name: "i";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 7251;
                                                    readonly src: "34419:1:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: "-";
                                                readonly rightExpression: {
                                                    readonly id: 7262;
                                                    readonly name: "startIndex";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 7209;
                                                    readonly src: "34423:10:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly src: "34419:14:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: true;
                                            readonly nodeType: "IndexAccess";
                                            readonly src: "34413:21:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly nodeType: "Assignment";
                                        readonly operator: "=";
                                        readonly rightHandSide: {
                                            readonly baseExpression: {
                                                readonly id: 7265;
                                                readonly name: "_instances";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5936;
                                                readonly src: "34437:10:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                                    readonly typeString: "address[] storage ref";
                                                };
                                            };
                                            readonly id: 7267;
                                            readonly indexExpression: {
                                                readonly id: 7266;
                                                readonly name: "i";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 7251;
                                                readonly src: "34448:1:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "IndexAccess";
                                            readonly src: "34437:13:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly src: "34413:37:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    };
                                    readonly id: 7269;
                                    readonly nodeType: "ExpressionStatement";
                                    readonly src: "34413:37:42";
                                }];
                            }];
                        };
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 7256;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 7254;
                                readonly name: "i";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7251;
                                readonly src: "34351:1:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<=";
                            readonly rightExpression: {
                                readonly id: 7255;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7211;
                                readonly src: "34356:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "34351:13:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7272;
                        readonly initializationExpression: {
                            readonly assignments: readonly [7251];
                            readonly declarations: readonly [{
                                readonly constant: false;
                                readonly id: 7251;
                                readonly mutability: "mutable";
                                readonly name: "i";
                                readonly nameLocation: "34335:1:42";
                                readonly nodeType: "VariableDeclaration";
                                readonly scope: 7272;
                                readonly src: "34327:9:42";
                                readonly stateVariable: false;
                                readonly storageLocation: "default";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly typeName: {
                                    readonly id: 7250;
                                    readonly name: "uint256";
                                    readonly nodeType: "ElementaryTypeName";
                                    readonly src: "34327:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly visibility: "internal";
                            }];
                            readonly id: 7253;
                            readonly initialValue: {
                                readonly id: 7252;
                                readonly name: "startIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7209;
                                readonly src: "34339:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "VariableDeclarationStatement";
                            readonly src: "34327:22:42";
                        };
                        readonly loopExpression: {
                            readonly expression: {
                                readonly id: 7258;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "++";
                                readonly prefix: false;
                                readonly src: "34366:3:42";
                                readonly subExpression: {
                                    readonly id: 7257;
                                    readonly name: "i";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7251;
                                    readonly src: "34366:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 7259;
                            readonly nodeType: "ExpressionStatement";
                            readonly src: "34366:3:42";
                        };
                        readonly nodeType: "ForStatement";
                        readonly src: "34322:153:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7207;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "33521:284:42";
                    readonly text: "@notice Returns the _instances array according to specified indices.\n @param startIndex The starting index of the instances to get.\n @param endIndex The ending index of the instances to get.\n @return range The resulting custom portion of the _instances array.";
                };
                readonly functionSelector: "bc30e7a1";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getInstancesInRange";
                readonly nameLocation: "33819:19:42";
                readonly parameters: {
                    readonly id: 7212;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7209;
                        readonly mutability: "mutable";
                        readonly name: "startIndex";
                        readonly nameLocation: "33856:10:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7274;
                        readonly src: "33848:18:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7208;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "33848:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7211;
                        readonly mutability: "mutable";
                        readonly name: "endIndex";
                        readonly nameLocation: "33884:8:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7274;
                        readonly src: "33876:16:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7210;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "33876:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "33838:60:42";
                };
                readonly returnParameters: {
                    readonly id: 7216;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7215;
                        readonly mutability: "mutable";
                        readonly name: "range";
                        readonly nameLocation: "33939:5:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7274;
                        readonly src: "33922:22:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 7213;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "33922:7:42";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 7214;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "33922:9:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "33921:24:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7284;
                readonly nodeType: "FunctionDefinition";
                readonly src: "34666:127:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7283;
                    readonly nodeType: "Block";
                    readonly src: "34741:52:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly expression: {
                                readonly id: 7280;
                                readonly name: "_deployerCoordinators";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5922;
                                readonly src: "34758:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly id: 7281;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly memberLocation: "34780:6:42";
                            readonly memberName: "length";
                            readonly nodeType: "MemberAccess";
                            readonly src: "34758:28:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 7279;
                        readonly id: 7282;
                        readonly nodeType: "Return";
                        readonly src: "34751:35:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7275;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "34487:174:42";
                    readonly text: "@notice Gets the number of deployer coordinators registered in this\n         factory.\n @return The number of deployer coordinators deployed by this factory.";
                };
                readonly functionSelector: "e1b39c80";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getNumberOfDeployerCoordinators";
                readonly nameLocation: "34675:31:42";
                readonly parameters: {
                    readonly id: 7276;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "34706:2:42";
                };
                readonly returnParameters: {
                    readonly id: 7279;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7278;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7284;
                        readonly src: "34732:7:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7277;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "34732:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "34731:9:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7297;
                readonly nodeType: "FunctionDefinition";
                readonly src: "35001:152:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7296;
                    readonly nodeType: "Block";
                    readonly src: "35101:52:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly baseExpression: {
                                readonly id: 7292;
                                readonly name: "_deployerCoordinators";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5922;
                                readonly src: "35118:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                    readonly typeString: "address[] storage ref";
                                };
                            };
                            readonly id: 7294;
                            readonly indexExpression: {
                                readonly id: 7293;
                                readonly name: "index";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7287;
                                readonly src: "35140:5:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly isConstant: false;
                            readonly isLValue: true;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly nodeType: "IndexAccess";
                            readonly src: "35118:28:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly functionReturnParameters: 7291;
                        readonly id: 7295;
                        readonly nodeType: "Return";
                        readonly src: "35111:35:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7285;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "34799:197:42";
                    readonly text: "@notice Gets the deployer coordinator at the specified index.\n @param index The index of the deployer coordinator to get.\n @return The deployer coordinator at the specified index.";
                };
                readonly functionSelector: "fe3d5aeb";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getDeployerCoordinatorAtIndex";
                readonly nameLocation: "35010:29:42";
                readonly parameters: {
                    readonly id: 7288;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7287;
                        readonly mutability: "mutable";
                        readonly name: "index";
                        readonly nameLocation: "35057:5:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7297;
                        readonly src: "35049:13:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7286;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "35049:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "35039:29:42";
                };
                readonly returnParameters: {
                    readonly id: 7291;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7290;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7297;
                        readonly src: "35092:7:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 7289;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "35092:7:42";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "35091:9:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7365;
                readonly nodeType: "FunctionDefinition";
                readonly src: "35480:704:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7364;
                    readonly nodeType: "Block";
                    readonly src: "35627:557:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 7310;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 7308;
                                readonly name: "startIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7300;
                                readonly src: "35690:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 7309;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7302;
                                readonly src: "35703:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "35690:21:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7317;
                        readonly nodeType: "IfStatement";
                        readonly src: "35686:94:42";
                        readonly trueBody: {
                            readonly id: 7316;
                            readonly nodeType: "Block";
                            readonly src: "35713:67:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7311;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "35734:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7313;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "35753:14:42";
                                        readonly memberName: "InvalidIndexes";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11815;
                                        readonly src: "35734:33:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7314;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "35734:35:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7315;
                                readonly nodeType: "RevertStatement";
                                readonly src: "35727:42:42";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 7321;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 7318;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7302;
                                readonly src: "35793:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">=";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 7319;
                                    readonly name: "_deployerCoordinators";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5922;
                                    readonly src: "35805:21:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                        readonly typeString: "address[] storage ref";
                                    };
                                };
                                readonly id: 7320;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "35827:6:42";
                                readonly memberName: "length";
                                readonly nodeType: "MemberAccess";
                                readonly src: "35805:28:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "35793:40:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7328;
                        readonly nodeType: "IfStatement";
                        readonly src: "35789:115:42";
                        readonly trueBody: {
                            readonly id: 7327;
                            readonly nodeType: "Block";
                            readonly src: "35835:69:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7322;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "35856:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7324;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "35875:16:42";
                                        readonly memberName: "EndIndexTooLarge";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11797;
                                        readonly src: "35856:35:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7325;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "35856:37:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7326;
                                readonly nodeType: "RevertStatement";
                                readonly src: "35849:44:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 7339;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 7329;
                                readonly name: "range";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7306;
                                readonly src: "35956:5:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                    readonly typeString: "address[] memory";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 7337;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 7335;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 7333;
                                            readonly name: "endIndex";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7302;
                                            readonly src: "35978:8:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "-";
                                        readonly rightExpression: {
                                            readonly id: 7334;
                                            readonly name: "startIndex";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7300;
                                            readonly src: "35989:10:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "35978:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "+";
                                    readonly rightExpression: {
                                        readonly hexValue: "31";
                                        readonly id: 7336;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "36002:1:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_1_by_1";
                                            readonly typeString: "int_const 1";
                                        };
                                        readonly value: "1";
                                    };
                                    readonly src: "35978:25:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 7332;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "NewExpression";
                                    readonly src: "35964:13:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$";
                                        readonly typeString: "function (uint256) pure returns (address[] memory)";
                                    };
                                    readonly typeName: {
                                        readonly baseType: {
                                            readonly id: 7330;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "35968:7:42";
                                            readonly stateMutability: "nonpayable";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly id: 7331;
                                        readonly nodeType: "ArrayTypeName";
                                        readonly src: "35968:9:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                            readonly typeString: "address[]";
                                        };
                                    };
                                };
                                readonly id: 7338;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "35964:40:42";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                    readonly typeString: "address[] memory";
                                };
                            };
                            readonly src: "35956:48:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                readonly typeString: "address[] memory";
                            };
                        };
                        readonly id: 7340;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "35956:48:42";
                    }, {
                        readonly body: {
                            readonly id: 7362;
                            readonly nodeType: "Block";
                            readonly src: "36063:115:42";
                            readonly statements: readonly [{
                                readonly id: 7361;
                                readonly nodeType: "UncheckedBlock";
                                readonly src: "36077:91:42";
                                readonly statements: readonly [{
                                    readonly expression: {
                                        readonly id: 7359;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftHandSide: {
                                            readonly baseExpression: {
                                                readonly id: 7351;
                                                readonly name: "range";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 7306;
                                                readonly src: "36105:5:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                                    readonly typeString: "address[] memory";
                                                };
                                            };
                                            readonly id: 7355;
                                            readonly indexExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                                readonly id: 7354;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly id: 7352;
                                                    readonly name: "i";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 7342;
                                                    readonly src: "36111:1:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: "-";
                                                readonly rightExpression: {
                                                    readonly id: 7353;
                                                    readonly name: "startIndex";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 7300;
                                                    readonly src: "36115:10:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly src: "36111:14:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: true;
                                            readonly nodeType: "IndexAccess";
                                            readonly src: "36105:21:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly nodeType: "Assignment";
                                        readonly operator: "=";
                                        readonly rightHandSide: {
                                            readonly baseExpression: {
                                                readonly id: 7356;
                                                readonly name: "_deployerCoordinators";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5922;
                                                readonly src: "36129:21:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_array$_t_address_$dyn_storage";
                                                    readonly typeString: "address[] storage ref";
                                                };
                                            };
                                            readonly id: 7358;
                                            readonly indexExpression: {
                                                readonly id: 7357;
                                                readonly name: "i";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 7342;
                                                readonly src: "36151:1:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "IndexAccess";
                                            readonly src: "36129:24:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly src: "36105:48:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    };
                                    readonly id: 7360;
                                    readonly nodeType: "ExpressionStatement";
                                    readonly src: "36105:48:42";
                                }];
                            }];
                        };
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 7347;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 7345;
                                readonly name: "i";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7342;
                                readonly src: "36043:1:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<=";
                            readonly rightExpression: {
                                readonly id: 7346;
                                readonly name: "endIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7302;
                                readonly src: "36048:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "36043:13:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7363;
                        readonly initializationExpression: {
                            readonly assignments: readonly [7342];
                            readonly declarations: readonly [{
                                readonly constant: false;
                                readonly id: 7342;
                                readonly mutability: "mutable";
                                readonly name: "i";
                                readonly nameLocation: "36027:1:42";
                                readonly nodeType: "VariableDeclaration";
                                readonly scope: 7363;
                                readonly src: "36019:9:42";
                                readonly stateVariable: false;
                                readonly storageLocation: "default";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly typeName: {
                                    readonly id: 7341;
                                    readonly name: "uint256";
                                    readonly nodeType: "ElementaryTypeName";
                                    readonly src: "36019:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly visibility: "internal";
                            }];
                            readonly id: 7344;
                            readonly initialValue: {
                                readonly id: 7343;
                                readonly name: "startIndex";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7300;
                                readonly src: "36031:10:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "VariableDeclarationStatement";
                            readonly src: "36019:22:42";
                        };
                        readonly loopExpression: {
                            readonly expression: {
                                readonly id: 7349;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "++";
                                readonly prefix: false;
                                readonly src: "36058:3:42";
                                readonly subExpression: {
                                    readonly id: 7348;
                                    readonly name: "i";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7342;
                                    readonly src: "36058:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 7350;
                            readonly nodeType: "ExpressionStatement";
                            readonly src: "36058:3:42";
                        };
                        readonly nodeType: "ForStatement";
                        readonly src: "36014:164:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7298;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "35159:316:42";
                    readonly text: "@notice Returns the deployer coordinators with an index between the\n         starting and ending indexes (inclusive).\n @param startIndex The starting index (inclusive).\n @param endIndex The ending index (inclusive).\n @return range The deployer coordinators within the specified range.";
                };
                readonly functionSelector: "ec895f11";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "getDeployerCoordinatorsInRange";
                readonly nameLocation: "35489:30:42";
                readonly parameters: {
                    readonly id: 7303;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7300;
                        readonly mutability: "mutable";
                        readonly name: "startIndex";
                        readonly nameLocation: "35537:10:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7365;
                        readonly src: "35529:18:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7299;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "35529:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7302;
                        readonly mutability: "mutable";
                        readonly name: "endIndex";
                        readonly nameLocation: "35565:8:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7365;
                        readonly src: "35557:16:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7301;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "35557:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "35519:60:42";
                };
                readonly returnParameters: {
                    readonly id: 7307;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7306;
                        readonly mutability: "mutable";
                        readonly name: "range";
                        readonly nameLocation: "35620:5:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7365;
                        readonly src: "35603:22:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 7304;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "35603:7:42";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 7305;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "35603:9:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "35602:24:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "external";
            }, {
                readonly id: 7630;
                readonly nodeType: "FunctionDefinition";
                readonly src: "36581:4369:42";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 7629;
                    readonly nodeType: "Block";
                    readonly src: "36739:4211:42";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 7391;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 7384;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 7379;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 7376;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7369;
                                            readonly src: "36957:7:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 7377;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "36965:18:42";
                                        readonly memberName: "checkpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10875;
                                        readonly src: "36957:26:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 7378;
                                        readonly name: "minCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5827;
                                        readonly src: "36986:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "36957:50:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 7383;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 7380;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7369;
                                            readonly src: "37023:7:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 7381;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37031:18:42";
                                        readonly memberName: "checkpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10875;
                                        readonly src: "37023:26:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: ">";
                                    readonly rightExpression: {
                                        readonly id: 7382;
                                        readonly name: "maxCheckpointDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5830;
                                        readonly src: "37052:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "37023:50:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "36957:116:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 7390;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 7388;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 7385;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7369;
                                            readonly src: "37089:7:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 7386;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37097:18:42";
                                        readonly memberName: "checkpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10875;
                                        readonly src: "37089:26:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly id: 7387;
                                        readonly name: "checkpointDurationResolution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5824;
                                        readonly src: "37118:28:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "37089:57:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 7389;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "37150:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "37089:62:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "36957:194:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7398;
                        readonly nodeType: "IfStatement";
                        readonly src: "36940:300:42";
                        readonly trueBody: {
                            readonly id: 7397;
                            readonly nodeType: "Block";
                            readonly src: "37162:78:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7392;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "37183:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7394;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37202:25:42";
                                        readonly memberName: "InvalidCheckpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11800;
                                        readonly src: "37183:44:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7395;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "37183:46:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7396;
                                readonly nodeType: "RevertStatement";
                                readonly src: "37176:53:42";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 7415;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 7407;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 7402;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 7399;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7369;
                                            readonly src: "37455:7:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 7400;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37463:16:42";
                                        readonly memberName: "positionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10872;
                                        readonly src: "37455:24:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 7401;
                                        readonly name: "minPositionDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5833;
                                        readonly src: "37482:19:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "37455:46:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 7406;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 7403;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7369;
                                            readonly src: "37517:7:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 7404;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37525:16:42";
                                        readonly memberName: "positionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10872;
                                        readonly src: "37517:24:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: ">";
                                    readonly rightExpression: {
                                        readonly id: 7405;
                                        readonly name: "maxPositionDuration";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5836;
                                        readonly src: "37544:19:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "37517:46:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "37455:108:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 7414;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 7412;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 7408;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7369;
                                            readonly src: "37579:7:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 7409;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37587:16:42";
                                        readonly memberName: "positionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10872;
                                        readonly src: "37579:24:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "%";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 7410;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7369;
                                            readonly src: "37606:7:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 7411;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37614:18:42";
                                        readonly memberName: "checkpointDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10875;
                                        readonly src: "37606:26:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "37579:53:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 7413;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "37636:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "37579:58:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "37455:182:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7422;
                        readonly nodeType: "IfStatement";
                        readonly src: "37438:286:42";
                        readonly trueBody: {
                            readonly id: 7421;
                            readonly nodeType: "Block";
                            readonly src: "37648:76:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7416;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "37669:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7418;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "37688:23:42";
                                        readonly memberName: "InvalidPositionDuration";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11836;
                                        readonly src: "37669:42:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7419;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "37669:44:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7420;
                                readonly nodeType: "RevertStatement";
                                readonly src: "37662:51:42";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 7487;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 7480;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 7473;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                        readonly id: 7461;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                            readonly id: 7454;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                                readonly id: 7447;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly commonType: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                    readonly id: 7440;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly leftExpression: {
                                                        readonly commonType: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                        readonly id: 7428;
                                                        readonly isConstant: false;
                                                        readonly isLValue: false;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly leftExpression: {
                                                            readonly expression: {
                                                                readonly expression: {
                                                                    readonly id: 7423;
                                                                    readonly name: "_config";
                                                                    readonly nodeType: "Identifier";
                                                                    readonly overloadedDeclarations: readonly [];
                                                                    readonly referencedDeclaration: 7369;
                                                                    readonly src: "37933:7:42";
                                                                    readonly typeDescriptions: {
                                                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                                    };
                                                                };
                                                                readonly id: 7424;
                                                                readonly isConstant: false;
                                                                readonly isLValue: true;
                                                                readonly isPure: false;
                                                                readonly lValueRequested: false;
                                                                readonly memberLocation: "37941:4:42";
                                                                readonly memberName: "fees";
                                                                readonly nodeType: "MemberAccess";
                                                                readonly referencedDeclaration: 10891;
                                                                readonly src: "37933:12:42";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                                    readonly typeString: "struct IHyperdrive.Fees memory";
                                                                };
                                                            };
                                                            readonly id: 7425;
                                                            readonly isConstant: false;
                                                            readonly isLValue: true;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "37946:5:42";
                                                            readonly memberName: "curve";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 10843;
                                                            readonly src: "37933:18:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly nodeType: "BinaryOperation";
                                                        readonly operator: ">";
                                                        readonly rightExpression: {
                                                            readonly expression: {
                                                                readonly id: 7426;
                                                                readonly name: "_maxFees";
                                                                readonly nodeType: "Identifier";
                                                                readonly overloadedDeclarations: readonly [];
                                                                readonly referencedDeclaration: 5856;
                                                                readonly src: "37954:8:42";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                                };
                                                            };
                                                            readonly id: 7427;
                                                            readonly isConstant: false;
                                                            readonly isLValue: true;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "37963:5:42";
                                                            readonly memberName: "curve";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 10843;
                                                            readonly src: "37954:14:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly src: "37933:35:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_bool";
                                                            readonly typeString: "bool";
                                                        };
                                                    };
                                                    readonly nodeType: "BinaryOperation";
                                                    readonly operator: "||";
                                                    readonly rightExpression: {
                                                        readonly commonType: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                        readonly id: 7439;
                                                        readonly isConstant: false;
                                                        readonly isLValue: false;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly leftExpression: {
                                                            readonly arguments: readonly [{
                                                                readonly hexValue: "333635";
                                                                readonly id: 7433;
                                                                readonly isConstant: false;
                                                                readonly isLValue: false;
                                                                readonly isPure: true;
                                                                readonly kind: "number";
                                                                readonly lValueRequested: false;
                                                                readonly nodeType: "Literal";
                                                                readonly src: "38073:8:42";
                                                                readonly subdenomination: "days";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_rational_31536000_by_1";
                                                                    readonly typeString: "int_const 31536000";
                                                                };
                                                                readonly value: "365";
                                                            }, {
                                                                readonly expression: {
                                                                    readonly id: 7434;
                                                                    readonly name: "_config";
                                                                    readonly nodeType: "Identifier";
                                                                    readonly overloadedDeclarations: readonly [];
                                                                    readonly referencedDeclaration: 7369;
                                                                    readonly src: "38083:7:42";
                                                                    readonly typeDescriptions: {
                                                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                                    };
                                                                };
                                                                readonly id: 7435;
                                                                readonly isConstant: false;
                                                                readonly isLValue: true;
                                                                readonly isPure: false;
                                                                readonly lValueRequested: false;
                                                                readonly memberLocation: "38091:16:42";
                                                                readonly memberName: "positionDuration";
                                                                readonly nodeType: "MemberAccess";
                                                                readonly referencedDeclaration: 10872;
                                                                readonly src: "38083:24:42";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_uint256";
                                                                    readonly typeString: "uint256";
                                                                };
                                                            }];
                                                            readonly expression: {
                                                                readonly argumentTypes: readonly [{
                                                                    readonly typeIdentifier: "t_rational_31536000_by_1";
                                                                    readonly typeString: "int_const 31536000";
                                                                }, {
                                                                    readonly typeIdentifier: "t_uint256";
                                                                    readonly typeString: "uint256";
                                                                }];
                                                                readonly expression: {
                                                                    readonly expression: {
                                                                        readonly expression: {
                                                                            readonly id: 7429;
                                                                            readonly name: "_config";
                                                                            readonly nodeType: "Identifier";
                                                                            readonly overloadedDeclarations: readonly [];
                                                                            readonly referencedDeclaration: 7369;
                                                                            readonly src: "38044:7:42";
                                                                            readonly typeDescriptions: {
                                                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                                            };
                                                                        };
                                                                        readonly id: 7430;
                                                                        readonly isConstant: false;
                                                                        readonly isLValue: true;
                                                                        readonly isPure: false;
                                                                        readonly lValueRequested: false;
                                                                        readonly memberLocation: "38052:4:42";
                                                                        readonly memberName: "fees";
                                                                        readonly nodeType: "MemberAccess";
                                                                        readonly referencedDeclaration: 10891;
                                                                        readonly src: "38044:12:42";
                                                                        readonly typeDescriptions: {
                                                                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                                                        };
                                                                    };
                                                                    readonly id: 7431;
                                                                    readonly isConstant: false;
                                                                    readonly isLValue: true;
                                                                    readonly isPure: false;
                                                                    readonly lValueRequested: false;
                                                                    readonly memberLocation: "38057:4:42";
                                                                    readonly memberName: "flat";
                                                                    readonly nodeType: "MemberAccess";
                                                                    readonly referencedDeclaration: 10846;
                                                                    readonly src: "38044:17:42";
                                                                    readonly typeDescriptions: {
                                                                        readonly typeIdentifier: "t_uint256";
                                                                        readonly typeString: "uint256";
                                                                    };
                                                                };
                                                                readonly id: 7432;
                                                                readonly isConstant: false;
                                                                readonly isLValue: false;
                                                                readonly isPure: false;
                                                                readonly lValueRequested: false;
                                                                readonly memberLocation: "38062:10:42";
                                                                readonly memberName: "mulDivDown";
                                                                readonly nodeType: "MemberAccess";
                                                                readonly referencedDeclaration: 18834;
                                                                readonly src: "38044:28:42";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                                                    readonly typeString: "function (uint256,uint256,uint256) pure returns (uint256)";
                                                                };
                                                            };
                                                            readonly id: 7436;
                                                            readonly isConstant: false;
                                                            readonly isLValue: false;
                                                            readonly isPure: false;
                                                            readonly kind: "functionCall";
                                                            readonly lValueRequested: false;
                                                            readonly nameLocations: readonly [];
                                                            readonly names: readonly [];
                                                            readonly nodeType: "FunctionCall";
                                                            readonly src: "38044:64:42";
                                                            readonly tryCall: false;
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly nodeType: "BinaryOperation";
                                                        readonly operator: ">";
                                                        readonly rightExpression: {
                                                            readonly expression: {
                                                                readonly id: 7437;
                                                                readonly name: "_maxFees";
                                                                readonly nodeType: "Identifier";
                                                                readonly overloadedDeclarations: readonly [];
                                                                readonly referencedDeclaration: 5856;
                                                                readonly src: "38123:8:42";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                                };
                                                            };
                                                            readonly id: 7438;
                                                            readonly isConstant: false;
                                                            readonly isLValue: true;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "38132:4:42";
                                                            readonly memberName: "flat";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 10846;
                                                            readonly src: "38123:13:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_uint256";
                                                                readonly typeString: "uint256";
                                                            };
                                                        };
                                                        readonly src: "38044:92:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_bool";
                                                            readonly typeString: "bool";
                                                        };
                                                    };
                                                    readonly src: "37933:203:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: "||";
                                                readonly rightExpression: {
                                                    readonly commonType: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                    readonly id: 7446;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly leftExpression: {
                                                        readonly expression: {
                                                            readonly expression: {
                                                                readonly id: 7441;
                                                                readonly name: "_config";
                                                                readonly nodeType: "Identifier";
                                                                readonly overloadedDeclarations: readonly [];
                                                                readonly referencedDeclaration: 7369;
                                                                readonly src: "38152:7:42";
                                                                readonly typeDescriptions: {
                                                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                                };
                                                            };
                                                            readonly id: 7442;
                                                            readonly isConstant: false;
                                                            readonly isLValue: true;
                                                            readonly isPure: false;
                                                            readonly lValueRequested: false;
                                                            readonly memberLocation: "38160:4:42";
                                                            readonly memberName: "fees";
                                                            readonly nodeType: "MemberAccess";
                                                            readonly referencedDeclaration: 10891;
                                                            readonly src: "38152:12:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                                            };
                                                        };
                                                        readonly id: 7443;
                                                        readonly isConstant: false;
                                                        readonly isLValue: true;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly memberLocation: "38165:12:42";
                                                        readonly memberName: "governanceLP";
                                                        readonly nodeType: "MemberAccess";
                                                        readonly referencedDeclaration: 10849;
                                                        readonly src: "38152:25:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                    };
                                                    readonly nodeType: "BinaryOperation";
                                                    readonly operator: ">";
                                                    readonly rightExpression: {
                                                        readonly expression: {
                                                            readonly id: 7444;
                                                            readonly name: "_maxFees";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 5856;
                                                            readonly src: "38180:8:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                            };
                                                        };
                                                        readonly id: 7445;
                                                        readonly isConstant: false;
                                                        readonly isLValue: true;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly memberLocation: "38189:12:42";
                                                        readonly memberName: "governanceLP";
                                                        readonly nodeType: "MemberAccess";
                                                        readonly referencedDeclaration: 10849;
                                                        readonly src: "38180:21:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                    };
                                                    readonly src: "38152:49:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bool";
                                                        readonly typeString: "bool";
                                                    };
                                                };
                                                readonly src: "37933:268:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "||";
                                            readonly rightExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                                readonly id: 7453;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly expression: {
                                                        readonly expression: {
                                                            readonly id: 7448;
                                                            readonly name: "_config";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 7369;
                                                            readonly src: "38217:7:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                            };
                                                        };
                                                        readonly id: 7449;
                                                        readonly isConstant: false;
                                                        readonly isLValue: true;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly memberLocation: "38225:4:42";
                                                        readonly memberName: "fees";
                                                        readonly nodeType: "MemberAccess";
                                                        readonly referencedDeclaration: 10891;
                                                        readonly src: "38217:12:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                                        };
                                                    };
                                                    readonly id: 7450;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "38230:16:42";
                                                    readonly memberName: "governanceZombie";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 10852;
                                                    readonly src: "38217:29:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: ">";
                                                readonly rightExpression: {
                                                    readonly expression: {
                                                        readonly id: 7451;
                                                        readonly name: "_maxFees";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 5856;
                                                        readonly src: "38249:8:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                                            readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                        };
                                                    };
                                                    readonly id: 7452;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "38258:16:42";
                                                    readonly memberName: "governanceZombie";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 10852;
                                                    readonly src: "38249:25:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly src: "38217:57:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                            };
                                            readonly src: "37933:341:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "||";
                                        readonly rightExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                            readonly id: 7460;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly expression: {
                                                    readonly expression: {
                                                        readonly id: 7455;
                                                        readonly name: "_config";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 7369;
                                                        readonly src: "38290:7:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                        };
                                                    };
                                                    readonly id: 7456;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "38298:4:42";
                                                    readonly memberName: "fees";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 10891;
                                                    readonly src: "38290:12:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                        readonly typeString: "struct IHyperdrive.Fees memory";
                                                    };
                                                };
                                                readonly id: 7457;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "38303:5:42";
                                                readonly memberName: "curve";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 10843;
                                                readonly src: "38290:18:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "<";
                                            readonly rightExpression: {
                                                readonly expression: {
                                                    readonly id: 7458;
                                                    readonly name: "_minFees";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5852;
                                                    readonly src: "38311:8:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                                        readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                    };
                                                };
                                                readonly id: 7459;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "38320:5:42";
                                                readonly memberName: "curve";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 10843;
                                                readonly src: "38311:14:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly src: "38290:35:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly src: "37933:392:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 7472;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly arguments: readonly [{
                                                readonly hexValue: "333635";
                                                readonly id: 7466;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: true;
                                                readonly kind: "number";
                                                readonly lValueRequested: false;
                                                readonly nodeType: "Literal";
                                                readonly src: "38426:8:42";
                                                readonly subdenomination: "days";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_rational_31536000_by_1";
                                                    readonly typeString: "int_const 31536000";
                                                };
                                                readonly value: "365";
                                            }, {
                                                readonly expression: {
                                                    readonly id: 7467;
                                                    readonly name: "_config";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 7369;
                                                    readonly src: "38436:7:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                    };
                                                };
                                                readonly id: 7468;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "38444:16:42";
                                                readonly memberName: "positionDuration";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 10872;
                                                readonly src: "38436:24:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            }];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [{
                                                    readonly typeIdentifier: "t_rational_31536000_by_1";
                                                    readonly typeString: "int_const 31536000";
                                                }, {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                }];
                                                readonly expression: {
                                                    readonly expression: {
                                                        readonly expression: {
                                                            readonly id: 7462;
                                                            readonly name: "_config";
                                                            readonly nodeType: "Identifier";
                                                            readonly overloadedDeclarations: readonly [];
                                                            readonly referencedDeclaration: 7369;
                                                            readonly src: "38399:7:42";
                                                            readonly typeDescriptions: {
                                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                            };
                                                        };
                                                        readonly id: 7463;
                                                        readonly isConstant: false;
                                                        readonly isLValue: true;
                                                        readonly isPure: false;
                                                        readonly lValueRequested: false;
                                                        readonly memberLocation: "38407:4:42";
                                                        readonly memberName: "fees";
                                                        readonly nodeType: "MemberAccess";
                                                        readonly referencedDeclaration: 10891;
                                                        readonly src: "38399:12:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                                        };
                                                    };
                                                    readonly id: 7464;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "38412:4:42";
                                                    readonly memberName: "flat";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 10846;
                                                    readonly src: "38399:17:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                };
                                                readonly id: 7465;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "38417:8:42";
                                                readonly memberName: "mulDivUp";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 18884;
                                                readonly src: "38399:26:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                                    readonly typeString: "function (uint256,uint256,uint256) pure returns (uint256)";
                                                };
                                            };
                                            readonly id: 7469;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "38399:62:42";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "<";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly id: 7470;
                                                readonly name: "_minFees";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5852;
                                                readonly src: "38476:8:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                                    readonly typeString: "struct IHyperdrive.Fees storage ref";
                                                };
                                            };
                                            readonly id: 7471;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "38485:4:42";
                                            readonly memberName: "flat";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10846;
                                            readonly src: "38476:13:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "38399:90:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "37933:556:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 7479;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly expression: {
                                                readonly id: 7474;
                                                readonly name: "_config";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 7369;
                                                readonly src: "38505:7:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                };
                                            };
                                            readonly id: 7475;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "38513:4:42";
                                            readonly memberName: "fees";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10891;
                                            readonly src: "38505:12:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.Fees memory";
                                            };
                                        };
                                        readonly id: 7476;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "38518:12:42";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10849;
                                        readonly src: "38505:25:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly expression: {
                                            readonly id: 7477;
                                            readonly name: "_minFees";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5852;
                                            readonly src: "38533:8:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                                readonly typeString: "struct IHyperdrive.Fees storage ref";
                                            };
                                        };
                                        readonly id: 7478;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "38542:12:42";
                                        readonly memberName: "governanceLP";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10849;
                                        readonly src: "38533:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "38505:49:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "37933:621:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 7486;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly expression: {
                                            readonly id: 7481;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7369;
                                            readonly src: "38570:7:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 7482;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "38578:4:42";
                                        readonly memberName: "fees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10891;
                                        readonly src: "38570:12:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$10853_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.Fees memory";
                                        };
                                    };
                                    readonly id: 7483;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "38583:16:42";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10852;
                                    readonly src: "38570:29:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly expression: {
                                        readonly id: 7484;
                                        readonly name: "_minFees";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5852;
                                        readonly src: "38602:8:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_Fees_$10853_storage";
                                            readonly typeString: "struct IHyperdrive.Fees storage ref";
                                        };
                                    };
                                    readonly id: 7485;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "38611:16:42";
                                    readonly memberName: "governanceZombie";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10852;
                                    readonly src: "38602:25:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "38570:57:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "37933:694:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7494;
                        readonly nodeType: "IfStatement";
                        readonly src: "37916:786:42";
                        readonly trueBody: {
                            readonly id: 7493;
                            readonly nodeType: "Block";
                            readonly src: "38638:64:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7488;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "38659:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7490;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "38678:11:42";
                                        readonly memberName: "InvalidFees";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11812;
                                        readonly src: "38659:30:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7491;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "38659:32:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7492;
                                readonly nodeType: "RevertStatement";
                                readonly src: "38652:39:42";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 7501;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 7497;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 7495;
                                    readonly name: "_fixedAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7371;
                                    readonly src: "38816:9:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly id: 7496;
                                    readonly name: "minFixedAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5839;
                                    readonly src: "38828:11:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "38816:23:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 7500;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 7498;
                                    readonly name: "_fixedAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7371;
                                    readonly src: "38843:9:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly id: 7499;
                                    readonly name: "maxFixedAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 5842;
                                    readonly src: "38855:11:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "38843:23:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "38816:50:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7508;
                        readonly nodeType: "IfStatement";
                        readonly src: "38812:124:42";
                        readonly trueBody: {
                            readonly id: 7507;
                            readonly nodeType: "Block";
                            readonly src: "38868:68:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7502;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "38889:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7504;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "38908:15:42";
                                        readonly memberName: "InvalidFixedAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11845;
                                        readonly src: "38889:34:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7505;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "38889:36:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7506;
                                readonly nodeType: "RevertStatement";
                                readonly src: "38882:43:42";
                            }];
                        };
                    }, {
                        readonly assignments: readonly [7510];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 7510;
                            readonly mutability: "mutable";
                            readonly name: "lowerBound";
                            readonly nameLocation: "39136:10:42";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 7629;
                            readonly src: "39128:18:42";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 7509;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "39128:7:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 7518;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly hexValue: "302e303035653138";
                                readonly id: 7516;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "39177:8:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_5000000000000000_by_1";
                                    readonly typeString: "int_const 5000000000000000";
                                };
                                readonly value: "0.005e18";
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_rational_5000000000000000_by_1";
                                    readonly typeString: "int_const 5000000000000000";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "32653138";
                                        readonly id: 7513;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "39167:4:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_2000000000000000000_by_1";
                                            readonly typeString: "int_const 2000000000000000000";
                                        };
                                        readonly value: "2e18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_rational_2000000000000000000_by_1";
                                            readonly typeString: "int_const 2000000000000000000";
                                        }];
                                        readonly expression: {
                                            readonly id: 7511;
                                            readonly name: "_fixedAPR";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7371;
                                            readonly src: "39149:9:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly id: 7512;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "39159:7:42";
                                        readonly memberName: "divDown";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 18870;
                                        readonly src: "39149:17:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                            readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                        };
                                    };
                                    readonly id: 7514;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "39149:23:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly id: 7515;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "39173:3:42";
                                readonly memberName: "max";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 19535;
                                readonly src: "39149:27:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 7517;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "39149:37:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "39128:58:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 7537;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 7524;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 7519;
                                    readonly name: "_timeStretchAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7373;
                                    readonly src: "39213:15:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "<";
                                readonly rightExpression: {
                                    readonly arguments: readonly [{
                                        readonly id: 7522;
                                        readonly name: "lowerBound";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 7510;
                                        readonly src: "39253:10:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly id: 7520;
                                            readonly name: "minTimeStretchAPR";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5845;
                                            readonly src: "39231:17:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly id: 7521;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "39249:3:42";
                                        readonly memberName: "max";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 19535;
                                        readonly src: "39231:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                            readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                        };
                                    };
                                    readonly id: 7523;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "39231:33:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "39213:51:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 7536;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 7525;
                                    readonly name: "_timeStretchAPR";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7373;
                                    readonly src: "39280:15:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: ">";
                                readonly rightExpression: {
                                    readonly arguments: readonly [{
                                        readonly arguments: readonly [{
                                            readonly hexValue: "32653138";
                                            readonly id: 7533;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "39366:4:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_2000000000000000000_by_1";
                                                readonly typeString: "int_const 2000000000000000000";
                                            };
                                            readonly value: "2e18";
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_rational_2000000000000000000_by_1";
                                                readonly typeString: "int_const 2000000000000000000";
                                            }];
                                            readonly expression: {
                                                readonly arguments: readonly [{
                                                    readonly id: 7530;
                                                    readonly name: "lowerBound";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 7510;
                                                    readonly src: "39346:10:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    };
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_uint256";
                                                        readonly typeString: "uint256";
                                                    }];
                                                    readonly expression: {
                                                        readonly id: 7528;
                                                        readonly name: "_fixedAPR";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 7371;
                                                        readonly src: "39332:9:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_uint256";
                                                            readonly typeString: "uint256";
                                                        };
                                                    };
                                                    readonly id: 7529;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "39342:3:42";
                                                    readonly memberName: "max";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 19535;
                                                    readonly src: "39332:13:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                                        readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                                    };
                                                };
                                                readonly id: 7531;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly kind: "functionCall";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "39332:25:42";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_uint256";
                                                    readonly typeString: "uint256";
                                                };
                                            };
                                            readonly id: 7532;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "39358:7:42";
                                            readonly memberName: "mulDown";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 18852;
                                            readonly src: "39332:33:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                                readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                            };
                                        };
                                        readonly id: 7534;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "functionCall";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "39332:39:42";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly id: 7526;
                                            readonly name: "maxTimeStretchAPR";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5848;
                                            readonly src: "39310:17:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly id: 7527;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "39328:3:42";
                                        readonly memberName: "min";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 19517;
                                        readonly src: "39310:21:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                            readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                        };
                                    };
                                    readonly id: 7535;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "39310:62:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly src: "39280:92:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "39213:159:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7544;
                        readonly nodeType: "IfStatement";
                        readonly src: "39196:261:42";
                        readonly trueBody: {
                            readonly id: 7543;
                            readonly nodeType: "Block";
                            readonly src: "39383:74:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7538;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "39404:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7540;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "39423:21:42";
                                        readonly memberName: "InvalidTimeStretchAPR";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11854;
                                        readonly src: "39404:40:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7541;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "39404:42:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7542;
                                readonly nodeType: "RevertStatement";
                                readonly src: "39397:49:42";
                            }];
                        };
                    }, {
                        readonly assignments: readonly [7546];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 7546;
                            readonly mutability: "mutable";
                            readonly name: "timeStretch";
                            readonly nameLocation: "39474:11:42";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 7629;
                            readonly src: "39466:19:42";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 7545;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "39466:7:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 7553;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 7549;
                                readonly name: "_timeStretchAPR";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7373;
                                readonly src: "39537:15:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly expression: {
                                    readonly id: 7550;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7369;
                                    readonly src: "39566:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 7551;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "39574:16:42";
                                readonly memberName: "positionDuration";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10872;
                                readonly src: "39566:24:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 7547;
                                    readonly name: "HyperdriveMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 20320;
                                    readonly src: "39488:14:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_HyperdriveMath_$20320_$";
                                        readonly typeString: "type(library HyperdriveMath)";
                                    };
                                };
                                readonly id: 7548;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "39503:20:42";
                                readonly memberName: "calculateTimeStretch";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 19664;
                                readonly src: "39488:35:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 7552;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "39488:112:42";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "39466:134:42";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 7582;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 7577;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                    readonly id: 7572;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                        readonly id: 7567;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                            readonly id: 7562;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_address";
                                                    readonly typeString: "address";
                                                };
                                                readonly id: 7557;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly expression: {
                                                        readonly id: 7554;
                                                        readonly name: "_config";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 7369;
                                                        readonly src: "39973:7:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                        };
                                                    };
                                                    readonly id: 7555;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "39981:13:42";
                                                    readonly memberName: "linkerFactory";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 10860;
                                                    readonly src: "39973:21:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: "!=";
                                                readonly rightExpression: {
                                                    readonly id: 7556;
                                                    readonly name: "linkerFactory";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5812;
                                                    readonly src: "39998:13:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_address";
                                                        readonly typeString: "address";
                                                    };
                                                };
                                                readonly src: "39973:38:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "||";
                                            readonly rightExpression: {
                                                readonly commonType: {
                                                    readonly typeIdentifier: "t_bytes32";
                                                    readonly typeString: "bytes32";
                                                };
                                                readonly id: 7561;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly leftExpression: {
                                                    readonly expression: {
                                                        readonly id: 7558;
                                                        readonly name: "_config";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: 7369;
                                                        readonly src: "40027:7:42";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                        };
                                                    };
                                                    readonly id: 7559;
                                                    readonly isConstant: false;
                                                    readonly isLValue: true;
                                                    readonly isPure: false;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "40035:14:42";
                                                    readonly memberName: "linkerCodeHash";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly referencedDeclaration: 10863;
                                                    readonly src: "40027:22:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bytes32";
                                                        readonly typeString: "bytes32";
                                                    };
                                                };
                                                readonly nodeType: "BinaryOperation";
                                                readonly operator: "!=";
                                                readonly rightExpression: {
                                                    readonly id: 7560;
                                                    readonly name: "linkerCodeHash";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 5815;
                                                    readonly src: "40053:14:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_bytes32";
                                                        readonly typeString: "bytes32";
                                                    };
                                                };
                                                readonly src: "40027:40:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bool";
                                                    readonly typeString: "bool";
                                                };
                                            };
                                            readonly src: "39973:94:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "||";
                                        readonly rightExpression: {
                                            readonly commonType: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                            readonly id: 7566;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly leftExpression: {
                                                readonly expression: {
                                                    readonly id: 7563;
                                                    readonly name: "_config";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 7369;
                                                    readonly src: "40083:7:42";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                    };
                                                };
                                                readonly id: 7564;
                                                readonly isConstant: false;
                                                readonly isLValue: true;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "40091:12:42";
                                                readonly memberName: "feeCollector";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 10884;
                                                readonly src: "40083:20:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_address";
                                                    readonly typeString: "address";
                                                };
                                            };
                                            readonly nodeType: "BinaryOperation";
                                            readonly operator: "!=";
                                            readonly rightExpression: {
                                                readonly id: 7565;
                                                readonly name: "feeCollector";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 5818;
                                                readonly src: "40107:12:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_address";
                                                    readonly typeString: "address";
                                                };
                                            };
                                            readonly src: "40083:36:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly src: "39973:146:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "||";
                                    readonly rightExpression: {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                        readonly id: 7571;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly expression: {
                                                readonly id: 7568;
                                                readonly name: "_config";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 7369;
                                                readonly src: "40135:7:42";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                                };
                                            };
                                            readonly id: 7569;
                                            readonly isConstant: false;
                                            readonly isLValue: true;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "40143:14:42";
                                            readonly memberName: "sweepCollector";
                                            readonly nodeType: "MemberAccess";
                                            readonly referencedDeclaration: 10887;
                                            readonly src: "40135:22:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "!=";
                                        readonly rightExpression: {
                                            readonly id: 7570;
                                            readonly name: "sweepCollector";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 5821;
                                            readonly src: "40161:14:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_address";
                                                readonly typeString: "address";
                                            };
                                        };
                                        readonly src: "40135:40:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly src: "39973:202:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "||";
                                readonly rightExpression: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                    readonly id: 7576;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 7573;
                                            readonly name: "_config";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7369;
                                            readonly src: "40191:7:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                                readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                            };
                                        };
                                        readonly id: 7574;
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "40199:10:42";
                                        readonly memberName: "governance";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10881;
                                        readonly src: "40191:18:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "!=";
                                    readonly rightExpression: {
                                        readonly id: 7575;
                                        readonly name: "hyperdriveGovernance";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 5809;
                                        readonly src: "40213:20:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    };
                                    readonly src: "40191:42:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "39973:260:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "||";
                            readonly rightExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly id: 7581;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly expression: {
                                        readonly id: 7578;
                                        readonly name: "_config";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 7369;
                                        readonly src: "40249:7:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                        };
                                    };
                                    readonly id: 7579;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "40257:11:42";
                                    readonly memberName: "timeStretch";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10878;
                                    readonly src: "40249:19:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "!=";
                                readonly rightExpression: {
                                    readonly hexValue: "30";
                                    readonly id: 7580;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "number";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "40272:1:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_rational_0_by_1";
                                        readonly typeString: "int_const 0";
                                    };
                                    readonly value: "0";
                                };
                                readonly src: "40249:24:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "39973:300:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 7589;
                        readonly nodeType: "IfStatement";
                        readonly src: "39956:400:42";
                        readonly trueBody: {
                            readonly id: 7588;
                            readonly nodeType: "Block";
                            readonly src: "40284:72:42";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 7583;
                                            readonly name: "IHyperdriveFactory";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11864;
                                            readonly src: "40305:18:42";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveFactory_$11864_$";
                                                readonly typeString: "type(contract IHyperdriveFactory)";
                                            };
                                        };
                                        readonly id: 7585;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "40324:19:42";
                                        readonly memberName: "InvalidDeployConfig";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11806;
                                        readonly src: "40305:38:42";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 7586;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "40305:40:42";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 7587;
                                readonly nodeType: "RevertStatement";
                                readonly src: "40298:47:42";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 7594;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 7590;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7369;
                                    readonly src: "40676:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 7592;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "40684:13:42";
                                readonly memberName: "linkerFactory";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10860;
                                readonly src: "40676:21:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 7593;
                                readonly name: "linkerFactory";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5812;
                                readonly src: "40700:13:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "40676:37:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 7595;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "40676:37:42";
                    }, {
                        readonly expression: {
                            readonly id: 7600;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 7596;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7369;
                                    readonly src: "40723:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 7598;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "40731:14:42";
                                readonly memberName: "linkerCodeHash";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10863;
                                readonly src: "40723:22:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 7599;
                                readonly name: "linkerCodeHash";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5815;
                                readonly src: "40748:14:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "40723:39:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                        };
                        readonly id: 7601;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "40723:39:42";
                    }, {
                        readonly expression: {
                            readonly id: 7606;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 7602;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7369;
                                    readonly src: "40772:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 7604;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "40780:12:42";
                                readonly memberName: "feeCollector";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10884;
                                readonly src: "40772:20:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 7605;
                                readonly name: "feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5818;
                                readonly src: "40795:12:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "40772:35:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 7607;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "40772:35:42";
                    }, {
                        readonly expression: {
                            readonly id: 7612;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 7608;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7369;
                                    readonly src: "40817:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 7610;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "40825:14:42";
                                readonly memberName: "sweepCollector";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10887;
                                readonly src: "40817:22:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 7611;
                                readonly name: "sweepCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 5821;
                                readonly src: "40842:14:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "40817:39:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 7613;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "40817:39:42";
                    }, {
                        readonly expression: {
                            readonly id: 7621;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 7614;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7369;
                                    readonly src: "40866:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 7616;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "40874:10:42";
                                readonly memberName: "governance";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10881;
                                readonly src: "40866:18:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly id: 7619;
                                    readonly name: "this";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -28;
                                    readonly src: "40895:4:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_HyperdriveFactory_$7631";
                                        readonly typeString: "contract HyperdriveFactory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_HyperdriveFactory_$7631";
                                        readonly typeString: "contract HyperdriveFactory";
                                    }];
                                    readonly id: 7618;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "40887:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 7617;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "40887:7:42";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 7620;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "40887:13:42";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "40866:34:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 7622;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "40866:34:42";
                    }, {
                        readonly expression: {
                            readonly id: 7627;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly expression: {
                                    readonly id: 7623;
                                    readonly name: "_config";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 7369;
                                    readonly src: "40910:7:42";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 7625;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: true;
                                readonly memberLocation: "40918:11:42";
                                readonly memberName: "timeStretch";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10878;
                                readonly src: "40910:19:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 7626;
                                readonly name: "timeStretch";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 7546;
                                readonly src: "40932:11:42";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "40910:33:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 7628;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "40910:33:42";
                    }];
                };
                readonly documentation: {
                    readonly id: 7366;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "36190:386:42";
                    readonly text: "@dev Overrides the config values to the default values set by\n      governance. In the process of overriding these parameters, this\n      verifies that the specified config is valid.\n @param _config The config to override.\n @param _fixedAPR The fixed APR to use in the override.\n @param _timeStretchAPR The time stretch APR to use in the override.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_overrideConfig";
                readonly nameLocation: "36590:15:42";
                readonly parameters: {
                    readonly id: 7374;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 7369;
                        readonly mutability: "mutable";
                        readonly name: "_config";
                        readonly nameLocation: "36651:7:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7630;
                        readonly src: "36615:43:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 7368;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 7367;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["36615:11:42", "36627:16:42"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10892;
                                readonly src: "36615:28:42";
                            };
                            readonly referencedDeclaration: 10892;
                            readonly src: "36615:28:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10892_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7371;
                        readonly mutability: "mutable";
                        readonly name: "_fixedAPR";
                        readonly nameLocation: "36676:9:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7630;
                        readonly src: "36668:17:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7370;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "36668:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 7373;
                        readonly mutability: "mutable";
                        readonly name: "_timeStretchAPR";
                        readonly nameLocation: "36703:15:42";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 7630;
                        readonly src: "36695:23:42";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 7372;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "36695:7:42";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "36605:119:42";
                };
                readonly returnParameters: {
                    readonly id: 7375;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "36739:0:42";
                };
                readonly scope: 7631;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 5795;
                    readonly name: "IHyperdriveFactory";
                    readonly nameLocations: readonly ["925:18:42"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 11864;
                    readonly src: "925:18:42";
                };
                readonly id: 5796;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "925:18:42";
            }];
            readonly canonicalName: "HyperdriveFactory";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 5794;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "487:408:42";
                readonly text: "@author DELV\n @title HyperdriveFactory\n @notice Deploys hyperdrive instances and initializes them. It also holds a\n         registry of all deployed hyperdrive instances.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [7631, 11864];
            readonly name: "HyperdriveFactory";
            readonly nameLocation: "904:17:42";
            readonly scope: 7632;
            readonly usedErrors: readonly [11050, 11106, 11788, 11791, 11794, 11797, 11800, 11803, 11806, 11809, 11812, 11815, 11818, 11821, 11824, 11827, 11830, 11833, 11836, 11839, 11842, 11845, 11848, 11851, 11854, 11857, 11860, 11863];
            readonly usedEvents: readonly [11682, 11687, 11692, 11698, 11703, 11708, 11713, 11718, 11723, 11728, 11733, 11738, 11743, 11748, 11753, 11758, 11763, 11768, 11773, 11779, 11785];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 42;
};
//# sourceMappingURL=HyperdriveFactory.d.ts.map