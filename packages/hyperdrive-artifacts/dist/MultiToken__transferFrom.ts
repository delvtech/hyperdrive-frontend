export const MultiToken__transferFrom = {
  abi: [
    {
      inputs: [],
      name: "ExpectedFail",
      type: "error",
    },
    {
      inputs: [],
      name: "ExpectedSuccess",
      type: "error",
    },
    {
      inputs: [],
      name: "TestFail",
      type: "error",
    },
    {
      inputs: [],
      name: "UnassignedCatch",
      type: "error",
    },
    {
      inputs: [],
      name: "UnassignedFail",
      type: "error",
    },
    {
      inputs: [],
      name: "WhaleBalanceExceeded",
      type: "error",
    },
    {
      inputs: [],
      name: "WhaleIsContract",
      type: "error",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "operator",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "id",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "TransferSingle",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      name: "log",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      name: "log_address",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256[]",
          name: "val",
          type: "uint256[]",
        },
      ],
      name: "log_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "int256[]",
          name: "val",
          type: "int256[]",
        },
      ],
      name: "log_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address[]",
          name: "val",
          type: "address[]",
        },
      ],
      name: "log_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "bytes",
          name: "",
          type: "bytes",
        },
      ],
      name: "log_bytes",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "bytes32",
          name: "",
          type: "bytes32",
        },
      ],
      name: "log_bytes32",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "int256",
          name: "",
          type: "int256",
        },
      ],
      name: "log_int",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "address",
          name: "val",
          type: "address",
        },
      ],
      name: "log_named_address",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "uint256[]",
          name: "val",
          type: "uint256[]",
        },
      ],
      name: "log_named_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "int256[]",
          name: "val",
          type: "int256[]",
        },
      ],
      name: "log_named_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "address[]",
          name: "val",
          type: "address[]",
        },
      ],
      name: "log_named_array",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "bytes",
          name: "val",
          type: "bytes",
        },
      ],
      name: "log_named_bytes",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "bytes32",
          name: "val",
          type: "bytes32",
        },
      ],
      name: "log_named_bytes32",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "int256",
          name: "val",
          type: "int256",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "decimals",
          type: "uint256",
        },
      ],
      name: "log_named_decimal_int",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "val",
          type: "uint256",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "decimals",
          type: "uint256",
        },
      ],
      name: "log_named_decimal_uint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "int256",
          name: "val",
          type: "int256",
        },
      ],
      name: "log_named_int",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "string",
          name: "val",
          type: "string",
        },
      ],
      name: "log_named_string",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "key",
          type: "string",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "val",
          type: "uint256",
        },
      ],
      name: "log_named_uint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      name: "log_string",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      name: "log_uint",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "bytes",
          name: "",
          type: "bytes",
        },
      ],
      name: "logs",
      type: "event",
    },
    {
      inputs: [],
      name: "IS_TEST",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "_value",
          type: "uint256",
        },
        {
          internalType: "int256",
          name: "_delta",
          type: "int256",
        },
        {
          internalType: "uint256",
          name: "_targetValue",
          type: "uint256",
        },
      ],
      name: "assertWithDelta",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "string",
          name: "name",
          type: "string",
        },
      ],
      name: "createUser",
      outputs: [
        {
          internalType: "address",
          name: "_user",
          type: "address",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "excludeArtifacts",
      outputs: [
        {
          internalType: "string[]",
          name: "excludedArtifacts_",
          type: "string[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "excludeContracts",
      outputs: [
        {
          internalType: "address[]",
          name: "excludedContracts_",
          type: "address[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "excludeSenders",
      outputs: [
        {
          internalType: "address[]",
          name: "excludedSenders_",
          type: "address[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "failed",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "setUp",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "targetArtifactSelectors",
      outputs: [
        {
          components: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
            {
              internalType: "bytes4[]",
              name: "selectors",
              type: "bytes4[]",
            },
          ],
          internalType: "struct StdInvariant.FuzzSelector[]",
          name: "targetedArtifactSelectors_",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "targetArtifacts",
      outputs: [
        {
          internalType: "string[]",
          name: "targetedArtifacts_",
          type: "string[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "targetContracts",
      outputs: [
        {
          internalType: "address[]",
          name: "targetedContracts_",
          type: "address[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "targetSelectors",
      outputs: [
        {
          components: [
            {
              internalType: "address",
              name: "addr",
              type: "address",
            },
            {
              internalType: "bytes4[]",
              name: "selectors",
              type: "bytes4[]",
            },
          ],
          internalType: "struct StdInvariant.FuzzSelector[]",
          name: "targetedSelectors_",
          type: "tuple[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "targetSenders",
      outputs: [
        {
          internalType: "address[]",
          name: "targetedSenders_",
          type: "address[]",
        },
      ],
      stateMutability: "view",
      type: "function",
    },
    {
      inputs: [],
      name: "test__MultiToken__transferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "whale",
          type: "address",
        },
        {
          internalType: "contract IERC20",
          name: "token",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
      ],
      name: "whaleTransfer",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "whale",
          type: "address",
        },
        {
          internalType: "contract IERC20",
          name: "token",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
      ],
      name: "whaleTransfer",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  bytecode: {
    object:
      "0x6080604081905260078054600160ff199182168117909255600b8054909116909117905563f877cb1960e01b90526020608452600f60a4526e1350525393915517d49410d7d55493608a1b60c452737109709ecfa91a80626ff3989d68f67f5b1dd12d63f877cb1960e4600060405180830381865afa15801562000087573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000b1919081019062000215565b602990620000c0908262000379565b5060405163f877cb1960e01b815260206004820152600e60248201526d11d3d154931257d49410d7d5549360921b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f877cb1990606401600060405180830381865afa15801562000130573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200015a919081019062000215565b602a9062000169908262000379565b50602b805461ff0019166101001790556040805160048152602481019091526020810180516001600160e01b031663761b17af60e11b179052602c90620001b1908262000379565b506040805160048152602481019091526020810180516001600160e01b0316631212173760e01b179052602d90620001ea908262000379565b50348015620001f857600080fd5b5062000445565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200022957600080fd5b82516001600160401b03808211156200024157600080fd5b818501915085601f8301126200025657600080fd5b8151818111156200026b576200026b620001ff565b604051601f8201601f19908116603f01168101908382118183101715620002965762000296620001ff565b816040528281528886848701011115620002af57600080fd5b600093505b82841015620002d35784840186015181850187015292850192620002b4565b600086848301015280965050505050505092915050565b600181811c90821680620002ff57607f821691505b6020821081036200032057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200037457600081815260208120601f850160051c810160208610156200034f5750805b601f850160051c820191505b8181101562000370578281556001016200035b565b5050505b505050565b81516001600160401b03811115620003955762000395620001ff565b620003ad81620003a68454620002ea565b8462000326565b602080601f831160018114620003e55760008415620003cc5750858301515b600019600386901b1c1916600185901b17855562000370565b600085815260208120601f198616915b828110156200041657888601518255948401946001909101908401620003f5565b5085821015620004355787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6161f380620004556000396000f3fe60806040523480156200001157600080fd5b5060043610620001155760003560e01c806366d9a9a011620000a3578063b5508aa9116200006e578063b5508aa91462000221578063ba414fa6146200022b578063e20c9f711462000246578063fa7626d4146200025057600080fd5b806366d9a9a014620001ce57806385226c8114620001e7578063916a17c61462000200578063ab75e7c3146200020a57600080fd5b80633e5e0d2611620000e45780633e5e0d2614620001735780633e5e3c23146200018a5780633f7286f41462000194578063507ffba5146200019e57600080fd5b80630a9254e4146200011a5780631071676014620001265780631ed7831c146200015057806326c917951462000169575b600080fd5b620001246200025e565b005b6200013d6200013736600462003aea565b62000431565b6040519081526020015b60405180910390f35b6200015a620004b9565b60405162000147919062003b3c565b620001246200051d565b6200013d6200018436600462003b8b565b6200080a565b6200015a62000a85565b6200015a62000ae7565b620001b5620001af36600462003bfb565b62000b49565b6040516001600160a01b03909116815260200162000147565b620001d862000c69565b60405162000147919062003cb6565b620001f162000d5c565b60405162000147919062003dc1565b620001d862000e36565b620001246200021b36600462003e27565b62000f20565b620001f162001261565b620002356200133b565b604051901515815260200162000147565b6200015a62001472565b600754620002359060ff1681565b62000268620014d4565b6022546040516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b158015620002c257600080fd5b505af1158015620002d7573d6000803e3d6000fd5b5050601b54604051600093508392506001600160a01b0390911690620002fd9062003ab8565b9182526001600160a01b03166020820152604001604051809103906000f0801580156200032e573d6000803e3d6000fd5b50601b5460405191925082916000916001600160a01b031690620003529062003ac6565b6001600160a01b03938416815260208101929092529091166040820152606001604051809103906000f0801580156200038f573d6000803e3d6000fd5b50602e60006101000a8154816001600160a01b0302191690836001600160a01b031602179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200041557600080fd5b505af11580156200042a573d6000803e3d6000fd5b5050505050565b6040516370a0823160e01b81526001600160a01b038085166004830152600091620004b191869186918216906370a0823190602401602060405180830381865afa15801562000484573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004aa919062003e54565b856200080a565b949350505050565b606060148054806020026020016040519081016040528092919081815260200182805480156200051357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620004f4575b5050505050905090565b6000620005aa620005a46200054c60006001670de0b6b3a764000069d3c21bcecceda1000000600019620014e0565b6200055a60006001620015bb565b6200057a6000678ac7230489e800006001600160801b0360001962001627565b6200059e600068056bc75e2d631000006c0100000000000000024989f36f620016de565b62001770565b62001830565b905060005b8151811015620007e0576000828281518110620005d057620005d062003e6e565b6020026020010151600281518110620005ed57620005ed62003e6e565b6020026020010151905060006001600160801b038016821490506000604051806101400160405280858152602001600760048760056200062e919062003e9a565b6200063a919062003fad565b62000646919062003fdb565b8152601c546001600160a01b039081166020830152601d54166040820152865160609091019087908790811062000681576200068162003e6e565b60200260200101516000815181106200069e576200069e62003e6e565b602002602001015181526020016000878781518110620006c257620006c262003e6e565b6020026020010151600181518110620006df57620006df62003e6e565b602002602001015111620006ff57601e546001600160a01b03166200070c565b601c546001600160a01b03165b6001600160a01b0316815260200184815260200186868151811062000735576200073562003e6e565b602002602001015160038151811062000752576200075262003e6e565b6020026020010151815260200186868151811062000774576200077462003e6e565b602002602001015160038151811062000791576200079162003e6e565b602002602001015181526020018315158152509050620007b18162001ad3565b620007bc8162001eb0565b620007c7816200263d565b5050508080620007d79062003ff2565b915050620005af565b50620008076040518060600160405280603d81526020016200612b603d9139825162002d11565b50565b6040516370a0823160e01b81526001600160a01b03858116600483015260009182918616906370a0823190602401602060405180830381865afa15801562000856573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200087c919062003e54565b905080841115620008a05760405163188c93a560e31b815260040160405180910390fd5b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620008ff57600080fd5b505af115801562000914573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0389166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b1580156200096e57600080fd5b505af115801562000983573d6000803e3d6000fd5b505060405163c88a5e6d60e01b81526001600160a01b0389166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b158015620009eb57600080fd5b505af115801562000a00573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890528816925063a9059cbb91506044016020604051808303816000875af115801562000a54573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a7a91906200400e565b509295945050505050565b6060601680548060200260200160405190810160405280929190818152602001828054801562000513576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620004f4575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000513576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620004f4575050505050905090565b60008160405160200162000b5e919062004032565b60408051601f198184030181529082905280516020909101206318caf8e360e31b82529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c7189062000bb1908490869060040162004047565b600060405180830381600087803b15801562000bcc57600080fd5b505af115801562000be1573d6000803e3d6000fd5b505060405163c88a5e6d60e01b81526001600160a01b038416600482015269021e19e0c9bab24000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b15801562000c4b57600080fd5b505af115801562000c60573d6000803e3d6000fd5b50505050919050565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000d535760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000d3a57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000cfb5790505b5050505050815250508152602001906001019062000c8d565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101562000d5357838290600052602060002001805462000da2906200406d565b80601f016020809104026020016040519081016040528092919081815260200182805462000dd0906200406d565b801562000e215780601f1062000df55761010080835404028352916020019162000e21565b820191906000526020600020905b81548152906001019060200180831162000e0357829003601f168201915b50505050508152602001906001019062000d80565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000d535760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000f0757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000ec85790505b5050505050815250508152602001906001019062000e5a565b6000821280159062000f5a5762000f5484831015604051806060016040528060368152602001620061886036913962002d5e565b62000f81565b62000f81828511604051806060016040528060278152602001620060b26027913962002d5e565b60008162000f90578462000f9c565b62000f9c848662003e9a565b90506000821562000fae578562000fc5565b62000fb985620040a9565b62000fc59087620040c8565b90508084108062000fd557508184115b15620010535762001013848260405180604001604052806013815260200172195e18d959591cc81b1bddd95c88189bdd5b99606a1b81525062002d97565b6200104b848360405180604001604052806013815260200172195e18d959591cc81d5c1c195c88189bdd5b99606a1b81525062002dd9565b505050505050565b821562001153576000620010688786620040c8565b905085811015620011265760408051808201909152601a81527f507265636973696f6e20696e637265617365642062793a2025730000000000006020820152620010be90620010b88389620040c8565b62002d11565b620010ef6040518060400160405280600d81526020016c4f6c642044656c74613a20257360981b8152508762002e16565b620011206040518060400160405280600d81526020016c4e65772044656c74613a20257360981b8152508262002d11565b6200114c565b6200114c8386604051806060016040528060298152602001620060d96029913962002e5f565b506200104b565b6000620011618588620040c8565b90506200116e86620040a9565b8110156200123257620011c96040518060400160405280601a81526020017f507265636973696f6e20696e637265617365642062793a2025730000000000008152508288620011bd90620040a9565b620010b89190620040c8565b620011fa6040518060400160405280600d81526020016c4f6c642044656c74613a20257360981b8152508762002e16565b6200122c6040518060400160405280600e81526020016d4e65772044656c74613a202d257360901b8152508262002d11565b62001258565b620012588286604051806060016040528060298152602001620061026029913962002e5f565b50505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000d53578382906000526020600020018054620012a7906200406d565b80601f0160208091040260200160405190810160405280929190818152602001828054620012d5906200406d565b8015620013265780601f10620012fa5761010080835404028352916020019162001326565b820191906000526020600020905b8154815290600101906020018083116200130857829003601f168201915b50505050508152602001906001019062001285565b600754600090610100900460ff16156200135e5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200146d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091620013ef917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001620040de565b60408051601f19818403018152908290526200140b9162004111565b6000604051808303816000865af19150503d80600081146200144a576040519150601f19603f3d011682016040523d82523d6000602084013e6200144f565b606091505b50915050808060200190518101906200146991906200400e565b9150505b919050565b6060601380548060200260200160405190810160405280929190818152602001828054801562000513576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620004f4575050505050905090565b620014de62002e9b565b565b60408051600580825260c082019092526060916020820160a08036833701905050905085816000815181106200151a576200151a62003e6e565b60200260200101818152505084816001815181106200153d576200153d62003e6e565b602002602001018181525050838160028151811062001560576200156062003e6e565b602002602001018181525050828160038151811062001583576200158362003e6e565b6020026020010181815250508181600481518110620015a657620015a662003e6e565b60200260200101818152505095945050505050565b60408051600280825260608083018452926020830190803683370190505090508281600081518110620015f257620015f262003e6e565b602002602001018181525050818160018151811062001615576200161562003e6e565b60200260200101818152505092915050565b60408051600480825260a0820190925260609160208201608080368337019050509050848160008151811062001661576200166162003e6e565b602002602001018181525050838160018151811062001684576200168462003e6e565b6020026020010181815250508281600281518110620016a757620016a762003e6e565b6020026020010181815250508181600381518110620016ca57620016ca62003e6e565b602002602001018181525050949350505050565b60408051600380825260808201909252606091602082018380368337019050509050838160008151811062001717576200171762003e6e565b60200260200101818152505082816001815181106200173a576200173a62003e6e565b60200260200101818152505081816002815181106200175d576200175d62003e6e565b6020026020010181815250509392505050565b60408051600480825260a08201909252606091816020015b6060815260200190600190039081620017885790505090508481600081518110620017b757620017b762003e6e565b60200260200101819052508381600181518110620017d957620017d962003e6e565b60200260200101819052508281600281518110620017fb57620017fb62003e6e565b602002602001018190525081816003815181106200181d576200181d62003e6e565b6020026020010181905250949350505050565b60606000600190506000835167ffffffffffffffff81111562001857576200185762003be5565b60405190808252806020026020018201604052801562001881578160200160208202803683370190505b50905060005b8451811015620018f457848181518110620018a657620018a662003e6e565b60200260200101515183620018bc91906200412f565b925082828281518110620018d457620018d462003e6e565b602090810291909101015280620018eb8162003ff2565b91505062001887565b508167ffffffffffffffff81111562001911576200191162003be5565b6040519080825280602002602001820160405280156200194657816020015b6060815260200190600190039081620019305790505b50925060005b835181101562001acb57845167ffffffffffffffff81111562001973576200197362003be5565b6040519080825280602002602001820160405280156200199d578160200160208202803683370190505b50848281518110620019b357620019b362003e6e565b602002602001018190525060005b855181101562001ab557858181518110620019e057620019e062003e6e565b6020026020010151868281518110620019fd57620019fd62003e6e565b60200260200101515184838151811062001a1b5762001a1b62003e6e565b6020026020010151875162001a31919062003fdb565b62001a3d908562003fdb565b62001a49919062004149565b8151811062001a5c5762001a5c62003e6e565b602002602001015185838151811062001a795762001a7962003e6e565b6020026020010151828151811062001a955762001a9562003e6e565b60209081029190910101528062001aac8162003ff2565b915050620019c1565b508062001ac28162003ff2565b9150506200194c565b505050919050565b602b805461ff0019166101001790556040805160048152602481019091526020810180516001600160e01b031663761b17af60e11b179052602c9062001b1a9082620041c0565b506040805160048152602481019091526020810180516001600160e01b0316631212173760e01b179052602d9062001b539082620041c0565b50602e54602082015160408084015160e085015191516394a97cdb60e01b815260048101939093526001600160a01b0390811660248401526044830191909152909116906394a97cdb90606401600060405180830381600087803b15801562001bbb57600080fd5b505af115801562001bd0573d6000803e3d6000fd5b5050602e54602084015160608501516101008601516040516394a97cdb60e01b815260048101939093526001600160a01b039182166024840152604483015290911692506394a97cdb9150606401600060405180830381600087803b15801562001c3957600080fd5b505af115801562001c4e573d6000803e3d6000fd5b5050505080604001516001600160a01b03168160a001516001600160a01b031614620008075760408181015190516303223eab60e11b81526001600160a01b039091166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801562001cd057600080fd5b505af115801562001ce5573d6000803e3d6000fd5b505050508061012001511562001d6757602e5460a082015160405163a22cb46560e01b81526001600160a01b0391821660048201526001602482015291169063a22cb46590604401600060405180830381600087803b15801562001d4857600080fd5b505af115801562001d5d573d6000803e3d6000fd5b5050505062001e51565b602e5460a082015160405163a22cb46560e01b81526001600160a01b0391821660048201526000602482015291169063a22cb46590604401600060405180830381600087803b15801562001dba57600080fd5b505af115801562001dcf573d6000803e3d6000fd5b5050602e54602084015160a085015160c0860151604051639cd241af60e01b815260048101939093526001600160a01b03918216602484015260448301529091169250639cd241af9150606401600060405180830381600087803b15801562001e3757600080fd5b505af115801562001e4c573d6000803e3d6000fd5b505050505b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200041557600080fd5b600081604001516001600160a01b03168260a001516001600160a01b03161415801562001ee05750816101200151155b801562001ef357506000198260c0015114155b801562001f07575081608001518260c00151105b608083015160e08401516101008501519293508111916000919062001f2f90600019620040c8565b109050828062001f3c5750815b8062001f455750805b15620020af57602e5460208501516040808701516060880151608089015160a08a01519351632c57a50560e11b815260048101959095526001600160a01b039283166024860152908216604485015260648401529081166084830152909116906358af4a0a9060a401600060405180830381600087803b15801562001fc957600080fd5b505af192505050801562001fdb575060015b6200206f573d8080156200200c576040519150601f19603f3d011682016040523d82523d6000602084013e62002011565b606091505b50602c620020208282620041c0565b506040516011602482015260440160408051601f198184030181529190526020810180516001600160e01b0316634e487b7160e01b179052602d90620020679082620041c0565b5050620020af565b6200209660405180604001604052806003815260200162714ec760e91b815250856200317b565b60405163e94645fb60e01b815260040160405180910390fd5b50506040805160048082526024820183526020820180516001600160e01b031663761b17af60e11b17905291516369bd105d60e11b815273__$d8b743afbb06e0339798c3a9c7622b5022$__935063d37a20ba926200211492602c9290910162004312565b602060405180830381865af415801562002132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200215891906200400e565b156200246257620022676200222a602d805462002175906200406d565b80601f0160208091040260200160405190810160405280929190818152602001828054620021a3906200406d565b8015620021f45780601f10620021c857610100808354040283529160200191620021f4565b820191906000526020600020905b815481529060010190602001808311620021d657829003601f168201915b50506040805160048152602481019091526020810180516001600160e01b0316631212173760e01b179052925062003413915050565b156040518060400160405280601f81526020017f5f5f6661696c5f6572726f722073686f756c642062652061737369676e65640081525062002d5e565b6040516369bd105d60e11b815273__$d8b743afbb06e0339798c3a9c7622b5022$__9063d37a20ba90620022a490602c90602d9060040162004344565b602060405180830381865af4158015620022c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022e891906200400e565b15620024545762002454602c805462002301906200406d565b80601f01602080910402602001604051908101604052809291908181526020018280546200232f906200406d565b8015620023805780601f10620023545761010080835404028352916020019162002380565b820191906000526020600020905b8154815290600101906020018083116200236257829003601f168201915b5050505050602d805462002394906200406d565b80601f0160208091040260200160405190810160405280929190818152602001828054620023c2906200406d565b8015620024135780601f10620023e75761010080835404028352916020019162002413565b820191906000526020600020905b815481529060010190602001808311620023f557829003601f168201915b50505050506040518060400160405280601881526020017f457870656374656420646966666572656e74206572726f720000000000000000815250620034ad565b50602b805461ff0019169055565b62002543602d805462002475906200406d565b80601f0160208091040260200160405190810160405280929190818152602001828054620024a3906200406d565b8015620024f45780601f10620024c857610100808354040283529160200191620024f4565b820191906000526020600020905b815481529060010190602001808311620024d657829003601f168201915b50506040805160048152602481018252602080820180516001600160e01b0316631212173760e01b179052825160608101909352602380845291955091935091506200603f90830139620034ad565b62000807602c805462002556906200406d565b80601f016020809104026020016040519081016040528092919081815260200182805462002584906200406d565b8015620025d55780601f10620025a957610100808354040283529160200191620025d5565b820191906000526020600020905b815481529060010190602001808311620025b757829003601f168201915b50506040805160048152602481018252602080820180516001600160e01b031663761b17af60e11b1790528251808401909352601e83527f5f5f6572726f722073686f756c64206e6f742062652061737369676e656400009083015293509150620034ad9050565b6000602b54610100900460ff1660018111156200265e576200265e62004160565b03620026675750565b602e5460208201516040808401519051631b2b776160e11b81526000936001600160a01b031692633656eec292620026b3926004019182526001600160a01b0316602082015260400190565b602060405180830381865afa158015620026d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026f7919062003e54565b602e5460208401516060850151604051631b2b776160e11b815260048101929092526001600160a01b03908116602483015292935060009290911690633656eec290604401602060405180830381865afa1580156200275a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002780919062003e54565b602e54602085015160408087015160a088015191516321ff32a960e01b815260048101939093526001600160a01b0390811660248401529081166044830152929350600092909116906321ff32a990606401602060405180830381865afa158015620027f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002816919062003e54565b60405163248e63e160e11b815260016004820181905260248201819052604482018190526064820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b1580156200287c57600080fd5b505af115801562002891573d6000803e3d6000fd5b5050505083606001516001600160a01b031684604001516001600160a01b03168560a001516001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628760200151886080015160405162002902929190918252602082015260400190565b60405180910390a4602e5460208501516040808701516060880151608089015160a08a01519351632c57a50560e11b815260048101959095526001600160a01b039283166024860152908216604485015260648401529081166084830152909116906358af4a0a9060a401600060405180830381600087803b1580156200298857600080fd5b505af19250505080156200299a575060015b620029df57620029c660405180604001604052806003815260200162714ec760e91b815250856200317b565b604051632bc190bd60e21b815260040160405180910390fd5b83604001516001600160a01b03168460a001516001600160a01b03161415801562002a0d5750836101200151155b801562002a2057506000198460c0015114155b1562002b2457602e54602085015160408087015160a088015191516321ff32a960e01b815260048101939093526001600160a01b039081166024840152908116604483015260009216906321ff32a990606401602060405180830381865afa15801562002a91573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ab7919062003e54565b62002ac39083620040c8565b90508460800151811462002b225762002af860405180604001604052806003815260200162714ec760e91b815250866200317b565b62002b228186608001516040518060600160405280603181526020016200600e6031913962002e5f565b505b602e5460208501516040808701519051631b2b776160e11b81526000936001600160a01b031692633656eec29262002b70926004019182526001600160a01b0316602082015260400190565b602060405180830381865afa15801562002b8e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bb4919062003e54565b62002bc09085620040c8565b90508460800151811462002c1f5762002bf560405180604001604052806003815260200162714ec760e91b815250866200317b565b62002c1f81866080015160405180606001604052806032815260200162005fdc6032913962002e5f565b602e5460208601516060870151604051631b2b776160e11b815260048101929092526001600160a01b0390811660248301526000928692911690633656eec290604401602060405180830381865afa15801562002c80573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ca6919062003e54565b62002cb29190620040c8565b9050856080015181146200104b5762002ce760405180604001604052806003815260200162714ec760e91b815250876200317b565b6200104b818760800151604051806060016040528060308152602001620060826030913962002e5f565b62002d5a828260405160240162002d2a9291906200436d565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052620034ba565b5050565b8162002d5a57600080516020620060628339815191528160405162002d84919062004391565b60405180910390a162002d5a82620034c5565b8183101562002dd457600080516020620060628339815191528160405162002dc0919062004391565b60405180910390a162002dd483836200352c565b505050565b8183111562002dd457600080516020620060628339815191528160405162002e02919062004391565b60405180910390a162002dd4838362003628565b62002d5a828260405160240162002e2f9291906200436d565b60408051601f198184030181529190526020810180516001600160e01b0316631e53134760e11b179052620034ba565b81831462002dd457600080516020620060628339815191528160405162002e87919062004391565b60405180910390a162002dd483836200368b565b62002ec360405180604001604052806005815260200164616c69636560d81b81525062000b49565b601c80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152623137b160e91b602082015262002f089062000b49565b601d80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526563656c696e6560d01b602082015262002f509062000b49565b601e80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152623230b760e91b602082015262002f959062000b49565b601f80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600381526265766560e81b602082015262002fda9062000b49565b602060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506200302b604051806040016040528060088152602001673232b83637bcb2b960c11b81525062000b49565b602280546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526536b4b73a32b960d11b6020820152620030739062000b49565b602180546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600c81526b3332b2a1b7b63632b1ba37b960a11b6020820152620030c19062000b49565b602380546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600a815269676f7665726e616e636560b01b60208201526200310d9062000b49565b602480546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260068152653830bab9b2b960d11b6020820152620031559062000b49565b602580546001600160a01b0319166001600160a01b039290921691909117905542602855565b62003195604051806020016040528060008152506200373d565b620031db6040518060400160405280601c81526020017f2573204661696c203a3a207b20546573744361736520232573207d0a0000000081525083836000015162003784565b62003217604051806040016040528060158152602001734ba37b5b2b724b210101010101010101010101e9605d1b815250826020015162002d11565b62003253604051806040016040528060158152602001734b33937b690101010101010101010101010101e9605d1b8152508260400151620037cf565b6200328f604051806040016040528060158152602001734ba37901010101010101010101010101010101e9605d1b8152508260600151620037cf565b620032cb604051806040016040528060158152602001734b0b6b7bab73a1010101010101010101010101e9605d1b815250826080015162002d11565b62003307604051806040016040528060158152602001734b1b0b63632b91010101010101010101010101e9605d1b8152508260a00151620037cf565b62003343604051806040016040528060158152602001734b0b8383937bb30b6399010101010101010101e9605d1b8152508260c0015162002d11565b6200337f604051806040016040528060158152602001734b130b630b731b2a33937b6901010101010101e9605d1b8152508260e0015162002d11565b620033bc604051806040016040528060158152602001734b130b630b731b2aa379010101010101010101e9605d1b81525082610100015162002d11565b620033f9604051806040016040528060158152602001734b0b8383937bb32b22337b920b636101010101e9605d1b81525082610120015162003818565b62002d5a604051806020016040528060008152506200373d565b805182516001919003620034a35760005b83518110156200349c5782818151811062003443576200344362003e6e565b602001015160f81c60f81b6001600160f81b0319168482815181106200346d576200346d62003e6e565b01602001516001600160f81b031916146200348757600091505b80620034938162003ff2565b91505062003424565b50620034a7565b5060005b92915050565b62002dd483838362003861565b6200080781620038a6565b80620008075760008051602062005fbc8339815191526040516200351a9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162000807620038c7565b8082101562002d5a5760008051602062005fbc8339815191526040516200358f9060208082526022908201527f4572726f723a2061203e3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b6060820152602081018490529051600080516020620061688339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b60608201526020810182905260008051602062006168833981519152906080015b60405180910390a162002d5a620038c7565b8082111562002d5a5760008051602062005fbc8339815191526040516200358f9060208082526022908201527f4572726f723a2061203c3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b80821462002d5a5760008051602062005fbc833981519152604051620036ed9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16000805160206200616883398151915282604051620037159190620043c2565b60405180910390a16000805160206200616883398151915281604051620036169190620043fb565b620008078160405160240162003754919062004032565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052620034ba565b62002dd48383836040516024016200379f9392919062004426565b60408051601f198184030181529190526020810180516001600160e01b0316635821efa160e01b179052620034ba565b62002d5a8282604051602401620037e892919062004460565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052620034ba565b62002d5a8282604051602401620038319291906200448c565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b179052620034ba565b6200386d838362003413565b62002dd457600080516020620060628339815191528160405162003892919062004391565b60405180910390a162002dd48383620039da565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620039c95760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620039649291602001620040de565b60408051601f1981840301815290829052620039809162004111565b6000604051808303816000865af19150503d8060008114620039bf576040519150601f19603f3d011682016040523d82523d6000602084013e620039c4565b606091505b505050505b6007805461ff001916610100179055565b620039e6828262003413565b62002d5a5760008051602062005fbc83398151915260405162003a469060208082526023908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201526265735d60e81b606082015260800190565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf188260405162003a7f9190620044b2565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1881604051620036169190620044f1565b61064c806200451d83390190565b6114538062004b6983390190565b6001600160a01b03811681146200080757600080fd5b60008060006060848603121562003b0057600080fd5b833562003b0d8162003ad4565b9250602084013562003b1f8162003ad4565b9150604084013562003b318162003ad4565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562003b7f5783516001600160a01b03168352928401929184019160010162003b58565b50909695505050505050565b6000806000806080858703121562003ba257600080fd5b843562003baf8162003ad4565b9350602085013562003bc18162003ad4565b925060408501359150606085013562003bda8162003ad4565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562003c0e57600080fd5b813567ffffffffffffffff8082111562003c2757600080fd5b818401915084601f83011262003c3c57600080fd5b81358181111562003c515762003c5162003be5565b604051601f8201601f19908116603f0116810190838211818310171562003c7c5762003c7c62003be5565b8160405282815287602084870101111562003c9657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562003d5e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562003d485783516001600160e01b0319168252928b019260019290920191908b019062003d1c565b50978a0197955050509187019160010162003cde565b50919998505050505050505050565b60005b8381101562003d8a57818101518382015260200162003d70565b50506000910152565b6000815180845262003dad81602086016020860162003d6d565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562003e1a57603f1988860301845262003e0785835162003d93565b9450928501929085019060010162003de8565b5092979650505050505050565b60008060006060848603121562003e3d57600080fd5b505081359360208301359350604090920135919050565b60006020828403121562003e6757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115620034a757620034a762003e84565b600181815b8085111562003ef157816000190482111562003ed55762003ed562003e84565b8085161562003ee357918102915b93841c939080029062003eb5565b509250929050565b60008262003f0a57506001620034a7565b8162003f1957506000620034a7565b816001811462003f32576002811462003f3d5762003f5d565b6001915050620034a7565b60ff84111562003f515762003f5162003e84565b50506001821b620034a7565b5060208310610133831016604e8410600b841016171562003f82575081810a620034a7565b62003f8e838362003eb0565b806000190482111562003fa55762003fa562003e84565b029392505050565b600062003fbe60ff84168362003ef9565b9392505050565b634e487b7160e01b600052601260045260246000fd5b60008262003fed5762003fed62003fc5565b500490565b60006001820162004007576200400762003e84565b5060010190565b6000602082840312156200402157600080fd5b8151801515811462003fbe57600080fd5b60208152600062003fbe602083018462003d93565b6001600160a01b0383168152604060208201819052600090620004b19083018462003d93565b600181811c908216806200408257607f821691505b602082108103620040a357634e487b7160e01b600052602260045260246000fd5b50919050565b6000600160ff1b8201620040c157620040c162003e84565b5060000390565b81810381811115620034a757620034a762003e84565b6001600160e01b03198316815281516000906200410381600485016020870162003d6d565b919091016004019392505050565b600082516200412581846020870162003d6d565b9190910192915050565b8082028115828204841417620034a757620034a762003e84565b6000826200415b576200415b62003fc5565b500690565b634e487b7160e01b600052602160045260246000fd5b601f82111562002dd457600081815260208120601f850160051c810160208610156200419f5750805b601f850160051c820191505b818110156200104b57828155600101620041ab565b815167ffffffffffffffff811115620041dd57620041dd62003be5565b620041f581620041ee84546200406d565b8462004176565b602080601f8311600181146200422d5760008415620042145750858301515b600019600386901b1c1916600185901b1785556200104b565b600085815260208120601f198616915b828110156200425e578886015182559484019460019091019084016200423d565b50858210156200427d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600081546200429c816200406d565b808552602060018381168015620042bc5760018114620042d75762004307565b60ff1985168884015283151560051b88018301955062004307565b866000528260002060005b85811015620042ff5781548a8201860152908301908401620042e2565b890184019650505b505050505092915050565b6040815260006200432760408301856200428d565b82810360208401526200433b818562003d93565b95945050505050565b6040815260006200435960408301856200428d565b82810360208401526200433b81856200428d565b60408152600062004382604083018562003d93565b90508260208301529392505050565b60408152600560408201526422b93937b960d91b606082015260806020820152600062003fbe608083018462003d93565b604081526000620043ed60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b604081526000620043ed60408301600a8152690808080808149a59da1d60b21b602082015260400190565b6060815260006200443b606083018662003d93565b82810360208401526200444f818662003d93565b915050826040830152949350505050565b60408152600062004475604083018562003d93565b905060018060a01b03831660208301529392505050565b604081526000620044a1604083018562003d93565b905082151560208301529392505050565b604081526000620044dd60408301600a8152690808080808081319599d60b21b602082015260400190565b8281036020840152620004b1818562003d93565b604081526000620044dd60408301600a8152690808080808149a59da1d60b21b60208201526040019056fe60c060405234801561001057600080fd5b5060405161064c38038061064c83398101604081905261002f91610043565b6001600160a01b031660805260a052610080565b6000806040838503121561005657600080fd5b825160208401519092506001600160a01b038116811461007557600080fd5b809150509250929050565b60805160a0516105a76100a560003960006102f6015260006102ba01526105a76000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80637ecebe00116100665780637ecebe0014610107578063bd85b0391461011a578063c45a01551461012d578063c905a4b51461014d578063e985e9c51461015557600080fd5b8062ad800c1461009757806321ff32a9146100c05780633656eec2146100e15780634e41a1fb146100f4575b600080fd5b6100aa6100a536600461038f565b610178565b6040516100b791906103ee565b60405180910390f35b6100d36100ce366004610418565b6101b9565b6040519081526020016100b7565b6100d36100ef366004610454565b6101ff565b6100aa61010236600461038f565b610236565b6100d3610115366004610480565b61025e565b6100d361012836600461038f565b61028a565b6101356102ac565b6040516001600160a01b0390911681526020016100b7565b6100d36102ef565b61016861016336600461049b565b610327565b60405190151581526020016100b7565b60606101b4600460008481526020019081526020016000206040516020016101a091906104c5565b60405160208183030381529060405261036b565b919050565b60008381526003602090815260408083206001600160a01b03868116855290835281842090851684528252808320548151928301526101f891016101a0565b9392505050565b6000828152602081815260408083206001600160a01b038516845282528083205481519283015261023091016101a0565b92915050565b60606101b4600560008481526020019081526020016000206040516020016101a091906104c5565b6001600160a01b0381166000908152600660209081526040808320548151928301526101b491016101a0565b6000818152600160209081526040808320548151928301526101b491016101a0565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916102ec91016101a0565b90565b60006102ec7f00000000000000000000000000000000000000000000000000000000000000006040516020016101a091815260200190565b6001600160a01b038281166000908152600260209081526040808320938516835292815282822054835160ff909116151591810191909152909161023091016101a0565b80604051636e64089360e11b815260040161038691906103ee565b60405180910390fd5b6000602082840312156103a157600080fd5b5035919050565b6000815180845260005b818110156103ce576020818501810151868301820152016103b2565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006101f860208301846103a8565b80356001600160a01b03811681146101b457600080fd5b60008060006060848603121561042d57600080fd5b8335925061043d60208501610401565b915061044b60408501610401565b90509250925092565b6000806040838503121561046757600080fd5b8235915061047760208401610401565b90509250929050565b60006020828403121561049257600080fd5b6101f882610401565b600080604083850312156104ae57600080fd5b6104b783610401565b915061047760208401610401565b600060208083526000845481600182811c9150808316806104e757607f831692505b858310810361050457634e487b7160e01b85526022600452602485fd5b878601838152602001818015610521576001811461053757610562565b60ff198616825284151560051b82019650610562565b60008b81526020902060005b8681101561055c57815484820152908501908901610543565b83019750505b5094999850505050505050505056fea264697066735822122011b597337bb722b8b0f6adf4b9a95f5bc24056626005b89db924567d5aa7bde864736f6c6343000813003361010060405234801561001157600080fd5b506040516114533803806114538339810160408190526100309161011c565b6001600160a01b03808416608052811660a05260c082905260408051808201825260018152603160f81b60209182015290518491849184916100d9917f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6914691309101938452602084019290925260408301526001600160a01b0316606082015260800190565b60408051601f19818403018152919052805160209091012060e05250610158945050505050565b80516001600160a01b038116811461011757600080fd5b919050565b60008060006060848603121561013157600080fd5b61013a84610100565b92506020840151915061014f60408501610100565b90509250925092565b60805160a05160c05160e0516112bc61019760003960008181610253015261058f01526000610a0f015260006109d20152600060f401526112bc6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063836a10401161008c5780639cd241af116100665780639cd241af146103065780639eea5f6614610319578063a22cb4651461032c578063e44808bc1461033f576100ea565b8063836a1040146102ae5780639032c726146102c157806394a97cdb146102d4576100ea565b80633644e515116100c85780633644e5151461024e578063365f7185146102755780634ed2d6ac1461028857806358af4a0a1461029b576100ea565b806317fad7fc146101ed5780631c0f12b61461020257806330adf81f14610215575b60003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316858560405161012c929190610c03565b600060405180830381855af49150503d8060008114610167576040519150601f19603f3d011682016040523d82523d6000602084013e61016c565b606091505b5091509150811561019057604051638bb0a34b60e01b815260040160405180910390fd5b600061019b82610c13565b90506001600160e01b03198116636e64089360e11b146101bd57815160208301fd5b8151600319810160048401908152926101de91810160200190602401610cb9565b80519650602001945050505050f35b6102006101fb366004610db3565b610352565b005b610200610210366004610e44565b610406565b61023c7f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b60405190815260200160405180910390f35b61023c7f000000000000000000000000000000000000000000000000000000000000000081565b610200610283366004610ed9565b610419565b610200610296366004610f46565b61044a565b6102006102a9366004610f8c565b610498565b6102006102bc366004610fe3565b6104a5565b6102006102cf366004611028565b6104b5565b6102006102e2366004610fe3565b6000928352602083815260408085206001600160a01b039094168552929052912055565b610200610314366004610fe3565b610704565b610200610327366004610fe3565b610710565b61020061033a3660046110a2565b61071b565b61020061034d366004610f8c565b610787565b6001600160a01b038616158061036f57506001600160a01b038516155b1561038d5760405163f0dd15fd60e01b815260040160405180910390fd5b8281146103ad5760405163174861a760e31b815260040160405180910390fd5b60005b838110156103fd576103f58585838181106103cd576103cd6110d5565b9050602002013588888686868181106103e8576103e86110d5565b90506020020135336107d7565b6001016103b0565b50505050505050565b61041384848484336107d7565b50505050565b6000838152600460205260409020610431838261116b565b506000838152600560205260409020610413828261116b565b8361045481610994565b6001600160a01b0316336001600160a01b03161461048557604051632aab8bd360e01b815260040160405180910390fd5b61049185858585610a51565b5050505050565b61049185858585856107d7565b6104b0838383610abe565b505050565b834211156104d65760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b0387166104fd5760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b0387811660008181526006602090815260408083205481517f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e9736738185015280830195909552948b166060850152891515608085015260a084019490945260c08084018990528451808503909101815260e08401909452835193019290922061190160f01b6101008301527f00000000000000000000000000000000000000000000000000000000000000006101028301526101228201526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610629573d6000803e3d6000fd5b505050602060405103519050886001600160a01b0316816001600160a01b03161461066757604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b0389166000908152600660205260408120805490919061068d90611241565b909155506001600160a01b038981166000818152600260209081526040808320948d1680845294825291829020805460ff19168c151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050505050505050565b6104b083838333610a51565b6104b0838383610b65565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b8461079181610994565b6001600160a01b0316336001600160a01b0316146107c257604051632aab8bd360e01b815260040160405180910390fd5b6107cf86868686866107d7565b505050505050565b6001600160a01b03841615806107f457506001600160a01b038316155b156108125760405163f0dd15fd60e01b815260040160405180910390fd5b836001600160a01b0316816001600160a01b0316146108d6576001600160a01b0380851660009081526002602090815260408083209385168352929052205460ff166108d65760008581526003602090815260408083206001600160a01b038089168552908352818420908516845290915290205460001981146108d45760008681526003602090815260408083206001600160a01b03808a1685529083528184209086168452909152812080548592906108ce90849061125a565b90915550505b505b6000858152602081815260408083206001600160a01b03881684529091528120805484929061090690849061125a565b90915550506000858152602081815260408083206001600160a01b03871684529091528120805484929061093b908490611273565b909155505060408051868152602081018490526001600160a01b038086169287821692918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b604080513060208083019190915281830193909352815180820383018152606080830184528151918501919091206001600160f81b031960808401527f000000000000000000000000000000000000000000000000000000000000000090911b6bffffffffffffffffffffffff1916608183015260958201527f000000000000000000000000000000000000000000000000000000000000000060b5808301919091528251808303909101815260d5909101909152805191012090565b60008481526003602090815260408083206001600160a01b0385811680865291845282852090881680865290845293829020869055905185815290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050565b6000838152602081815260408083206001600160a01b038616845290915281208054839290610aee908490611273565b909155505060008381526001602052604081208054839290610b11908490611273565b909155505060408051848152602081018390526001600160a01b0384169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291015b60405180910390a4505050565b6000838152602081815260408083206001600160a01b038616845290915281208054839290610b9590849061125a565b909155505060008381526001602052604081208054839290610bb890849061125a565b909155505060408051848152602081018390526000916001600160a01b0385169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610b58565b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610c425780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c8957610c89610c4a565b604052919050565b600067ffffffffffffffff821115610cab57610cab610c4a565b50601f01601f191660200190565b60006020808385031215610ccc57600080fd5b825167ffffffffffffffff811115610ce357600080fd5b8301601f81018513610cf457600080fd5b8051610d07610d0282610c91565b610c60565b8181528684838501011115610d1b57600080fd5b60005b82811015610d39578381018501518282018601528401610d1e565b50600091810190930152509392505050565b80356001600160a01b0381168114610d6257600080fd5b919050565b60008083601f840112610d7957600080fd5b50813567ffffffffffffffff811115610d9157600080fd5b6020830191508360208260051b8501011115610dac57600080fd5b9250929050565b60008060008060008060808789031215610dcc57600080fd5b610dd587610d4b565b9550610de360208801610d4b565b9450604087013567ffffffffffffffff80821115610e0057600080fd5b610e0c8a838b01610d67565b90965094506060890135915080821115610e2557600080fd5b50610e3289828a01610d67565b979a9699509497509295939492505050565b60008060008060808587031215610e5a57600080fd5b84359350610e6a60208601610d4b565b9250610e7860408601610d4b565b9396929550929360600135925050565b600082601f830112610e9957600080fd5b8135610ea7610d0282610c91565b818152846020838601011115610ebc57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610eee57600080fd5b83359250602084013567ffffffffffffffff80821115610f0d57600080fd5b610f1987838801610e88565b93506040860135915080821115610f2f57600080fd5b50610f3c86828701610e88565b9150509250925092565b60008060008060808587031215610f5c57600080fd5b84359350610f6c60208601610d4b565b925060408501359150610f8160608601610d4b565b905092959194509250565b600080600080600060a08688031215610fa457600080fd5b85359450610fb460208701610d4b565b9350610fc260408701610d4b565b925060608601359150610fd760808701610d4b565b90509295509295909350565b600080600060608486031215610ff857600080fd5b8335925061100860208501610d4b565b9150604084013590509250925092565b80358015158114610d6257600080fd5b600080600080600080600060e0888a03121561104357600080fd5b61104c88610d4b565b965061105a60208901610d4b565b955061106860408901611018565b945060608801359350608088013560ff8116811461108557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156110b557600080fd5b6110be83610d4b565b91506110cc60208401611018565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806110ff57607f821691505b60208210810361111f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104b057600081815260208120601f850160051c8101602086101561114c5750805b601f850160051c820191505b818110156107cf57828155600101611158565b815167ffffffffffffffff81111561118557611185610c4a565b6111998161119384546110eb565b84611125565b602080601f8311600181146111ce57600084156111b65750858301515b600019600386901b1c1916600185901b1785556107cf565b600085815260208120601f198616915b828110156111fd578886015182559484019460019091019084016111de565b508582101561121b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000600182016112535761125361122b565b5060010190565b8181038181111561126d5761126d61122b565b92915050565b8082018082111561126d5761126d61122b56fea264697066735822122044d89e7089f3f9e996e9d86cd09fcb4f984163396a6dce85c53e448e66660c7164736f6c6343000813003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5066726f6d206163636f756e742062616c616e6365206d75737420686176652064656372656173656420627920616d6f756e746e756d626572206f6620617070726f76616c73206d75737420686176652064656372656173656420627920616d6f756e745f5f6661696c5f6572726f722073686f756c64206e6f742062652061737369676e6564280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583746f206163636f756e742062616c616e6365206d757374206861766520696e6372656173656420627920616d6f756e745f74617267657456616c75652073686f756c64206265206c657373207468616e205f76616c75656578706563746564207570706572426f756e6420746f206d61746368205f74617267657456616c75656578706563746564206c6f776572426f756e6420746f206d61746368205f74617267657456616c75652323232d20257320746573742063617365732070617373656420666f72204d756c7469546f6b656e2e5f7472616e7366657246726f6d2829202d232323b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a85f74617267657456616c75652073686f756c642062652067726561746572207468616e206f7220657175616c20746f205f76616c7565a26469706673582212201711edb8ed88a50712b7a26dae4f128640ce8e849e0fa60dd3d9acb64192009c64736f6c63430008130033",
    sourceMap:
      "449:9841:111:-:0;;;;;1572:26:50;;;1594:4;-1:-1:-1;;1572:26:50;;;;;;;;3126:44:54;;;;;;;;;;;-1:-1:-1;;;1262:31:159;;216:2:165;1262:31:159;198:21:165;255:2;235:18;228:30;-1:-1:-1;;;274:18:165;267:45;1262:12:159;;329:18:165;1262:31:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1262:31:159;;;;;;;;;;;;:::i;:::-;1237:56;;;;;;:::i;:::-;-1:-1:-1;1323:30:159;;-1:-1:-1;;;1323:30:159;;4328:2:165;1323:30:159;;;4310:21:165;4367:2;4347:18;;;4340:30;-1:-1:-1;;;4386:18:165;;;4379:44;1323:12:159;;;;4440:18:165;;1323:30:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1323:30:159;;;;;;;;;;;;:::i;:::-;1299:54;;;;;;:::i;:::-;-1:-1:-1;920:94:160;;;-1:-1:-1;;920:94:160;;;;;1174:48;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1174:48:160;-1:-1:-1;;;1174:48:160;;;1158:64;;;;;;:::i;:::-;-1:-1:-1;1249:47:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1249:47:160;-1:-1:-1;;;1249:47:160;;;1228:68;;;;;;:::i;:::-;;449:9841:111;;;;;;;;;;;;358:127:165;419:10;414:3;410:20;407:1;400:31;450:4;447:1;440:15;474:4;471:1;464:15;490:1042;570:6;601:2;644;632:9;623:7;619:23;615:32;612:52;;;660:1;657;650:12;612:52;687:16;;-1:-1:-1;;;;;752:14:165;;;749:34;;;779:1;776;769:12;749:34;817:6;806:9;802:22;792:32;;862:7;855:4;851:2;847:13;843:27;833:55;;884:1;881;874:12;833:55;913:2;907:9;935:2;931;928:10;925:36;;;941:18;;:::i;:::-;1016:2;1010:9;984:2;1070:13;;-1:-1:-1;;1066:22:165;;;1090:2;1062:31;1058:40;1046:53;;;1114:18;;;1134:22;;;1111:46;1108:72;;;1160:18;;:::i;:::-;1200:10;1196:2;1189:22;1235:2;1227:6;1220:18;1275:7;1270:2;1265;1261;1257:11;1253:20;1250:33;1247:53;;;1296:1;1293;1286:12;1247:53;1318:1;1309:10;;1328:129;1342:2;1339:1;1336:9;1328:129;;;1430:10;;;1426:19;;1420:26;1399:14;;;1395:23;;1388:59;1353:10;;;;1328:129;;;1499:1;1494:2;1489;1481:6;1477:15;1473:24;1466:35;1520:6;1510:16;;;;;;;;490:1042;;;;:::o;1537:380::-;1616:1;1612:12;;;;1659;;;1680:61;;1734:4;1726:6;1722:17;1712:27;;1680:61;1787:2;1779:6;1776:14;1756:18;1753:38;1750:161;;1833:10;1828:3;1824:20;1821:1;1814:31;1868:4;1865:1;1858:15;1896:4;1893:1;1886:15;1750:161;;1537:380;;;:::o;2048:545::-;2150:2;2145:3;2142:11;2139:448;;;2186:1;2211:5;2207:2;2200:17;2256:4;2252:2;2242:19;2326:2;2314:10;2310:19;2307:1;2303:27;2297:4;2293:38;2362:4;2350:10;2347:20;2344:47;;;-1:-1:-1;2385:4:165;2344:47;2440:2;2435:3;2431:12;2428:1;2424:20;2418:4;2414:31;2404:41;;2495:82;2513:2;2506:5;2503:13;2495:82;;;2558:17;;;2539:1;2528:13;2495:82;;;2499:3;;;2139:448;2048:545;;;:::o;2769:1352::-;2889:10;;-1:-1:-1;;;;;2911:30:165;;2908:56;;;2944:18;;:::i;:::-;2973:97;3063:6;3023:38;3055:4;3049:11;3023:38;:::i;:::-;3017:4;2973:97;:::i;:::-;3125:4;;3189:2;3178:14;;3206:1;3201:663;;;;3908:1;3925:6;3922:89;;;-1:-1:-1;3977:19:165;;;3971:26;3922:89;-1:-1:-1;;2726:1:165;2722:11;;;2718:24;2714:29;2704:40;2750:1;2746:11;;;2701:57;4024:81;;3171:944;;3201:663;1995:1;1988:14;;;2032:4;2019:18;;-1:-1:-1;;3237:20:165;;;3355:236;3369:7;3366:1;3363:14;3355:236;;;3458:19;;;3452:26;3437:42;;3550:27;;;;3518:1;3506:14;;;;3385:19;;3355:236;;;3359:3;3619:6;3610:7;3607:19;3604:201;;;3680:19;;;3674:26;-1:-1:-1;;3763:1:165;3759:14;;;3775:3;3755:24;3751:37;3747:42;3732:58;3717:74;;3604:201;-1:-1:-1;;;;;3851:1:165;3835:14;;;3831:22;3818:36;;-1:-1:-1;2769:1352:165:o;4601:1350::-;449:9841:111;;;;;;",
    linkReferences: {
      "test/utils/Lib.sol": {
        Lib: [
          {
            start: 9533,
            length: 20,
          },
          {
            start: 9931,
            length: 20,
          },
        ],
      },
    },
  },
  deployedBytecode: {
    object:
      "$d8b743afbb06e0339798c3a9c7622b5022$__935063d37a20ba926200211492602c9290910162004312565b602060405180830381865af415801562002132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200215891906200400e565b156200246257620022676200222a602d805462002175906200406d565b80601f0160208091040260200160405190810160405280929190818152602001828054620021a3906200406d565b8015620021f45780601f10620021c857610100808354040283529160200191620021f4565b820191906000526020600020905b815481529060010190602001808311620021d657829003601f168201915b50506040805160048152602481019091526020810180516001600160e01b0316631212173760e01b179052925062003413915050565b156040518060400160405280601f81526020017f5f5f6661696c5f6572726f722073686f756c642062652061737369676e65640081525062002d5e565b6040516369bd105d60e11b815273__$d8b743afbb06e0339798c3a9c7622b5022$__9063d37a20ba90620022a490602c90602d9060040162004344565b602060405180830381865af4158015620022c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022e891906200400e565b15620024545762002454602c805462002301906200406d565b80601f01602080910402602001604051908101604052809291908181526020018280546200232f906200406d565b8015620023805780601f10620023545761010080835404028352916020019162002380565b820191906000526020600020905b8154815290600101906020018083116200236257829003601f168201915b5050505050602d805462002394906200406d565b80601f0160208091040260200160405190810160405280929190818152602001828054620023c2906200406d565b8015620024135780601f10620023e75761010080835404028352916020019162002413565b820191906000526020600020905b815481529060010190602001808311620023f557829003601f168201915b50505050506040518060400160405280601881526020017f457870656374656420646966666572656e74206572726f720000000000000000815250620034ad565b50602b805461ff0019169055565b62002543602d805462002475906200406d565b80601f0160208091040260200160405190810160405280929190818152602001828054620024a3906200406d565b8015620024f45780601f10620024c857610100808354040283529160200191620024f4565b820191906000526020600020905b815481529060010190602001808311620024d657829003601f168201915b50506040805160048152602481018252602080820180516001600160e01b0316631212173760e01b179052825160608101909352602380845291955091935091506200603f90830139620034ad565b62000807602c805462002556906200406d565b80601f016020809104026020016040519081016040528092919081815260200182805462002584906200406d565b8015620025d55780601f10620025a957610100808354040283529160200191620025d5565b820191906000526020600020905b815481529060010190602001808311620025b757829003601f168201915b50506040805160048152602481018252602080820180516001600160e01b031663761b17af60e11b1790528251808401909352601e83527f5f5f6572726f722073686f756c64206e6f742062652061737369676e656400009083015293509150620034ad9050565b6000602b54610100900460ff1660018111156200265e576200265e62004160565b03620026675750565b602e5460208201516040808401519051631b2b776160e11b81526000936001600160a01b031692633656eec292620026b3926004019182526001600160a01b0316602082015260400190565b602060405180830381865afa158015620026d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026f7919062003e54565b602e5460208401516060850151604051631b2b776160e11b815260048101929092526001600160a01b03908116602483015292935060009290911690633656eec290604401602060405180830381865afa1580156200275a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002780919062003e54565b602e54602085015160408087015160a088015191516321ff32a960e01b815260048101939093526001600160a01b0390811660248401529081166044830152929350600092909116906321ff32a990606401602060405180830381865afa158015620027f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002816919062003e54565b60405163248e63e160e11b815260016004820181905260248201819052604482018190526064820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063491cc7c290608401600060405180830381600087803b1580156200287c57600080fd5b505af115801562002891573d6000803e3d6000fd5b5050505083606001516001600160a01b031684604001516001600160a01b03168560a001516001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628760200151886080015160405162002902929190918252602082015260400190565b60405180910390a4602e5460208501516040808701516060880151608089015160a08a01519351632c57a50560e11b815260048101959095526001600160a01b039283166024860152908216604485015260648401529081166084830152909116906358af4a0a9060a401600060405180830381600087803b1580156200298857600080fd5b505af19250505080156200299a575060015b620029df57620029c660405180604001604052806003815260200162714ec760e91b815250856200317b565b604051632bc190bd60e21b815260040160405180910390fd5b83604001516001600160a01b03168460a001516001600160a01b03161415801562002a0d5750836101200151155b801562002a2057506000198460c0015114155b1562002b2457602e54602085015160408087015160a088015191516321ff32a960e01b815260048101939093526001600160a01b039081166024840152908116604483015260009216906321ff32a990606401602060405180830381865afa15801562002a91573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ab7919062003e54565b62002ac39083620040c8565b90508460800151811462002b225762002af860405180604001604052806003815260200162714ec760e91b815250866200317b565b62002b228186608001516040518060600160405280603181526020016200600e6031913962002e5f565b505b602e5460208501516040808701519051631b2b776160e11b81526000936001600160a01b031692633656eec29262002b70926004019182526001600160a01b0316602082015260400190565b602060405180830381865afa15801562002b8e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bb4919062003e54565b62002bc09085620040c8565b90508460800151811462002c1f5762002bf560405180604001604052806003815260200162714ec760e91b815250866200317b565b62002c1f81866080015160405180606001604052806032815260200162005fdc6032913962002e5f565b602e5460208601516060870151604051631b2b776160e11b815260048101929092526001600160a01b0390811660248301526000928692911690633656eec290604401602060405180830381865afa15801562002c80573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ca6919062003e54565b62002cb29190620040c8565b9050856080015181146200104b5762002ce760405180604001604052806003815260200162714ec760e91b815250876200317b565b6200104b818760800151604051806060016040528060308152602001620060826030913962002e5f565b62002d5a828260405160240162002d2a9291906200436d565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052620034ba565b5050565b8162002d5a57600080516020620060628339815191528160405162002d84919062004391565b60405180910390a162002d5a82620034c5565b8183101562002dd457600080516020620060628339815191528160405162002dc0919062004391565b60405180910390a162002dd483836200352c565b505050565b8183111562002dd457600080516020620060628339815191528160405162002e02919062004391565b60405180910390a162002dd4838362003628565b62002d5a828260405160240162002e2f9291906200436d565b60408051601f198184030181529190526020810180516001600160e01b0316631e53134760e11b179052620034ba565b81831462002dd457600080516020620060628339815191528160405162002e87919062004391565b60405180910390a162002dd483836200368b565b62002ec360405180604001604052806005815260200164616c69636560d81b81525062000b49565b601c80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152623137b160e91b602082015262002f089062000b49565b601d80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526563656c696e6560d01b602082015262002f509062000b49565b601e80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152623230b760e91b602082015262002f959062000b49565b601f80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600381526265766560e81b602082015262002fda9062000b49565b602060006101000a8154816001600160a01b0302191690836001600160a01b031602179055506200302b604051806040016040528060088152602001673232b83637bcb2b960c11b81525062000b49565b602280546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526536b4b73a32b960d11b6020820152620030739062000b49565b602180546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600c81526b3332b2a1b7b63632b1ba37b960a11b6020820152620030c19062000b49565b602380546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600a815269676f7665726e616e636560b01b60208201526200310d9062000b49565b602480546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260068152653830bab9b2b960d11b6020820152620031559062000b49565b602580546001600160a01b0319166001600160a01b039290921691909117905542602855565b62003195604051806020016040528060008152506200373d565b620031db6040518060400160405280601c81526020017f2573204661696c203a3a207b20546573744361736520232573207d0a0000000081525083836000015162003784565b62003217604051806040016040528060158152602001734ba37b5b2b724b210101010101010101010101e9605d1b815250826020015162002d11565b62003253604051806040016040528060158152602001734b33937b690101010101010101010101010101e9605d1b8152508260400151620037cf565b6200328f604051806040016040528060158152602001734ba37901010101010101010101010101010101e9605d1b8152508260600151620037cf565b620032cb604051806040016040528060158152602001734b0b6b7bab73a1010101010101010101010101e9605d1b815250826080015162002d11565b62003307604051806040016040528060158152602001734b1b0b63632b91010101010101010101010101e9605d1b8152508260a00151620037cf565b62003343604051806040016040528060158152602001734b0b8383937bb30b6399010101010101010101e9605d1b8152508260c0015162002d11565b6200337f604051806040016040528060158152602001734b130b630b731b2a33937b6901010101010101e9605d1b8152508260e0015162002d11565b620033bc604051806040016040528060158152602001734b130b630b731b2aa379010101010101010101e9605d1b81525082610100015162002d11565b620033f9604051806040016040528060158152602001734b0b8383937bb32b22337b920b636101010101e9605d1b81525082610120015162003818565b62002d5a604051806020016040528060008152506200373d565b805182516001919003620034a35760005b83518110156200349c5782818151811062003443576200344362003e6e565b602001015160f81c60f81b6001600160f81b0319168482815181106200346d576200346d62003e6e565b01602001516001600160f81b031916146200348757600091505b80620034938162003ff2565b91505062003424565b50620034a7565b5060005b92915050565b62002dd483838362003861565b6200080781620038a6565b80620008075760008051602062005fbc8339815191526040516200351a9060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a162000807620038c7565b8082101562002d5a5760008051602062005fbc8339815191526040516200358f9060208082526022908201527f4572726f723a2061203e3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16040805181815260098183015268202056616c7565206160b81b6060820152602081018490529051600080516020620061688339815191529181900360800190a1604080518181526009918101919091526810102b30b63ab2903160b91b60608201526020810182905260008051602062006168833981519152906080015b60405180910390a162002d5a620038c7565b8082111562002d5a5760008051602062005fbc8339815191526040516200358f9060208082526022908201527f4572726f723a2061203c3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b80821462002d5a5760008051602062005fbc833981519152604051620036ed9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a16000805160206200616883398151915282604051620037159190620043c2565b60405180910390a16000805160206200616883398151915281604051620036169190620043fb565b620008078160405160240162003754919062004032565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052620034ba565b62002dd48383836040516024016200379f9392919062004426565b60408051601f198184030181529190526020810180516001600160e01b0316635821efa160e01b179052620034ba565b62002d5a8282604051602401620037e892919062004460565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052620034ba565b62002d5a8282604051602401620038319291906200448c565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b179052620034ba565b6200386d838362003413565b62002dd457600080516020620060628339815191528160405162003892919062004391565b60405180910390a162002dd48383620039da565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620039c95760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620039649291602001620040de565b60408051601f1981840301815290829052620039809162004111565b6000604051808303816000865af19150503d8060008114620039bf576040519150601f19603f3d011682016040523d82523d6000602084013e620039c4565b606091505b505050505b6007805461ff001916610100179055565b620039e6828262003413565b62002d5a5760008051602062005fbc83398151915260405162003a469060208082526023908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b62797460408201526265735d60e81b606082015260800190565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf188260405162003a7f9190620044b2565b60405180910390a17fd26e16cad4548705e4c9e2d94f98ee91c289085ee425594fd5635fa2964ccf1881604051620036169190620044f1565b61064c806200451d83390190565b6114538062004b6983390190565b6001600160a01b03811681146200080757600080fd5b60008060006060848603121562003b0057600080fd5b833562003b0d8162003ad4565b9250602084013562003b1f8162003ad4565b9150604084013562003b318162003ad4565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b8181101562003b7f5783516001600160a01b03168352928401929184019160010162003b58565b50909695505050505050565b6000806000806080858703121562003ba257600080fd5b843562003baf8162003ad4565b9350602085013562003bc18162003ad4565b925060408501359150606085013562003bda8162003ad4565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121562003c0e57600080fd5b813567ffffffffffffffff8082111562003c2757600080fd5b818401915084601f83011262003c3c57600080fd5b81358181111562003c515762003c5162003be5565b604051601f8201601f19908116603f0116810190838211818310171562003c7c5762003c7c62003be5565b8160405282815287602084870101111562003c9657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562003d5e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562003d485783516001600160e01b0319168252928b019260019290920191908b019062003d1c565b50978a0197955050509187019160010162003cde565b50919998505050505050505050565b60005b8381101562003d8a57818101518382015260200162003d70565b50506000910152565b6000815180845262003dad81602086016020860162003d6d565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562003e1a57603f1988860301845262003e0785835162003d93565b9450928501929085019060010162003de8565b5092979650505050505050565b60008060006060848603121562003e3d57600080fd5b505081359360208301359350604090920135919050565b60006020828403121562003e6757600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115620034a757620034a762003e84565b600181815b8085111562003ef157816000190482111562003ed55762003ed562003e84565b8085161562003ee357918102915b93841c939080029062003eb5565b509250929050565b60008262003f0a57506001620034a7565b8162003f1957506000620034a7565b816001811462003f32576002811462003f3d5762003f5d565b6001915050620034a7565b60ff84111562003f515762003f5162003e84565b50506001821b620034a7565b5060208310610133831016604e8410600b841016171562003f82575081810a620034a7565b62003f8e838362003eb0565b806000190482111562003fa55762003fa562003e84565b029392505050565b600062003fbe60ff84168362003ef9565b9392505050565b634e487b7160e01b600052601260045260246000fd5b60008262003fed5762003fed62003fc5565b500490565b60006001820162004007576200400762003e84565b5060010190565b6000602082840312156200402157600080fd5b8151801515811462003fbe57600080fd5b60208152600062003fbe602083018462003d93565b6001600160a01b0383168152604060208201819052600090620004b19083018462003d93565b600181811c908216806200408257607f821691505b602082108103620040a357634e487b7160e01b600052602260045260246000fd5b50919050565b6000600160ff1b8201620040c157620040c162003e84565b5060000390565b81810381811115620034a757620034a762003e84565b6001600160e01b03198316815281516000906200410381600485016020870162003d6d565b919091016004019392505050565b600082516200412581846020870162003d6d565b9190910192915050565b8082028115828204841417620034a757620034a762003e84565b6000826200415b576200415b62003fc5565b500690565b634e487b7160e01b600052602160045260246000fd5b601f82111562002dd457600081815260208120601f850160051c810160208610156200419f5750805b601f850160051c820191505b818110156200104b57828155600101620041ab565b815167ffffffffffffffff811115620041dd57620041dd62003be5565b620041f581620041ee84546200406d565b8462004176565b602080601f8311600181146200422d5760008415620042145750858301515b600019600386901b1c1916600185901b1785556200104b565b600085815260208120601f198616915b828110156200425e578886015182559484019460019091019084016200423d565b50858210156200427d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600081546200429c816200406d565b808552602060018381168015620042bc5760018114620042d75762004307565b60ff1985168884015283151560051b88018301955062004307565b866000528260002060005b85811015620042ff5781548a8201860152908301908401620042e2565b890184019650505b505050505092915050565b6040815260006200432760408301856200428d565b82810360208401526200433b818562003d93565b95945050505050565b6040815260006200435960408301856200428d565b82810360208401526200433b81856200428d565b60408152600062004382604083018562003d93565b90508260208301529392505050565b60408152600560408201526422b93937b960d91b606082015260806020820152600062003fbe608083018462003d93565b604081526000620043ed60408301600a8152690808080808081319599d60b21b602082015260400190565b905082602083015292915050565b604081526000620043ed60408301600a8152690808080808149a59da1d60b21b602082015260400190565b6060815260006200443b606083018662003d93565b82810360208401526200444f818662003d93565b915050826040830152949350505050565b60408152600062004475604083018562003d93565b905060018060a01b03831660208301529392505050565b604081526000620044a1604083018562003d93565b905082151560208301529392505050565b604081526000620044dd60408301600a8152690808080808081319599d60b21b602082015260400190565b8281036020840152620004b1818562003d93565b604081526000620044dd60408301600a8152690808080808149a59da1d60b21b60208201526040019056fe60c060405234801561001057600080fd5b5060405161064c38038061064c83398101604081905261002f91610043565b6001600160a01b031660805260a052610080565b6000806040838503121561005657600080fd5b825160208401519092506001600160a01b038116811461007557600080fd5b809150509250929050565b60805160a0516105a76100a560003960006102f6015260006102ba01526105a76000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c80637ecebe00116100665780637ecebe0014610107578063bd85b0391461011a578063c45a01551461012d578063c905a4b51461014d578063e985e9c51461015557600080fd5b8062ad800c1461009757806321ff32a9146100c05780633656eec2146100e15780634e41a1fb146100f4575b600080fd5b6100aa6100a536600461038f565b610178565b6040516100b791906103ee565b60405180910390f35b6100d36100ce366004610418565b6101b9565b6040519081526020016100b7565b6100d36100ef366004610454565b6101ff565b6100aa61010236600461038f565b610236565b6100d3610115366004610480565b61025e565b6100d361012836600461038f565b61028a565b6101356102ac565b6040516001600160a01b0390911681526020016100b7565b6100d36102ef565b61016861016336600461049b565b610327565b60405190151581526020016100b7565b60606101b4600460008481526020019081526020016000206040516020016101a091906104c5565b60405160208183030381529060405261036b565b919050565b60008381526003602090815260408083206001600160a01b03868116855290835281842090851684528252808320548151928301526101f891016101a0565b9392505050565b6000828152602081815260408083206001600160a01b038516845282528083205481519283015261023091016101a0565b92915050565b60606101b4600560008481526020019081526020016000206040516020016101a091906104c5565b6001600160a01b0381166000908152600660209081526040808320548151928301526101b491016101a0565b6000818152600160209081526040808320548151928301526101b491016101a0565b604080516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660208201526000916102ec91016101a0565b90565b60006102ec7f00000000000000000000000000000000000000000000000000000000000000006040516020016101a091815260200190565b6001600160a01b038281166000908152600260209081526040808320938516835292815282822054835160ff909116151591810191909152909161023091016101a0565b80604051636e64089360e11b815260040161038691906103ee565b60405180910390fd5b6000602082840312156103a157600080fd5b5035919050565b6000815180845260005b818110156103ce576020818501810151868301820152016103b2565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006101f860208301846103a8565b80356001600160a01b03811681146101b457600080fd5b60008060006060848603121561042d57600080fd5b8335925061043d60208501610401565b915061044b60408501610401565b90509250925092565b6000806040838503121561046757600080fd5b8235915061047760208401610401565b90509250929050565b60006020828403121561049257600080fd5b6101f882610401565b600080604083850312156104ae57600080fd5b6104b783610401565b915061047760208401610401565b600060208083526000845481600182811c9150808316806104e757607f831692505b858310810361050457634e487b7160e01b85526022600452602485fd5b878601838152602001818015610521576001811461053757610562565b60ff198616825284151560051b82019650610562565b60008b81526020902060005b8681101561055c57815484820152908501908901610543565b83019750505b5094999850505050505050505056fea264697066735822122011b597337bb722b8b0f6adf4b9a95f5bc24056626005b89db924567d5aa7bde864736f6c6343000813003361010060405234801561001157600080fd5b506040516114533803806114538339810160408190526100309161011c565b6001600160a01b03808416608052811660a05260c082905260408051808201825260018152603160f81b60209182015290518491849184916100d9917f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd917fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6914691309101938452602084019290925260408301526001600160a01b0316606082015260800190565b60408051601f19818403018152919052805160209091012060e05250610158945050505050565b80516001600160a01b038116811461011757600080fd5b919050565b60008060006060848603121561013157600080fd5b61013a84610100565b92506020840151915061014f60408501610100565b90509250925092565b60805160a05160c05160e0516112bc61019760003960008181610253015261058f01526000610a0f015260006109d20152600060f401526112bc6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063836a10401161008c5780639cd241af116100665780639cd241af146103065780639eea5f6614610319578063a22cb4651461032c578063e44808bc1461033f576100ea565b8063836a1040146102ae5780639032c726146102c157806394a97cdb146102d4576100ea565b80633644e515116100c85780633644e5151461024e578063365f7185146102755780634ed2d6ac1461028857806358af4a0a1461029b576100ea565b806317fad7fc146101ed5780631c0f12b61461020257806330adf81f14610215575b60003660606000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316858560405161012c929190610c03565b600060405180830381855af49150503d8060008114610167576040519150601f19603f3d011682016040523d82523d6000602084013e61016c565b606091505b5091509150811561019057604051638bb0a34b60e01b815260040160405180910390fd5b600061019b82610c13565b90506001600160e01b03198116636e64089360e11b146101bd57815160208301fd5b8151600319810160048401908152926101de91810160200190602401610cb9565b80519650602001945050505050f35b6102006101fb366004610db3565b610352565b005b610200610210366004610e44565b610406565b61023c7f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e97367381565b60405190815260200160405180910390f35b61023c7f000000000000000000000000000000000000000000000000000000000000000081565b610200610283366004610ed9565b610419565b610200610296366004610f46565b61044a565b6102006102a9366004610f8c565b610498565b6102006102bc366004610fe3565b6104a5565b6102006102cf366004611028565b6104b5565b6102006102e2366004610fe3565b6000928352602083815260408085206001600160a01b039094168552929052912055565b610200610314366004610fe3565b610704565b610200610327366004610fe3565b610710565b61020061033a3660046110a2565b61071b565b61020061034d366004610f8c565b610787565b6001600160a01b038616158061036f57506001600160a01b038516155b1561038d5760405163f0dd15fd60e01b815260040160405180910390fd5b8281146103ad5760405163174861a760e31b815260040160405180910390fd5b60005b838110156103fd576103f58585838181106103cd576103cd6110d5565b9050602002013588888686868181106103e8576103e86110d5565b90506020020135336107d7565b6001016103b0565b50505050505050565b61041384848484336107d7565b50505050565b6000838152600460205260409020610431838261116b565b506000838152600560205260409020610413828261116b565b8361045481610994565b6001600160a01b0316336001600160a01b03161461048557604051632aab8bd360e01b815260040160405180910390fd5b61049185858585610a51565b5050505050565b61049185858585856107d7565b6104b0838383610abe565b505050565b834211156104d65760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b0387166104fd5760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b0387811660008181526006602090815260408083205481517f65619c8664d6db8aae8c236ad19598696159942a4245b23b45565cc18e9736738185015280830195909552948b166060850152891515608085015260a084019490945260c08084018990528451808503909101815260e08401909452835193019290922061190160f01b6101008301527f00000000000000000000000000000000000000000000000000000000000000006101028301526101228201526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610629573d6000803e3d6000fd5b505050602060405103519050886001600160a01b0316816001600160a01b03161461066757604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b0389166000908152600660205260408120805490919061068d90611241565b909155506001600160a01b038981166000818152600260209081526040808320948d1680845294825291829020805460ff19168c151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050505050505050565b6104b083838333610a51565b6104b0838383610b65565b3360008181526002602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b8461079181610994565b6001600160a01b0316336001600160a01b0316146107c257604051632aab8bd360e01b815260040160405180910390fd5b6107cf86868686866107d7565b505050505050565b6001600160a01b03841615806107f457506001600160a01b038316155b156108125760405163f0dd15fd60e01b815260040160405180910390fd5b836001600160a01b0316816001600160a01b0316146108d6576001600160a01b0380851660009081526002602090815260408083209385168352929052205460ff166108d65760008581526003602090815260408083206001600160a01b038089168552908352818420908516845290915290205460001981146108d45760008681526003602090815260408083206001600160a01b03808a1685529083528184209086168452909152812080548592906108ce90849061125a565b90915550505b505b6000858152602081815260408083206001600160a01b03881684529091528120805484929061090690849061125a565b90915550506000858152602081815260408083206001600160a01b03871684529091528120805484929061093b908490611273565b909155505060408051868152602081018490526001600160a01b038086169287821692918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b604080513060208083019190915281830193909352815180820383018152606080830184528151918501919091206001600160f81b031960808401527f000000000000000000000000000000000000000000000000000000000000000090911b6bffffffffffffffffffffffff1916608183015260958201527f000000000000000000000000000000000000000000000000000000000000000060b5808301919091528251808303909101815260d5909101909152805191012090565b60008481526003602090815260408083206001600160a01b0385811680865291845282852090881680865290845293829020869055905185815290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050565b6000838152602081815260408083206001600160a01b038616845290915281208054839290610aee908490611273565b909155505060008381526001602052604081208054839290610b11908490611273565b909155505060408051848152602081018390526001600160a01b0384169160009133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291015b60405180910390a4505050565b6000838152602081815260408083206001600160a01b038616845290915281208054839290610b9590849061125a565b909155505060008381526001602052604081208054839290610bb890849061125a565b909155505060408051848152602081018390526000916001600160a01b0385169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101610b58565b8183823760009101908152919050565b805160208201516001600160e01b03198082169291906004831015610c425780818460040360031b1b83161693505b505050919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c8957610c89610c4a565b604052919050565b600067ffffffffffffffff821115610cab57610cab610c4a565b50601f01601f191660200190565b60006020808385031215610ccc57600080fd5b825167ffffffffffffffff811115610ce357600080fd5b8301601f81018513610cf457600080fd5b8051610d07610d0282610c91565b610c60565b8181528684838501011115610d1b57600080fd5b60005b82811015610d39578381018501518282018601528401610d1e565b50600091810190930152509392505050565b80356001600160a01b0381168114610d6257600080fd5b919050565b60008083601f840112610d7957600080fd5b50813567ffffffffffffffff811115610d9157600080fd5b6020830191508360208260051b8501011115610dac57600080fd5b9250929050565b60008060008060008060808789031215610dcc57600080fd5b610dd587610d4b565b9550610de360208801610d4b565b9450604087013567ffffffffffffffff80821115610e0057600080fd5b610e0c8a838b01610d67565b90965094506060890135915080821115610e2557600080fd5b50610e3289828a01610d67565b979a9699509497509295939492505050565b60008060008060808587031215610e5a57600080fd5b84359350610e6a60208601610d4b565b9250610e7860408601610d4b565b9396929550929360600135925050565b600082601f830112610e9957600080fd5b8135610ea7610d0282610c91565b818152846020838601011115610ebc57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610eee57600080fd5b83359250602084013567ffffffffffffffff80821115610f0d57600080fd5b610f1987838801610e88565b93506040860135915080821115610f2f57600080fd5b50610f3c86828701610e88565b9150509250925092565b60008060008060808587031215610f5c57600080fd5b84359350610f6c60208601610d4b565b925060408501359150610f8160608601610d4b565b905092959194509250565b600080600080600060a08688031215610fa457600080fd5b85359450610fb460208701610d4b565b9350610fc260408701610d4b565b925060608601359150610fd760808701610d4b565b90509295509295909350565b600080600060608486031215610ff857600080fd5b8335925061100860208501610d4b565b9150604084013590509250925092565b80358015158114610d6257600080fd5b600080600080600080600060e0888a03121561104357600080fd5b61104c88610d4b565b965061105a60208901610d4b565b955061106860408901611018565b945060608801359350608088013560ff8116811461108557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156110b557600080fd5b6110be83610d4b565b91506110cc60208401611018565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806110ff57607f821691505b60208210810361111f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104b057600081815260208120601f850160051c8101602086101561114c5750805b601f850160051c820191505b818110156107cf57828155600101611158565b815167ffffffffffffffff81111561118557611185610c4a565b6111998161119384546110eb565b84611125565b602080601f8311600181146111ce57600084156111b65750858301515b600019600386901b1c1916600185901b1785556107cf565b600085815260208120601f198616915b828110156111fd578886015182559484019460019091019084016111de565b508582101561121b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6000600182016112535761125361122b565b5060010190565b8181038181111561126d5761126d61122b565b92915050565b8082018082111561126d5761126d61122b56fea264697066735822122044d89e7089f3f9e996e9d86cd09fcb4f984163396a6dce85c53e448e66660c7164736f6c6343000813003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5066726f6d206163636f756e742062616c616e6365206d75737420686176652064656372656173656420627920616d6f756e746e756d626572206f6620617070726f76616c73206d75737420686176652064656372656173656420627920616d6f756e745f5f6661696c5f6572726f722073686f756c64206e6f742062652061737369676e6564280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583746f206163636f756e742062616c616e6365206d757374206861766520696e6372656173656420627920616d6f756e745f74617267657456616c75652073686f756c64206265206c657373207468616e205f76616c75656578706563746564207570706572426f756e6420746f206d61746368205f74617267657456616c75656578706563746564206c6f776572426f756e6420746f206d61746368205f74617267657456616c75652323232d20257320746573742063617365732070617373656420666f72204d756c7469546f6b656e2e5f7472616e7366657246726f6d2829202d232323b2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a85f74617267657456616c75652073686f756c642062652067726561746572207468616e206f7220657175616c20746f205f76616c7565a26469706673582212201711edb8ed88a50712b7a26dae4f128640ce8e849e0fa60dd3d9acb64192009c64736f6c63430008130033",
    sourceMap:
      "449:9841:111:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:532;;;:::i;:::-;;2545:198:159;;;;;;:::i;:::-;;:::i;:::-;;;845:25:165;;;833:2;818:18;2545:198:159;;;;;;;;2170:134:57;;;:::i;:::-;;;;;;;:::i;1401:1537:111:-;;;:::i;2749:417:159:-;;;;;;:::i;:::-;;:::i;2939:133:57:-;;;:::i;2640:141::-;;;:::i;2321:218:159:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3385:32:165;;;3367:51;;3355:2;3340:18;2321:218:159;3221:203:165;2456:178:57;;;:::i;:::-;;;;;;;:::i;2310:140::-;;;:::i;:::-;;;;;;;:::i;2787:146::-;;;:::i;3830:2306:159:-;;;;;;:::i;:::-;;:::i;1875:141:57:-;;;:::i;1819:584:50:-;;;:::i;:::-;;;6827:14:165;;6820:22;6802:41;;6790:2;6775:18;1819:584:50;6662:187:165;2022:142:57;;;:::i;1572:26:50:-;;;;;;;;;543:532:111;619:13;:11;:13::i;:::-;656:8;;642:23;;-1:-1:-1;;;642:23:111;;-1:-1:-1;;;;;656:8:111;;;642:23;;;3367:51:165;642:13:111;;;;3340:18:165;;642:23:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;766:16:111;;719:65;;675:20;;-1:-1:-1;675:20:111;;-1:-1:-1;;;;;;766:16:111;;;;719:65;;;:::i;:::-;7028:25:165;;;-1:-1:-1;;;;;7089:32:165;7084:2;7069:18;;7062:60;7016:2;7001:18;719:65:111;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;985:16:111;;871:149;;675:119;;-1:-1:-1;675:119:111;;953:1;;-1:-1:-1;;;;;985:16:111;;871:149;;;:::i;:::-;-1:-1:-1;;;;;7391:15:165;;;7373:34;;7438:2;7423:18;;7416:34;;;;7486:15;;;7481:2;7466:18;;7459:43;7323:2;7308:18;871:149:111;;;;;;;;;;;;;;;;;;;;;;;804:10;;:240;;;;;-1:-1:-1;;;;;804:240:111;;;;;-1:-1:-1;;;;;804:240:111;;;;;;317:28:51;309:37;;-1:-1:-1;;;;;1054:12:111;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;576:499;543:532::o;2545:198:159:-;2709:22;;-1:-1:-1;;;2709:22:159;;-1:-1:-1;;;;;3385:32:165;;;2709:22:159;;;3367:51:165;2655:7:159;;2681:55;;2695:5;;2702;;2709:15;;;;;3340:18:165;;2709:22:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2733:2;2681:13;:55::i;:::-;2674:62;2545:198;-1:-1:-1;;;;2545:198:159:o;2170:134:57:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:57;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;1401:1537:111:-;1508:31;1542:392;1564:360;1612:47;1617:1;1620;1623:4;1629:10;-1:-1:-1;;1612:4:111;:47::i;:::-;1703:10;1708:1;1711;1703:4;:10::i;:::-;1760:52;1765:1;1768:5;-1:-1:-1;;;;;;;1760:4:111;:52::i;:::-;1868:42;1873:1;1876:6;1884:25;1868:4;:42::i;:::-;1564:4;:360::i;:::-;1542:8;:392::i;:::-;1508:426;;2040:9;2035:754;2059:12;:19;2055:1;:23;2035:754;;;2099:17;2119:12;2132:1;2119:15;;;;;;;;:::i;:::-;;;;;;;2135:1;2119:18;;;;;;;;:::i;:::-;;;;;;;2099:38;;2151:19;-1:-1:-1;;;;;2173:30:111;;:9;:30;2151:52;;2217:24;2244:440;;;;;;;;2278:1;2244:440;;;;2323:1;2318;2308;2312;2308:5;;;;:::i;:::-;2307:12;;;;:::i;:::-;2306:18;;;;:::i;:::-;2244:440;;2348:5;;-1:-1:-1;;;;;2348:5:111;;;2244:440;;;;2375:3;;;2244:440;;;;2404:15;;2244:440;;;;;2404:12;;2417:1;;2404:15;;;;;;:::i;:::-;;;;;;;2420:1;2404:18;;;;;;;;:::i;:::-;;;;;;;2244:440;;;;2469:1;2448:12;2461:1;2448:15;;;;;;;;:::i;:::-;;;;;;;2464:1;2448:18;;;;;;;;:::i;:::-;;;;;;;:22;:39;;2481:6;;-1:-1:-1;;;;;2481:6:111;2448:39;;;2473:5;;-1:-1:-1;;;;;2473:5:111;2448:39;-1:-1:-1;;;;;2244:440:111;;;;;2516:9;2244:440;;;;2556:12;2569:1;2556:15;;;;;;;;:::i;:::-;;;;;;;2572:1;2556:18;;;;;;;;:::i;:::-;;;;;;;2244:440;;;;2603:12;2616:1;2603:15;;;;;;;;:::i;:::-;;;;;;;2619:1;2603:18;;;;;;;;:::i;:::-;;;;;;;2244:440;;;;2655:14;2244:440;;;;;2217:467;;2698:17;2706:8;2698:7;:17::i;:::-;2729:16;2736:8;2729:6;:16::i;:::-;2759:19;2769:8;2759:9;:19::i;:::-;2085:704;;;2080:3;;;;;:::i;:::-;;;;2035:754;;;;2799:132;;;;;;;;;;;;;;;;;;2902:12;:19;2799:12;:132::i;:::-;1450:1488;1401:1537::o;2749:417:159:-;2925:22;;-1:-1:-1;;;2925:22:159;;-1:-1:-1;;;;;3385:32:165;;;2925:22:159;;;3367:51:165;2883:7:159;;;;2925:15;;;;;3340:18:165;;2925:22:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2902:45;;2970:12;2961:6;:21;2957:56;;;2991:22;;-1:-1:-1;;;2991:22:159;;;;;;;;;;;2957:56;317:28:51;309:37;;-1:-1:-1;;;;;3023:12:159;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3047:20:159;;-1:-1:-1;;;3047:20:159;;-1:-1:-1;;;;;3385:32:165;;3047:20:159;;;3367:51:165;3047:13:159;;-1:-1:-1;3047:13:159;;-1:-1:-1;3340:18:165;;3047:20:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3077:23:159;;-1:-1:-1;;;3077:23:159;;-1:-1:-1;;;;;10094:32:165;;3077:23:159;;;10076:51:165;3092:7:159;10143:18:165;;;10136:34;3077:7:159;;-1:-1:-1;3077:7:159;;-1:-1:-1;10049:18:165;;3077:23:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3110:26:159;;-1:-1:-1;;;3110:26:159;;-1:-1:-1;;;;;10094:32:165;;;3110:26:159;;;10076:51:165;10143:18;;;10136:34;;;3110:14:159;;;-1:-1:-1;3110:14:159;;-1:-1:-1;10049:18:165;;3110:26:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3153:6:159;;2749:417;-1:-1:-1;;;;;2749:417:159:o;2939:133:57:-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:57;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:57;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;2321:218:159:-;2377:13;2455:4;2444:16;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2444:16:159;;;;;;;;;;2434:27;;2444:16;2434:27;;;;-1:-1:-1;;;2474:21:159;;2434:27;-1:-1:-1;2474:8:159;;;;:21;;2434:27;;2490:4;;2474:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2505:27:159;;-1:-1:-1;;;2505:27:159;;-1:-1:-1;;;;;10094:32:165;;2505:27:159;;;10076:51:165;2520:11:159;10143:18:165;;;10136:34;2505:7:159;;-1:-1:-1;2505:7:159;;-1:-1:-1;10049:18:165;;2505:27:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:218;;;:::o;2456:178:57:-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;2310:140::-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2787:146;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3830:2306:159;3955:18;3976:11;;;;;3998:335;;4031:138;4075:6;4059:12;:22;;4031:138;;;;;;;;;;;;;;;;;:10;:138::i;:::-;3998:335;;;4200:122;4237:12;4228:6;:21;4200:122;;;;;;;;;;;;;;;;;:10;:122::i;:::-;4343:18;4364:13;:49;;4407:6;4364:49;;;4380:24;4397:6;4380;:24;:::i;:::-;4343:70;;4423:18;4445:13;4444:14;:75;;4513:6;4444:75;;;4490:7;4491:6;4490:7;:::i;:::-;4473:25;;:6;:25;:::i;:::-;4423:96;;4597:10;4582:12;:25;:54;;;;4626:10;4611:12;:25;4582:54;4578:233;;;4652:57;4661:12;4675:10;4652:57;;;;;;;;;;;;;-1:-1:-1;;;4652:57:159;;;:8;:57::i;:::-;4723;4732:12;4746:10;4723:57;;;;;;;;;;;;;-1:-1:-1;;;4723:57:159;;;:8;:57::i;:::-;4794:7;;;3830:2306;;;:::o;4578:233::-;4908:13;4904:1226;;;4937:21;4961;4976:6;4961:12;:21;:::i;:::-;4937:45;;5024:6;5000:13;:31;4996:516;;;5051:133;;;;;;;;;;;;;;;;;;;5135:31;5153:13;5143:6;5135:31;:::i;:::-;5051:12;:133::i;:::-;5202:37;;;;;;;;;;;;;;-1:-1:-1;;;5202:37:159;;;5232:6;5202:12;:37::i;:::-;5257:44;;;;;;;;;;;;;;-1:-1:-1;;;5257:44:159;;;5287:13;5257:12;:44::i;:::-;4996:516;;;5340:157;5370:10;5402:12;5340:157;;;;;;;;;;;;;;;;;:8;:157::i;:::-;4923:599;4904:1226;;;5542:21;5566;5575:12;5566:6;:21;:::i;:::-;5542:45;-1:-1:-1;5629:7:159;5630:6;5629:7;:::i;:::-;5605:13;:32;5601:519;;;5657:134;;;;;;;;;;;;;;;;;;5760:13;5750:6;5749:7;;;:::i;:::-;5741:32;;;;:::i;5657:134::-;5809:37;;;;;;;;;;;;;;-1:-1:-1;;;5809:37:159;;;5839:6;5809:12;:37::i;:::-;5864:45;;;;;;;;;;;;;;-1:-1:-1;;;5864:45:159;;;5895:13;5864:12;:45::i;:::-;5601:519;;;5948:157;5978:10;6010:12;5948:157;;;;;;;;;;;;;;;;;:8;:157::i;:::-;5528:602;3945:2191;;;3830:2306;;;:::o;1875:141:57:-;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:50;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:50;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;10076:51:165;;;-1:-1:-1;;;10143:18:165;;;10136:34;2196:43:50;;;;;;;;;10049:18:165;;;2196:43:50;;;-1:-1:-1;;1671:64:50;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:50;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:50:o;2022:142:57:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:57;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;3125:71:160:-;3176:13;:11;:13::i;:::-;3125:71::o;6618:313::-;6798:16;;;6812:1;6798:16;;;;;;;;;6756:22;;6798:16;;;;;;;;;;-1:-1:-1;6798:16:160;6790:24;;6835:1;6824:5;6830:1;6824:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6857:1;6846:5;6852:1;6846:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6879:1;6868:5;6874:1;6868:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6901:1;6890:5;6896:1;6890:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6923:1;6912:5;6918:1;6912:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6618:313;;;;;;;:::o;5907:190::-;6030:16;;;6044:1;6030:16;;;5988:22;6030:16;;;;;5988:22;6030:16;;;;;;;;;;-1:-1:-1;6030:16:160;6022:24;;6067:1;6056:5;6062:1;6056:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6089:1;6078:5;6084:1;6078:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;5907:190;;;;:::o;6340:272::-;6501:16;;;6515:1;6501:16;;;;;;;;;6459:22;;6501:16;;;;;;;;;;-1:-1:-1;6501:16:160;6493:24;;6538:1;6527:5;6533:1;6527:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6560:1;6549:5;6555:1;6549:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6582:1;6571:5;6577:1;6571:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6604:1;6593:5;6599:1;6593:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6340:272;;;;;;:::o;6103:231::-;6245:16;;;6259:1;6245:16;;;;;;;;;6203:22;;6245:16;;;6203:22;;6245:16;;;;;-1:-1:-1;6245:16:160;6237:24;;6282:1;6271:5;6277:1;6271:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6304:1;6293:5;6299:1;6293:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6326:1;6315:5;6321:1;6315:8;;;;;;;;:::i;:::-;;;;;;:12;;;;;6103:231;;;;;:::o;9634:312::-;9833:18;;;9849:1;9833:18;;;;;;;;;9789:24;;9833:18;;;;;;;;;;;;;;;;;;;;9825:26;;9872:1;9861:5;9867:1;9861:8;;;;;;;;:::i;:::-;;;;;;:12;;;;9894:1;9883:5;9889:1;9883:8;;;;;;;;:::i;:::-;;;;;;:12;;;;9916:1;9905:5;9911:1;9905:8;;;;;;;;:::i;:::-;;;;;;:12;;;;9938:1;9927:5;9933:1;9927:8;;;;;;;;:::i;:::-;;;;;;:12;;;;9634:312;;;;;;:::o;4078:1823::-;4160:25;4304:12;4319:1;4304:16;;4330:33;4380:6;:13;4366:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4366:28:160;;4330:64;;4409:9;4404:133;4428:6;:13;4424:1;:17;4404:133;;;4470:6;4477:1;4470:9;;;;;;;;:::i;:::-;;;;;;;:16;4462:24;;;;;:::i;:::-;;;4522:4;4500:16;4517:1;4500:19;;;;;;;;:::i;:::-;;;;;;;;;;:26;4443:3;;;;:::i;:::-;;;;4404:133;;;;4611:4;4595:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4586:30;;4631:9;4626:1246;4650:6;:13;4646:1;:17;4626:1246;;;4710:6;:13;4696:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4696:28:160;;4684:6;4691:1;4684:9;;;;;;;;:::i;:::-;;;;;;:40;;;;4743:9;4738:1124;4762:6;:13;4758:1;:17;4738:1124;;;5712:6;5719:1;5712:9;;;;;;;;:::i;:::-;;;;;;;5813:6;5820:1;5813:9;;;;;;;;:::i;:::-;;;;;;;:16;5765;5782:1;5765:19;;;;;;;;:::i;:::-;;;;;;;5749:6;:13;:35;;;;:::i;:::-;5744:41;;:1;:41;:::i;:::-;5743:86;;;;:::i;:::-;5712:135;;;;;;;;:::i;:::-;;;;;;;5697:6;5704:1;5697:9;;;;;;;;:::i;:::-;;;;;;;5707:1;5697:12;;;;;;;;:::i;:::-;;;;;;;;;;:150;4777:3;;;;:::i;:::-;;;;4738:1124;;;-1:-1:-1;4665:3:160;;;;:::i;:::-;;;;4626:1246;;;;5881:13;;4078:1823;;;:::o;2944:1076:111:-;1346:23:160;:55;;-1:-1:-1;;1346:55:160;;;;;1421:48;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1421:48:160;-1:-1:-1;;;1421:48:160;;;1411:7;;:58;;:7;:58;:::i;:::-;-1:-1:-1;1494:47:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1494:47:160;-1:-1:-1;;;1494:47:160;;;1479:12;;:62;;:12;:62;:::i;:::-;-1:-1:-1;3085:10:111::1;::::0;3124:16:::1;::::0;::::1;::::0;3154:13:::1;::::0;;::::1;::::0;3181:20:::1;::::0;::::1;::::0;3085:126;;-1:-1:-1;;;3085:126:111;;::::1;::::0;::::1;16039:25:165::0;;;;-1:-1:-1;;;;;16100:32:165;;;16080:18;;;16073:60;16149:18;;;16142:34;;;;3085:10:111;;::::1;::::0;:25:::1;::::0;16012:18:165;;3085:126:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3221:10:111::1;::::0;3260:16:::1;::::0;::::1;::::0;3290:11:::1;::::0;::::1;::::0;3221:10:::1;3315:18:::0;::::1;::::0;3221:122:::1;::::0;-1:-1:-1;;;3221:122:111;;::::1;::::0;::::1;16039:25:165::0;;;;-1:-1:-1;;;;;16100:32:165;;;16080:18;;;16073:60;16149:18;;;16142:34;3221:10:111;;::::1;::::0;-1:-1:-1;3221:25:111::1;::::0;-1:-1:-1;16012:18:165;;3221:122:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3528:8;:13;;;-1:-1:-1::0;;;;;3509:32:111::1;:8;:15;;;-1:-1:-1::0;;;;;3509:32:111::1;;3505:509;;3571:13;::::0;;::::1;::::0;3557:28;;-1:-1:-1;;;3557:28:111;;-1:-1:-1;;;;;3385:32:165;;;3557:28:111::1;::::0;::::1;3367:51:165::0;3557:13:111;;::::1;::::0;3340:18:165;;3557:28:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3603:8;:23;;;3599:377;;;3646:10;::::0;3675:15:::1;::::0;::::1;::::0;3646:51:::1;::::0;-1:-1:-1;;;3646:51:111;;-1:-1:-1;;;;;16373:32:165;;;3646:51:111::1;::::0;::::1;16355::165::0;3646:10:111;16422:18:165;;;16415:50;3646:10:111;::::1;::::0;:28:::1;::::0;16328:18:165;;3646:51:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3599:377;;;3736:10;::::0;3765:15:::1;::::0;::::1;::::0;3736:52:::1;::::0;-1:-1:-1;;;3736:52:111;;-1:-1:-1;;;;;16373:32:165;;;3736:52:111::1;::::0;::::1;16355:51:165::0;3736:10:111::1;16422:18:165::0;;;16415:50;3736:10:111;::::1;::::0;:28:::1;::::0;16328:18:165;;3736:52:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3806:10:111::1;::::0;3850:16:::1;::::0;::::1;::::0;3888:15:::1;::::0;::::1;::::0;3925:18:::1;::::0;::::1;::::0;3806:155:::1;::::0;-1:-1:-1;;;3806:155:111;;::::1;::::0;::::1;16039:25:165::0;;;;-1:-1:-1;;;;;16100:32:165;;;16080:18;;;16073:60;16149:18;;;16142:34;3806:10:111;;::::1;::::0;-1:-1:-1;3806:22:111::1;::::0;-1:-1:-1;16012:18:165;;3806:155:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3599:377;317:28:51;309:37;;-1:-1:-1::0;;;;;3989:12:111::1;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;4026:1801:::0;4392:23:::1;4437:8;:13;;;-1:-1:-1::0;;;;;4418:32:111::1;:8;:15;;;-1:-1:-1::0;;;;;4418:32:111::1;;;:72;;;;;4467:8;:23;;;4466:24;4418:72;:127;;;;;-1:-1:-1::0;;4506:8:111::1;:18;;;:39;;4418:127;:179;;;;;4582:8;:15;;;4561:8;:18;;;:36;4418:179;4734:15;::::0;::::1;::::0;4711:20:::1;::::0;::::1;::::0;4908:18:::1;::::0;::::1;::::0;4392:205;;-1:-1:-1;4711:38:111;-1:-1:-1;4711:38:111;4682:26:::1;::::0;4734:15;4888:38:::1;::::0;-1:-1:-1;;4888:38:111::1;:::i;:::-;4887:70;4861:96;;5121:18;:43;;;;5143:21;5121:43;:65;;;;5168:18;5121:65;5117:704;;;5222:10;::::0;5278:16:::1;::::0;::::1;::::0;5316:13:::1;::::0;;::::1;::::0;5351:11:::1;::::0;::::1;::::0;5384:15:::1;::::0;::::1;::::0;5421::::1;::::0;::::1;::::0;5222:232;;-1:-1:-1;;;5222:232:111;;::::1;::::0;::::1;16735:25:165::0;;;;-1:-1:-1;;;;;16834:15:165;;;16814:18;;;16807:43;16886:15;;;16866:18;;;16859:43;16918:18;;;16911:34;16982:15;;;16961:19;;;16954:44;5222:10:111;;::::1;::::0;:34:::1;::::0;16707:19:165;;5222:232:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;5202:609;;;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;5728:7:111::1;:11;5738:1:::0;5728:7;:11:::1;:::i;:::-;-1:-1:-1::0;317:47:56::1;::::0;359:4:::1;317:47;::::0;::::1;17162:36:165::0;17135:18;;317:47:56::1;::::0;;-1:-1:-1;;317:47:56;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;317:47:56::1;-1:-1:-1::0;;;317:47:56::1;::::0;;5757:12:111::1;::::0;:39:::1;::::0;:12;:39:::1;:::i;:::-;;5569:242;5202:609;;;5485:29;;;;;;;;;;;;;;-1:-1:-1::0;;;5485:29:111::1;;::::0;5505:8:::1;5485:5;:29::i;:::-;5539:14;;-1:-1:-1::0;;;5539:14:111::1;;;;;;;;;;;5202:609;-1:-1:-1::0;;1944:48:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1944:48:160;-1:-1:-1;;;1944:48:160;;;1927:66;;-1:-1:-1;;;1927:66:160;;:3;;-1:-1:-1;1927:7:160;;:66;;1935:7;;1944:48;;1927:66;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1910:1203;;;2098:223;2127:129;2157:12;2127:129;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2191:47:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2191:47:160;-1:-1:-1;;;2191:47:160;;;;-1:-1:-1;2127:8:160;;-1:-1:-1;;2127:129:160:i;:::-;2126:130;2098:223;;;;;;;;;;;;;;;;;:10;:223::i;:::-;2450:30;;-1:-1:-1;;;2450:30:160;;:3;;:7;;:30;;2458:7;;2467:12;;2450:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2446:128;;;2500:59;2509:7;2500:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:12;2500:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;-1:-1:-1;2670:23:160;:52;;-1:-1:-1;;2670:52:160;;;1401:1537:111:o;1910:1203:160:-;2753:172;2779:12;2753:172;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2809:47:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2809:47:160;-1:-1:-1;;;2809:47:160;;;2753:172;;;;;;;;;;;;2809:47;;-1:-1:-1;2753:172:160;;-1:-1:-1;2753:172:160;-1:-1:-1;2753:172:160;;;;;:8;:172::i;:::-;2939:163;2965:7;2939:163;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2990:48:160;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2990:48:160;-1:-1:-1;;;2990:48:160;;;2939:163;;;;;;;;;;;;;;;;2990:48;-1:-1:-1;2939:163:160;-1:-1:-1;2939:8:160;;-1:-1:-1;2939:163:160:i;6001:3443:111:-;1727:26:160;1700:23;;;;;;;;:53;;;;;;;:::i;:::-;;1696:90;;6001:3443:111;:::o;1696:90:160:-;6261:10:111::1;::::0;6295:16:::1;::::0;::::1;::::0;6325:13:::1;::::0;;::::1;::::0;6261:87;;-1:-1:-1;;;6261:87:111;;6236:22:::1;::::0;-1:-1:-1;;;;;6261:10:111::1;::::0;:20:::1;::::0;:87:::1;::::0;::::1;;7028:25:165::0;;;-1:-1:-1;;;;;7089:32:165;7084:2;7069:18;;7062:60;7016:2;7001:18;;6854:274;6261:87:111::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6381:10;::::0;6415:16:::1;::::0;::::1;::::0;6445:11:::1;::::0;::::1;::::0;6381:85:::1;::::0;-1:-1:-1;;;6381:85:111;;::::1;::::0;::::1;7028:25:165::0;;;;-1:-1:-1;;;;;7089:32:165;;;7069:18;;;7062:60;6236:112:111;;-1:-1:-1;6358:20:111::1;::::0;6381:10;;::::1;::::0;:20:::1;::::0;7001:18:165;;6381:85:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6704:10;::::0;6746:16:::1;::::0;::::1;::::0;6776:13:::1;::::0;;::::1;::::0;6803:15:::1;::::0;::::1;::::0;6704:124;;-1:-1:-1;;;6704:124:111;;::::1;::::0;::::1;19262:25:165::0;;;;-1:-1:-1;;;;;19361:15:165;;;19341:18;;;19334:43;19413:15;;;19393:18;;;19386:43;6358:108:111;;-1:-1:-1;6675:26:111::1;::::0;6704:10;;::::1;::::0;:28:::1;::::0;19235:18:165;;6704:124:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6884:37;::::0;-1:-1:-1;;;6884:37:111;;6898:4:::1;6884:37;::::0;::::1;19647:41:165::0;;;19704:18;;;19697:50;;;19763:18;;;19756:50;;;19822:18;;;19815:50;6675:153:111;;-1:-1:-1;6884:13:111;;::::1;::::0;19619:19:165;;6884:37:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7020:8;:11;;;-1:-1:-1::0;;;;;6936:164:111::1;6993:8;:13;;;-1:-1:-1::0;;;;;6936:164:111::1;6964:8;:15;;;-1:-1:-1::0;;;;;6936:164:111::1;;7045:8;:16;;;7075:8;:15;;;6936:164;;;;;;20050:25:165::0;;;20106:2;20091:18;;20084:34;20038:2;20023:18;;19876:248;6936:164:111::1;;;;;;;;7264:10;::::0;7316:16:::1;::::0;::::1;::::0;7350:13:::1;::::0;;::::1;::::0;7381:11:::1;::::0;::::1;::::0;7410:15:::1;::::0;::::1;::::0;7443::::1;::::0;::::1;::::0;7264:208;;-1:-1:-1;;;7264:208:111;;::::1;::::0;::::1;16735:25:165::0;;;;-1:-1:-1;;;;;16834:15:165;;;16814:18;;;16807:43;16886:15;;;16866:18;;;16859:43;16918:18;;;16911:34;16982:15;;;16961:19;;;16954:44;7264:10:111;;::::1;::::0;:34:::1;::::0;16707:19:165;;7264:208:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;7248:334;;7504:29;;;;;;;;;;;;;;-1:-1:-1::0;;;7504:29:111::1;;::::0;7524:8:::1;7504:5;:29::i;:::-;7554:17;;-1:-1:-1::0;;;7554:17:111::1;;;;;;;;;;;7248:334;7806:8;:13;;;-1:-1:-1::0;;;;;7787:32:111::1;:8;:15;;;-1:-1:-1::0;;;;;7787:32:111::1;;;:72;;;;;7836:8;:23;;;7835:24;7787:72;:127;;;;;-1:-1:-1::0;;7875:8:111::1;:18;;;:39;;7787:127;7770:718;;;8006:10;::::0;8056:16:::1;::::0;::::1;::::0;8094:13:::1;::::0;;::::1;::::0;8129:15:::1;::::0;::::1;::::0;8006:156;;-1:-1:-1;;;8006:156:111;;::::1;::::0;::::1;19262:25:165::0;;;;-1:-1:-1;;;;;19361:15:165;;;19341:18;;;19334:43;19413:15;;;19393:18;;;19386:43;7939:27:111::1;::::0;8006:10:::1;::::0;:28:::1;::::0;19235:18:165;;8006:156:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7969:193;::::0;:18;:193:::1;:::i;:::-;7939:223;;8204:8;:15;;;8181:19;:38;8177:301;;8239:29;;;;;;;;;;;;;;-1:-1:-1::0;;;8239:29:111::1;;::::0;8259:8:::1;8239:5;:29::i;:::-;8286:177;8316:19;8357:8;:15;;;8286:177;;;;;;;;;;;;;;;;;:8;:177::i;:::-;7925:563;7770:718;8630:10;::::0;8651:16:::1;::::0;::::1;::::0;8669:13:::1;::::0;;::::1;::::0;8630:53;;-1:-1:-1;;;8630:53:111;;8575:23:::1;::::0;-1:-1:-1;;;;;8630:10:111::1;::::0;:20:::1;::::0;:53:::1;::::0;::::1;;7028:25:165::0;;;-1:-1:-1;;;;;7089:32:165;7084:2;7069:18;;7062:60;7016:2;7001:18;;6854:274;8630:53:111::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8601:82;::::0;:14;:82:::1;:::i;:::-;8575:108;;8716:8;:15;;;8697;:34;8693:266;;8747:29;;;;;;;;;;;;;;-1:-1:-1::0;;;8747:29:111::1;;::::0;8767:8:::1;8747:5;:29::i;:::-;8790:158;8816:15;8849:8;:15;;;8790:158;;;;;;;;;;;;;;;;;:8;:158::i;:::-;9068:10;::::0;9102:16:::1;::::0;::::1;::::0;9132:11:::1;::::0;::::1;::::0;9068:85:::1;::::0;-1:-1:-1;;;9068:85:111;;::::1;::::0;::::1;7028:25:165::0;;;;-1:-1:-1;;;;;7089:32:165;;;7069:18;;;7062:60;9044:21:111::1;::::0;9156:12;;9068:10;::::1;::::0;:20:::1;::::0;7001:18:165;;9068:85:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:100;;;;:::i;:::-;9044:124;;9199:8;:15;;;9182:13;:32;9178:260;;9230:29;;;;;;;;;;;;;;-1:-1:-1::0;;;9230:29:111::1;;::::0;9250:8:::1;9230:5;:29::i;:::-;9273:154;9299:13;9330:8;:15;;;9273:154;;;;;;;;;;;;;;;;;:8;:154::i;7546:145:66:-:0;7613:71;7676:2;7680;7629:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7629:54:66;;;;;;;;;;;;;;-1:-1:-1;;;;;7629:54:66;-1:-1:-1;;;7629:54:66;;;7613:15;:71::i;:::-;7546:145;;:::o;3425:191:50:-;3504:9;3499:111;;-1:-1:-1;;;;;;;;;;;3560:3:50;3534:30;;;;;;:::i;:::-;;;;;;;;3578:21;3589:9;3578:10;:21::i;12219:177::-;12299:1;12295;:5;12291:99;;;-1:-1:-1;;;;;;;;;;;12347:3:50;12321:30;;;;;;:::i;:::-;;;;;;;;12365:14;12374:1;12377;12365:8;:14::i;:::-;12219:177;;;:::o;16185:::-;16265:1;16261;:5;16257:99;;;-1:-1:-1;;;;;;;;;;;16313:3:50;16287:30;;;;;;:::i;:::-;;;;;;;;16331:14;16340:1;16343;16331:8;:14::i;7697:143:66:-;7763:70;7825:2;7829;7779:53;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7779:53:66;;;;;;;;;;;;;;-1:-1:-1;;;;;7779:53:66;-1:-1:-1;;;7779:53:66;;;7763:15;:70::i;5476:178:50:-;5557:1;5552;:6;5548:100;;-1:-1:-1;;;;;;;;;;;5605:3:50;5579:30;;;;;;:::i;:::-;;;;;;;;5623:14;5632:1;5635;5623:8;:14::i;1380:471:159:-;1430:19;;;;;;;;;;;;;;-1:-1:-1;;;1430:19:159;;;:10;:19::i;:::-;1422:5;:27;;-1:-1:-1;;;;;;1422:27:159;-1:-1:-1;;;;;1422:27:159;;;;;;;;;;1465:17;;;;;;;;;;;;-1:-1:-1;;;1465:17:159;;;;;;:10;:17::i;:::-;1459:3;:23;;-1:-1:-1;;;;;;1459:23:159;-1:-1:-1;;;;;1459:23:159;;;;;;;;;;1501:20;;;;;;;;;;;;-1:-1:-1;;;1501:20:159;;;;;;:10;:20::i;:::-;1492:6;:29;;-1:-1:-1;;;;;;1492:29:159;-1:-1:-1;;;;;1492:29:159;;;;;;;;;;1537:17;;;;;;;;;;;;-1:-1:-1;;;1537:17:159;;;;;;:10;:17::i;:::-;1531:3;:23;;-1:-1:-1;;;;;;1531:23:159;-1:-1:-1;;;;;1531:23:159;;;;;;;;;;1570:17;;;;;;;;;;;;-1:-1:-1;;;1570:17:159;;;;;;:10;:17::i;:::-;1564:3;;:23;;;;;-1:-1:-1;;;;;1564:23:159;;;;;-1:-1:-1;;;;;1564:23:159;;;;;;1609:22;;;;;;;;;;;;;;-1:-1:-1;;;1609:22:159;;;:10;:22::i;:::-;1598:8;:33;;-1:-1:-1;;;;;;1598:33:159;-1:-1:-1;;;;;1598:33:159;;;;;;;;;;1650:20;;;;;;;;;;;;-1:-1:-1;;;1650:20:159;;;;;;:10;:20::i;:::-;1641:6;:29;;-1:-1:-1;;;;;;1641:29:159;-1:-1:-1;;;;;1641:29:159;;;;;;;;;;1695:26;;;;;;;;;;;;-1:-1:-1;;;1695:26:159;;;;;;:10;:26::i;:::-;1680:12;:41;;-1:-1:-1;;;;;;1680:41:159;-1:-1:-1;;;;;1680:41:159;;;;;;;;;;1744:24;;;;;;;;;;;;-1:-1:-1;;;1744:24:159;;;;;;:10;:24::i;:::-;1731:10;:37;;-1:-1:-1;;;;;;1731:37:159;-1:-1:-1;;;;;1731:37:159;;;;;;;;;;1787:20;;;;;;;;;;;;-1:-1:-1;;;1787:20:159;;;;;;:10;:20::i;:::-;1778:6;:29;;-1:-1:-1;;;;;;1778:29:159;-1:-1:-1;;;;;1778:29:159;;;;;;;;;;1829:15;1818:8;:26;1380:471::o;9450:838:111:-;9560:16;;;;;;;;;;;;;:12;:16::i;:::-;9586:70;;;;;;;;;;;;;;;;;;9632:7;9641:8;:14;;;9586:12;:70::i;:::-;9666:56;;;;;;;;;;;;;;-1:-1:-1;;;9666:56:111;;;9705:8;:16;;;9666:12;:56::i;:::-;9732:53;;;;;;;;;;;;;;-1:-1:-1;;;9732:53:111;;;9771:8;:13;;;9732:12;:53::i;:::-;9795:51;;;;;;;;;;;;;;-1:-1:-1;;;9795:51:111;;;9834:8;:11;;;9795:12;:51::i;:::-;9856:55;;;;;;;;;;;;;;-1:-1:-1;;;9856:55:111;;;9895:8;:15;;;9856:12;:55::i;:::-;9921;;;;;;;;;;;;;;-1:-1:-1;;;9921:55:111;;;9960:8;:15;;;9921:12;:55::i;:::-;9986:58;;;;;;;;;;;;;;-1:-1:-1;;;9986:58:111;;;10025:8;:18;;;9986:12;:58::i;:::-;10054:60;;;;;;;;;;;;;;-1:-1:-1;;;10054:60:111;;;10093:8;:20;;;10054:12;:60::i;:::-;10124:58;;;;;;;;;;;;;;-1:-1:-1;;;10124:58:111;;;10163:8;:18;;;10124:12;:58::i;:::-;10192:63;;;;;;;;;;;;;;-1:-1:-1;;;10192:63:111;;;10231:8;:23;;;10192:12;:63::i;:::-;10265:16;;;;;;;;;;;;;:12;:16::i;19129:345:50:-;19256:8;;19244;;19226:4;;19244:20;;19240:228;;19285:6;19280:137;19301:1;:8;19297:1;:12;19280:137;;;19346:1;19348;19346:4;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;19338:12:50;;:1;19340;19338:4;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;19338:4:50;:12;19334:69;;19379:5;19374:10;;19334:69;19311:3;;;;:::i;:::-;;;;19280:137;;;;19240:228;;;-1:-1:-1;19452:5:50;19240:228;19129:345;;;;:::o;1404:123:53:-;1500:20;1510:1;1513;1516:3;1500:9;:20::i;868:133:66:-;939:55;986:7;965:19;939:55::i;3262:157:50:-;3322:9;3317:96;;-1:-1:-1;;;;;;;;;;;3352:30:50;;;;21372:2:165;21354:21;;;21411:2;21391:18;;;21384:30;21450:25;21445:2;21430:18;;21423:53;21508:2;21493:18;;21170:347;3352:30:50;;;;;;;;3396:6;:4;:6::i;11955:259::-;12016:1;12012;:5;12008:200;;;-1:-1:-1;;;;;;;;;;;12038:41:50;;;;21724:2:165;21706:21;;;21763:2;21743:18;;;21736:30;21802:34;21797:2;21782:18;;21775:62;-1:-1:-1;;;21868:2:165;21853:18;;21846:32;21910:3;21895:19;;21522:398;12038:41:50;;;;;;;;12098:30;;;22137:21:165;;;22194:1;22174:18;;;22167:29;-1:-1:-1;;;22227:2:165;22212:18;;22205:39;22311:4;22296:20;;22289:36;;;12098:30:50;;-1:-1:-1;;;;;;;;;;;12098:30:50;;;;22276:3:165;12098:30:50;;;12147;;;22548:21:165;;;22605:1;22585:18;;;22578:29;;;;-1:-1:-1;;;22638:2:165;22623:18;;22616:39;22722:4;22707:20;;22700:36;;;-1:-1:-1;;;;;;;;;;;12147:30:50;22687:3:165;22672:19;12147:30:50;;;;;;;;12191:6;:4;:6::i;15921:259::-;15982:1;15978;:5;15974:200;;;-1:-1:-1;;;;;;;;;;;16004:41:50;;;;22949:2:165;22931:21;;;22988:2;22968:18;;;22961:30;23027:34;23022:2;23007:18;;23000:62;-1:-1:-1;;;23093:2:165;23078:18;;23071:32;23135:3;23120:19;;22747:398;5209:262:50;5271:1;5266;:6;5262:203;;-1:-1:-1;;;;;;;;;;;5293:41:50;;;;23352:2:165;23334:21;;;23391:2;23371:18;;;23364:30;23430:34;23425:2;23410:18;;23403:62;-1:-1:-1;;;23496:2:165;23481:18;;23474:32;23538:3;23523:19;;23150:398;5293:41:50;;;;;;;;-1:-1:-1;;;;;;;;;;;5382:1:50;5353:31;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;5432:1:50;5403:31;;;;;;:::i;6598:121:66:-;6653:59;6708:2;6669:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6669:42:66;;;;;;;;;;;;;;-1:-1:-1;;;;;6669:42:66;-1:-1:-1;;;6669:42:66;;;6653:15;:59::i;12851:174::-;12936:82;13006:2;13010;13014;12952:65;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12952:65:66;;;;;;;;;;;;;;-1:-1:-1;;;;;12952:65:66;-1:-1:-1;;;12952:65:66;;;12936:15;:82::i;8147:145::-;8214:71;8277:2;8281;8230:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8230:54:66;;;;;;;;;;;;;;-1:-1:-1;;;;;8230:54:66;-1:-1:-1;;;8230:54:66;;;8214:15;:71::i;8002:139::-;8066:68;8126:2;8130;8082:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;8082:51:66;;;;;;;;;;;;;;-1:-1:-1;;;;;8082:51:66;-1:-1:-1;;;8082:51:66;;;8066:15;:68::i;19775:205:50:-;19869:14;19878:1;19881;19869:8;:14::i;:::-;19864:110;;-1:-1:-1;;;;;;;;;;;19930:3:50;19904:30;;;;;;:::i;:::-;;;;;;;;19948:15;19958:1;19961;19948:9;:15::i;1007:380:66:-;1105:14;;591:42;1278:2;1265:16;;1081:21;;1105:14;1265:16;591:42;1314:5;1303:68;1294:77;;1231:150;;1007:380;:::o;2409:432:50:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;25876:51:165;;;-1:-1:-1;;;25943:18:165;;;25936:34;;;;2712:4:50;25986:18:165;;;25979:34;2489:11:50;;1671:64;2586:43;;25849:18:165;;2652:67:50;;;-1:-1:-1;;2652:67:50;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:50;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:50;2820:7;:14;;-1:-1:-1;;2820:14:50;;;;;2409:432::o;19479:291::-;19554:14;19563:1;19566;19554:8;:14::i;:::-;19549:215;;-1:-1:-1;;;;;;;;;;;19589:42:50;;;;26226:2:165;26208:21;;;26265:2;26245:18;;;26238:30;26304:34;26299:2;26284:18;;26277:62;-1:-1:-1;;;26370:2:165;26355:18;;26348:33;26413:3;26398:19;;26024:399;19589:42:50;;;;;;;;19650:32;19680:1;19650:32;;;;;;:::i;:::-;;;;;;;;19701;19731:1;19701:32;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:131:165:-;-1:-1:-1;;;;;89:31:165;;79:42;;69:70;;135:1;132;125:12;150:544;242:6;250;258;311:2;299:9;290:7;286:23;282:32;279:52;;;327:1;324;317:12;279:52;366:9;353:23;385:31;410:5;385:31;:::i;:::-;435:5;-1:-1:-1;492:2:165;477:18;;464:32;505:33;464:32;505:33;:::i;:::-;557:7;-1:-1:-1;616:2:165;601:18;;588:32;629:33;588:32;629:33;:::i;:::-;681:7;671:17;;;150:544;;;;;:::o;881:658::-;1052:2;1104:21;;;1174:13;;1077:18;;;1196:22;;;1023:4;;1052:2;1275:15;;;;1249:2;1234:18;;;1023:4;1318:195;1332:6;1329:1;1326:13;1318:195;;;1397:13;;-1:-1:-1;;;;;1393:39:165;1381:52;;1488:15;;;;1453:12;;;;1429:1;1347:9;1318:195;;;-1:-1:-1;1530:3:165;;881:658;-1:-1:-1;;;;;;881:658:165:o;1544:613::-;1645:6;1653;1661;1669;1722:3;1710:9;1701:7;1697:23;1693:33;1690:53;;;1739:1;1736;1729:12;1690:53;1778:9;1765:23;1797:31;1822:5;1797:31;:::i;:::-;1847:5;-1:-1:-1;1904:2:165;1889:18;;1876:32;1917:33;1876:32;1917:33;:::i;:::-;1969:7;-1:-1:-1;2023:2:165;2008:18;;1995:32;;-1:-1:-1;2079:2:165;2064:18;;2051:32;2092:33;2051:32;2092:33;:::i;:::-;1544:613;;;;-1:-1:-1;1544:613:165;;-1:-1:-1;;1544:613:165:o;2162:127::-;2223:10;2218:3;2214:20;2211:1;2204:31;2254:4;2251:1;2244:15;2278:4;2275:1;2268:15;2294:922;2363:6;2416:2;2404:9;2395:7;2391:23;2387:32;2384:52;;;2432:1;2429;2422:12;2384:52;2472:9;2459:23;2501:18;2542:2;2534:6;2531:14;2528:34;;;2558:1;2555;2548:12;2528:34;2596:6;2585:9;2581:22;2571:32;;2641:7;2634:4;2630:2;2626:13;2622:27;2612:55;;2663:1;2660;2653:12;2612:55;2699:2;2686:16;2721:2;2717;2714:10;2711:36;;;2727:18;;:::i;:::-;2802:2;2796:9;2770:2;2856:13;;-1:-1:-1;;2852:22:165;;;2876:2;2848:31;2844:40;2832:53;;;2900:18;;;2920:22;;;2897:46;2894:72;;;2946:18;;:::i;:::-;2986:10;2982:2;2975:22;3021:2;3013:6;3006:18;3061:7;3056:2;3051;3047;3043:11;3039:20;3036:33;3033:53;;;3082:1;3079;3072:12;3033:53;3138:2;3133;3129;3125:11;3120:2;3112:6;3108:15;3095:46;3183:1;3161:15;;;3178:2;3157:24;3150:35;;;;-1:-1:-1;3165:6:165;2294:922;-1:-1:-1;;;;;2294:922:165:o;3429:1569::-;3633:4;3662:2;3702;3691:9;3687:18;3732:2;3721:9;3714:21;3755:6;3790;3784:13;3821:6;3813;3806:22;3847:2;3837:12;;3880:2;3869:9;3865:18;3858:25;;3942:2;3932:6;3929:1;3925:14;3914:9;3910:30;3906:39;3980:2;3972:6;3968:15;4001:1;4022;4032:937;4048:6;4043:3;4040:15;4032:937;;;4117:22;;;-1:-1:-1;;4113:36:165;4101:49;;4173:13;;4260:9;;-1:-1:-1;;;;;4256:35:165;4241:51;;4331:11;;4325:18;4363:15;;;4356:27;;;4444:19;;4213:15;;;4476:24;;;4566:21;;;;4611:1;;4534:2;4522:15;;;4625:236;4641:8;4636:3;4633:17;4625:236;;;4722:15;;-1:-1:-1;;;;;;4718:42:165;4704:57;;4830:17;;;;4669:1;4660:11;;;;;4787:14;;;;4625:236;;;-1:-1:-1;4947:12:165;;;;4884:5;-1:-1:-1;;;4912:15:165;;;;4074:1;4065:11;4032:937;;;-1:-1:-1;4986:6:165;;3429:1569;-1:-1:-1;;;;;;;;;3429:1569:165:o;5003:250::-;5088:1;5098:113;5112:6;5109:1;5106:13;5098:113;;;5188:11;;;5182:18;5169:11;;;5162:39;5134:2;5127:10;5098:113;;;-1:-1:-1;;5245:1:165;5227:16;;5220:27;5003:250::o;5258:271::-;5300:3;5338:5;5332:12;5365:6;5360:3;5353:19;5381:76;5450:6;5443:4;5438:3;5434:14;5427:4;5420:5;5416:16;5381:76;:::i;:::-;5511:2;5490:15;-1:-1:-1;;5486:29:165;5477:39;;;;5518:4;5473:50;;5258:271;-1:-1:-1;;5258:271:165:o;5534:803::-;5696:4;5725:2;5765;5754:9;5750:18;5795:2;5784:9;5777:21;5818:6;5853;5847:13;5884:6;5876;5869:22;5922:2;5911:9;5907:18;5900:25;;5984:2;5974:6;5971:1;5967:14;5956:9;5952:30;5948:39;5934:53;;6022:2;6014:6;6010:15;6043:1;6053:255;6067:6;6064:1;6061:13;6053:255;;;6160:2;6156:7;6144:9;6136:6;6132:22;6128:36;6123:3;6116:49;6188:40;6221:6;6212;6206:13;6188:40;:::i;:::-;6178:50;-1:-1:-1;6286:12:165;;;;6251:15;;;;6089:1;6082:9;6053:255;;;-1:-1:-1;6325:6:165;;5534:803;-1:-1:-1;;;;;;;5534:803:165:o;6342:315::-;6418:6;6426;6434;6487:2;6475:9;6466:7;6462:23;6458:32;6455:52;;;6503:1;6500;6493:12;6455:52;-1:-1:-1;;6526:23:165;;;6596:2;6581:18;;6568:32;;-1:-1:-1;6647:2:165;6632:18;;;6619:32;;6342:315;-1:-1:-1;6342:315:165:o;7513:184::-;7583:6;7636:2;7624:9;7615:7;7611:23;7607:32;7604:52;;;7652:1;7649;7642:12;7604:52;-1:-1:-1;7675:16:165;;7513:184;-1:-1:-1;7513:184:165:o;7702:127::-;7763:10;7758:3;7754:20;7751:1;7744:31;7794:4;7791:1;7784:15;7818:4;7815:1;7808:15;7834:127;7895:10;7890:3;7886:20;7883:1;7876:31;7926:4;7923:1;7916:15;7950:4;7947:1;7940:15;7966:125;8031:9;;;8052:10;;;8049:36;;;8065:18;;:::i;8096:422::-;8185:1;8228:5;8185:1;8242:270;8263:7;8253:8;8250:21;8242:270;;;8322:4;8318:1;8314:6;8310:17;8304:4;8301:27;8298:53;;;8331:18;;:::i;:::-;8381:7;8371:8;8367:22;8364:55;;;8401:16;;;;8364:55;8480:22;;;;8440:15;;;;8242:270;;;8246:3;8096:422;;;;;:::o;8523:806::-;8572:5;8602:8;8592:80;;-1:-1:-1;8643:1:165;8657:5;;8592:80;8691:4;8681:76;;-1:-1:-1;8728:1:165;8742:5;;8681:76;8773:4;8791:1;8786:59;;;;8859:1;8854:130;;;;8766:218;;8786:59;8816:1;8807:10;;8830:5;;;8854:130;8891:3;8881:8;8878:17;8875:43;;;8898:18;;:::i;:::-;-1:-1:-1;;8954:1:165;8940:16;;8969:5;;8766:218;;9068:2;9058:8;9055:16;9049:3;9043:4;9040:13;9036:36;9030:2;9020:8;9017:16;9012:2;9006:4;9003:12;8999:35;8996:77;8993:159;;;-1:-1:-1;9105:19:165;;;9137:5;;8993:159;9184:34;9209:8;9203:4;9184:34;:::i;:::-;9254:6;9250:1;9246:6;9242:19;9233:7;9230:32;9227:58;;;9265:18;;:::i;:::-;9303:20;;8523:806;-1:-1:-1;;;8523:806:165:o;9334:140::-;9392:5;9421:47;9462:4;9452:8;9448:19;9442:4;9421:47;:::i;:::-;9412:56;9334:140;-1:-1:-1;;;9334:140:165:o;9479:127::-;9540:10;9535:3;9531:20;9528:1;9521:31;9571:4;9568:1;9561:15;9595:4;9592:1;9585:15;9611:120;9651:1;9677;9667:35;;9682:18;;:::i;:::-;-1:-1:-1;9716:9:165;;9611:120::o;9736:135::-;9775:3;9796:17;;;9793:43;;9816:18;;:::i;:::-;-1:-1:-1;9863:1:165;9852:13;;9736:135::o;10460:277::-;10527:6;10580:2;10568:9;10559:7;10555:23;10551:32;10548:52;;;10596:1;10593;10586:12;10548:52;10628:9;10622:16;10681:5;10674:13;10667:21;10660:5;10657:32;10647:60;;10703:1;10700;10693:12;10742:220;10891:2;10880:9;10873:21;10854:4;10911:45;10952:2;10941:9;10937:18;10929:6;10911:45;:::i;10967:317::-;-1:-1:-1;;;;;11144:32:165;;11126:51;;11213:2;11208;11193:18;;11186:30;;;-1:-1:-1;;11233:45:165;;11259:18;;11251:6;11233:45;:::i;11598:380::-;11677:1;11673:12;;;;11720;;;11741:61;;11795:4;11787:6;11783:17;11773:27;;11741:61;11848:2;11840:6;11837:14;11817:18;11814:38;11811:161;;11894:10;11889:3;11885:20;11882:1;11875:31;11929:4;11926:1;11919:15;11957:4;11954:1;11947:15;11811:161;;11598:380;;;:::o;11983:136::-;12018:3;-1:-1:-1;;;12039:22:165;;12036:48;;12064:18;;:::i;:::-;-1:-1:-1;12104:1:165;12100:13;;11983:136::o;12124:128::-;12191:9;;;12212:11;;;12209:37;;;12226:18;;:::i;12536:384::-;-1:-1:-1;;;;;;12721:33:165;;12709:46;;12778:13;;12691:3;;12800:74;12778:13;12863:1;12854:11;;12847:4;12835:17;;12800:74;:::i;:::-;12894:16;;;;12912:1;12890:24;;12536:384;-1:-1:-1;;;12536:384:165:o;12925:287::-;13054:3;13092:6;13086:13;13108:66;13167:6;13162:3;13155:4;13147:6;13143:17;13108:66;:::i;:::-;13190:16;;;;;12925:287;-1:-1:-1;;12925:287:165:o;13217:168::-;13290:9;;;13321;;13338:15;;;13332:22;;13318:37;13308:71;;13359:18;;:::i;13390:112::-;13422:1;13448;13438:35;;13453:18;;:::i;:::-;-1:-1:-1;13487:9:165;;13390:112::o;13507:127::-;13568:10;13563:3;13559:20;13556:1;13549:31;13599:4;13596:1;13589:15;13623:4;13620:1;13613:15;13764:544;13865:2;13860:3;13857:11;13854:448;;;13901:1;13926:5;13922:2;13915:17;13971:4;13967:2;13957:19;14041:2;14029:10;14025:19;14022:1;14018:27;14012:4;14008:38;14077:4;14065:10;14062:20;14059:47;;;-1:-1:-1;14100:4:165;14059:47;14155:2;14150:3;14146:12;14143:1;14139:20;14133:4;14129:31;14119:41;;14210:82;14228:2;14221:5;14218:13;14210:82;;;14273:17;;;14254:1;14243:13;14210:82;;14484:1348;14608:3;14602:10;14635:18;14627:6;14624:30;14621:56;;;14657:18;;:::i;:::-;14686:96;14775:6;14735:38;14767:4;14761:11;14735:38;:::i;:::-;14729:4;14686:96;:::i;:::-;14837:4;;14901:2;14890:14;;14918:1;14913:662;;;;15619:1;15636:6;15633:89;;;-1:-1:-1;15688:19:165;;;15682:26;15633:89;-1:-1:-1;;14441:1:165;14437:11;;;14433:24;14429:29;14419:40;14465:1;14461:11;;;14416:57;15735:81;;14883:943;;14913:662;13711:1;13704:14;;;13748:4;13735:18;;-1:-1:-1;;14949:20:165;;;15066:236;15080:7;15077:1;15074:14;15066:236;;;15169:19;;;15163:26;15148:42;;15261:27;;;;15229:1;15217:14;;;;15096:19;;15066:236;;;15070:3;15330:6;15321:7;15318:19;15315:201;;;15391:19;;;15385:26;-1:-1:-1;;15474:1:165;15470:14;;;15486:3;15466:24;15462:37;15458:42;15443:58;15428:74;;15315:201;-1:-1:-1;;;;;15562:1:165;15546:14;;;15542:22;15529:36;;-1:-1:-1;14484:1348:165:o;17209:771::-;17258:3;17299:5;17293:12;17328:36;17354:9;17328:36;:::i;:::-;17373:19;;;17411:4;17434:1;17451:18;;;17478:146;;;;17638:1;17633:341;;;;17444:530;;17478:146;-1:-1:-1;;17520:24:165;;17506:12;;;17499:46;17592:14;;17585:22;17582:1;17578:30;17569:40;;17565:49;;;-1:-1:-1;17478:146:165;;17633:341;17664:5;17661:1;17654:16;17711:2;17708:1;17698:16;17736:1;17750:174;17764:6;17761:1;17758:13;17750:174;;;17851:14;;17833:11;;;17829:20;;17822:44;17894:16;;;;17779:10;;17750:174;;;17948:11;;17944:20;;;-1:-1:-1;;17444:530:165;;;;;;17209:771;;;;:::o;17985:391::-;18183:2;18172:9;18165:21;18146:4;18209:52;18257:2;18246:9;18242:18;18234:6;18209:52;:::i;:::-;18309:9;18301:6;18297:22;18292:2;18281:9;18277:18;18270:50;18337:33;18363:6;18355;18337:33;:::i;:::-;18329:41;17985:391;-1:-1:-1;;;;;17985:391:165:o;18381:395::-;18576:2;18565:9;18558:21;18539:4;18602:52;18650:2;18639:9;18635:18;18627:6;18602:52;:::i;:::-;18702:9;18694:6;18690:22;18685:2;18674:9;18670:18;18663:50;18730:40;18763:6;18755;18730:40;:::i;20129:291::-;20306:2;20295:9;20288:21;20269:4;20326:45;20367:2;20356:9;20352:18;20344:6;20326:45;:::i;:::-;20318:53;;20407:6;20402:2;20391:9;20387:18;20380:34;20129:291;;;;;:::o;20425:446::-;20675:2;20664:9;20657:21;20714:1;20709:2;20698:9;20694:18;20687:29;-1:-1:-1;;;20747:2:165;20736:9;20732:18;20725:35;20798:3;20791:4;20780:9;20776:20;20769:33;20638:4;20819:46;20860:3;20849:9;20845:19;20837:6;20819:46;:::i;23717:348::-;23947:2;23936:9;23929:21;23910:4;23967:49;24012:2;24001:9;23997:18;23630:2;23618:15;;-1:-1:-1;;;23658:4:165;23649:14;;23642:36;23703:2;23694:12;;23553:159;23967:49;23959:57;;24052:6;24047:2;24036:9;24032:18;24025:34;23717:348;;;;:::o;24234:::-;24464:2;24453:9;24446:21;24427:4;24484:49;24529:2;24518:9;24514:18;24147:2;24135:15;;-1:-1:-1;;;24175:4:165;24166:14;;24159:36;24220:2;24211:12;;24070:159;24587:454;24812:2;24801:9;24794:21;24775:4;24838:45;24879:2;24868:9;24864:18;24856:6;24838:45;:::i;:::-;24931:9;24923:6;24919:22;24914:2;24903:9;24899:18;24892:50;24959:33;24985:6;24977;24959:33;:::i;:::-;24951:41;;;25028:6;25023:2;25012:9;25008:18;25001:34;24587:454;;;;;;:::o;25046:317::-;25223:2;25212:9;25205:21;25186:4;25243:45;25284:2;25273:9;25269:18;25261:6;25243:45;:::i;:::-;25235:53;;25353:1;25349;25344:3;25340:11;25336:19;25328:6;25324:32;25319:2;25308:9;25304:18;25297:60;25046:317;;;;;:::o;25368:301::-;25539:2;25528:9;25521:21;25502:4;25559:45;25600:2;25589:9;25585:18;25577:6;25559:45;:::i;:::-;25551:53;;25654:6;25647:14;25640:22;25635:2;25624:9;25620:18;25613:50;25368:301;;;;;:::o;26428:438::-;26676:2;26665:9;26658:21;26639:4;26702:49;26747:2;26736:9;26732:18;23630:2;23618:15;;-1:-1:-1;;;23658:4:165;23649:14;;23642:36;23703:2;23694:12;;23553:159;26702:49;26799:9;26791:6;26787:22;26782:2;26771:9;26767:18;26760:50;26827:33;26853:6;26845;26827:33;:::i;26871:438::-;27119:2;27108:9;27101:21;27082:4;27145:49;27190:2;27179:9;27175:18;24147:2;24135:15;;-1:-1:-1;;;24175:4:165;24166:14;;24159:36;24220:2;24211:12;;24070:159",
    linkReferences: {
      "test/utils/Lib.sol": {
        Lib: [
          {
            start: 8424,
            length: 20,
          },
          {
            start: 8822,
            length: 20,
          },
        ],
      },
    },
  },
  methodIdentifiers: {
    "IS_TEST()": "fa7626d4",
    "assertWithDelta(uint256,int256,uint256)": "ab75e7c3",
    "createUser(string)": "507ffba5",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test__MultiToken__transferFrom()": "26c91795",
    "whaleTransfer(address,address,address)": "10716760",
    "whaleTransfer(address,address,uint256,address)": "3e5e0d26",
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"ExpectedFail","type":"error"},{"inputs":[],"name":"ExpectedSuccess","type":"error"},{"inputs":[],"name":"TestFail","type":"error"},{"inputs":[],"name":"UnassignedCatch","type":"error"},{"inputs":[],"name":"UnassignedFail","type":"error"},{"inputs":[],"name":"WhaleBalanceExceeded","type":"error"},{"inputs":[],"name":"WhaleIsContract","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"","type":"string"}],"name":"log","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"","type":"address"}],"name":"log_address","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256[]","name":"val","type":"uint256[]"}],"name":"log_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256[]","name":"val","type":"int256[]"}],"name":"log_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"val","type":"address[]"}],"name":"log_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"","type":"bytes"}],"name":"log_bytes","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"","type":"bytes32"}],"name":"log_bytes32","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"int256","name":"","type":"int256"}],"name":"log_int","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"address","name":"val","type":"address"}],"name":"log_named_address","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"uint256[]","name":"val","type":"uint256[]"}],"name":"log_named_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"int256[]","name":"val","type":"int256[]"}],"name":"log_named_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"address[]","name":"val","type":"address[]"}],"name":"log_named_array","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"bytes","name":"val","type":"bytes"}],"name":"log_named_bytes","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"bytes32","name":"val","type":"bytes32"}],"name":"log_named_bytes32","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"int256","name":"val","type":"int256"},{"indexed":false,"internalType":"uint256","name":"decimals","type":"uint256"}],"name":"log_named_decimal_int","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"uint256","name":"val","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"decimals","type":"uint256"}],"name":"log_named_decimal_uint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"int256","name":"val","type":"int256"}],"name":"log_named_int","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"string","name":"val","type":"string"}],"name":"log_named_string","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"key","type":"string"},{"indexed":false,"internalType":"uint256","name":"val","type":"uint256"}],"name":"log_named_uint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"","type":"string"}],"name":"log_string","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"","type":"uint256"}],"name":"log_uint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"","type":"bytes"}],"name":"logs","type":"event"},{"inputs":[],"name":"IS_TEST","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"int256","name":"_delta","type":"int256"},{"internalType":"uint256","name":"_targetValue","type":"uint256"}],"name":"assertWithDelta","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"name":"createUser","outputs":[{"internalType":"address","name":"_user","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"excludeArtifacts","outputs":[{"internalType":"string[]","name":"excludedArtifacts_","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"excludeContracts","outputs":[{"internalType":"address[]","name":"excludedContracts_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"excludeSenders","outputs":[{"internalType":"address[]","name":"excludedSenders_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"failed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"setUp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"targetArtifactSelectors","outputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes4[]","name":"selectors","type":"bytes4[]"}],"internalType":"struct StdInvariant.FuzzSelector[]","name":"targetedArtifactSelectors_","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"targetArtifacts","outputs":[{"internalType":"string[]","name":"targetedArtifacts_","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"targetContracts","outputs":[{"internalType":"address[]","name":"targetedContracts_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"targetSelectors","outputs":[{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes4[]","name":"selectors","type":"bytes4[]"}],"internalType":"struct StdInvariant.FuzzSelector[]","name":"targetedSelectors_","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"targetSenders","outputs":[{"internalType":"address[]","name":"targetedSenders_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"test__MultiToken__transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"whale","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"}],"name":"whaleTransfer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"whale","type":"address"},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"whaleTransfer","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"test/combinatorial/MultiToken._transferFrom.t.sol":"MultiToken__transferFrom"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@aave/=lib/aave-v3-core/contracts/",":aave-v3-core/=lib/aave-v3-core/",":create3-factory/=lib/yield-daddy/lib/create3-factory/",":ds-test/=lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/",":solmate/=lib/solmate/src/",":yield-daddy/=lib/yield-daddy/","lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/"]},"sources":{"contracts/src/DataProvider.sol":{"keccak256":"0xd23ffd6ff77b03ea16b61130fdfcda6d2bfa430576241003f89b35cd76f51e30","license":"Apache-2.0","urls":["bzz-raw://cc1ab2f99af4241f81feeeda6514fd30f11997adafddcdb48bebd2b383aae212","dweb:/ipfs/QmSPp2B1Pka73Ur1KQMybMs3u73VUrDhev5w6U9iGLTmw7"]},"contracts/src/Hyperdrive.sol":{"keccak256":"0xd2e2e47f45dab0447497a20b8ef54960190d3c01ce2f53dbfae6abe2d095f1f5","license":"Apache-2.0","urls":["bzz-raw://c8d8f034071cf69e922975cddb6123fe125862688ecbe2c3fc01c1f235a4a72e","dweb:/ipfs/QmQraAs5iFKtRYQTqFmpRLh6NSyYxbqrBMFgkGJL2E2ZCN"]},"contracts/src/HyperdriveBase.sol":{"keccak256":"0x978cac18e731453de1268355e70fae31f71718e4149ad1969a56133d1f04cf95","license":"Apache-2.0","urls":["bzz-raw://a3c37a688a10766ade884f36c111925d71318306e46c6e2d207c85ecc7adfb3e","dweb:/ipfs/QmZJu7M9zPNKd2XahfHAtCLX9483228MzMrgP2fVaS1jbn"]},"contracts/src/HyperdriveLP.sol":{"keccak256":"0xe2f37ecc51c9eba59c4b5c13549ed4cdc0415d8af1902442d52ed012e4b9c22a","license":"Apache-2.0","urls":["bzz-raw://53efc435c55fa29822d5ae3271cc42bf4ae096e4dfc9fb150a410f39cd43651e","dweb:/ipfs/QmQgRowy4YqCsxV9A9mFyxzGF7FigC4Huc66Cxy8YfeYAv"]},"contracts/src/HyperdriveLong.sol":{"keccak256":"0x004b7cadd3e9090ca6f5a59510696e3b844839e6305c9076cd3fd31d9b0a3188","license":"Apache-2.0","urls":["bzz-raw://da04266d0c817b69cde906770f047e9add9f8983a12553413c67b2c60ff15c2f","dweb:/ipfs/QmNmKcdUVGLmjxMvUq8kyETZrkfW43JDXfcPHJfP4GrF6V"]},"contracts/src/HyperdriveShort.sol":{"keccak256":"0x3bdfd1e33a2498c6183dfb1684b0db7e6775e9ae2e1097800aeccc869b9e2baa","license":"Apache-2.0","urls":["bzz-raw://e5c9337dfb069d806644ea7ceabe425222f1bc5766248648ba7a9a420715bee8","dweb:/ipfs/QmaL1ZHX4zyAXxMqNmJB4mZ5o54JUTWLnTrKGMBJmbnRDa"]},"contracts/src/HyperdriveStorage.sol":{"keccak256":"0xf02f44333981dfbf6c500bf979aab8cd7aee9731d103a6aafc247e09b90b76bc","license":"Apache-2.0","urls":["bzz-raw://6664cd66465073274f9c2c27fee39e1c64e8e21fff532e64cd3014800582b00a","dweb:/ipfs/QmSGH1ixAUMu81yYf3pMFHo4uJxw6XgfnkBupjUSoFcdNY"]},"contracts/src/HyperdriveTWAP.sol":{"keccak256":"0x76cba088948ab50bb4956377235b302b28ef7c9f6cc68bda73211d66df41e92b","license":"Apache-2.0","urls":["bzz-raw://74e1b28c8cd08aa9adf3b3f31f0379c095299cd2b9de3d3595d7d55b0e0697cc","dweb:/ipfs/QmTTnkPF3jUmdfynnJK6kUBTYSBZFWJs69A9e9tPQzqiac"]},"contracts/src/interfaces/IERC20.sol":{"keccak256":"0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c","license":"MIT","urls":["bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672","dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w"]},"contracts/src/interfaces/IForwarderFactory.sol":{"keccak256":"0x939624fbf6490ff4e9309638d1ed36ba68cfd6a147763810dcbb2bb1efd326af","license":"Apache-2.0","urls":["bzz-raw://aba4213925b95149b6524719699e6f1642a99e7e13070cc9348b11f704a23ba3","dweb:/ipfs/QmPjwGGY3UDYzw56ccvxz7cq6oSTphKqEDPvVdrX7qAPaF"]},"contracts/src/interfaces/IHyperdrive.sol":{"keccak256":"0x3336dbc3128174594baa25c95f3be485aa61a77a06afbb75e2708987247a5bb5","license":"Apache-2.0","urls":["bzz-raw://2e189558d4f78633d90ecdb3ff8d775109394a98cb18d19507642cb56c43dc1e","dweb:/ipfs/QmZMVsor78To4nbXwLDBaZKD8m68PT53C9mxvR8iUkM5i5"]},"contracts/src/interfaces/IHyperdriveRead.sol":{"keccak256":"0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3","license":"Apache-2.0","urls":["bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993","dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt"]},"contracts/src/interfaces/IHyperdriveWrite.sol":{"keccak256":"0xe2ba8031ab98a81026010af00de9935b79ade6701dc486fd1c02d67f4eb81bf8","license":"Apache-2.0","urls":["bzz-raw://2e6acf863128f355e6ad26130037797a08321054ac8e202274debf6730162467","dweb:/ipfs/Qmbf6882o3a7mci1j4w2XJtUDfsJvECGF6Yz3PG8q4LQgk"]},"contracts/src/interfaces/IMultiToken.sol":{"keccak256":"0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a","license":"Apache-2.0","urls":["bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0","dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb"]},"contracts/src/interfaces/IMultiTokenMetadata.sol":{"keccak256":"0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc","license":"Apache-2.0","urls":["bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87","dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6"]},"contracts/src/interfaces/IMultiTokenRead.sol":{"keccak256":"0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05","license":"Apache-2.0","urls":["bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939","dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x"]},"contracts/src/interfaces/IMultiTokenWrite.sol":{"keccak256":"0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8","license":"Apache-2.0","urls":["bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a","dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe"]},"contracts/src/libraries/AssetId.sol":{"keccak256":"0x82515c6d8fc8dbc940b0e40de0bfa584ade8a5a0f24ef14e352deced1e89a384","license":"Apache-2.0","urls":["bzz-raw://fa01b52b6e05d6c304ee938ab7181cacd6cfede09c5f6eca8f6d86b31e0fe806","dweb:/ipfs/QmNVyKLPJnP71ADgTwvS9D2ME2xsPVwjD32yCnNdmvLmpT"]},"contracts/src/libraries/FixedPointMath.sol":{"keccak256":"0x0108762fdecfae06d7b8d76bb52b1a5757669cc2a4e5f3ad701499295ed635bd","license":"Apache-2.0","urls":["bzz-raw://a94cdbab2bdbb0212597f70cebea86fcf69be0702f6d6fe76571ee43992d7d6b","dweb:/ipfs/QmXyncXgKixNzP7rgqoCA2dzehjPTAsEbtAKZGW6CQADFE"]},"contracts/src/libraries/HyperdriveMath.sol":{"keccak256":"0x81bccd15f87d6fb2df7fe455ab94b2f267b0cef1875890d89158f448bb7694b2","license":"Apache-2.0","urls":["bzz-raw://e973fb36a335fa1b7993152f9b051bd52588b1624c3d76f9dd21d35fe45d5c75","dweb:/ipfs/QmbYLW9GPe19dQVCYNdSwvcgqrUZtDRjPyYtF4QtMn49Zb"]},"contracts/src/libraries/SafeCast.sol":{"keccak256":"0x077e800ae4f47bda111e72f8c40d50a57b10a1c5bce81f2e83bb57f94752159f","license":"Apache-2.0","urls":["bzz-raw://8e9433729a73747a65ececae27a8f634300a4e02a66577f796f596e5894a4bb5","dweb:/ipfs/QmT2fC2xaRoFuDBURAtcwqvpqXvw1AQybSgb4khVBzit2S"]},"contracts/src/libraries/YieldSpaceMath.sol":{"keccak256":"0xb8682a4823e01535b6bc73755f6304d0846c44526d882cefc0c3b04b807e2a04","license":"Apache-2.0","urls":["bzz-raw://836744182376d0cd9721e15334c3f972d77564586220b8db7b63737342b410ef","dweb:/ipfs/QmVxEHgnVkDTNggxbC83wMzvDmsQaUq1vTbFosShjzgAmr"]},"contracts/src/token/ERC20Forwarder.sol":{"keccak256":"0x50120439e5ae2657b37afa8133f4fb35ebdcce204b4a1a2fd3fcd9ba65dbe158","license":"Apache-2.0","urls":["bzz-raw://7d6dc4d9a8949c0351386b3a03410223cfa482783d28db1489911e6ab9eb1034","dweb:/ipfs/QmRRVLeeRsgsL9kXxxd754dv3me7FXfeME8937VzhAZS6p"]},"contracts/src/token/ForwarderFactory.sol":{"keccak256":"0x96127d3ac11ff1b96bc816735913365618adf73ba6e9304b81ec59d32813106b","license":"Apache-2.0","urls":["bzz-raw://f2a4c35ad20e307720ed4c643abd739084ae5fabd71112bc2ac9cb576045842e","dweb:/ipfs/QmcoXSNSn4sVSxXFneGFFuR7W1ykbX7Pk79vNW37s7fDQZ"]},"contracts/src/token/MultiToken.sol":{"keccak256":"0x1c22e52ab701c2b7ce3c0b049540ecba5fc24cd8b8000464b5b15c99dfee6a19","license":"Apache-2.0","urls":["bzz-raw://089273a3f853bdb205d34b70750eeca2edda7aaf999726ed9df0621d1e92bb98","dweb:/ipfs/QmPy3tUmJb7gtnL9ACiWhhekKXGo3z3cd4SMYiUQX4geHy"]},"contracts/src/token/MultiTokenDataProvider.sol":{"keccak256":"0x1b2f98b9d6feaf0fc13ac4010dee2d2f49ecd33bf75d0c5be7e3318a6df2620f","license":"Apache-2.0","urls":["bzz-raw://4230f69efbb31e8194a78fb3ef5e2a69d349fe6f8b8aa4cf6b280484f3653cef","dweb:/ipfs/QmScBP66WMXxXh28ScmU6SgSCWYhsRQHpZ755NyxTfCJoV"]},"contracts/src/token/MultiTokenStorage.sol":{"keccak256":"0x97a22d11197f185d6f17ff5ada60665b27af265c23b208f20004e22b26d7b7e8","license":"Apache-2.0","urls":["bzz-raw://62f950f46f3de598776e8e8201a0d35ec51473cc0ea754be5c9e686078ebb3d6","dweb:/ipfs/QmaKpZETx9zCV46XwcqvXUr7f8t2CPo1Tim2umTDwsk2bj"]},"contracts/test/MockMultiToken.sol":{"keccak256":"0x9ab1676cd68dd22f510e700dbc27008da9fb3130f0305a60b7f12328cc107d24","license":"Apache-2.0","urls":["bzz-raw://bb7529c9799a8a4980108ea5cde83c1e3e3943418c017eb986b1a4d5e4d1df97","dweb:/ipfs/QmNmGS1AQq29RPr2fjvFtfFr9XFdoV2qSJmfjeCVkScXUh"]},"lib/forge-std/lib/ds-test/src/test.sol":{"keccak256":"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b","license":"GPL-3.0-or-later","urls":["bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240","dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"]},"lib/forge-std/src/Base.sol":{"keccak256":"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c","license":"MIT","urls":["bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224","dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"]},"lib/forge-std/src/StdAssertions.sol":{"keccak256":"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60","license":"MIT","urls":["bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b","dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"]},"lib/forge-std/src/StdChains.sol":{"keccak256":"0xc576f8b81bf19c853baa1fdc23ddc3b9fa1856d5749b01a4f99bed73db7d847d","license":"MIT","urls":["bzz-raw://fad0b975990e50941e255397925be1695b1ec06c3649decdbf759f42e49638d4","dweb:/ipfs/QmeeRsbdgzUoPj1GWZZaoTsiEEuSGfjx7MpykgfxcMa1r1"]},"lib/forge-std/src/StdCheats.sol":{"keccak256":"0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5","license":"MIT","urls":["bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a","dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe"]},"lib/forge-std/src/StdError.sol":{"keccak256":"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77","license":"MIT","urls":["bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6","dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"]},"lib/forge-std/src/StdInvariant.sol":{"keccak256":"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1","license":"MIT","urls":["bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c","dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"]},"lib/forge-std/src/StdJson.sol":{"keccak256":"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b","license":"MIT","urls":["bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c","dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"]},"lib/forge-std/src/StdMath.sol":{"keccak256":"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2","license":"MIT","urls":["bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92","dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"]},"lib/forge-std/src/StdStorage.sol":{"keccak256":"0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d","license":"MIT","urls":["bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26","dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9"]},"lib/forge-std/src/StdStyle.sol":{"keccak256":"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d","license":"MIT","urls":["bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8","dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"]},"lib/forge-std/src/StdUtils.sol":{"keccak256":"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1","license":"MIT","urls":["bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140","dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"]},"lib/forge-std/src/Test.sol":{"keccak256":"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0","license":"MIT","urls":["bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765","dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"]},"lib/forge-std/src/Vm.sol":{"keccak256":"0xc37bdacd465b44feb78cdf9a86f62255884be84acd5a4b175f48f004386ce8f4","license":"MIT","urls":["bzz-raw://8109a9cb6c5b2f6c137e4bc119ce468d88eaf926ed60558e997a5505827c9241","dweb:/ipfs/QmR1H3wWXwhYD4bXgFFxNubnEZYB28WvvUUHkL9oZx14cx"]},"lib/forge-std/src/console.sol":{"keccak256":"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba","license":"MIT","urls":["bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70","dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"]},"lib/forge-std/src/console2.sol":{"keccak256":"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea","license":"MIT","urls":["bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973","dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"]},"lib/forge-std/src/interfaces/IMulticall3.sol":{"keccak256":"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a","license":"MIT","urls":["bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0","dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"]},"lib/forge-std/src/safeconsole.sol":{"keccak256":"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381","license":"MIT","urls":["bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae","dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"]},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b","license":"MIT","urls":["bzz-raw://21dbc5b8aede7dee8f0e3bf296a58270f376f8e40d6f8becccde5b3cf34bc8df","dweb:/ipfs/QmfHPWrtGiMNhTtLDYtqSd1eVd35Zqgd4PW9bR3i23oJgg"]},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0","license":"MIT","urls":["bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1","dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"keccak256":"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b","license":"MIT","urls":["bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f","dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca","license":"MIT","urls":["bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd","dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb","license":"MIT","urls":["bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0","dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"]},"lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol":{"keccak256":"0xec819d9f89eef128f291b9bfc054b9c3ce0cc11a35b5a1b52aca3620b69bafec","license":"MIT","urls":["bzz-raw://cbc9b07856f18e498852142293d8e1d98416748998be1916a4d653b1702fd0f3","dweb:/ipfs/Qmd8HNLSuqNvpqh3pZBw3ZEmDeggaog9Amt1L7RqCe4RBL"]},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a","license":"MIT","urls":["bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577","dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"]},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26","license":"MIT","urls":["bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f","dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"lib/solmate/src/utils/ReentrancyGuard.sol":{"keccak256":"0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01","license":"AGPL-3.0-only","urls":["bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800","dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j"]},"test/combinatorial/MultiToken._transferFrom.t.sol":{"keccak256":"0x77e291dc44fe4149548fa10739d973a67b391c0ce4f95b2adb7d8b4bc1cbbc2b","license":"Apache-2.0","urls":["bzz-raw://65617c874f97fb9b910c8870e0794ceb17f233c8e95d9ce83687409a898a693e","dweb:/ipfs/QmZQk7qgjds1Lk5oxQCNGgMh5wae7fHajVhUk7wSCWu58j"]},"test/utils/BaseTest.sol":{"keccak256":"0xe0bcf96bc6f6e483054204b1b888eebc08b15e39a550d9496efff6f5eb108ae6","license":"Apache-2.0","urls":["bzz-raw://6f77f4697e7cbb2a7c88939d6095784b18cb6dba9910aaf35723ba44c1598dbd","dweb:/ipfs/QmQayrq4hkUJqeQUS661YpCM2hC3T5o7UbSfeWxE5X2RvD"]},"test/utils/CombinatorialTest.sol":{"keccak256":"0xaeaff0cc3b907ab3657935b728924e332f2f2ba13307db3de359f933b07c2762","license":"Apache-2.0","urls":["bzz-raw://08c859d19906863c0ac98fc57915c014772eff1885d6f9f59d496cbb868e9bdc","dweb:/ipfs/QmfNnMGHSQdMuR5L5vzpdAN4ZjZoumwif5839zNS9XYjJd"]},"test/utils/Lib.sol":{"keccak256":"0x9af3ecc1e463f1c4fb29db82cc9039eeea604aabb322995af8937a035ebc21d2","license":"Apache-2.0","urls":["bzz-raw://62dc43b010453470063484f12d7ccec532ffde6885fdc5d6de8f9bdc4723c171","dweb:/ipfs/QmTiFUfFk2ZB1fvcqHBT1i65SxoWWorufPp7FsxczwqAQu"]}},"version":1}',
  metadata: {
    compiler: {
      version: "0.8.19+commit.7dd6d404",
    },
    language: "Solidity",
    output: {
      abi: [
        {
          inputs: [],
          type: "error",
          name: "ExpectedFail",
        },
        {
          inputs: [],
          type: "error",
          name: "ExpectedSuccess",
        },
        {
          inputs: [],
          type: "error",
          name: "TestFail",
        },
        {
          inputs: [],
          type: "error",
          name: "UnassignedCatch",
        },
        {
          inputs: [],
          type: "error",
          name: "UnassignedFail",
        },
        {
          inputs: [],
          type: "error",
          name: "WhaleBalanceExceeded",
        },
        {
          inputs: [],
          type: "error",
          name: "WhaleIsContract",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "from",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
              indexed: false,
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "TransferSingle",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
              indexed: false,
            },
          ],
          type: "event",
          name: "log",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_address",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "val",
              type: "uint256[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "int256[]",
              name: "val",
              type: "int256[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "val",
              type: "address[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_bytes",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_bytes32",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "int256",
              name: "",
              type: "int256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_int",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "address",
              name: "val",
              type: "address",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_address",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "uint256[]",
              name: "val",
              type: "uint256[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "int256[]",
              name: "val",
              type: "int256[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "address[]",
              name: "val",
              type: "address[]",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_array",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "bytes",
              name: "val",
              type: "bytes",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_bytes",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "bytes32",
              name: "val",
              type: "bytes32",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_bytes32",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "int256",
              name: "val",
              type: "int256",
              indexed: false,
            },
            {
              internalType: "uint256",
              name: "decimals",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_decimal_int",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "uint256",
              name: "val",
              type: "uint256",
              indexed: false,
            },
            {
              internalType: "uint256",
              name: "decimals",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_decimal_uint",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "int256",
              name: "val",
              type: "int256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_int",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "string",
              name: "val",
              type: "string",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_string",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "key",
              type: "string",
              indexed: false,
            },
            {
              internalType: "uint256",
              name: "val",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_named_uint",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_string",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "log_uint",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
              indexed: false,
            },
          ],
          type: "event",
          name: "logs",
          anonymous: false,
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "IS_TEST",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
            {
              internalType: "int256",
              name: "_delta",
              type: "int256",
            },
            {
              internalType: "uint256",
              name: "_targetValue",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "assertWithDelta",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "createUser",
          outputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "excludeArtifacts",
          outputs: [
            {
              internalType: "string[]",
              name: "excludedArtifacts_",
              type: "string[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "excludeContracts",
          outputs: [
            {
              internalType: "address[]",
              name: "excludedContracts_",
              type: "address[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "excludeSenders",
          outputs: [
            {
              internalType: "address[]",
              name: "excludedSenders_",
              type: "address[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "failed",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "setUp",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "targetArtifactSelectors",
          outputs: [
            {
              internalType: "struct StdInvariant.FuzzSelector[]",
              name: "targetedArtifactSelectors_",
              type: "tuple[]",
              components: [
                {
                  internalType: "address",
                  name: "addr",
                  type: "address",
                },
                {
                  internalType: "bytes4[]",
                  name: "selectors",
                  type: "bytes4[]",
                },
              ],
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "targetArtifacts",
          outputs: [
            {
              internalType: "string[]",
              name: "targetedArtifacts_",
              type: "string[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "targetContracts",
          outputs: [
            {
              internalType: "address[]",
              name: "targetedContracts_",
              type: "address[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "targetSelectors",
          outputs: [
            {
              internalType: "struct StdInvariant.FuzzSelector[]",
              name: "targetedSelectors_",
              type: "tuple[]",
              components: [
                {
                  internalType: "address",
                  name: "addr",
                  type: "address",
                },
                {
                  internalType: "bytes4[]",
                  name: "selectors",
                  type: "bytes4[]",
                },
              ],
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "targetSenders",
          outputs: [
            {
              internalType: "address[]",
              name: "targetedSenders_",
              type: "address[]",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "test__MultiToken__transferFrom",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "whale",
              type: "address",
            },
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "whaleTransfer",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "whale",
              type: "address",
            },
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "whaleTransfer",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
        },
      ],
      devdoc: {
        kind: "dev",
        methods: {},
        version: 1,
      },
      userdoc: {
        kind: "user",
        methods: {},
        version: 1,
      },
    },
    settings: {
      remappings: [
        "@aave/=lib/aave-v3-core/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "create3-factory/=lib/yield-daddy/lib/create3-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solmate/=lib/solmate/src/",
        "yield-daddy/=lib/yield-daddy/",
        "lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/",
      ],
      optimizer: {
        enabled: true,
        runs: 200,
      },
      metadata: {
        bytecodeHash: "ipfs",
      },
      compilationTarget: {
        "test/combinatorial/MultiToken._transferFrom.t.sol":
          "MultiToken__transferFrom",
      },
      libraries: {},
    },
    sources: {
      "contracts/src/DataProvider.sol": {
        keccak256:
          "0xd23ffd6ff77b03ea16b61130fdfcda6d2bfa430576241003f89b35cd76f51e30",
        urls: [
          "bzz-raw://cc1ab2f99af4241f81feeeda6514fd30f11997adafddcdb48bebd2b383aae212",
          "dweb:/ipfs/QmSPp2B1Pka73Ur1KQMybMs3u73VUrDhev5w6U9iGLTmw7",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/Hyperdrive.sol": {
        keccak256:
          "0xd2e2e47f45dab0447497a20b8ef54960190d3c01ce2f53dbfae6abe2d095f1f5",
        urls: [
          "bzz-raw://c8d8f034071cf69e922975cddb6123fe125862688ecbe2c3fc01c1f235a4a72e",
          "dweb:/ipfs/QmQraAs5iFKtRYQTqFmpRLh6NSyYxbqrBMFgkGJL2E2ZCN",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveBase.sol": {
        keccak256:
          "0x978cac18e731453de1268355e70fae31f71718e4149ad1969a56133d1f04cf95",
        urls: [
          "bzz-raw://a3c37a688a10766ade884f36c111925d71318306e46c6e2d207c85ecc7adfb3e",
          "dweb:/ipfs/QmZJu7M9zPNKd2XahfHAtCLX9483228MzMrgP2fVaS1jbn",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveLP.sol": {
        keccak256:
          "0xe2f37ecc51c9eba59c4b5c13549ed4cdc0415d8af1902442d52ed012e4b9c22a",
        urls: [
          "bzz-raw://53efc435c55fa29822d5ae3271cc42bf4ae096e4dfc9fb150a410f39cd43651e",
          "dweb:/ipfs/QmQgRowy4YqCsxV9A9mFyxzGF7FigC4Huc66Cxy8YfeYAv",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveLong.sol": {
        keccak256:
          "0x004b7cadd3e9090ca6f5a59510696e3b844839e6305c9076cd3fd31d9b0a3188",
        urls: [
          "bzz-raw://da04266d0c817b69cde906770f047e9add9f8983a12553413c67b2c60ff15c2f",
          "dweb:/ipfs/QmNmKcdUVGLmjxMvUq8kyETZrkfW43JDXfcPHJfP4GrF6V",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveShort.sol": {
        keccak256:
          "0x3bdfd1e33a2498c6183dfb1684b0db7e6775e9ae2e1097800aeccc869b9e2baa",
        urls: [
          "bzz-raw://e5c9337dfb069d806644ea7ceabe425222f1bc5766248648ba7a9a420715bee8",
          "dweb:/ipfs/QmaL1ZHX4zyAXxMqNmJB4mZ5o54JUTWLnTrKGMBJmbnRDa",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveStorage.sol": {
        keccak256:
          "0xf02f44333981dfbf6c500bf979aab8cd7aee9731d103a6aafc247e09b90b76bc",
        urls: [
          "bzz-raw://6664cd66465073274f9c2c27fee39e1c64e8e21fff532e64cd3014800582b00a",
          "dweb:/ipfs/QmSGH1ixAUMu81yYf3pMFHo4uJxw6XgfnkBupjUSoFcdNY",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/HyperdriveTWAP.sol": {
        keccak256:
          "0x76cba088948ab50bb4956377235b302b28ef7c9f6cc68bda73211d66df41e92b",
        urls: [
          "bzz-raw://74e1b28c8cd08aa9adf3b3f31f0379c095299cd2b9de3d3595d7d55b0e0697cc",
          "dweb:/ipfs/QmTTnkPF3jUmdfynnJK6kUBTYSBZFWJs69A9e9tPQzqiac",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IERC20.sol": {
        keccak256:
          "0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c",
        urls: [
          "bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672",
          "dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w",
        ],
        license: "MIT",
      },
      "contracts/src/interfaces/IForwarderFactory.sol": {
        keccak256:
          "0x939624fbf6490ff4e9309638d1ed36ba68cfd6a147763810dcbb2bb1efd326af",
        urls: [
          "bzz-raw://aba4213925b95149b6524719699e6f1642a99e7e13070cc9348b11f704a23ba3",
          "dweb:/ipfs/QmPjwGGY3UDYzw56ccvxz7cq6oSTphKqEDPvVdrX7qAPaF",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IHyperdrive.sol": {
        keccak256:
          "0x3336dbc3128174594baa25c95f3be485aa61a77a06afbb75e2708987247a5bb5",
        urls: [
          "bzz-raw://2e189558d4f78633d90ecdb3ff8d775109394a98cb18d19507642cb56c43dc1e",
          "dweb:/ipfs/QmZMVsor78To4nbXwLDBaZKD8m68PT53C9mxvR8iUkM5i5",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IHyperdriveRead.sol": {
        keccak256:
          "0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3",
        urls: [
          "bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993",
          "dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IHyperdriveWrite.sol": {
        keccak256:
          "0xe2ba8031ab98a81026010af00de9935b79ade6701dc486fd1c02d67f4eb81bf8",
        urls: [
          "bzz-raw://2e6acf863128f355e6ad26130037797a08321054ac8e202274debf6730162467",
          "dweb:/ipfs/Qmbf6882o3a7mci1j4w2XJtUDfsJvECGF6Yz3PG8q4LQgk",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IMultiToken.sol": {
        keccak256:
          "0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a",
        urls: [
          "bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0",
          "dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IMultiTokenMetadata.sol": {
        keccak256:
          "0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc",
        urls: [
          "bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87",
          "dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IMultiTokenRead.sol": {
        keccak256:
          "0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05",
        urls: [
          "bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939",
          "dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/interfaces/IMultiTokenWrite.sol": {
        keccak256:
          "0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8",
        urls: [
          "bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a",
          "dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/libraries/AssetId.sol": {
        keccak256:
          "0x82515c6d8fc8dbc940b0e40de0bfa584ade8a5a0f24ef14e352deced1e89a384",
        urls: [
          "bzz-raw://fa01b52b6e05d6c304ee938ab7181cacd6cfede09c5f6eca8f6d86b31e0fe806",
          "dweb:/ipfs/QmNVyKLPJnP71ADgTwvS9D2ME2xsPVwjD32yCnNdmvLmpT",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/libraries/FixedPointMath.sol": {
        keccak256:
          "0x0108762fdecfae06d7b8d76bb52b1a5757669cc2a4e5f3ad701499295ed635bd",
        urls: [
          "bzz-raw://a94cdbab2bdbb0212597f70cebea86fcf69be0702f6d6fe76571ee43992d7d6b",
          "dweb:/ipfs/QmXyncXgKixNzP7rgqoCA2dzehjPTAsEbtAKZGW6CQADFE",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/libraries/HyperdriveMath.sol": {
        keccak256:
          "0x81bccd15f87d6fb2df7fe455ab94b2f267b0cef1875890d89158f448bb7694b2",
        urls: [
          "bzz-raw://e973fb36a335fa1b7993152f9b051bd52588b1624c3d76f9dd21d35fe45d5c75",
          "dweb:/ipfs/QmbYLW9GPe19dQVCYNdSwvcgqrUZtDRjPyYtF4QtMn49Zb",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/libraries/SafeCast.sol": {
        keccak256:
          "0x077e800ae4f47bda111e72f8c40d50a57b10a1c5bce81f2e83bb57f94752159f",
        urls: [
          "bzz-raw://8e9433729a73747a65ececae27a8f634300a4e02a66577f796f596e5894a4bb5",
          "dweb:/ipfs/QmT2fC2xaRoFuDBURAtcwqvpqXvw1AQybSgb4khVBzit2S",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/libraries/YieldSpaceMath.sol": {
        keccak256:
          "0xb8682a4823e01535b6bc73755f6304d0846c44526d882cefc0c3b04b807e2a04",
        urls: [
          "bzz-raw://836744182376d0cd9721e15334c3f972d77564586220b8db7b63737342b410ef",
          "dweb:/ipfs/QmVxEHgnVkDTNggxbC83wMzvDmsQaUq1vTbFosShjzgAmr",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/token/ERC20Forwarder.sol": {
        keccak256:
          "0x50120439e5ae2657b37afa8133f4fb35ebdcce204b4a1a2fd3fcd9ba65dbe158",
        urls: [
          "bzz-raw://7d6dc4d9a8949c0351386b3a03410223cfa482783d28db1489911e6ab9eb1034",
          "dweb:/ipfs/QmRRVLeeRsgsL9kXxxd754dv3me7FXfeME8937VzhAZS6p",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/token/ForwarderFactory.sol": {
        keccak256:
          "0x96127d3ac11ff1b96bc816735913365618adf73ba6e9304b81ec59d32813106b",
        urls: [
          "bzz-raw://f2a4c35ad20e307720ed4c643abd739084ae5fabd71112bc2ac9cb576045842e",
          "dweb:/ipfs/QmcoXSNSn4sVSxXFneGFFuR7W1ykbX7Pk79vNW37s7fDQZ",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/token/MultiToken.sol": {
        keccak256:
          "0x1c22e52ab701c2b7ce3c0b049540ecba5fc24cd8b8000464b5b15c99dfee6a19",
        urls: [
          "bzz-raw://089273a3f853bdb205d34b70750eeca2edda7aaf999726ed9df0621d1e92bb98",
          "dweb:/ipfs/QmPy3tUmJb7gtnL9ACiWhhekKXGo3z3cd4SMYiUQX4geHy",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/token/MultiTokenDataProvider.sol": {
        keccak256:
          "0x1b2f98b9d6feaf0fc13ac4010dee2d2f49ecd33bf75d0c5be7e3318a6df2620f",
        urls: [
          "bzz-raw://4230f69efbb31e8194a78fb3ef5e2a69d349fe6f8b8aa4cf6b280484f3653cef",
          "dweb:/ipfs/QmScBP66WMXxXh28ScmU6SgSCWYhsRQHpZ755NyxTfCJoV",
        ],
        license: "Apache-2.0",
      },
      "contracts/src/token/MultiTokenStorage.sol": {
        keccak256:
          "0x97a22d11197f185d6f17ff5ada60665b27af265c23b208f20004e22b26d7b7e8",
        urls: [
          "bzz-raw://62f950f46f3de598776e8e8201a0d35ec51473cc0ea754be5c9e686078ebb3d6",
          "dweb:/ipfs/QmaKpZETx9zCV46XwcqvXUr7f8t2CPo1Tim2umTDwsk2bj",
        ],
        license: "Apache-2.0",
      },
      "contracts/test/MockMultiToken.sol": {
        keccak256:
          "0x9ab1676cd68dd22f510e700dbc27008da9fb3130f0305a60b7f12328cc107d24",
        urls: [
          "bzz-raw://bb7529c9799a8a4980108ea5cde83c1e3e3943418c017eb986b1a4d5e4d1df97",
          "dweb:/ipfs/QmNmGS1AQq29RPr2fjvFtfFr9XFdoV2qSJmfjeCVkScXUh",
        ],
        license: "Apache-2.0",
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        keccak256:
          "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        urls: [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k",
        ],
        license: "GPL-3.0-or-later",
      },
      "lib/forge-std/src/Base.sol": {
        keccak256:
          "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        urls: [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdAssertions.sol": {
        keccak256:
          "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        urls: [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdChains.sol": {
        keccak256:
          "0xc576f8b81bf19c853baa1fdc23ddc3b9fa1856d5749b01a4f99bed73db7d847d",
        urls: [
          "bzz-raw://fad0b975990e50941e255397925be1695b1ec06c3649decdbf759f42e49638d4",
          "dweb:/ipfs/QmeeRsbdgzUoPj1GWZZaoTsiEEuSGfjx7MpykgfxcMa1r1",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdCheats.sol": {
        keccak256:
          "0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5",
        urls: [
          "bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a",
          "dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdError.sol": {
        keccak256:
          "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        urls: [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdInvariant.sol": {
        keccak256:
          "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        urls: [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdJson.sol": {
        keccak256:
          "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        urls: [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdMath.sol": {
        keccak256:
          "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        urls: [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdStorage.sol": {
        keccak256:
          "0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d",
        urls: [
          "bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26",
          "dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdStyle.sol": {
        keccak256:
          "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        urls: [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/StdUtils.sol": {
        keccak256:
          "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        urls: [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/Test.sol": {
        keccak256:
          "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0",
        urls: [
          "bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765",
          "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/Vm.sol": {
        keccak256:
          "0xc37bdacd465b44feb78cdf9a86f62255884be84acd5a4b175f48f004386ce8f4",
        urls: [
          "bzz-raw://8109a9cb6c5b2f6c137e4bc119ce468d88eaf926ed60558e997a5505827c9241",
          "dweb:/ipfs/QmR1H3wWXwhYD4bXgFFxNubnEZYB28WvvUUHkL9oZx14cx",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/console.sol": {
        keccak256:
          "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        urls: [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/console2.sol": {
        keccak256:
          "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        urls: [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        keccak256:
          "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        urls: [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2",
        ],
        license: "MIT",
      },
      "lib/forge-std/src/safeconsole.sol": {
        keccak256:
          "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        urls: [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        keccak256:
          "0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b",
        urls: [
          "bzz-raw://21dbc5b8aede7dee8f0e3bf296a58270f376f8e40d6f8becccde5b3cf34bc8df",
          "dweb:/ipfs/QmfHPWrtGiMNhTtLDYtqSd1eVd35Zqgd4PW9bR3i23oJgg",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        keccak256:
          "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        urls: [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":
        {
          keccak256:
            "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
          urls: [
            "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
            "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":
        {
          keccak256:
            "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
          urls: [
            "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
            "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":
        {
          keccak256:
            "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
          urls: [
            "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
            "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol":
        {
          keccak256:
            "0xec819d9f89eef128f291b9bfc054b9c3ce0cc11a35b5a1b52aca3620b69bafec",
          urls: [
            "bzz-raw://cbc9b07856f18e498852142293d8e1d98416748998be1916a4d653b1702fd0f3",
            "dweb:/ipfs/Qmd8HNLSuqNvpqh3pZBw3ZEmDeggaog9Amt1L7RqCe4RBL",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        keccak256:
          "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        urls: [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        keccak256:
          "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        urls: [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        keccak256:
          "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        urls: [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3",
        ],
        license: "MIT",
      },
      "lib/solmate/src/utils/ReentrancyGuard.sol": {
        keccak256:
          "0xb282dd78aa7375d6b200b9a5d8dd214b2e5df1004f8217a4b4c2b07f0c5bfd01",
        urls: [
          "bzz-raw://5fca62eb8d3dbd2b3b7e4bb051f6da16f4d0ff9cee61c39cebb80f031f6a8800",
          "dweb:/ipfs/QmbrsXPK91iBFwHKwJs2HLRud2KzMoBDRiWYMUtyV5H57j",
        ],
        license: "AGPL-3.0-only",
      },
      "test/combinatorial/MultiToken._transferFrom.t.sol": {
        keccak256:
          "0x77e291dc44fe4149548fa10739d973a67b391c0ce4f95b2adb7d8b4bc1cbbc2b",
        urls: [
          "bzz-raw://65617c874f97fb9b910c8870e0794ceb17f233c8e95d9ce83687409a898a693e",
          "dweb:/ipfs/QmZQk7qgjds1Lk5oxQCNGgMh5wae7fHajVhUk7wSCWu58j",
        ],
        license: "Apache-2.0",
      },
      "test/utils/BaseTest.sol": {
        keccak256:
          "0xe0bcf96bc6f6e483054204b1b888eebc08b15e39a550d9496efff6f5eb108ae6",
        urls: [
          "bzz-raw://6f77f4697e7cbb2a7c88939d6095784b18cb6dba9910aaf35723ba44c1598dbd",
          "dweb:/ipfs/QmQayrq4hkUJqeQUS661YpCM2hC3T5o7UbSfeWxE5X2RvD",
        ],
        license: "Apache-2.0",
      },
      "test/utils/CombinatorialTest.sol": {
        keccak256:
          "0xaeaff0cc3b907ab3657935b728924e332f2f2ba13307db3de359f933b07c2762",
        urls: [
          "bzz-raw://08c859d19906863c0ac98fc57915c014772eff1885d6f9f59d496cbb868e9bdc",
          "dweb:/ipfs/QmfNnMGHSQdMuR5L5vzpdAN4ZjZoumwif5839zNS9XYjJd",
        ],
        license: "Apache-2.0",
      },
      "test/utils/Lib.sol": {
        keccak256:
          "0x9af3ecc1e463f1c4fb29db82cc9039eeea604aabb322995af8937a035ebc21d2",
        urls: [
          "bzz-raw://62dc43b010453470063484f12d7ccec532ffde6885fdc5d6de8f9bdc4723c171",
          "dweb:/ipfs/QmTiFUfFk2ZB1fvcqHBT1i65SxoWWorufPp7FsxczwqAQu",
        ],
        license: "Apache-2.0",
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: "test/combinatorial/MultiToken._transferFrom.t.sol",
    id: 71312,
    exportedSymbols: {
      CombinatorialTest: [118837],
      DSTest: [17031],
      ForwarderFactory: [12288],
      IMockMultiToken: [14443],
      MockMultiToken: [14555],
      MultiTokenDataProvider: [13135],
      MultiToken__transferFrom: [71311],
      StdAssertions: [18563],
      StdChains: [19283],
      StdCheats: [22101],
      StdInvariant: [22391],
      StdStorage: [23141],
      StdStyle: [25805],
      StdUtils: [26653],
      Test: [26704],
      TestBase: [17097],
      Vm: [28241],
      console: [36305],
      console2: [44430],
      safeconsole: [57668],
      stdError: [22167],
      stdJson: [22967],
      stdMath: [23109],
      stdStorage: [24594],
    },
    nodeType: "SourceUnit",
    src: "39:10252:111",
    nodes: [
      {
        id: 70562,
        nodeType: "PragmaDirective",
        src: "39:23:111",
        nodes: [],
        literals: ["solidity", "0.8", ".19"],
      },
      {
        id: 70563,
        nodeType: "ImportDirective",
        src: "64:28:111",
        nodes: [],
        absolutePath: "lib/forge-std/src/Test.sol",
        file: "forge-std/Test.sol",
        nameLocation: "-1:-1:-1",
        scope: 71312,
        sourceUnit: 26705,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 70564,
        nodeType: "ImportDirective",
        src: "93:32:111",
        nodes: [],
        absolutePath: "lib/forge-std/src/console2.sol",
        file: "forge-std/console2.sol",
        nameLocation: "-1:-1:-1",
        scope: 71312,
        sourceUnit: 44431,
        symbolAliases: [],
        unitAlias: "",
      },
      {
        id: 70566,
        nodeType: "ImportDirective",
        src: "127:76:111",
        nodes: [],
        absolutePath: "contracts/src/token/ForwarderFactory.sol",
        file: "contracts/src/token/ForwarderFactory.sol",
        nameLocation: "-1:-1:-1",
        scope: 71312,
        sourceUnit: 12289,
        symbolAliases: [
          {
            foreign: {
              id: 70565,
              name: "ForwarderFactory",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 12288,
              src: "136:16:111",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
        ],
        unitAlias: "",
      },
      {
        id: 70568,
        nodeType: "ImportDirective",
        src: "204:88:111",
        nodes: [],
        absolutePath: "contracts/src/token/MultiTokenDataProvider.sol",
        file: "contracts/src/token/MultiTokenDataProvider.sol",
        nameLocation: "-1:-1:-1",
        scope: 71312,
        sourceUnit: 13136,
        symbolAliases: [
          {
            foreign: {
              id: 70567,
              name: "MultiTokenDataProvider",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 13135,
              src: "213:22:111",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
        ],
        unitAlias: "",
      },
      {
        id: 70571,
        nodeType: "ImportDirective",
        src: "293:84:111",
        nodes: [],
        absolutePath: "contracts/test/MockMultiToken.sol",
        file: "contracts/test/MockMultiToken.sol",
        nameLocation: "-1:-1:-1",
        scope: 71312,
        sourceUnit: 14556,
        symbolAliases: [
          {
            foreign: {
              id: 70569,
              name: "MockMultiToken",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 14555,
              src: "302:14:111",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
          {
            foreign: {
              id: 70570,
              name: "IMockMultiToken",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 14443,
              src: "318:15:111",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
        ],
        unitAlias: "",
      },
      {
        id: 70573,
        nodeType: "ImportDirective",
        src: "378:69:111",
        nodes: [],
        absolutePath: "test/utils/CombinatorialTest.sol",
        file: "test/utils/CombinatorialTest.sol",
        nameLocation: "-1:-1:-1",
        scope: 71312,
        sourceUnit: 118838,
        symbolAliases: [
          {
            foreign: {
              id: 70572,
              name: "CombinatorialTest",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 118837,
              src: "387:17:111",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
        ],
        unitAlias: "",
      },
      {
        id: 71311,
        nodeType: "ContractDefinition",
        src: "449:9841:111",
        nodes: [
          {
            id: 70578,
            nodeType: "VariableDeclaration",
            src: "510:26:111",
            nodes: [],
            constant: false,
            mutability: "mutable",
            name: "multiToken",
            nameLocation: "526:10:111",
            scope: 71311,
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_contract$_IMockMultiToken_$14443",
              typeString: "contract IMockMultiToken",
            },
            typeName: {
              id: 70577,
              nodeType: "UserDefinedTypeName",
              pathNode: {
                id: 70576,
                name: "IMockMultiToken",
                nameLocations: ["510:15:111"],
                nodeType: "IdentifierPath",
                referencedDeclaration: 14443,
                src: "510:15:111",
              },
              referencedDeclaration: 14443,
              src: "510:15:111",
              typeDescriptions: {
                typeIdentifier: "t_contract$_IMockMultiToken_$14443",
                typeString: "contract IMockMultiToken",
              },
            },
            visibility: "internal",
          },
          {
            id: 70638,
            nodeType: "FunctionDefinition",
            src: "543:532:111",
            nodes: [],
            body: {
              id: 70637,
              nodeType: "Block",
              src: "576:499:111",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 70582,
                        name: "super",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: -25,
                        src: "619:5:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_super$_MultiToken__transferFrom_$71311_$",
                          typeString:
                            "type(contract super MultiToken__transferFrom)",
                        },
                      },
                      id: 70584,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "625:5:111",
                      memberName: "setUp",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 117502,
                      src: "619:11:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$__$returns$__$",
                        typeString: "function ()",
                      },
                    },
                    id: 70585,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "619:13:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 70586,
                  nodeType: "ExpressionStatement",
                  src: "619:13:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 70590,
                        name: "deployer",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 116807,
                        src: "656:8:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      expression: {
                        id: 70587,
                        name: "vm",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 17090,
                        src: "642:2:111",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_Vm_$28241",
                          typeString: "contract Vm",
                        },
                      },
                      id: 70589,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "645:10:111",
                      memberName: "startPrank",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 27844,
                      src: "642:13:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_address_$returns$__$",
                        typeString: "function (address) external",
                      },
                    },
                    id: 70591,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "642:23:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 70592,
                  nodeType: "ExpressionStatement",
                  src: "642:23:111",
                },
                {
                  assignments: [70594],
                  declarations: [
                    {
                      constant: false,
                      id: 70594,
                      mutability: "mutable",
                      name: "dataProvider",
                      nameLocation: "683:12:111",
                      nodeType: "VariableDeclaration",
                      scope: 70637,
                      src: "675:20:111",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                      typeName: {
                        id: 70593,
                        name: "address",
                        nodeType: "ElementaryTypeName",
                        src: "675:7:111",
                        stateMutability: "nonpayable",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 70610,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 70602,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "754:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                              ],
                              id: 70601,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "746:7:111",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_bytes32_$",
                                typeString: "type(bytes32)",
                              },
                              typeName: {
                                id: 70600,
                                name: "bytes32",
                                nodeType: "ElementaryTypeName",
                                src: "746:7:111",
                                typeDescriptions: {},
                              },
                            },
                            id: 70603,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "typeConversion",
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: "FunctionCall",
                            src: "746:10:111",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_bytes32",
                              typeString: "bytes32",
                            },
                          },
                          {
                            arguments: [
                              {
                                id: 70606,
                                name: "forwarderFactory",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 116793,
                                src: "766:16:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_contract$_ForwarderFactory_$12288",
                                  typeString: "contract ForwarderFactory",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier:
                                    "t_contract$_ForwarderFactory_$12288",
                                  typeString: "contract ForwarderFactory",
                                },
                              ],
                              id: 70605,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "758:7:111",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_address_$",
                                typeString: "type(address)",
                              },
                              typeName: {
                                id: 70604,
                                name: "address",
                                nodeType: "ElementaryTypeName",
                                src: "758:7:111",
                                typeDescriptions: {},
                              },
                            },
                            id: 70607,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "typeConversion",
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: "FunctionCall",
                            src: "758:25:111",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_bytes32",
                              typeString: "bytes32",
                            },
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          id: 70599,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "NewExpression",
                          src: "719:26:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_creation_nonpayable$_t_bytes32_$_t_address_$returns$_t_contract$_MultiTokenDataProvider_$13135_$",
                            typeString:
                              "function (bytes32,address) returns (contract MultiTokenDataProvider)",
                          },
                          typeName: {
                            id: 70598,
                            nodeType: "UserDefinedTypeName",
                            pathNode: {
                              id: 70597,
                              name: "MultiTokenDataProvider",
                              nameLocations: ["723:22:111"],
                              nodeType: "IdentifierPath",
                              referencedDeclaration: 13135,
                              src: "723:22:111",
                            },
                            referencedDeclaration: 13135,
                            src: "723:22:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_contract$_MultiTokenDataProvider_$13135",
                              typeString: "contract MultiTokenDataProvider",
                            },
                          },
                        },
                        id: 70608,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: "FunctionCall",
                        src: "719:65:111",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier:
                            "t_contract$_MultiTokenDataProvider_$13135",
                          typeString: "contract MultiTokenDataProvider",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_contract$_MultiTokenDataProvider_$13135",
                          typeString: "contract MultiTokenDataProvider",
                        },
                      ],
                      id: 70596,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "ElementaryTypeNameExpression",
                      src: "698:7:111",
                      typeDescriptions: {
                        typeIdentifier: "t_type$_t_address_$",
                        typeString: "type(address)",
                      },
                      typeName: {
                        id: 70595,
                        name: "address",
                        nodeType: "ElementaryTypeName",
                        src: "698:7:111",
                        typeDescriptions: {},
                      },
                    },
                    id: 70609,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "typeConversion",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "698:96:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "675:119:111",
                },
                {
                  expression: {
                    id: 70630,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 70611,
                      name: "multiToken",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 70578,
                      src: "804:10:111",
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_IMockMultiToken_$14443",
                        typeString: "contract IMockMultiToken",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          arguments: [
                            {
                              arguments: [
                                {
                                  id: 70618,
                                  name: "dataProvider",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 70594,
                                  src: "911:12:111",
                                  typeDescriptions: {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                },
                                {
                                  arguments: [
                                    {
                                      hexValue: "30",
                                      id: 70621,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      kind: "number",
                                      lValueRequested: false,
                                      nodeType: "Literal",
                                      src: "953:1:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_rational_0_by_1",
                                        typeString: "int_const 0",
                                      },
                                      value: "0",
                                    },
                                  ],
                                  expression: {
                                    argumentTypes: [
                                      {
                                        typeIdentifier: "t_rational_0_by_1",
                                        typeString: "int_const 0",
                                      },
                                    ],
                                    id: 70620,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    lValueRequested: false,
                                    nodeType: "ElementaryTypeNameExpression",
                                    src: "945:7:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_type$_t_bytes32_$",
                                      typeString: "type(bytes32)",
                                    },
                                    typeName: {
                                      id: 70619,
                                      name: "bytes32",
                                      nodeType: "ElementaryTypeName",
                                      src: "945:7:111",
                                      typeDescriptions: {},
                                    },
                                  },
                                  id: 70622,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "typeConversion",
                                  lValueRequested: false,
                                  nameLocations: [],
                                  names: [],
                                  nodeType: "FunctionCall",
                                  src: "945:10:111",
                                  tryCall: false,
                                  typeDescriptions: {
                                    typeIdentifier: "t_bytes32",
                                    typeString: "bytes32",
                                  },
                                },
                                {
                                  arguments: [
                                    {
                                      id: 70625,
                                      name: "forwarderFactory",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 116793,
                                      src: "985:16:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_contract$_ForwarderFactory_$12288",
                                        typeString: "contract ForwarderFactory",
                                      },
                                    },
                                  ],
                                  expression: {
                                    argumentTypes: [
                                      {
                                        typeIdentifier:
                                          "t_contract$_ForwarderFactory_$12288",
                                        typeString: "contract ForwarderFactory",
                                      },
                                    ],
                                    id: 70624,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    lValueRequested: false,
                                    nodeType: "ElementaryTypeNameExpression",
                                    src: "977:7:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_type$_t_address_$",
                                      typeString: "type(address)",
                                    },
                                    typeName: {
                                      id: 70623,
                                      name: "address",
                                      nodeType: "ElementaryTypeName",
                                      src: "977:7:111",
                                      typeDescriptions: {},
                                    },
                                  },
                                  id: 70626,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  kind: "typeConversion",
                                  lValueRequested: false,
                                  nameLocations: [],
                                  names: [],
                                  nodeType: "FunctionCall",
                                  src: "977:25:111",
                                  tryCall: false,
                                  typeDescriptions: {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                  {
                                    typeIdentifier: "t_bytes32",
                                    typeString: "bytes32",
                                  },
                                  {
                                    typeIdentifier: "t_address",
                                    typeString: "address",
                                  },
                                ],
                                id: 70617,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "NewExpression",
                                src: "871:18:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_creation_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$_t_contract$_MockMultiToken_$14555_$",
                                  typeString:
                                    "function (address,bytes32,address) returns (contract MockMultiToken)",
                                },
                                typeName: {
                                  id: 70616,
                                  nodeType: "UserDefinedTypeName",
                                  pathNode: {
                                    id: 70615,
                                    name: "MockMultiToken",
                                    nameLocations: ["875:14:111"],
                                    nodeType: "IdentifierPath",
                                    referencedDeclaration: 14555,
                                    src: "875:14:111",
                                  },
                                  referencedDeclaration: 14555,
                                  src: "875:14:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_contract$_MockMultiToken_$14555",
                                    typeString: "contract MockMultiToken",
                                  },
                                },
                              },
                              id: 70627,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "functionCall",
                              lValueRequested: false,
                              nameLocations: [],
                              names: [],
                              nodeType: "FunctionCall",
                              src: "871:149:111",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_contract$_MockMultiToken_$14555",
                                typeString: "contract MockMultiToken",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  "t_contract$_MockMultiToken_$14555",
                                typeString: "contract MockMultiToken",
                              },
                            ],
                            id: 70614,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            nodeType: "ElementaryTypeNameExpression",
                            src: "846:7:111",
                            typeDescriptions: {
                              typeIdentifier: "t_type$_t_address_$",
                              typeString: "type(address)",
                            },
                            typeName: {
                              id: 70613,
                              name: "address",
                              nodeType: "ElementaryTypeName",
                              src: "846:7:111",
                              typeDescriptions: {},
                            },
                          },
                          id: 70628,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "typeConversion",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "846:188:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        id: 70612,
                        name: "IMockMultiToken",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 14443,
                        src: "817:15:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_IMockMultiToken_$14443_$",
                          typeString: "type(contract IMockMultiToken)",
                        },
                      },
                      id: 70629,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "typeConversion",
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: "FunctionCall",
                      src: "817:227:111",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_contract$_IMockMultiToken_$14443",
                        typeString: "contract IMockMultiToken",
                      },
                    },
                    src: "804:240:111",
                    typeDescriptions: {
                      typeIdentifier: "t_contract$_IMockMultiToken_$14443",
                      typeString: "contract IMockMultiToken",
                    },
                  },
                  id: 70631,
                  nodeType: "ExpressionStatement",
                  src: "804:240:111",
                },
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      expression: {
                        id: 70632,
                        name: "vm",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 17090,
                        src: "1054:2:111",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_Vm_$28241",
                          typeString: "contract Vm",
                        },
                      },
                      id: 70634,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1057:9:111",
                      memberName: "stopPrank",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 27861,
                      src: "1054:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$__$returns$__$",
                        typeString: "function () external",
                      },
                    },
                    id: 70635,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1054:14:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 70636,
                  nodeType: "ExpressionStatement",
                  src: "1054:14:111",
                },
              ],
            },
            baseFunctions: [117502],
            functionSelector: "0a9254e4",
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "setUp",
            nameLocation: "552:5:111",
            overrides: {
              id: 70580,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "567:8:111",
            },
            parameters: {
              id: 70579,
              nodeType: "ParameterList",
              parameters: [],
              src: "557:2:111",
            },
            returnParameters: {
              id: 70581,
              nodeType: "ParameterList",
              parameters: [],
              src: "576:0:111",
            },
            scope: 71311,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            id: 70659,
            nodeType: "StructDefinition",
            src: "1081:314:111",
            nodes: [],
            canonicalName: "MultiToken__transferFrom.TestCase",
            members: [
              {
                constant: false,
                id: 70640,
                mutability: "mutable",
                name: "index",
                nameLocation: "1115:5:111",
                nodeType: "VariableDeclaration",
                scope: 70659,
                src: "1107:13:111",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 70639,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "1107:7:111",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 70642,
                mutability: "mutable",
                name: "tokenId",
                nameLocation: "1157:7:111",
                nodeType: "VariableDeclaration",
                scope: 70659,
                src: "1149:15:111",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 70641,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "1149:7:111",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 70644,
                mutability: "mutable",
                name: "from",
                nameLocation: "1182:4:111",
                nodeType: "VariableDeclaration",
                scope: 70659,
                src: "1174:12:111",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
                typeName: {
                  id: 70643,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "1174:7:111",
                  stateMutability: "nonpayable",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 70646,
                mutability: "mutable",
                name: "to",
                nameLocation: "1204:2:111",
                nodeType: "VariableDeclaration",
                scope: 70659,
                src: "1196:10:111",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
                typeName: {
                  id: 70645,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "1196:7:111",
                  stateMutability: "nonpayable",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 70648,
                mutability: "mutable",
                name: "amount",
                nameLocation: "1224:6:111",
                nodeType: "VariableDeclaration",
                scope: 70659,
                src: "1216:14:111",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 70647,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "1216:7:111",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 70650,
                mutability: "mutable",
                name: "caller",
                nameLocation: "1248:6:111",
                nodeType: "VariableDeclaration",
                scope: 70659,
                src: "1240:14:111",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
                typeName: {
                  id: 70649,
                  name: "address",
                  nodeType: "ElementaryTypeName",
                  src: "1240:7:111",
                  stateMutability: "nonpayable",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 70652,
                mutability: "mutable",
                name: "approvals",
                nameLocation: "1294:9:111",
                nodeType: "VariableDeclaration",
                scope: 70659,
                src: "1286:17:111",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 70651,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "1286:7:111",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 70654,
                mutability: "mutable",
                name: "balanceFrom",
                nameLocation: "1321:11:111",
                nodeType: "VariableDeclaration",
                scope: 70659,
                src: "1313:19:111",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 70653,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "1313:7:111",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 70656,
                mutability: "mutable",
                name: "balanceTo",
                nameLocation: "1350:9:111",
                nodeType: "VariableDeclaration",
                scope: 70659,
                src: "1342:17:111",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_uint256",
                  typeString: "uint256",
                },
                typeName: {
                  id: 70655,
                  name: "uint256",
                  nodeType: "ElementaryTypeName",
                  src: "1342:7:111",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                },
                visibility: "internal",
              },
              {
                constant: false,
                id: 70658,
                mutability: "mutable",
                name: "approvedForAll",
                nameLocation: "1374:14:111",
                nodeType: "VariableDeclaration",
                scope: 70659,
                src: "1369:19:111",
                stateVariable: false,
                storageLocation: "default",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
                typeName: {
                  id: 70657,
                  name: "bool",
                  nodeType: "ElementaryTypeName",
                  src: "1369:4:111",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                },
                visibility: "internal",
              },
            ],
            name: "TestCase",
            nameLocation: "1088:8:111",
            scope: 71311,
            visibility: "public",
          },
          {
            id: 70809,
            nodeType: "FunctionDefinition",
            src: "1401:1537:111",
            nodes: [],
            body: {
              id: 70808,
              nodeType: "Block",
              src: "1450:1488:111",
              nodes: [],
              statements: [
                {
                  assignments: [70667],
                  declarations: [
                    {
                      constant: false,
                      id: 70667,
                      mutability: "mutable",
                      name: "rawTestCases",
                      nameLocation: "1527:12:111",
                      nodeType: "VariableDeclaration",
                      scope: 70808,
                      src: "1508:31:111",
                      stateVariable: false,
                      storageLocation: "memory",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                        typeString: "uint256[][]",
                      },
                      typeName: {
                        baseType: {
                          baseType: {
                            id: 70664,
                            name: "uint256",
                            nodeType: "ElementaryTypeName",
                            src: "1508:7:111",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          id: 70665,
                          nodeType: "ArrayTypeName",
                          src: "1508:9:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_array$_t_uint256_$dyn_storage_ptr",
                            typeString: "uint256[]",
                          },
                        },
                        id: 70666,
                        nodeType: "ArrayTypeName",
                        src: "1508:11:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                          typeString: "uint256[][]",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 70711,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 70671,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1617:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                              {
                                hexValue: "31",
                                id: 70672,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1620:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_1_by_1",
                                  typeString: "int_const 1",
                                },
                                value: "1",
                              },
                              {
                                hexValue: "31653138",
                                id: 70673,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1623:4:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_rational_1000000000000000000_by_1",
                                  typeString: "int_const 1000000000000000000",
                                },
                                value: "1e18",
                              },
                              {
                                hexValue: "31303030303030653138",
                                id: 70674,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1629:10:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_rational_1000000000000000000000000_by_1",
                                  typeString:
                                    "int_const 1000000000000000000000000",
                                },
                                value: "1000000e18",
                              },
                              {
                                expression: {
                                  arguments: [
                                    {
                                      id: 70677,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      lValueRequested: false,
                                      nodeType: "ElementaryTypeNameExpression",
                                      src: "1646:7:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_type$_t_uint256_$",
                                        typeString: "type(uint256)",
                                      },
                                      typeName: {
                                        id: 70676,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "1646:7:111",
                                        typeDescriptions: {},
                                      },
                                    },
                                  ],
                                  expression: {
                                    argumentTypes: [
                                      {
                                        typeIdentifier: "t_type$_t_uint256_$",
                                        typeString: "type(uint256)",
                                      },
                                    ],
                                    id: 70675,
                                    name: "type",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: -27,
                                    src: "1641:4:111",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_function_metatype_pure$__$returns$__$",
                                      typeString: "function () pure",
                                    },
                                  },
                                  id: 70678,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "functionCall",
                                  lValueRequested: false,
                                  nameLocations: [],
                                  names: [],
                                  nodeType: "FunctionCall",
                                  src: "1641:13:111",
                                  tryCall: false,
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_magic_meta_type_t_uint256",
                                    typeString: "type(uint256)",
                                  },
                                },
                                id: 70679,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                memberLocation: "1655:3:111",
                                memberName: "max",
                                nodeType: "MemberAccess",
                                src: "1641:17:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                {
                                  typeIdentifier: "t_rational_1_by_1",
                                  typeString: "int_const 1",
                                },
                                {
                                  typeIdentifier:
                                    "t_rational_1000000000000000000_by_1",
                                  typeString: "int_const 1000000000000000000",
                                },
                                {
                                  typeIdentifier:
                                    "t_rational_1000000000000000000000000_by_1",
                                  typeString:
                                    "int_const 1000000000000000000000000",
                                },
                                {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              ],
                              id: 70670,
                              name: "_arr",
                              nodeType: "Identifier",
                              overloadedDeclarations: [
                                117661, 117700, 117747, 117802, 117865, 117936,
                                118015, 118102, 118197, 118232, 118276, 118329,
                                118391, 118462, 118542, 118631, 118729, 118836,
                              ],
                              referencedDeclaration: 117802,
                              src: "1612:4:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                typeString:
                                  "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256[] memory)",
                              },
                            },
                            id: 70680,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: "FunctionCall",
                            src: "1612:47:111",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier:
                                "t_array$_t_uint256_$dyn_memory_ptr",
                              typeString: "uint256[] memory",
                            },
                          },
                          {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 70682,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1708:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                              {
                                hexValue: "31",
                                id: 70683,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1711:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_1_by_1",
                                  typeString: "int_const 1",
                                },
                                value: "1",
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                {
                                  typeIdentifier: "t_rational_1_by_1",
                                  typeString: "int_const 1",
                                },
                              ],
                              id: 70681,
                              name: "_arr",
                              nodeType: "Identifier",
                              overloadedDeclarations: [
                                117661, 117700, 117747, 117802, 117865, 117936,
                                118015, 118102, 118197, 118232, 118276, 118329,
                                118391, 118462, 118542, 118631, 118729, 118836,
                              ],
                              referencedDeclaration: 117661,
                              src: "1703:4:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                typeString:
                                  "function (uint256,uint256) pure returns (uint256[] memory)",
                              },
                            },
                            id: 70684,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: "FunctionCall",
                            src: "1703:10:111",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier:
                                "t_array$_t_uint256_$dyn_memory_ptr",
                              typeString: "uint256[] memory",
                            },
                          },
                          {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 70686,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1765:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                              {
                                hexValue: "3130653138",
                                id: 70687,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1768:5:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_rational_10000000000000000000_by_1",
                                  typeString: "int_const 10000000000000000000",
                                },
                                value: "10e18",
                              },
                              {
                                expression: {
                                  arguments: [
                                    {
                                      id: 70690,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      lValueRequested: false,
                                      nodeType: "ElementaryTypeNameExpression",
                                      src: "1780:7:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_type$_t_uint128_$",
                                        typeString: "type(uint128)",
                                      },
                                      typeName: {
                                        id: 70689,
                                        name: "uint128",
                                        nodeType: "ElementaryTypeName",
                                        src: "1780:7:111",
                                        typeDescriptions: {},
                                      },
                                    },
                                  ],
                                  expression: {
                                    argumentTypes: [
                                      {
                                        typeIdentifier: "t_type$_t_uint128_$",
                                        typeString: "type(uint128)",
                                      },
                                    ],
                                    id: 70688,
                                    name: "type",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: -27,
                                    src: "1775:4:111",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_function_metatype_pure$__$returns$__$",
                                      typeString: "function () pure",
                                    },
                                  },
                                  id: 70691,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "functionCall",
                                  lValueRequested: false,
                                  nameLocations: [],
                                  names: [],
                                  nodeType: "FunctionCall",
                                  src: "1775:13:111",
                                  tryCall: false,
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_magic_meta_type_t_uint128",
                                    typeString: "type(uint128)",
                                  },
                                },
                                id: 70692,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                memberLocation: "1789:3:111",
                                memberName: "max",
                                nodeType: "MemberAccess",
                                src: "1775:17:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint128",
                                  typeString: "uint128",
                                },
                              },
                              {
                                expression: {
                                  arguments: [
                                    {
                                      id: 70695,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      lValueRequested: false,
                                      nodeType: "ElementaryTypeNameExpression",
                                      src: "1799:7:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_type$_t_uint256_$",
                                        typeString: "type(uint256)",
                                      },
                                      typeName: {
                                        id: 70694,
                                        name: "uint256",
                                        nodeType: "ElementaryTypeName",
                                        src: "1799:7:111",
                                        typeDescriptions: {},
                                      },
                                    },
                                  ],
                                  expression: {
                                    argumentTypes: [
                                      {
                                        typeIdentifier: "t_type$_t_uint256_$",
                                        typeString: "type(uint256)",
                                      },
                                    ],
                                    id: 70693,
                                    name: "type",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: -27,
                                    src: "1794:4:111",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_function_metatype_pure$__$returns$__$",
                                      typeString: "function () pure",
                                    },
                                  },
                                  id: 70696,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "functionCall",
                                  lValueRequested: false,
                                  nameLocations: [],
                                  names: [],
                                  nodeType: "FunctionCall",
                                  src: "1794:13:111",
                                  tryCall: false,
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_magic_meta_type_t_uint256",
                                    typeString: "type(uint256)",
                                  },
                                },
                                id: 70697,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                memberLocation: "1808:3:111",
                                memberName: "max",
                                nodeType: "MemberAccess",
                                src: "1794:17:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                {
                                  typeIdentifier:
                                    "t_rational_10000000000000000000_by_1",
                                  typeString: "int_const 10000000000000000000",
                                },
                                {
                                  typeIdentifier: "t_uint128",
                                  typeString: "uint128",
                                },
                                {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              ],
                              id: 70685,
                              name: "_arr",
                              nodeType: "Identifier",
                              overloadedDeclarations: [
                                117661, 117700, 117747, 117802, 117865, 117936,
                                118015, 118102, 118197, 118232, 118276, 118329,
                                118391, 118462, 118542, 118631, 118729, 118836,
                              ],
                              referencedDeclaration: 117747,
                              src: "1760:4:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                typeString:
                                  "function (uint256,uint256,uint256,uint256) pure returns (uint256[] memory)",
                              },
                            },
                            id: 70698,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: "FunctionCall",
                            src: "1760:52:111",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier:
                                "t_array$_t_uint256_$dyn_memory_ptr",
                              typeString: "uint256[] memory",
                            },
                          },
                          {
                            arguments: [
                              {
                                hexValue: "30",
                                id: 70700,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1873:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                              {
                                hexValue: "313030653138",
                                id: 70701,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "1876:6:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_rational_100000000000000000000_by_1",
                                  typeString: "int_const 100000000000000000000",
                                },
                                value: "100e18",
                              },
                              {
                                commonType: {
                                  typeIdentifier:
                                    "t_rational_79228162514264337603367662447_by_1",
                                  typeString:
                                    "int_const 79228162514264337603367662447",
                                },
                                id: 70707,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                leftExpression: {
                                  components: [
                                    {
                                      commonType: {
                                        typeIdentifier:
                                          "t_rational_79228162514264337593543950336_by_1",
                                        typeString:
                                          "int_const 79228162514264337593543950336",
                                      },
                                      id: 70704,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      lValueRequested: false,
                                      leftExpression: {
                                        hexValue: "32",
                                        id: 70702,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: true,
                                        kind: "number",
                                        lValueRequested: false,
                                        nodeType: "Literal",
                                        src: "1885:1:111",
                                        typeDescriptions: {
                                          typeIdentifier: "t_rational_2_by_1",
                                          typeString: "int_const 2",
                                        },
                                        value: "2",
                                      },
                                      nodeType: "BinaryOperation",
                                      operator: "**",
                                      rightExpression: {
                                        hexValue: "3936",
                                        id: 70703,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: true,
                                        kind: "number",
                                        lValueRequested: false,
                                        nodeType: "Literal",
                                        src: "1890:2:111",
                                        typeDescriptions: {
                                          typeIdentifier: "t_rational_96_by_1",
                                          typeString: "int_const 96",
                                        },
                                        value: "96",
                                      },
                                      src: "1885:7:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_rational_79228162514264337593543950336_by_1",
                                        typeString:
                                          "int_const 79228162514264337593543950336",
                                      },
                                    },
                                  ],
                                  id: 70705,
                                  isConstant: false,
                                  isInlineArray: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  nodeType: "TupleExpression",
                                  src: "1884:9:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_rational_79228162514264337593543950336_by_1",
                                    typeString:
                                      "int_const 79228162514264337593543950336",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: "+",
                                rightExpression: {
                                  hexValue: "39383233372e31323131316535",
                                  id: 70706,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "1896:13:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_rational_9823712111_by_1",
                                    typeString: "int_const 9823712111",
                                  },
                                  value: "98237.12111e5",
                                },
                                src: "1884:25:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_rational_79228162514264337603367662447_by_1",
                                  typeString:
                                    "int_const 79228162514264337603367662447",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                {
                                  typeIdentifier:
                                    "t_rational_100000000000000000000_by_1",
                                  typeString: "int_const 100000000000000000000",
                                },
                                {
                                  typeIdentifier:
                                    "t_rational_79228162514264337603367662447_by_1",
                                  typeString:
                                    "int_const 79228162514264337603367662447",
                                },
                              ],
                              id: 70699,
                              name: "_arr",
                              nodeType: "Identifier",
                              overloadedDeclarations: [
                                117661, 117700, 117747, 117802, 117865, 117936,
                                118015, 118102, 118197, 118232, 118276, 118329,
                                118391, 118462, 118542, 118631, 118729, 118836,
                              ],
                              referencedDeclaration: 117700,
                              src: "1868:4:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                typeString:
                                  "function (uint256,uint256,uint256) pure returns (uint256[] memory)",
                              },
                            },
                            id: 70708,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: "FunctionCall",
                            src: "1868:42:111",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier:
                                "t_array$_t_uint256_$dyn_memory_ptr",
                              typeString: "uint256[] memory",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier:
                                "t_array$_t_uint256_$dyn_memory_ptr",
                              typeString: "uint256[] memory",
                            },
                            {
                              typeIdentifier:
                                "t_array$_t_uint256_$dyn_memory_ptr",
                              typeString: "uint256[] memory",
                            },
                            {
                              typeIdentifier:
                                "t_array$_t_uint256_$dyn_memory_ptr",
                              typeString: "uint256[] memory",
                            },
                            {
                              typeIdentifier:
                                "t_array$_t_uint256_$dyn_memory_ptr",
                              typeString: "uint256[] memory",
                            },
                          ],
                          id: 70669,
                          name: "_arr",
                          nodeType: "Identifier",
                          overloadedDeclarations: [
                            117661, 117700, 117747, 117802, 117865, 117936,
                            118015, 118102, 118197, 118232, 118276, 118329,
                            118391, 118462, 118542, 118631, 118729, 118836,
                          ],
                          referencedDeclaration: 118329,
                          src: "1564:4:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$",
                            typeString:
                              "function (uint256[] memory,uint256[] memory,uint256[] memory,uint256[] memory) pure returns (uint256[] memory[] memory)",
                          },
                        },
                        id: 70709,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        nameLocations: [],
                        names: [],
                        nodeType: "FunctionCall",
                        src: "1564:360:111",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          typeString: "uint256[] memory[] memory",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          typeString: "uint256[] memory[] memory",
                        },
                      ],
                      id: 70668,
                      name: "__matrix",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 117630,
                      src: "1542:8:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$",
                        typeString:
                          "function (uint256[] memory[] memory) pure returns (uint256[] memory[] memory)",
                      },
                    },
                    id: 70710,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1542:392:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier:
                        "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                      typeString: "uint256[] memory[] memory",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "1508:426:111",
                },
                {
                  body: {
                    id: 70798,
                    nodeType: "Block",
                    src: "2085:704:111",
                    statements: [
                      {
                        assignments: [70724],
                        declarations: [
                          {
                            constant: false,
                            id: 70724,
                            mutability: "mutable",
                            name: "approvals",
                            nameLocation: "2107:9:111",
                            nodeType: "VariableDeclaration",
                            scope: 70798,
                            src: "2099:17:111",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            typeName: {
                              id: 70723,
                              name: "uint256",
                              nodeType: "ElementaryTypeName",
                              src: "2099:7:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 70730,
                        initialValue: {
                          baseExpression: {
                            baseExpression: {
                              id: 70725,
                              name: "rawTestCases",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70667,
                              src: "2119:12:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                typeString: "uint256[] memory[] memory",
                              },
                            },
                            id: 70727,
                            indexExpression: {
                              id: 70726,
                              name: "i",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70713,
                              src: "2132:1:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            nodeType: "IndexAccess",
                            src: "2119:15:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_array$_t_uint256_$dyn_memory_ptr",
                              typeString: "uint256[] memory",
                            },
                          },
                          id: 70729,
                          indexExpression: {
                            hexValue: "32",
                            id: 70728,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "number",
                            lValueRequested: false,
                            nodeType: "Literal",
                            src: "2135:1:111",
                            typeDescriptions: {
                              typeIdentifier: "t_rational_2_by_1",
                              typeString: "int_const 2",
                            },
                            value: "2",
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "2119:18:111",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "2099:38:111",
                      },
                      {
                        assignments: [70732],
                        declarations: [
                          {
                            constant: false,
                            id: 70732,
                            mutability: "mutable",
                            name: "approvedForAll",
                            nameLocation: "2156:14:111",
                            nodeType: "VariableDeclaration",
                            scope: 70798,
                            src: "2151:19:111",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                            typeName: {
                              id: 70731,
                              name: "bool",
                              nodeType: "ElementaryTypeName",
                              src: "2151:4:111",
                              typeDescriptions: {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 70740,
                        initialValue: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 70739,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 70733,
                            name: "approvals",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 70724,
                            src: "2173:9:111",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "==",
                          rightExpression: {
                            expression: {
                              arguments: [
                                {
                                  id: 70736,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  nodeType: "ElementaryTypeNameExpression",
                                  src: "2191:7:111",
                                  typeDescriptions: {
                                    typeIdentifier: "t_type$_t_uint128_$",
                                    typeString: "type(uint128)",
                                  },
                                  typeName: {
                                    id: 70735,
                                    name: "uint128",
                                    nodeType: "ElementaryTypeName",
                                    src: "2191:7:111",
                                    typeDescriptions: {},
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_type$_t_uint128_$",
                                    typeString: "type(uint128)",
                                  },
                                ],
                                id: 70734,
                                name: "type",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: -27,
                                src: "2186:4:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_metatype_pure$__$returns$__$",
                                  typeString: "function () pure",
                                },
                              },
                              id: 70737,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "functionCall",
                              lValueRequested: false,
                              nameLocations: [],
                              names: [],
                              nodeType: "FunctionCall",
                              src: "2186:13:111",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_magic_meta_type_t_uint128",
                                typeString: "type(uint128)",
                              },
                            },
                            id: 70738,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            memberLocation: "2200:3:111",
                            memberName: "max",
                            nodeType: "MemberAccess",
                            src: "2186:17:111",
                            typeDescriptions: {
                              typeIdentifier: "t_uint128",
                              typeString: "uint128",
                            },
                          },
                          src: "2173:30:111",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "2151:52:111",
                      },
                      {
                        assignments: [70743],
                        declarations: [
                          {
                            constant: false,
                            id: 70743,
                            mutability: "mutable",
                            name: "testCase",
                            nameLocation: "2233:8:111",
                            nodeType: "VariableDeclaration",
                            scope: 70798,
                            src: "2217:24:111",
                            stateVariable: false,
                            storageLocation: "memory",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_TestCase_$70659_memory_ptr",
                              typeString:
                                "struct MultiToken__transferFrom.TestCase",
                            },
                            typeName: {
                              id: 70742,
                              nodeType: "UserDefinedTypeName",
                              pathNode: {
                                id: 70741,
                                name: "TestCase",
                                nameLocations: ["2217:8:111"],
                                nodeType: "IdentifierPath",
                                referencedDeclaration: 70659,
                                src: "2217:8:111",
                              },
                              referencedDeclaration: 70659,
                              src: "2217:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_storage_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 70785,
                        initialValue: {
                          arguments: [
                            {
                              id: 70745,
                              name: "i",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70713,
                              src: "2278:1:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              commonType: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              id: 70754,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              leftExpression: {
                                components: [
                                  {
                                    commonType: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                    id: 70751,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    leftExpression: {
                                      components: [
                                        {
                                          commonType: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                          },
                                          id: 70748,
                                          isConstant: false,
                                          isLValue: false,
                                          isPure: false,
                                          lValueRequested: false,
                                          leftExpression: {
                                            id: 70746,
                                            name: "i",
                                            nodeType: "Identifier",
                                            overloadedDeclarations: [],
                                            referencedDeclaration: 70713,
                                            src: "2308:1:111",
                                            typeDescriptions: {
                                              typeIdentifier: "t_uint256",
                                              typeString: "uint256",
                                            },
                                          },
                                          nodeType: "BinaryOperation",
                                          operator: "+",
                                          rightExpression: {
                                            hexValue: "35",
                                            id: 70747,
                                            isConstant: false,
                                            isLValue: false,
                                            isPure: true,
                                            kind: "number",
                                            lValueRequested: false,
                                            nodeType: "Literal",
                                            src: "2312:1:111",
                                            typeDescriptions: {
                                              typeIdentifier:
                                                "t_rational_5_by_1",
                                              typeString: "int_const 5",
                                            },
                                            value: "5",
                                          },
                                          src: "2308:5:111",
                                          typeDescriptions: {
                                            typeIdentifier: "t_uint256",
                                            typeString: "uint256",
                                          },
                                        },
                                      ],
                                      id: 70749,
                                      isConstant: false,
                                      isInlineArray: false,
                                      isLValue: false,
                                      isPure: false,
                                      lValueRequested: false,
                                      nodeType: "TupleExpression",
                                      src: "2307:7:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    },
                                    nodeType: "BinaryOperation",
                                    operator: "**",
                                    rightExpression: {
                                      hexValue: "34",
                                      id: 70750,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      kind: "number",
                                      lValueRequested: false,
                                      nodeType: "Literal",
                                      src: "2318:1:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_rational_4_by_1",
                                        typeString: "int_const 4",
                                      },
                                      value: "4",
                                    },
                                    src: "2307:12:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                id: 70752,
                                isConstant: false,
                                isInlineArray: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "TupleExpression",
                                src: "2306:14:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              nodeType: "BinaryOperation",
                              operator: "/",
                              rightExpression: {
                                hexValue: "37",
                                id: 70753,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "2323:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_7_by_1",
                                  typeString: "int_const 7",
                                },
                                value: "7",
                              },
                              src: "2306:18:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              id: 70755,
                              name: "alice",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 116795,
                              src: "2348:5:111",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 70756,
                              name: "bob",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 116797,
                              src: "2375:3:111",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              baseExpression: {
                                baseExpression: {
                                  id: 70757,
                                  name: "rawTestCases",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 70667,
                                  src: "2404:12:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                    typeString: "uint256[] memory[] memory",
                                  },
                                },
                                id: 70759,
                                indexExpression: {
                                  id: 70758,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 70713,
                                  src: "2417:1:111",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "2404:15:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_array$_t_uint256_$dyn_memory_ptr",
                                  typeString: "uint256[] memory",
                                },
                              },
                              id: 70761,
                              indexExpression: {
                                hexValue: "30",
                                id: 70760,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "2420:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_0_by_1",
                                  typeString: "int_const 0",
                                },
                                value: "0",
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "2404:18:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              condition: {
                                commonType: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                id: 70768,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                leftExpression: {
                                  baseExpression: {
                                    baseExpression: {
                                      id: 70762,
                                      name: "rawTestCases",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 70667,
                                      src: "2448:12:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                        typeString: "uint256[] memory[] memory",
                                      },
                                    },
                                    id: 70764,
                                    indexExpression: {
                                      id: 70763,
                                      name: "i",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 70713,
                                      src: "2461:1:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_uint256",
                                        typeString: "uint256",
                                      },
                                    },
                                    isConstant: false,
                                    isLValue: true,
                                    isPure: false,
                                    lValueRequested: false,
                                    nodeType: "IndexAccess",
                                    src: "2448:15:111",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_array$_t_uint256_$dyn_memory_ptr",
                                      typeString: "uint256[] memory",
                                    },
                                  },
                                  id: 70766,
                                  indexExpression: {
                                    hexValue: "31",
                                    id: 70765,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    kind: "number",
                                    lValueRequested: false,
                                    nodeType: "Literal",
                                    src: "2464:1:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_rational_1_by_1",
                                      typeString: "int_const 1",
                                    },
                                    value: "1",
                                  },
                                  isConstant: false,
                                  isLValue: true,
                                  isPure: false,
                                  lValueRequested: false,
                                  nodeType: "IndexAccess",
                                  src: "2448:18:111",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                nodeType: "BinaryOperation",
                                operator: ">",
                                rightExpression: {
                                  hexValue: "30",
                                  id: 70767,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "number",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "2469:1:111",
                                  typeDescriptions: {
                                    typeIdentifier: "t_rational_0_by_1",
                                    typeString: "int_const 0",
                                  },
                                  value: "0",
                                },
                                src: "2448:22:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_bool",
                                  typeString: "bool",
                                },
                              },
                              falseExpression: {
                                id: 70770,
                                name: "celine",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 116799,
                                src: "2481:6:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              id: 70771,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "Conditional",
                              src: "2448:39:111",
                              trueExpression: {
                                id: 70769,
                                name: "alice",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 116795,
                                src: "2473:5:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              id: 70772,
                              name: "approvals",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70724,
                              src: "2516:9:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              baseExpression: {
                                baseExpression: {
                                  id: 70773,
                                  name: "rawTestCases",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 70667,
                                  src: "2556:12:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                    typeString: "uint256[] memory[] memory",
                                  },
                                },
                                id: 70775,
                                indexExpression: {
                                  id: 70774,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 70713,
                                  src: "2569:1:111",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "2556:15:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_array$_t_uint256_$dyn_memory_ptr",
                                  typeString: "uint256[] memory",
                                },
                              },
                              id: 70777,
                              indexExpression: {
                                hexValue: "33",
                                id: 70776,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "2572:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_3_by_1",
                                  typeString: "int_const 3",
                                },
                                value: "3",
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "2556:18:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              baseExpression: {
                                baseExpression: {
                                  id: 70778,
                                  name: "rawTestCases",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 70667,
                                  src: "2603:12:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                                    typeString: "uint256[] memory[] memory",
                                  },
                                },
                                id: 70780,
                                indexExpression: {
                                  id: 70779,
                                  name: "i",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 70713,
                                  src: "2616:1:111",
                                  typeDescriptions: {
                                    typeIdentifier: "t_uint256",
                                    typeString: "uint256",
                                  },
                                },
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                nodeType: "IndexAccess",
                                src: "2603:15:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_array$_t_uint256_$dyn_memory_ptr",
                                  typeString: "uint256[] memory",
                                },
                              },
                              id: 70782,
                              indexExpression: {
                                hexValue: "33",
                                id: 70781,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                kind: "number",
                                lValueRequested: false,
                                nodeType: "Literal",
                                src: "2619:1:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_rational_3_by_1",
                                  typeString: "int_const 3",
                                },
                                value: "3",
                              },
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              nodeType: "IndexAccess",
                              src: "2603:18:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              id: 70783,
                              name: "approvedForAll",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70732,
                              src: "2655:14:111",
                              typeDescriptions: {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_bool",
                                typeString: "bool",
                              },
                            ],
                            id: 70744,
                            name: "TestCase",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 70659,
                            src: "2244:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_type$_t_struct$_TestCase_$70659_storage_ptr_$",
                              typeString:
                                "type(struct MultiToken__transferFrom.TestCase storage pointer)",
                            },
                          },
                          id: 70784,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "structConstructorCall",
                          lValueRequested: false,
                          nameLocations: [
                            "2271:5:111",
                            "2297:7:111",
                            "2342:4:111",
                            "2371:2:111",
                            "2396:6:111",
                            "2440:6:111",
                            "2505:9:111",
                            "2543:11:111",
                            "2592:9:111",
                            "2639:14:111",
                          ],
                          names: [
                            "index",
                            "tokenId",
                            "from",
                            "to",
                            "amount",
                            "caller",
                            "approvals",
                            "balanceFrom",
                            "balanceTo",
                            "approvedForAll",
                          ],
                          nodeType: "FunctionCall",
                          src: "2244:440:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "2217:467:111",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              id: 70787,
                              name: "testCase",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70743,
                              src: "2706:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            ],
                            id: 70786,
                            name: "__setup",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 70891,
                            src: "2698:7:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_nonpayable$_t_struct$_TestCase_$70659_memory_ptr_$returns$__$",
                              typeString:
                                "function (struct MultiToken__transferFrom.TestCase memory)",
                            },
                          },
                          id: 70788,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2698:17:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 70789,
                        nodeType: "ExpressionStatement",
                        src: "2698:17:111",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              id: 70791,
                              name: "testCase",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70743,
                              src: "2736:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            ],
                            id: 70790,
                            name: "__fail",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 70995,
                            src: "2729:6:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_nonpayable$_t_struct$_TestCase_$70659_memory_ptr_$returns$__$",
                              typeString:
                                "function (struct MultiToken__transferFrom.TestCase memory)",
                            },
                          },
                          id: 70792,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2729:16:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 70793,
                        nodeType: "ExpressionStatement",
                        src: "2729:16:111",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              id: 70795,
                              name: "testCase",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70743,
                              src: "2769:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            ],
                            id: 70794,
                            name: "__success",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71208,
                            src: "2759:9:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_nonpayable$_t_struct$_TestCase_$70659_memory_ptr_$returns$__$",
                              typeString:
                                "function (struct MultiToken__transferFrom.TestCase memory)",
                            },
                          },
                          id: 70796,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "2759:19:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 70797,
                        nodeType: "ExpressionStatement",
                        src: "2759:19:111",
                      },
                    ],
                  },
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 70719,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 70716,
                      name: "i",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 70713,
                      src: "2055:1:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      expression: {
                        id: 70717,
                        name: "rawTestCases",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70667,
                        src: "2059:12:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                          typeString: "uint256[] memory[] memory",
                        },
                      },
                      id: 70718,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "2072:6:111",
                      memberName: "length",
                      nodeType: "MemberAccess",
                      src: "2059:19:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "2055:23:111",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 70799,
                  initializationExpression: {
                    assignments: [70713],
                    declarations: [
                      {
                        constant: false,
                        id: 70713,
                        mutability: "mutable",
                        name: "i",
                        nameLocation: "2048:1:111",
                        nodeType: "VariableDeclaration",
                        scope: 70799,
                        src: "2040:9:111",
                        stateVariable: false,
                        storageLocation: "default",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        typeName: {
                          id: 70712,
                          name: "uint256",
                          nodeType: "ElementaryTypeName",
                          src: "2040:7:111",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        visibility: "internal",
                      },
                    ],
                    id: 70715,
                    initialValue: {
                      hexValue: "30",
                      id: 70714,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "number",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "2052:1:111",
                      typeDescriptions: {
                        typeIdentifier: "t_rational_0_by_1",
                        typeString: "int_const 0",
                      },
                      value: "0",
                    },
                    nodeType: "VariableDeclarationStatement",
                    src: "2040:13:111",
                  },
                  loopExpression: {
                    expression: {
                      id: 70721,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "UnaryOperation",
                      operator: "++",
                      prefix: false,
                      src: "2080:3:111",
                      subExpression: {
                        id: 70720,
                        name: "i",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70713,
                        src: "2080:1:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    id: 70722,
                    nodeType: "ExpressionStatement",
                    src: "2080:3:111",
                  },
                  nodeType: "ForStatement",
                  src: "2035:754:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue:
                          "2323232d20257320746573742063617365732070617373656420666f72204d756c7469546f6b656e2e5f7472616e7366657246726f6d2829202d232323",
                        id: 70803,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "2825:63:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_6cc081d03e1492dd394634486430b408e285a1725230b2ebc1982f45603f0a7b",
                          typeString:
                            'literal_string "###- %s test cases passed for MultiToken._transferFrom() -###"',
                        },
                        value:
                          "###- %s test cases passed for MultiToken._transferFrom() -###",
                      },
                      {
                        expression: {
                          id: 70804,
                          name: "rawTestCases",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70667,
                          src: "2902:12:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr",
                            typeString: "uint256[] memory[] memory",
                          },
                        },
                        id: 70805,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "2915:6:111",
                        memberName: "length",
                        nodeType: "MemberAccess",
                        src: "2902:19:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_6cc081d03e1492dd394634486430b408e285a1725230b2ebc1982f45603f0a7b",
                          typeString:
                            'literal_string "###- %s test cases passed for MultiToken._transferFrom() -###"',
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 70800,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "2799:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 70802,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "2808:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37057,
                      src: "2799:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        typeString: "function (string memory,uint256) pure",
                      },
                    },
                    id: 70806,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2799:132:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 70807,
                  nodeType: "ExpressionStatement",
                  src: "2799:132:111",
                },
              ],
            },
            functionSelector: "26c91795",
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "test__MultiToken__transferFrom",
            nameLocation: "1410:30:111",
            parameters: {
              id: 70660,
              nodeType: "ParameterList",
              parameters: [],
              src: "1440:2:111",
            },
            returnParameters: {
              id: 70661,
              nodeType: "ParameterList",
              parameters: [],
              src: "1450:0:111",
            },
            scope: 71311,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            id: 70891,
            nodeType: "FunctionDefinition",
            src: "2944:1076:111",
            nodes: [],
            body: {
              id: 70890,
              nodeType: "Block",
              src: "3018:1002:111",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 70820,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70812,
                          src: "3124:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 70821,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "3133:7:111",
                        memberName: "tokenId",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70642,
                        src: "3124:16:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          id: 70822,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70812,
                          src: "3154:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 70823,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "3163:4:111",
                        memberName: "from",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70644,
                        src: "3154:13:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 70824,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70812,
                          src: "3181:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 70825,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "3190:11:111",
                        memberName: "balanceFrom",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70654,
                        src: "3181:20:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 70817,
                        name: "multiToken",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70578,
                        src: "3085:10:111",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IMockMultiToken_$14443",
                          typeString: "contract IMockMultiToken",
                        },
                      },
                      id: 70819,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "3096:14:111",
                      memberName: "__setBalanceOf",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 14411,
                      src: "3085:25:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        typeString:
                          "function (uint256,address,uint256) external",
                      },
                    },
                    id: 70826,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3085:126:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 70827,
                  nodeType: "ExpressionStatement",
                  src: "3085:126:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 70831,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70812,
                          src: "3260:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 70832,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "3269:7:111",
                        memberName: "tokenId",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70642,
                        src: "3260:16:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          id: 70833,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70812,
                          src: "3290:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 70834,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "3299:2:111",
                        memberName: "to",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70646,
                        src: "3290:11:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 70835,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70812,
                          src: "3315:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 70836,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "3324:9:111",
                        memberName: "balanceTo",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70656,
                        src: "3315:18:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 70828,
                        name: "multiToken",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70578,
                        src: "3221:10:111",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IMockMultiToken_$14443",
                          typeString: "contract IMockMultiToken",
                        },
                      },
                      id: 70830,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "3232:14:111",
                      memberName: "__setBalanceOf",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 14411,
                      src: "3221:25:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        typeString:
                          "function (uint256,address,uint256) external",
                      },
                    },
                    id: 70837,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3221:122:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 70838,
                  nodeType: "ExpressionStatement",
                  src: "3221:122:111",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                    id: 70843,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 70839,
                        name: "testCase",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70812,
                        src: "3509:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_TestCase_$70659_memory_ptr",
                          typeString:
                            "struct MultiToken__transferFrom.TestCase memory",
                        },
                      },
                      id: 70840,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "3518:6:111",
                      memberName: "caller",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 70650,
                      src: "3509:15:111",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "!=",
                    rightExpression: {
                      expression: {
                        id: 70841,
                        name: "testCase",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70812,
                        src: "3528:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_TestCase_$70659_memory_ptr",
                          typeString:
                            "struct MultiToken__transferFrom.TestCase memory",
                        },
                      },
                      id: 70842,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "3537:4:111",
                      memberName: "from",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 70644,
                      src: "3528:13:111",
                      typeDescriptions: {
                        typeIdentifier: "t_address",
                        typeString: "address",
                      },
                    },
                    src: "3509:32:111",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 70889,
                  nodeType: "IfStatement",
                  src: "3505:509:111",
                  trueBody: {
                    id: 70888,
                    nodeType: "Block",
                    src: "3543:471:111",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              expression: {
                                id: 70847,
                                name: "testCase",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 70812,
                                src: "3571:8:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_TestCase_$70659_memory_ptr",
                                  typeString:
                                    "struct MultiToken__transferFrom.TestCase memory",
                                },
                              },
                              id: 70848,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: "3580:4:111",
                              memberName: "from",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 70644,
                              src: "3571:13:111",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            ],
                            expression: {
                              id: 70844,
                              name: "vm",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 17090,
                              src: "3557:2:111",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_Vm_$28241",
                                typeString: "contract Vm",
                              },
                            },
                            id: 70846,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "3560:10:111",
                            memberName: "startPrank",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 27844,
                            src: "3557:13:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_nonpayable$_t_address_$returns$__$",
                              typeString: "function (address) external",
                            },
                          },
                          id: 70849,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "3557:28:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 70850,
                        nodeType: "ExpressionStatement",
                        src: "3557:28:111",
                      },
                      {
                        condition: {
                          expression: {
                            id: 70851,
                            name: "testCase",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 70812,
                            src: "3603:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_TestCase_$70659_memory_ptr",
                              typeString:
                                "struct MultiToken__transferFrom.TestCase memory",
                            },
                          },
                          id: 70852,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: "3612:14:111",
                          memberName: "approvedForAll",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 70658,
                          src: "3603:23:111",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        falseBody: {
                          id: 70881,
                          nodeType: "Block",
                          src: "3718:258:111",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      id: 70865,
                                      name: "testCase",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 70812,
                                      src: "3765:8:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_struct$_TestCase_$70659_memory_ptr",
                                        typeString:
                                          "struct MultiToken__transferFrom.TestCase memory",
                                      },
                                    },
                                    id: 70866,
                                    isConstant: false,
                                    isLValue: true,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: "3774:6:111",
                                    memberName: "caller",
                                    nodeType: "MemberAccess",
                                    referencedDeclaration: 70650,
                                    src: "3765:15:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  },
                                  {
                                    hexValue: "66616c7365",
                                    id: 70867,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    kind: "bool",
                                    lValueRequested: false,
                                    nodeType: "Literal",
                                    src: "3782:5:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_bool",
                                      typeString: "bool",
                                    },
                                    value: "false",
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                    {
                                      typeIdentifier: "t_bool",
                                      typeString: "bool",
                                    },
                                  ],
                                  expression: {
                                    id: 70862,
                                    name: "multiToken",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 70578,
                                    src: "3736:10:111",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_contract$_IMockMultiToken_$14443",
                                      typeString: "contract IMockMultiToken",
                                    },
                                  },
                                  id: 70864,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberLocation: "3747:17:111",
                                  memberName: "setApprovalForAll",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 7626,
                                  src: "3736:28:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    typeString:
                                      "function (address,bool) external",
                                  },
                                },
                                id: 70868,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: "FunctionCall",
                                src: "3736:52:111",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 70869,
                              nodeType: "ExpressionStatement",
                              src: "3736:52:111",
                            },
                            {
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      id: 70873,
                                      name: "testCase",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 70812,
                                      src: "3850:8:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_struct$_TestCase_$70659_memory_ptr",
                                        typeString:
                                          "struct MultiToken__transferFrom.TestCase memory",
                                      },
                                    },
                                    id: 70874,
                                    isConstant: false,
                                    isLValue: true,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: "3859:7:111",
                                    memberName: "tokenId",
                                    nodeType: "MemberAccess",
                                    referencedDeclaration: 70642,
                                    src: "3850:16:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  {
                                    expression: {
                                      id: 70875,
                                      name: "testCase",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 70812,
                                      src: "3888:8:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_struct$_TestCase_$70659_memory_ptr",
                                        typeString:
                                          "struct MultiToken__transferFrom.TestCase memory",
                                      },
                                    },
                                    id: 70876,
                                    isConstant: false,
                                    isLValue: true,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: "3897:6:111",
                                    memberName: "caller",
                                    nodeType: "MemberAccess",
                                    referencedDeclaration: 70650,
                                    src: "3888:15:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  },
                                  {
                                    expression: {
                                      id: 70877,
                                      name: "testCase",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 70812,
                                      src: "3925:8:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_struct$_TestCase_$70659_memory_ptr",
                                        typeString:
                                          "struct MultiToken__transferFrom.TestCase memory",
                                      },
                                    },
                                    id: 70878,
                                    isConstant: false,
                                    isLValue: true,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: "3934:9:111",
                                    memberName: "approvals",
                                    nodeType: "MemberAccess",
                                    referencedDeclaration: 70652,
                                    src: "3925:18:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                    {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  ],
                                  expression: {
                                    id: 70870,
                                    name: "multiToken",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 70578,
                                    src: "3806:10:111",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_contract$_IMockMultiToken_$14443",
                                      typeString: "contract IMockMultiToken",
                                    },
                                  },
                                  id: 70872,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberLocation: "3817:11:111",
                                  memberName: "setApproval",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 7608,
                                  src: "3806:22:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                    typeString:
                                      "function (uint256,address,uint256) external",
                                  },
                                },
                                id: 70879,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: "FunctionCall",
                                src: "3806:155:111",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 70880,
                              nodeType: "ExpressionStatement",
                              src: "3806:155:111",
                            },
                          ],
                        },
                        id: 70882,
                        nodeType: "IfStatement",
                        src: "3599:377:111",
                        trueBody: {
                          id: 70861,
                          nodeType: "Block",
                          src: "3628:84:111",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    expression: {
                                      id: 70856,
                                      name: "testCase",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 70812,
                                      src: "3675:8:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_struct$_TestCase_$70659_memory_ptr",
                                        typeString:
                                          "struct MultiToken__transferFrom.TestCase memory",
                                      },
                                    },
                                    id: 70857,
                                    isConstant: false,
                                    isLValue: true,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: "3684:6:111",
                                    memberName: "caller",
                                    nodeType: "MemberAccess",
                                    referencedDeclaration: 70650,
                                    src: "3675:15:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                  },
                                  {
                                    hexValue: "74727565",
                                    id: 70858,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    kind: "bool",
                                    lValueRequested: false,
                                    nodeType: "Literal",
                                    src: "3692:4:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_bool",
                                      typeString: "bool",
                                    },
                                    value: "true",
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_address",
                                      typeString: "address",
                                    },
                                    {
                                      typeIdentifier: "t_bool",
                                      typeString: "bool",
                                    },
                                  ],
                                  expression: {
                                    id: 70853,
                                    name: "multiToken",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 70578,
                                    src: "3646:10:111",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_contract$_IMockMultiToken_$14443",
                                      typeString: "contract IMockMultiToken",
                                    },
                                  },
                                  id: 70855,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: false,
                                  lValueRequested: false,
                                  memberLocation: "3657:17:111",
                                  memberName: "setApprovalForAll",
                                  nodeType: "MemberAccess",
                                  referencedDeclaration: 7626,
                                  src: "3646:28:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                                    typeString:
                                      "function (address,bool) external",
                                  },
                                },
                                id: 70859,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: "FunctionCall",
                                src: "3646:51:111",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 70860,
                              nodeType: "ExpressionStatement",
                              src: "3646:51:111",
                            },
                          ],
                        },
                      },
                      {
                        expression: {
                          arguments: [],
                          expression: {
                            argumentTypes: [],
                            expression: {
                              id: 70883,
                              name: "vm",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 17090,
                              src: "3989:2:111",
                              typeDescriptions: {
                                typeIdentifier: "t_contract$_Vm_$28241",
                                typeString: "contract Vm",
                              },
                            },
                            id: 70885,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "3992:9:111",
                            memberName: "stopPrank",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 27861,
                            src: "3989:12:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_nonpayable$__$returns$__$",
                              typeString: "function () external",
                            },
                          },
                          id: 70886,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "3989:14:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 70887,
                        nodeType: "ExpressionStatement",
                        src: "3989:14:111",
                      },
                    ],
                  },
                },
              ],
            },
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 70815,
                kind: "modifierInvocation",
                modifierName: {
                  id: 70814,
                  name: "__combinatorial_setup",
                  nameLocations: ["2996:21:111"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 117414,
                  src: "2996:21:111",
                },
                nodeType: "ModifierInvocation",
                src: "2996:21:111",
              },
            ],
            name: "__setup",
            nameLocation: "2953:7:111",
            parameters: {
              id: 70813,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 70812,
                  mutability: "mutable",
                  name: "testCase",
                  nameLocation: "2977:8:111",
                  nodeType: "VariableDeclaration",
                  scope: 70891,
                  src: "2961:24:111",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_struct$_TestCase_$70659_memory_ptr",
                    typeString: "struct MultiToken__transferFrom.TestCase",
                  },
                  typeName: {
                    id: 70811,
                    nodeType: "UserDefinedTypeName",
                    pathNode: {
                      id: 70810,
                      name: "TestCase",
                      nameLocations: ["2961:8:111"],
                      nodeType: "IdentifierPath",
                      referencedDeclaration: 70659,
                      src: "2961:8:111",
                    },
                    referencedDeclaration: 70659,
                    src: "2961:8:111",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_TestCase_$70659_storage_ptr",
                      typeString: "struct MultiToken__transferFrom.TestCase",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2960:26:111",
            },
            returnParameters: {
              id: 70816,
              nodeType: "ParameterList",
              parameters: [],
              src: "3018:0:111",
            },
            scope: 71311,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
          {
            id: 70995,
            nodeType: "FunctionDefinition",
            src: "4026:1801:111",
            nodes: [],
            body: {
              id: 70994,
              nodeType: "Block",
              src: "4098:1729:111",
              nodes: [],
              statements: [
                {
                  assignments: [70900],
                  declarations: [
                    {
                      constant: false,
                      id: 70900,
                      mutability: "mutable",
                      name: "approvalUnderflows",
                      nameLocation: "4397:18:111",
                      nodeType: "VariableDeclaration",
                      scope: 70994,
                      src: "4392:23:111",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      typeName: {
                        id: 70899,
                        name: "bool",
                        nodeType: "ElementaryTypeName",
                        src: "4392:4:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 70925,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 70924,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      id: 70918,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        commonType: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        id: 70909,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          commonType: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                          id: 70905,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              id: 70901,
                              name: "testCase",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70894,
                              src: "4418:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            },
                            id: 70902,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "4427:6:111",
                            memberName: "caller",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 70650,
                            src: "4418:15:111",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            expression: {
                              id: 70903,
                              name: "testCase",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70894,
                              src: "4437:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            },
                            id: 70904,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "4446:4:111",
                            memberName: "from",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 70644,
                            src: "4437:13:111",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          src: "4418:32:111",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "&&",
                        rightExpression: {
                          id: 70908,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "UnaryOperation",
                          operator: "!",
                          prefix: true,
                          src: "4466:24:111",
                          subExpression: {
                            expression: {
                              id: 70906,
                              name: "testCase",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70894,
                              src: "4467:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            },
                            id: 70907,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "4476:14:111",
                            memberName: "approvedForAll",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 70658,
                            src: "4467:23:111",
                            typeDescriptions: {
                              typeIdentifier: "t_bool",
                              typeString: "bool",
                            },
                          },
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        src: "4418:72:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "&&",
                      rightExpression: {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 70917,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 70910,
                            name: "testCase",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 70894,
                            src: "4506:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_TestCase_$70659_memory_ptr",
                              typeString:
                                "struct MultiToken__transferFrom.TestCase memory",
                            },
                          },
                          id: 70911,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: "4515:9:111",
                          memberName: "approvals",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 70652,
                          src: "4506:18:111",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "!=",
                        rightExpression: {
                          expression: {
                            arguments: [
                              {
                                id: 70914,
                                isConstant: false,
                                isLValue: false,
                                isPure: true,
                                lValueRequested: false,
                                nodeType: "ElementaryTypeNameExpression",
                                src: "4533:7:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_type$_t_uint256_$",
                                  typeString: "type(uint256)",
                                },
                                typeName: {
                                  id: 70913,
                                  name: "uint256",
                                  nodeType: "ElementaryTypeName",
                                  src: "4533:7:111",
                                  typeDescriptions: {},
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_type$_t_uint256_$",
                                  typeString: "type(uint256)",
                                },
                              ],
                              id: 70912,
                              name: "type",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: -27,
                              src: "4528:4:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_metatype_pure$__$returns$__$",
                                typeString: "function () pure",
                              },
                            },
                            id: 70915,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            kind: "functionCall",
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: "FunctionCall",
                            src: "4528:13:111",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_magic_meta_type_t_uint256",
                              typeString: "type(uint256)",
                            },
                          },
                          id: 70916,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          memberLocation: "4542:3:111",
                          memberName: "max",
                          nodeType: "MemberAccess",
                          src: "4528:17:111",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4506:39:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      src: "4418:127:111",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "&&",
                    rightExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 70923,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 70919,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70894,
                          src: "4561:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 70920,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "4570:9:111",
                        memberName: "approvals",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70652,
                        src: "4561:18:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "<",
                      rightExpression: {
                        expression: {
                          id: 70921,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70894,
                          src: "4582:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 70922,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "4591:6:111",
                        memberName: "amount",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70648,
                        src: "4582:15:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "4561:36:111",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "4418:179:111",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4392:205:111",
                },
                {
                  assignments: [70927],
                  declarations: [
                    {
                      constant: false,
                      id: 70927,
                      mutability: "mutable",
                      name: "balanceFromUnderflows",
                      nameLocation: "4687:21:111",
                      nodeType: "VariableDeclaration",
                      scope: 70994,
                      src: "4682:26:111",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      typeName: {
                        id: 70926,
                        name: "bool",
                        nodeType: "ElementaryTypeName",
                        src: "4682:4:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 70933,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 70932,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      expression: {
                        id: 70928,
                        name: "testCase",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70894,
                        src: "4711:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_TestCase_$70659_memory_ptr",
                          typeString:
                            "struct MultiToken__transferFrom.TestCase memory",
                        },
                      },
                      id: 70929,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "4720:11:111",
                      memberName: "balanceFrom",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 70654,
                      src: "4711:20:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      expression: {
                        id: 70930,
                        name: "testCase",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70894,
                        src: "4734:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_TestCase_$70659_memory_ptr",
                          typeString:
                            "struct MultiToken__transferFrom.TestCase memory",
                        },
                      },
                      id: 70931,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "4743:6:111",
                      memberName: "amount",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 70648,
                      src: "4734:15:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4711:38:111",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4682:67:111",
                },
                {
                  assignments: [70935],
                  declarations: [
                    {
                      constant: false,
                      id: 70935,
                      mutability: "mutable",
                      name: "balanceToOverflows",
                      nameLocation: "4866:18:111",
                      nodeType: "VariableDeclaration",
                      scope: 70994,
                      src: "4861:23:111",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      typeName: {
                        id: 70934,
                        name: "bool",
                        nodeType: "ElementaryTypeName",
                        src: "4861:4:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 70948,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 70947,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      components: [
                        {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 70943,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            expression: {
                              arguments: [
                                {
                                  id: 70938,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  lValueRequested: false,
                                  nodeType: "ElementaryTypeNameExpression",
                                  src: "4893:7:111",
                                  typeDescriptions: {
                                    typeIdentifier: "t_type$_t_uint256_$",
                                    typeString: "type(uint256)",
                                  },
                                  typeName: {
                                    id: 70937,
                                    name: "uint256",
                                    nodeType: "ElementaryTypeName",
                                    src: "4893:7:111",
                                    typeDescriptions: {},
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier: "t_type$_t_uint256_$",
                                    typeString: "type(uint256)",
                                  },
                                ],
                                id: 70936,
                                name: "type",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: -27,
                                src: "4888:4:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_metatype_pure$__$returns$__$",
                                  typeString: "function () pure",
                                },
                              },
                              id: 70939,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "functionCall",
                              lValueRequested: false,
                              nameLocations: [],
                              names: [],
                              nodeType: "FunctionCall",
                              src: "4888:13:111",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_magic_meta_type_t_uint256",
                                typeString: "type(uint256)",
                              },
                            },
                            id: 70940,
                            isConstant: false,
                            isLValue: false,
                            isPure: true,
                            lValueRequested: false,
                            memberLocation: "4902:3:111",
                            memberName: "max",
                            nodeType: "MemberAccess",
                            src: "4888:17:111",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "-",
                          rightExpression: {
                            expression: {
                              id: 70941,
                              name: "testCase",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70894,
                              src: "4908:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            },
                            id: 70942,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "4917:9:111",
                            memberName: "balanceTo",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 70656,
                            src: "4908:18:111",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "4888:38:111",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                      ],
                      id: 70944,
                      isConstant: false,
                      isInlineArray: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      nodeType: "TupleExpression",
                      src: "4887:40:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "<",
                    rightExpression: {
                      expression: {
                        id: 70945,
                        name: "testCase",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70894,
                        src: "4942:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_TestCase_$70659_memory_ptr",
                          typeString:
                            "struct MultiToken__transferFrom.TestCase memory",
                        },
                      },
                      id: 70946,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "4951:6:111",
                      memberName: "amount",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 70648,
                      src: "4942:15:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "4887:70:111",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4861:96:111",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 70953,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      id: 70951,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        id: 70949,
                        name: "approvalUnderflows",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70900,
                        src: "5121:18:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "||",
                      rightExpression: {
                        id: 70950,
                        name: "balanceFromUnderflows",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70927,
                        src: "5143:21:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      src: "5121:43:111",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "||",
                    rightExpression: {
                      id: 70952,
                      name: "balanceToOverflows",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 70935,
                      src: "5168:18:111",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "5121:65:111",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 70993,
                  nodeType: "IfStatement",
                  src: "5117:704:111",
                  trueBody: {
                    id: 70992,
                    nodeType: "Block",
                    src: "5188:633:111",
                    statements: [
                      {
                        clauses: [
                          {
                            block: {
                              id: 70975,
                              nodeType: "Block",
                              src: "5467:101:111",
                              statements: [
                                {
                                  expression: {
                                    arguments: [
                                      {
                                        hexValue: "e29d8e",
                                        id: 70968,
                                        isConstant: false,
                                        isLValue: false,
                                        isPure: true,
                                        kind: "unicodeString",
                                        lValueRequested: false,
                                        nodeType: "Literal",
                                        src: "5491:12:111",
                                        typeDescriptions: {
                                          typeIdentifier:
                                            "t_stringliteral_9209bc3abc6f6bdf3385566e74056cfecdce9928fa8cb5c673f5645d18c59dc3",
                                          typeString:
                                            'literal_string hex"e29d8e"',
                                        },
                                        value: "❎",
                                      },
                                      {
                                        id: 70969,
                                        name: "testCase",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: 70894,
                                        src: "5505:8:111",
                                        typeDescriptions: {
                                          typeIdentifier:
                                            "t_struct$_TestCase_$70659_memory_ptr",
                                          typeString:
                                            "struct MultiToken__transferFrom.TestCase memory",
                                        },
                                      },
                                    ],
                                    expression: {
                                      argumentTypes: [
                                        {
                                          typeIdentifier:
                                            "t_stringliteral_9209bc3abc6f6bdf3385566e74056cfecdce9928fa8cb5c673f5645d18c59dc3",
                                          typeString:
                                            'literal_string hex"e29d8e"',
                                        },
                                        {
                                          typeIdentifier:
                                            "t_struct$_TestCase_$70659_memory_ptr",
                                          typeString:
                                            "struct MultiToken__transferFrom.TestCase memory",
                                        },
                                      ],
                                      id: 70967,
                                      name: "__log",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 71310,
                                      src: "5485:5:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_function_internal_pure$_t_string_memory_ptr_$_t_struct$_TestCase_$70659_memory_ptr_$returns$__$",
                                        typeString:
                                          "function (string memory,struct MultiToken__transferFrom.TestCase memory) pure",
                                      },
                                    },
                                    id: 70970,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "functionCall",
                                    lValueRequested: false,
                                    nameLocations: [],
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "5485:29:111",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_tuple$__$",
                                      typeString: "tuple()",
                                    },
                                  },
                                  id: 70971,
                                  nodeType: "ExpressionStatement",
                                  src: "5485:29:111",
                                },
                                {
                                  errorCall: {
                                    arguments: [],
                                    expression: {
                                      argumentTypes: [],
                                      id: 70972,
                                      name: "ExpectedFail",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 117369,
                                      src: "5539:12:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_function_error_pure$__$returns$__$",
                                        typeString: "function () pure",
                                      },
                                    },
                                    id: 70973,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    kind: "functionCall",
                                    lValueRequested: false,
                                    nameLocations: [],
                                    names: [],
                                    nodeType: "FunctionCall",
                                    src: "5539:14:111",
                                    tryCall: false,
                                    typeDescriptions: {
                                      typeIdentifier: "t_tuple$__$",
                                      typeString: "tuple()",
                                    },
                                  },
                                  id: 70974,
                                  nodeType: "RevertStatement",
                                  src: "5532:21:111",
                                },
                              ],
                            },
                            errorName: "",
                            id: 70976,
                            nodeType: "TryCatchClause",
                            src: "5467:101:111",
                          },
                          {
                            block: {
                              id: 70989,
                              nodeType: "Block",
                              src: "5592:219:111",
                              statements: [
                                {
                                  expression: {
                                    id: 70982,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    leftHandSide: {
                                      id: 70980,
                                      name: "__error",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 117382,
                                      src: "5728:7:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_bytes_storage",
                                        typeString: "bytes storage ref",
                                      },
                                    },
                                    nodeType: "Assignment",
                                    operator: "=",
                                    rightHandSide: {
                                      id: 70981,
                                      name: "e",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 70978,
                                      src: "5738:1:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_bytes_memory_ptr",
                                        typeString: "bytes memory",
                                      },
                                    },
                                    src: "5728:11:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_bytes_storage",
                                      typeString: "bytes storage ref",
                                    },
                                  },
                                  id: 70983,
                                  nodeType: "ExpressionStatement",
                                  src: "5728:11:111",
                                },
                                {
                                  expression: {
                                    id: 70987,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: false,
                                    lValueRequested: false,
                                    leftHandSide: {
                                      id: 70984,
                                      name: "__fail_error",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 117389,
                                      src: "5757:12:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_bytes_storage",
                                        typeString: "bytes storage ref",
                                      },
                                    },
                                    nodeType: "Assignment",
                                    operator: "=",
                                    rightHandSide: {
                                      expression: {
                                        id: 70985,
                                        name: "stdError",
                                        nodeType: "Identifier",
                                        overloadedDeclarations: [],
                                        referencedDeclaration: 22167,
                                        src: "5772:8:111",
                                        typeDescriptions: {
                                          typeIdentifier:
                                            "t_type$_t_contract$_stdError_$22167_$",
                                          typeString: "type(library stdError)",
                                        },
                                      },
                                      id: 70986,
                                      isConstant: false,
                                      isLValue: false,
                                      isPure: true,
                                      lValueRequested: false,
                                      memberLocation: "5781:15:111",
                                      memberName: "arithmeticError",
                                      nodeType: "MemberAccess",
                                      referencedDeclaration: 22117,
                                      src: "5772:24:111",
                                      typeDescriptions: {
                                        typeIdentifier: "t_bytes_memory_ptr",
                                        typeString: "bytes memory",
                                      },
                                    },
                                    src: "5757:39:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_bytes_storage",
                                      typeString: "bytes storage ref",
                                    },
                                  },
                                  id: 70988,
                                  nodeType: "ExpressionStatement",
                                  src: "5757:39:111",
                                },
                              ],
                            },
                            errorName: "",
                            id: 70990,
                            nodeType: "TryCatchClause",
                            parameters: {
                              id: 70979,
                              nodeType: "ParameterList",
                              parameters: [
                                {
                                  constant: false,
                                  id: 70978,
                                  mutability: "mutable",
                                  name: "e",
                                  nameLocation: "5589:1:111",
                                  nodeType: "VariableDeclaration",
                                  scope: 70990,
                                  src: "5576:14:111",
                                  stateVariable: false,
                                  storageLocation: "memory",
                                  typeDescriptions: {
                                    typeIdentifier: "t_bytes_memory_ptr",
                                    typeString: "bytes",
                                  },
                                  typeName: {
                                    id: 70977,
                                    name: "bytes",
                                    nodeType: "ElementaryTypeName",
                                    src: "5576:5:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_bytes_storage_ptr",
                                      typeString: "bytes",
                                    },
                                  },
                                  visibility: "internal",
                                },
                              ],
                              src: "5575:16:111",
                            },
                            src: "5569:242:111",
                          },
                        ],
                        externalCall: {
                          arguments: [
                            {
                              expression: {
                                id: 70956,
                                name: "testCase",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 70894,
                                src: "5278:8:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_TestCase_$70659_memory_ptr",
                                  typeString:
                                    "struct MultiToken__transferFrom.TestCase memory",
                                },
                              },
                              id: 70957,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: "5287:7:111",
                              memberName: "tokenId",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 70642,
                              src: "5278:16:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              expression: {
                                id: 70958,
                                name: "testCase",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 70894,
                                src: "5316:8:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_TestCase_$70659_memory_ptr",
                                  typeString:
                                    "struct MultiToken__transferFrom.TestCase memory",
                                },
                              },
                              id: 70959,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: "5325:4:111",
                              memberName: "from",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 70644,
                              src: "5316:13:111",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              expression: {
                                id: 70960,
                                name: "testCase",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 70894,
                                src: "5351:8:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_TestCase_$70659_memory_ptr",
                                  typeString:
                                    "struct MultiToken__transferFrom.TestCase memory",
                                },
                              },
                              id: 70961,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: "5360:2:111",
                              memberName: "to",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 70646,
                              src: "5351:11:111",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                            {
                              expression: {
                                id: 70962,
                                name: "testCase",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 70894,
                                src: "5384:8:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_TestCase_$70659_memory_ptr",
                                  typeString:
                                    "struct MultiToken__transferFrom.TestCase memory",
                                },
                              },
                              id: 70963,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: "5393:6:111",
                              memberName: "amount",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 70648,
                              src: "5384:15:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              expression: {
                                id: 70964,
                                name: "testCase",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 70894,
                                src: "5421:8:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_TestCase_$70659_memory_ptr",
                                  typeString:
                                    "struct MultiToken__transferFrom.TestCase memory",
                                },
                              },
                              id: 70965,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: "5430:6:111",
                              memberName: "caller",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 70650,
                              src: "5421:15:111",
                              typeDescriptions: {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_address",
                                typeString: "address",
                              },
                            ],
                            expression: {
                              id: 70954,
                              name: "multiToken",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 70578,
                              src: "5222:10:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_contract$_IMockMultiToken_$14443",
                                typeString: "contract IMockMultiToken",
                              },
                            },
                            id: 70955,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "5233:23:111",
                            memberName: "__external_transferFrom",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 14424,
                            src: "5222:34:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              typeString:
                                "function (uint256,address,address,uint256,address) external",
                            },
                          },
                          id: 70966,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "5222:232:111",
                          tryCall: true,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 70991,
                        nodeType: "TryStatement",
                        src: "5202:609:111",
                      },
                    ],
                  },
                },
              ],
            },
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 70897,
                kind: "modifierInvocation",
                modifierName: {
                  id: 70896,
                  name: "__combinatorial_fail",
                  nameLocations: ["4077:20:111"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 117492,
                  src: "4077:20:111",
                },
                nodeType: "ModifierInvocation",
                src: "4077:20:111",
              },
            ],
            name: "__fail",
            nameLocation: "4035:6:111",
            parameters: {
              id: 70895,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 70894,
                  mutability: "mutable",
                  name: "testCase",
                  nameLocation: "4058:8:111",
                  nodeType: "VariableDeclaration",
                  scope: 70995,
                  src: "4042:24:111",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_struct$_TestCase_$70659_memory_ptr",
                    typeString: "struct MultiToken__transferFrom.TestCase",
                  },
                  typeName: {
                    id: 70893,
                    nodeType: "UserDefinedTypeName",
                    pathNode: {
                      id: 70892,
                      name: "TestCase",
                      nameLocations: ["4042:8:111"],
                      nodeType: "IdentifierPath",
                      referencedDeclaration: 70659,
                      src: "4042:8:111",
                    },
                    referencedDeclaration: 70659,
                    src: "4042:8:111",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_TestCase_$70659_storage_ptr",
                      typeString: "struct MultiToken__transferFrom.TestCase",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "4041:26:111",
            },
            returnParameters: {
              id: 70898,
              nodeType: "ParameterList",
              parameters: [],
              src: "4098:0:111",
            },
            scope: 71311,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
          {
            id: 71007,
            nodeType: "EventDefinition",
            src: "5833:162:111",
            nodes: [],
            anonymous: false,
            eventSelector:
              "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
            name: "TransferSingle",
            nameLocation: "5839:14:111",
            parameters: {
              id: 71006,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 70997,
                  indexed: true,
                  mutability: "mutable",
                  name: "operator",
                  nameLocation: "5879:8:111",
                  nodeType: "VariableDeclaration",
                  scope: 71007,
                  src: "5863:24:111",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 70996,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5863:7:111",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 70999,
                  indexed: true,
                  mutability: "mutable",
                  name: "from",
                  nameLocation: "5913:4:111",
                  nodeType: "VariableDeclaration",
                  scope: 71007,
                  src: "5897:20:111",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 70998,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5897:7:111",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 71001,
                  indexed: true,
                  mutability: "mutable",
                  name: "to",
                  nameLocation: "5943:2:111",
                  nodeType: "VariableDeclaration",
                  scope: 71007,
                  src: "5927:18:111",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 71000,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "5927:7:111",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 71003,
                  indexed: false,
                  mutability: "mutable",
                  name: "id",
                  nameLocation: "5963:2:111",
                  nodeType: "VariableDeclaration",
                  scope: 71007,
                  src: "5955:10:111",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 71002,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "5955:7:111",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 71005,
                  indexed: false,
                  mutability: "mutable",
                  name: "value",
                  nameLocation: "5983:5:111",
                  nodeType: "VariableDeclaration",
                  scope: 71007,
                  src: "5975:13:111",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 71004,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "5975:7:111",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "5853:141:111",
            },
          },
          {
            id: 71208,
            nodeType: "FunctionDefinition",
            src: "6001:3443:111",
            nodes: [],
            body: {
              id: 71207,
              nodeType: "Block",
              src: "6093:3351:111",
              nodes: [],
              statements: [
                {
                  assignments: [71016],
                  declarations: [
                    {
                      constant: false,
                      id: 71016,
                      mutability: "mutable",
                      name: "preBalanceFrom",
                      nameLocation: "6244:14:111",
                      nodeType: "VariableDeclaration",
                      scope: 71207,
                      src: "6236:22:111",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 71015,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6236:7:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 71024,
                  initialValue: {
                    arguments: [
                      {
                        expression: {
                          id: 71019,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "6295:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71020,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "6304:7:111",
                        memberName: "tokenId",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70642,
                        src: "6295:16:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          id: 71021,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "6325:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71022,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "6334:4:111",
                        memberName: "from",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70644,
                        src: "6325:13:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      expression: {
                        id: 71017,
                        name: "multiToken",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70578,
                        src: "6261:10:111",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IMockMultiToken_$14443",
                          typeString: "contract IMockMultiToken",
                        },
                      },
                      id: 71018,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "6272:9:111",
                      memberName: "balanceOf",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7537,
                      src: "6261:20:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        typeString:
                          "function (uint256,address) view external returns (uint256)",
                      },
                    },
                    id: 71023,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6261:87:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6236:112:111",
                },
                {
                  assignments: [71026],
                  declarations: [
                    {
                      constant: false,
                      id: 71026,
                      mutability: "mutable",
                      name: "preBalanceTo",
                      nameLocation: "6366:12:111",
                      nodeType: "VariableDeclaration",
                      scope: 71207,
                      src: "6358:20:111",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 71025,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6358:7:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 71034,
                  initialValue: {
                    arguments: [
                      {
                        expression: {
                          id: 71029,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "6415:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71030,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "6424:7:111",
                        memberName: "tokenId",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70642,
                        src: "6415:16:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          id: 71031,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "6445:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71032,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "6454:2:111",
                        memberName: "to",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70646,
                        src: "6445:11:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      expression: {
                        id: 71027,
                        name: "multiToken",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70578,
                        src: "6381:10:111",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IMockMultiToken_$14443",
                          typeString: "contract IMockMultiToken",
                        },
                      },
                      id: 71028,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "6392:9:111",
                      memberName: "balanceOf",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7537,
                      src: "6381:20:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        typeString:
                          "function (uint256,address) view external returns (uint256)",
                      },
                    },
                    id: 71033,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6381:85:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6358:108:111",
                },
                {
                  assignments: [71036],
                  declarations: [
                    {
                      constant: false,
                      id: 71036,
                      mutability: "mutable",
                      name: "preCallerApprovals",
                      nameLocation: "6683:18:111",
                      nodeType: "VariableDeclaration",
                      scope: 71207,
                      src: "6675:26:111",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 71035,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "6675:7:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 71046,
                  initialValue: {
                    arguments: [
                      {
                        expression: {
                          id: 71039,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "6746:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71040,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "6755:7:111",
                        memberName: "tokenId",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70642,
                        src: "6746:16:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          id: 71041,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "6776:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71042,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "6785:4:111",
                        memberName: "from",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70644,
                        src: "6776:13:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 71043,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "6803:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71044,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "6812:6:111",
                        memberName: "caller",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70650,
                        src: "6803:15:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      expression: {
                        id: 71037,
                        name: "multiToken",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70578,
                        src: "6704:10:111",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IMockMultiToken_$14443",
                          typeString: "contract IMockMultiToken",
                        },
                      },
                      id: 71038,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "6715:17:111",
                      memberName: "perTokenApprovals",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 7528,
                      src: "6704:28:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                        typeString:
                          "function (uint256,address,address) view external returns (uint256)",
                      },
                    },
                    id: 71045,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6704:124:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "6675:153:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "74727565",
                        id: 71050,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "bool",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "6898:4:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        value: "true",
                      },
                      {
                        hexValue: "74727565",
                        id: 71051,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "bool",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "6904:4:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        value: "true",
                      },
                      {
                        hexValue: "74727565",
                        id: 71052,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "bool",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "6910:4:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        value: "true",
                      },
                      {
                        hexValue: "74727565",
                        id: 71053,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "bool",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "6916:4:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        value: "true",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      ],
                      expression: {
                        id: 71047,
                        name: "vm",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 17090,
                        src: "6884:2:111",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_Vm_$28241",
                          typeString: "contract Vm",
                        },
                      },
                      id: 71049,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "6887:10:111",
                      memberName: "expectEmit",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 27922,
                      src: "6884:13:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        typeString: "function (bool,bool,bool,bool) external",
                      },
                    },
                    id: 71054,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6884:37:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71055,
                  nodeType: "ExpressionStatement",
                  src: "6884:37:111",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        expression: {
                          id: 71057,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "6964:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71058,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "6973:6:111",
                        memberName: "caller",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70650,
                        src: "6964:15:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 71059,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "6993:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71060,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "7002:4:111",
                        memberName: "from",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70644,
                        src: "6993:13:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 71061,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "7020:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71062,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "7029:2:111",
                        memberName: "to",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70646,
                        src: "7020:11:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 71063,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "7045:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71064,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "7054:7:111",
                        memberName: "tokenId",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70642,
                        src: "7045:16:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          id: 71065,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "7075:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71066,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "7084:6:111",
                        memberName: "amount",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70648,
                        src: "7075:15:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 71056,
                      name: "TransferSingle",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 71007,
                      src: "6936:14:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        typeString:
                          "function (address,address,address,uint256,uint256)",
                      },
                    },
                    id: 71067,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "6936:164:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71068,
                  nodeType: "EmitStatement",
                  src: "6931:169:111",
                },
                {
                  clauses: [
                    {
                      block: {
                        id: 71082,
                        nodeType: "Block",
                        src: "7481:2:111",
                        statements: [],
                      },
                      errorName: "",
                      id: 71083,
                      nodeType: "TryCatchClause",
                      src: "7481:2:111",
                    },
                    {
                      block: {
                        id: 71092,
                        nodeType: "Block",
                        src: "7490:92:111",
                        statements: [
                          {
                            expression: {
                              arguments: [
                                {
                                  hexValue: "e29d8e",
                                  id: 71085,
                                  isConstant: false,
                                  isLValue: false,
                                  isPure: true,
                                  kind: "unicodeString",
                                  lValueRequested: false,
                                  nodeType: "Literal",
                                  src: "7510:12:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_stringliteral_9209bc3abc6f6bdf3385566e74056cfecdce9928fa8cb5c673f5645d18c59dc3",
                                    typeString: 'literal_string hex"e29d8e"',
                                  },
                                  value: "❎",
                                },
                                {
                                  id: 71086,
                                  name: "testCase",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 71010,
                                  src: "7524:8:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_TestCase_$70659_memory_ptr",
                                    typeString:
                                      "struct MultiToken__transferFrom.TestCase memory",
                                  },
                                },
                              ],
                              expression: {
                                argumentTypes: [
                                  {
                                    typeIdentifier:
                                      "t_stringliteral_9209bc3abc6f6bdf3385566e74056cfecdce9928fa8cb5c673f5645d18c59dc3",
                                    typeString: 'literal_string hex"e29d8e"',
                                  },
                                  {
                                    typeIdentifier:
                                      "t_struct$_TestCase_$70659_memory_ptr",
                                    typeString:
                                      "struct MultiToken__transferFrom.TestCase memory",
                                  },
                                ],
                                id: 71084,
                                name: "__log",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 71310,
                                src: "7504:5:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_internal_pure$_t_string_memory_ptr_$_t_struct$_TestCase_$70659_memory_ptr_$returns$__$",
                                  typeString:
                                    "function (string memory,struct MultiToken__transferFrom.TestCase memory) pure",
                                },
                              },
                              id: 71087,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "functionCall",
                              lValueRequested: false,
                              nameLocations: [],
                              names: [],
                              nodeType: "FunctionCall",
                              src: "7504:29:111",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_tuple$__$",
                                typeString: "tuple()",
                              },
                            },
                            id: 71088,
                            nodeType: "ExpressionStatement",
                            src: "7504:29:111",
                          },
                          {
                            errorCall: {
                              arguments: [],
                              expression: {
                                argumentTypes: [],
                                id: 71089,
                                name: "ExpectedSuccess",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 117367,
                                src: "7554:15:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_function_error_pure$__$returns$__$",
                                  typeString: "function () pure",
                                },
                              },
                              id: 71090,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              kind: "functionCall",
                              lValueRequested: false,
                              nameLocations: [],
                              names: [],
                              nodeType: "FunctionCall",
                              src: "7554:17:111",
                              tryCall: false,
                              typeDescriptions: {
                                typeIdentifier: "t_tuple$__$",
                                typeString: "tuple()",
                              },
                            },
                            id: 71091,
                            nodeType: "RevertStatement",
                            src: "7547:24:111",
                          },
                        ],
                      },
                      errorName: "",
                      id: 71093,
                      nodeType: "TryCatchClause",
                      src: "7484:98:111",
                    },
                  ],
                  externalCall: {
                    arguments: [
                      {
                        expression: {
                          id: 71071,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "7316:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71072,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "7325:7:111",
                        memberName: "tokenId",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70642,
                        src: "7316:16:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          id: 71073,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "7350:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71074,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "7359:4:111",
                        memberName: "from",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70644,
                        src: "7350:13:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 71075,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "7381:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71076,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "7390:2:111",
                        memberName: "to",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70646,
                        src: "7381:11:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        expression: {
                          id: 71077,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "7410:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71078,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "7419:6:111",
                        memberName: "amount",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70648,
                        src: "7410:15:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      {
                        expression: {
                          id: 71079,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "7443:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71080,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "7452:6:111",
                        memberName: "caller",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70650,
                        src: "7443:15:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      expression: {
                        id: 71069,
                        name: "multiToken",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 70578,
                        src: "7264:10:111",
                        typeDescriptions: {
                          typeIdentifier: "t_contract$_IMockMultiToken_$14443",
                          typeString: "contract IMockMultiToken",
                        },
                      },
                      id: 71070,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "7275:23:111",
                      memberName: "__external_transferFrom",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 14424,
                      src: "7264:34:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        typeString:
                          "function (uint256,address,address,uint256,address) external",
                      },
                    },
                    id: 71081,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "7264:208:111",
                    tryCall: true,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71094,
                  nodeType: "TryStatement",
                  src: "7248:334:111",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                    id: 71112,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      commonType: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      id: 71103,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        commonType: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        id: 71099,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          expression: {
                            id: 71095,
                            name: "testCase",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71010,
                            src: "7787:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_TestCase_$70659_memory_ptr",
                              typeString:
                                "struct MultiToken__transferFrom.TestCase memory",
                            },
                          },
                          id: 71096,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: "7796:6:111",
                          memberName: "caller",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 70650,
                          src: "7787:15:111",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "!=",
                        rightExpression: {
                          expression: {
                            id: 71097,
                            name: "testCase",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71010,
                            src: "7806:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_TestCase_$70659_memory_ptr",
                              typeString:
                                "struct MultiToken__transferFrom.TestCase memory",
                            },
                          },
                          id: 71098,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: "7815:4:111",
                          memberName: "from",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 70644,
                          src: "7806:13:111",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                        src: "7787:32:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "&&",
                      rightExpression: {
                        id: 71102,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "UnaryOperation",
                        operator: "!",
                        prefix: true,
                        src: "7835:24:111",
                        subExpression: {
                          expression: {
                            id: 71100,
                            name: "testCase",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71010,
                            src: "7836:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_TestCase_$70659_memory_ptr",
                              typeString:
                                "struct MultiToken__transferFrom.TestCase memory",
                            },
                          },
                          id: 71101,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: "7845:14:111",
                          memberName: "approvedForAll",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 70658,
                          src: "7836:23:111",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      src: "7787:72:111",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "&&",
                    rightExpression: {
                      commonType: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      id: 71111,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      leftExpression: {
                        expression: {
                          id: 71104,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71010,
                          src: "7875:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71105,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "7884:9:111",
                        memberName: "approvals",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70652,
                        src: "7875:18:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      nodeType: "BinaryOperation",
                      operator: "!=",
                      rightExpression: {
                        expression: {
                          arguments: [
                            {
                              id: 71108,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              lValueRequested: false,
                              nodeType: "ElementaryTypeNameExpression",
                              src: "7902:7:111",
                              typeDescriptions: {
                                typeIdentifier: "t_type$_t_uint256_$",
                                typeString: "type(uint256)",
                              },
                              typeName: {
                                id: 71107,
                                name: "uint256",
                                nodeType: "ElementaryTypeName",
                                src: "7902:7:111",
                                typeDescriptions: {},
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_type$_t_uint256_$",
                                typeString: "type(uint256)",
                              },
                            ],
                            id: 71106,
                            name: "type",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: -27,
                            src: "7897:4:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_metatype_pure$__$returns$__$",
                              typeString: "function () pure",
                            },
                          },
                          id: 71109,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "7897:13:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_magic_meta_type_t_uint256",
                            typeString: "type(uint256)",
                          },
                        },
                        id: 71110,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        lValueRequested: false,
                        memberLocation: "7911:3:111",
                        memberName: "max",
                        nodeType: "MemberAccess",
                        src: "7897:17:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      src: "7875:39:111",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    src: "7787:127:111",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 71146,
                  nodeType: "IfStatement",
                  src: "7770:718:111",
                  trueBody: {
                    id: 71145,
                    nodeType: "Block",
                    src: "7925:563:111",
                    statements: [
                      {
                        assignments: [71114],
                        declarations: [
                          {
                            constant: false,
                            id: 71114,
                            mutability: "mutable",
                            name: "callerApprovalsDiff",
                            nameLocation: "7947:19:111",
                            nodeType: "VariableDeclaration",
                            scope: 71145,
                            src: "7939:27:111",
                            stateVariable: false,
                            storageLocation: "default",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                            typeName: {
                              id: 71113,
                              name: "uint256",
                              nodeType: "ElementaryTypeName",
                              src: "7939:7:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            visibility: "internal",
                          },
                        ],
                        id: 71126,
                        initialValue: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 71125,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 71115,
                            name: "preCallerApprovals",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71036,
                            src: "7969:18:111",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "-",
                          rightExpression: {
                            arguments: [
                              {
                                expression: {
                                  id: 71118,
                                  name: "testCase",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 71010,
                                  src: "8056:8:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_TestCase_$70659_memory_ptr",
                                    typeString:
                                      "struct MultiToken__transferFrom.TestCase memory",
                                  },
                                },
                                id: 71119,
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                memberLocation: "8065:7:111",
                                memberName: "tokenId",
                                nodeType: "MemberAccess",
                                referencedDeclaration: 70642,
                                src: "8056:16:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              {
                                expression: {
                                  id: 71120,
                                  name: "testCase",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 71010,
                                  src: "8094:8:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_TestCase_$70659_memory_ptr",
                                    typeString:
                                      "struct MultiToken__transferFrom.TestCase memory",
                                  },
                                },
                                id: 71121,
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                memberLocation: "8103:4:111",
                                memberName: "from",
                                nodeType: "MemberAccess",
                                referencedDeclaration: 70644,
                                src: "8094:13:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                              {
                                expression: {
                                  id: 71122,
                                  name: "testCase",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 71010,
                                  src: "8129:8:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_struct$_TestCase_$70659_memory_ptr",
                                    typeString:
                                      "struct MultiToken__transferFrom.TestCase memory",
                                  },
                                },
                                id: 71123,
                                isConstant: false,
                                isLValue: true,
                                isPure: false,
                                lValueRequested: false,
                                memberLocation: "8138:6:111",
                                memberName: "caller",
                                nodeType: "MemberAccess",
                                referencedDeclaration: 70650,
                                src: "8129:15:111",
                                typeDescriptions: {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                                {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                                {
                                  typeIdentifier: "t_address",
                                  typeString: "address",
                                },
                              ],
                              expression: {
                                id: 71116,
                                name: "multiToken",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 70578,
                                src: "8006:10:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_contract$_IMockMultiToken_$14443",
                                  typeString: "contract IMockMultiToken",
                                },
                              },
                              id: 71117,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: "8017:17:111",
                              memberName: "perTokenApprovals",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 7528,
                              src: "8006:28:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_external_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                                typeString:
                                  "function (uint256,address,address) view external returns (uint256)",
                              },
                            },
                            id: 71124,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            nameLocations: [],
                            names: [],
                            nodeType: "FunctionCall",
                            src: "8006:156:111",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "7969:193:111",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "VariableDeclarationStatement",
                        src: "7939:223:111",
                      },
                      {
                        condition: {
                          commonType: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          id: 71130,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          lValueRequested: false,
                          leftExpression: {
                            id: 71127,
                            name: "callerApprovalsDiff",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71114,
                            src: "8181:19:111",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          nodeType: "BinaryOperation",
                          operator: "!=",
                          rightExpression: {
                            expression: {
                              id: 71128,
                              name: "testCase",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 71010,
                              src: "8204:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            },
                            id: 71129,
                            isConstant: false,
                            isLValue: true,
                            isPure: false,
                            lValueRequested: false,
                            memberLocation: "8213:6:111",
                            memberName: "amount",
                            nodeType: "MemberAccess",
                            referencedDeclaration: 70648,
                            src: "8204:15:111",
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                          src: "8181:38:111",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        id: 71144,
                        nodeType: "IfStatement",
                        src: "8177:301:111",
                        trueBody: {
                          id: 71143,
                          nodeType: "Block",
                          src: "8221:257:111",
                          statements: [
                            {
                              expression: {
                                arguments: [
                                  {
                                    hexValue: "e29d8e",
                                    id: 71132,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    kind: "unicodeString",
                                    lValueRequested: false,
                                    nodeType: "Literal",
                                    src: "8245:12:111",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_stringliteral_9209bc3abc6f6bdf3385566e74056cfecdce9928fa8cb5c673f5645d18c59dc3",
                                      typeString: 'literal_string hex"e29d8e"',
                                    },
                                    value: "❎",
                                  },
                                  {
                                    id: 71133,
                                    name: "testCase",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 71010,
                                    src: "8259:8:111",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_struct$_TestCase_$70659_memory_ptr",
                                      typeString:
                                        "struct MultiToken__transferFrom.TestCase memory",
                                    },
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier:
                                        "t_stringliteral_9209bc3abc6f6bdf3385566e74056cfecdce9928fa8cb5c673f5645d18c59dc3",
                                      typeString: 'literal_string hex"e29d8e"',
                                    },
                                    {
                                      typeIdentifier:
                                        "t_struct$_TestCase_$70659_memory_ptr",
                                      typeString:
                                        "struct MultiToken__transferFrom.TestCase memory",
                                    },
                                  ],
                                  id: 71131,
                                  name: "__log",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 71310,
                                  src: "8239:5:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_internal_pure$_t_string_memory_ptr_$_t_struct$_TestCase_$70659_memory_ptr_$returns$__$",
                                    typeString:
                                      "function (string memory,struct MultiToken__transferFrom.TestCase memory) pure",
                                  },
                                },
                                id: 71134,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: "FunctionCall",
                                src: "8239:29:111",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 71135,
                              nodeType: "ExpressionStatement",
                              src: "8239:29:111",
                            },
                            {
                              expression: {
                                arguments: [
                                  {
                                    id: 71137,
                                    name: "callerApprovalsDiff",
                                    nodeType: "Identifier",
                                    overloadedDeclarations: [],
                                    referencedDeclaration: 71114,
                                    src: "8316:19:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  {
                                    expression: {
                                      id: 71138,
                                      name: "testCase",
                                      nodeType: "Identifier",
                                      overloadedDeclarations: [],
                                      referencedDeclaration: 71010,
                                      src: "8357:8:111",
                                      typeDescriptions: {
                                        typeIdentifier:
                                          "t_struct$_TestCase_$70659_memory_ptr",
                                        typeString:
                                          "struct MultiToken__transferFrom.TestCase memory",
                                      },
                                    },
                                    id: 71139,
                                    isConstant: false,
                                    isLValue: true,
                                    isPure: false,
                                    lValueRequested: false,
                                    memberLocation: "8366:6:111",
                                    memberName: "amount",
                                    nodeType: "MemberAccess",
                                    referencedDeclaration: 70648,
                                    src: "8357:15:111",
                                    typeDescriptions: {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                  },
                                  {
                                    hexValue:
                                      "6e756d626572206f6620617070726f76616c73206d75737420686176652064656372656173656420627920616d6f756e74",
                                    id: 71140,
                                    isConstant: false,
                                    isLValue: false,
                                    isPure: true,
                                    kind: "string",
                                    lValueRequested: false,
                                    nodeType: "Literal",
                                    src: "8394:51:111",
                                    typeDescriptions: {
                                      typeIdentifier:
                                        "t_stringliteral_26f23d4bd0c0426285e7405edeffe586555d3990c1e277c4f9f6c7c3c03dfabe",
                                      typeString:
                                        'literal_string "number of approvals must have decreased by amount"',
                                    },
                                    value:
                                      "number of approvals must have decreased by amount",
                                  },
                                ],
                                expression: {
                                  argumentTypes: [
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                    {
                                      typeIdentifier: "t_uint256",
                                      typeString: "uint256",
                                    },
                                    {
                                      typeIdentifier:
                                        "t_stringliteral_26f23d4bd0c0426285e7405edeffe586555d3990c1e277c4f9f6c7c3c03dfabe",
                                      typeString:
                                        'literal_string "number of approvals must have decreased by amount"',
                                    },
                                  ],
                                  id: 71136,
                                  name: "assertEq",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [
                                    17264, 17289, 17302, 17318, 17360, 17402,
                                    17444, 17481, 17518, 17555, 15060, 15085,
                                    15115, 15140, 15199, 15224, 15254, 15279,
                                    16752, 16787,
                                  ],
                                  referencedDeclaration: 15279,
                                  src: "8286:8:111",
                                  typeDescriptions: {
                                    typeIdentifier:
                                      "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    typeString:
                                      "function (uint256,uint256,string memory)",
                                  },
                                },
                                id: 71141,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                kind: "functionCall",
                                lValueRequested: false,
                                nameLocations: [],
                                names: [],
                                nodeType: "FunctionCall",
                                src: "8286:177:111",
                                tryCall: false,
                                typeDescriptions: {
                                  typeIdentifier: "t_tuple$__$",
                                  typeString: "tuple()",
                                },
                              },
                              id: 71142,
                              nodeType: "ExpressionStatement",
                              src: "8286:177:111",
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  assignments: [71148],
                  declarations: [
                    {
                      constant: false,
                      id: 71148,
                      mutability: "mutable",
                      name: "fromBalanceDiff",
                      nameLocation: "8583:15:111",
                      nodeType: "VariableDeclaration",
                      scope: 71207,
                      src: "8575:23:111",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 71147,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "8575:7:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 71158,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 71157,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 71149,
                      name: "preBalanceFrom",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 71016,
                      src: "8601:14:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "-",
                    rightExpression: {
                      arguments: [
                        {
                          expression: {
                            id: 71152,
                            name: "testCase",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71010,
                            src: "8651:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_TestCase_$70659_memory_ptr",
                              typeString:
                                "struct MultiToken__transferFrom.TestCase memory",
                            },
                          },
                          id: 71153,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: "8660:7:111",
                          memberName: "tokenId",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 70642,
                          src: "8651:16:111",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          expression: {
                            id: 71154,
                            name: "testCase",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71010,
                            src: "8669:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_TestCase_$70659_memory_ptr",
                              typeString:
                                "struct MultiToken__transferFrom.TestCase memory",
                            },
                          },
                          id: 71155,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: "8678:4:111",
                          memberName: "from",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 70644,
                          src: "8669:13:111",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        expression: {
                          id: 71150,
                          name: "multiToken",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70578,
                          src: "8630:10:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_contract$_IMockMultiToken_$14443",
                            typeString: "contract IMockMultiToken",
                          },
                        },
                        id: 71151,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "8641:9:111",
                        memberName: "balanceOf",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7537,
                        src: "8630:20:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          typeString:
                            "function (uint256,address) view external returns (uint256)",
                        },
                      },
                      id: 71156,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: "FunctionCall",
                      src: "8630:53:111",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "8601:82:111",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "8575:108:111",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 71162,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 71159,
                      name: "fromBalanceDiff",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 71148,
                      src: "8697:15:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "!=",
                    rightExpression: {
                      expression: {
                        id: 71160,
                        name: "testCase",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 71010,
                        src: "8716:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_TestCase_$70659_memory_ptr",
                          typeString:
                            "struct MultiToken__transferFrom.TestCase memory",
                        },
                      },
                      id: 71161,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "8725:6:111",
                      memberName: "amount",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 70648,
                      src: "8716:15:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "8697:34:111",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 71176,
                  nodeType: "IfStatement",
                  src: "8693:266:111",
                  trueBody: {
                    id: 71175,
                    nodeType: "Block",
                    src: "8733:226:111",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              hexValue: "e29d8e",
                              id: 71164,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "unicodeString",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "8753:12:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_9209bc3abc6f6bdf3385566e74056cfecdce9928fa8cb5c673f5645d18c59dc3",
                                typeString: 'literal_string hex"e29d8e"',
                              },
                              value: "❎",
                            },
                            {
                              id: 71165,
                              name: "testCase",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 71010,
                              src: "8767:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  "t_stringliteral_9209bc3abc6f6bdf3385566e74056cfecdce9928fa8cb5c673f5645d18c59dc3",
                                typeString: 'literal_string hex"e29d8e"',
                              },
                              {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            ],
                            id: 71163,
                            name: "__log",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71310,
                            src: "8747:5:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_pure$_t_string_memory_ptr_$_t_struct$_TestCase_$70659_memory_ptr_$returns$__$",
                              typeString:
                                "function (string memory,struct MultiToken__transferFrom.TestCase memory) pure",
                            },
                          },
                          id: 71166,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "8747:29:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 71167,
                        nodeType: "ExpressionStatement",
                        src: "8747:29:111",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              id: 71169,
                              name: "fromBalanceDiff",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 71148,
                              src: "8816:15:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              expression: {
                                id: 71170,
                                name: "testCase",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 71010,
                                src: "8849:8:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_TestCase_$70659_memory_ptr",
                                  typeString:
                                    "struct MultiToken__transferFrom.TestCase memory",
                                },
                              },
                              id: 71171,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: "8858:6:111",
                              memberName: "amount",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 70648,
                              src: "8849:15:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              hexValue:
                                "66726f6d206163636f756e742062616c616e6365206d75737420686176652064656372656173656420627920616d6f756e74",
                              id: 71172,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "string",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "8882:52:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_13ce5631cd1152cf62e248abb192618e96f289a48a5bad9e282ad621d35a051f",
                                typeString:
                                  'literal_string "from account balance must have decreased by amount"',
                              },
                              value:
                                "from account balance must have decreased by amount",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier:
                                  "t_stringliteral_13ce5631cd1152cf62e248abb192618e96f289a48a5bad9e282ad621d35a051f",
                                typeString:
                                  'literal_string "from account balance must have decreased by amount"',
                              },
                            ],
                            id: 71168,
                            name: "assertEq",
                            nodeType: "Identifier",
                            overloadedDeclarations: [
                              17264, 17289, 17302, 17318, 17360, 17402, 17444,
                              17481, 17518, 17555, 15060, 15085, 15115, 15140,
                              15199, 15224, 15254, 15279, 16752, 16787,
                            ],
                            referencedDeclaration: 15279,
                            src: "8790:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              typeString:
                                "function (uint256,uint256,string memory)",
                            },
                          },
                          id: 71173,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "8790:158:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 71174,
                        nodeType: "ExpressionStatement",
                        src: "8790:158:111",
                      },
                    ],
                  },
                },
                {
                  assignments: [71178],
                  declarations: [
                    {
                      constant: false,
                      id: 71178,
                      mutability: "mutable",
                      name: "toBalanceDiff",
                      nameLocation: "9052:13:111",
                      nodeType: "VariableDeclaration",
                      scope: 71207,
                      src: "9044:21:111",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 71177,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "9044:7:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 71188,
                  initialValue: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 71187,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      arguments: [
                        {
                          expression: {
                            id: 71181,
                            name: "testCase",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71010,
                            src: "9102:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_TestCase_$70659_memory_ptr",
                              typeString:
                                "struct MultiToken__transferFrom.TestCase memory",
                            },
                          },
                          id: 71182,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: "9111:7:111",
                          memberName: "tokenId",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 70642,
                          src: "9102:16:111",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        {
                          expression: {
                            id: 71183,
                            name: "testCase",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71010,
                            src: "9132:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_struct$_TestCase_$70659_memory_ptr",
                              typeString:
                                "struct MultiToken__transferFrom.TestCase memory",
                            },
                          },
                          id: 71184,
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          memberLocation: "9141:2:111",
                          memberName: "to",
                          nodeType: "MemberAccess",
                          referencedDeclaration: 70646,
                          src: "9132:11:111",
                          typeDescriptions: {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                          {
                            typeIdentifier: "t_address",
                            typeString: "address",
                          },
                        ],
                        expression: {
                          id: 71179,
                          name: "multiToken",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 70578,
                          src: "9068:10:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_contract$_IMockMultiToken_$14443",
                            typeString: "contract IMockMultiToken",
                          },
                        },
                        id: 71180,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "9079:9:111",
                        memberName: "balanceOf",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 7537,
                        src: "9068:20:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                          typeString:
                            "function (uint256,address) view external returns (uint256)",
                        },
                      },
                      id: 71185,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      nameLocations: [],
                      names: [],
                      nodeType: "FunctionCall",
                      src: "9068:85:111",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "-",
                    rightExpression: {
                      id: 71186,
                      name: "preBalanceTo",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 71026,
                      src: "9156:12:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "9068:100:111",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "9044:124:111",
                },
                {
                  condition: {
                    commonType: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                    id: 71192,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftExpression: {
                      id: 71189,
                      name: "toBalanceDiff",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 71178,
                      src: "9182:13:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "BinaryOperation",
                    operator: "!=",
                    rightExpression: {
                      expression: {
                        id: 71190,
                        name: "testCase",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 71010,
                        src: "9199:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_struct$_TestCase_$70659_memory_ptr",
                          typeString:
                            "struct MultiToken__transferFrom.TestCase memory",
                        },
                      },
                      id: 71191,
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "9208:6:111",
                      memberName: "amount",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 70648,
                      src: "9199:15:111",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "9182:32:111",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 71206,
                  nodeType: "IfStatement",
                  src: "9178:260:111",
                  trueBody: {
                    id: 71205,
                    nodeType: "Block",
                    src: "9216:222:111",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              hexValue: "e29d8e",
                              id: 71194,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "unicodeString",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "9236:12:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_9209bc3abc6f6bdf3385566e74056cfecdce9928fa8cb5c673f5645d18c59dc3",
                                typeString: 'literal_string hex"e29d8e"',
                              },
                              value: "❎",
                            },
                            {
                              id: 71195,
                              name: "testCase",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 71010,
                              src: "9250:8:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier:
                                  "t_stringliteral_9209bc3abc6f6bdf3385566e74056cfecdce9928fa8cb5c673f5645d18c59dc3",
                                typeString: 'literal_string hex"e29d8e"',
                              },
                              {
                                typeIdentifier:
                                  "t_struct$_TestCase_$70659_memory_ptr",
                                typeString:
                                  "struct MultiToken__transferFrom.TestCase memory",
                              },
                            ],
                            id: 71193,
                            name: "__log",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 71310,
                            src: "9230:5:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_pure$_t_string_memory_ptr_$_t_struct$_TestCase_$70659_memory_ptr_$returns$__$",
                              typeString:
                                "function (string memory,struct MultiToken__transferFrom.TestCase memory) pure",
                            },
                          },
                          id: 71196,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "9230:29:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 71197,
                        nodeType: "ExpressionStatement",
                        src: "9230:29:111",
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              id: 71199,
                              name: "toBalanceDiff",
                              nodeType: "Identifier",
                              overloadedDeclarations: [],
                              referencedDeclaration: 71178,
                              src: "9299:13:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              expression: {
                                id: 71200,
                                name: "testCase",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 71010,
                                src: "9330:8:111",
                                typeDescriptions: {
                                  typeIdentifier:
                                    "t_struct$_TestCase_$70659_memory_ptr",
                                  typeString:
                                    "struct MultiToken__transferFrom.TestCase memory",
                                },
                              },
                              id: 71201,
                              isConstant: false,
                              isLValue: true,
                              isPure: false,
                              lValueRequested: false,
                              memberLocation: "9339:6:111",
                              memberName: "amount",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 70648,
                              src: "9330:15:111",
                              typeDescriptions: {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                            },
                            {
                              hexValue:
                                "746f206163636f756e742062616c616e6365206d757374206861766520696e6372656173656420627920616d6f756e74",
                              id: 71202,
                              isConstant: false,
                              isLValue: false,
                              isPure: true,
                              kind: "string",
                              lValueRequested: false,
                              nodeType: "Literal",
                              src: "9363:50:111",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_stringliteral_4fa80fe19a9db47c8443e1ad593c6c559fb0a448118475fc6da8a79809f81af3",
                                typeString:
                                  'literal_string "to account balance must have increased by amount"',
                              },
                              value:
                                "to account balance must have increased by amount",
                            },
                          ],
                          expression: {
                            argumentTypes: [
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier: "t_uint256",
                                typeString: "uint256",
                              },
                              {
                                typeIdentifier:
                                  "t_stringliteral_4fa80fe19a9db47c8443e1ad593c6c559fb0a448118475fc6da8a79809f81af3",
                                typeString:
                                  'literal_string "to account balance must have increased by amount"',
                              },
                            ],
                            id: 71198,
                            name: "assertEq",
                            nodeType: "Identifier",
                            overloadedDeclarations: [
                              17264, 17289, 17302, 17318, 17360, 17402, 17444,
                              17481, 17518, 17555, 15060, 15085, 15115, 15140,
                              15199, 15224, 15254, 15279, 16752, 16787,
                            ],
                            referencedDeclaration: 15279,
                            src: "9273:8:111",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              typeString:
                                "function (uint256,uint256,string memory)",
                            },
                          },
                          id: 71203,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          nameLocations: [],
                          names: [],
                          nodeType: "FunctionCall",
                          src: "9273:154:111",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_tuple$__$",
                            typeString: "tuple()",
                          },
                        },
                        id: 71204,
                        nodeType: "ExpressionStatement",
                        src: "9273:154:111",
                      },
                    ],
                  },
                },
              ],
            },
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 71013,
                kind: "modifierInvocation",
                modifierName: {
                  id: 71012,
                  name: "__combinatorial_success",
                  nameLocations: ["6069:23:111"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 117425,
                  src: "6069:23:111",
                },
                nodeType: "ModifierInvocation",
                src: "6069:23:111",
              },
            ],
            name: "__success",
            nameLocation: "6010:9:111",
            parameters: {
              id: 71011,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 71010,
                  mutability: "mutable",
                  name: "testCase",
                  nameLocation: "6045:8:111",
                  nodeType: "VariableDeclaration",
                  scope: 71208,
                  src: "6029:24:111",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_struct$_TestCase_$70659_memory_ptr",
                    typeString: "struct MultiToken__transferFrom.TestCase",
                  },
                  typeName: {
                    id: 71009,
                    nodeType: "UserDefinedTypeName",
                    pathNode: {
                      id: 71008,
                      name: "TestCase",
                      nameLocations: ["6029:8:111"],
                      nodeType: "IdentifierPath",
                      referencedDeclaration: 70659,
                      src: "6029:8:111",
                    },
                    referencedDeclaration: 70659,
                    src: "6029:8:111",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_TestCase_$70659_storage_ptr",
                      typeString: "struct MultiToken__transferFrom.TestCase",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "6019:40:111",
            },
            returnParameters: {
              id: 71014,
              nodeType: "ParameterList",
              parameters: [],
              src: "6093:0:111",
            },
            scope: 71311,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
          {
            id: 71310,
            nodeType: "FunctionDefinition",
            src: "9450:838:111",
            nodes: [],
            body: {
              id: 71309,
              nodeType: "Block",
              src: "9550:738:111",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "",
                        id: 71219,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9573:2:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          typeString: 'literal_string ""',
                        },
                        value: "",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          typeString: 'literal_string ""',
                        },
                      ],
                      expression: {
                        id: 71216,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "9560:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71218,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "9569:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 36944,
                      src: "9560:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (string memory) pure",
                      },
                    },
                    id: 71220,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "9560:16:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71221,
                  nodeType: "ExpressionStatement",
                  src: "9560:16:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue:
                          "2573204661696c203a3a207b20546573744361736520232573207d0a",
                        id: 71225,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9599:31:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_f2911804cc6d2b4a2c0e30f73fa7f5f2e82d1e65752f6ad36ab59aef4511215c",
                          typeString:
                            'literal_string hex"2573204661696c203a3a207b20546573744361736520232573207d0a"',
                        },
                        value: "%s Fail :: { TestCase #%s }\n",
                      },
                      {
                        id: 71226,
                        name: "prelude",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 71210,
                        src: "9632:7:111",
                        typeDescriptions: {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                      },
                      {
                        expression: {
                          id: 71227,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71213,
                          src: "9641:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71228,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "9650:5:111",
                        memberName: "index",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70640,
                        src: "9641:14:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_f2911804cc6d2b4a2c0e30f73fa7f5f2e82d1e65752f6ad36ab59aef4511215c",
                          typeString:
                            'literal_string hex"2573204661696c203a3a207b20546573744361736520232573207d0a"',
                        },
                        {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 71222,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "9586:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71224,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "9595:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37681,
                      src: "9586:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        typeString:
                          "function (string memory,string memory,uint256) pure",
                      },
                    },
                    id: 71229,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "9586:70:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71230,
                  nodeType: "ExpressionStatement",
                  src: "9586:70:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "09746f6b656e496420202020202020202020203d20",
                        id: 71234,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9679:24:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_af0f3d49da8ff07652f6fc0438559bc68db3ec9211ead29363b81d21294115ac",
                          typeString:
                            'literal_string hex"09746f6b656e496420202020202020202020203d20"',
                        },
                        value: "\ttokenId           = ",
                      },
                      {
                        expression: {
                          id: 71235,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71213,
                          src: "9705:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71236,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "9714:7:111",
                        memberName: "tokenId",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70642,
                        src: "9705:16:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_af0f3d49da8ff07652f6fc0438559bc68db3ec9211ead29363b81d21294115ac",
                          typeString:
                            'literal_string hex"09746f6b656e496420202020202020202020203d20"',
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 71231,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "9666:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71233,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "9675:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37057,
                      src: "9666:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        typeString: "function (string memory,uint256) pure",
                      },
                    },
                    id: 71237,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "9666:56:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71238,
                  nodeType: "ExpressionStatement",
                  src: "9666:56:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "0966726f6d20202020202020202020202020203d20",
                        id: 71242,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9745:24:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_3719dd3caa820e606090c6d3069c5632212ea2bbbcd57b71157b731dd4d3108b",
                          typeString:
                            'literal_string hex"0966726f6d20202020202020202020202020203d20"',
                        },
                        value: "\tfrom              = ",
                      },
                      {
                        expression: {
                          id: 71243,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71213,
                          src: "9771:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71244,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "9780:4:111",
                        memberName: "from",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70644,
                        src: "9771:13:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_3719dd3caa820e606090c6d3069c5632212ea2bbbcd57b71157b731dd4d3108b",
                          typeString:
                            'literal_string hex"0966726f6d20202020202020202020202020203d20"',
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      expression: {
                        id: 71239,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "9732:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71241,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "9741:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37125,
                      src: "9732:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_address_$returns$__$",
                        typeString: "function (string memory,address) pure",
                      },
                    },
                    id: 71245,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "9732:53:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71246,
                  nodeType: "ExpressionStatement",
                  src: "9732:53:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "09746f202020202020202020202020202020203d20",
                        id: 71250,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9808:24:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_32e08eb8468c5ccdc4794cf7c33c755bd67d092875c869c8ba37b6c4cfc26397",
                          typeString:
                            'literal_string hex"09746f202020202020202020202020202020203d20"',
                        },
                        value: "\tto                = ",
                      },
                      {
                        expression: {
                          id: 71251,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71213,
                          src: "9834:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71252,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "9843:2:111",
                        memberName: "to",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70646,
                        src: "9834:11:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_32e08eb8468c5ccdc4794cf7c33c755bd67d092875c869c8ba37b6c4cfc26397",
                          typeString:
                            'literal_string hex"09746f202020202020202020202020202020203d20"',
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      expression: {
                        id: 71247,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "9795:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71249,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "9804:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37125,
                      src: "9795:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_address_$returns$__$",
                        typeString: "function (string memory,address) pure",
                      },
                    },
                    id: 71253,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "9795:51:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71254,
                  nodeType: "ExpressionStatement",
                  src: "9795:51:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "09616d6f756e742020202020202020202020203d20",
                        id: 71258,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9869:24:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_5d457cb9f3c8dc690627bda0370072d41504cd2f704dde47c4994dfa0d7e8a38",
                          typeString:
                            'literal_string hex"09616d6f756e742020202020202020202020203d20"',
                        },
                        value: "\tamount            = ",
                      },
                      {
                        expression: {
                          id: 71259,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71213,
                          src: "9895:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71260,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "9904:6:111",
                        memberName: "amount",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70648,
                        src: "9895:15:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_5d457cb9f3c8dc690627bda0370072d41504cd2f704dde47c4994dfa0d7e8a38",
                          typeString:
                            'literal_string hex"09616d6f756e742020202020202020202020203d20"',
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 71255,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "9856:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71257,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "9865:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37057,
                      src: "9856:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        typeString: "function (string memory,uint256) pure",
                      },
                    },
                    id: 71261,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "9856:55:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71262,
                  nodeType: "ExpressionStatement",
                  src: "9856:55:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "0963616c6c65722020202020202020202020203d20",
                        id: 71266,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9934:24:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_f9993fd036d6b6ae218f36c7c1a923227423b53179a3b1bde41bbbd43622967b",
                          typeString:
                            'literal_string hex"0963616c6c65722020202020202020202020203d20"',
                        },
                        value: "\tcaller            = ",
                      },
                      {
                        expression: {
                          id: 71267,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71213,
                          src: "9960:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71268,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "9969:6:111",
                        memberName: "caller",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70650,
                        src: "9960:15:111",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_f9993fd036d6b6ae218f36c7c1a923227423b53179a3b1bde41bbbd43622967b",
                          typeString:
                            'literal_string hex"0963616c6c65722020202020202020202020203d20"',
                        },
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      expression: {
                        id: 71263,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "9921:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71265,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "9930:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37125,
                      src: "9921:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_address_$returns$__$",
                        typeString: "function (string memory,address) pure",
                      },
                    },
                    id: 71269,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "9921:55:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71270,
                  nodeType: "ExpressionStatement",
                  src: "9921:55:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "09617070726f76616c732020202020202020203d20",
                        id: 71274,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "9999:24:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_45b2ee969a64ea4efc5f7d366d2b97ec42458ed56c6f7ba43fd793eea49e0f76",
                          typeString:
                            'literal_string hex"09617070726f76616c732020202020202020203d20"',
                        },
                        value: "\tapprovals         = ",
                      },
                      {
                        expression: {
                          id: 71275,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71213,
                          src: "10025:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71276,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "10034:9:111",
                        memberName: "approvals",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70652,
                        src: "10025:18:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_45b2ee969a64ea4efc5f7d366d2b97ec42458ed56c6f7ba43fd793eea49e0f76",
                          typeString:
                            'literal_string hex"09617070726f76616c732020202020202020203d20"',
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 71271,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "9986:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71273,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "9995:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37057,
                      src: "9986:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        typeString: "function (string memory,uint256) pure",
                      },
                    },
                    id: 71277,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "9986:58:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71278,
                  nodeType: "ExpressionStatement",
                  src: "9986:58:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "0962616c616e636546726f6d202020202020203d20",
                        id: 71282,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "10067:24:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_bf19d72c8ce9666edb3dde93402971d2c157fadf529fc38bcd45f2b6b02cdbb5",
                          typeString:
                            'literal_string hex"0962616c616e636546726f6d202020202020203d20"',
                        },
                        value: "\tbalanceFrom       = ",
                      },
                      {
                        expression: {
                          id: 71283,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71213,
                          src: "10093:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71284,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "10102:11:111",
                        memberName: "balanceFrom",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70654,
                        src: "10093:20:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_bf19d72c8ce9666edb3dde93402971d2c157fadf529fc38bcd45f2b6b02cdbb5",
                          typeString:
                            'literal_string hex"0962616c616e636546726f6d202020202020203d20"',
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 71279,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "10054:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71281,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "10063:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37057,
                      src: "10054:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        typeString: "function (string memory,uint256) pure",
                      },
                    },
                    id: 71285,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "10054:60:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71286,
                  nodeType: "ExpressionStatement",
                  src: "10054:60:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "0962616c616e6365546f2020202020202020203d20",
                        id: 71290,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "10137:24:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_2441938f50791f33122ae5dd4fd24da31ede828a8ed0c1f563077e568d71eb27",
                          typeString:
                            'literal_string hex"0962616c616e6365546f2020202020202020203d20"',
                        },
                        value: "\tbalanceTo         = ",
                      },
                      {
                        expression: {
                          id: 71291,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71213,
                          src: "10163:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71292,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "10172:9:111",
                        memberName: "balanceTo",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70656,
                        src: "10163:18:111",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_2441938f50791f33122ae5dd4fd24da31ede828a8ed0c1f563077e568d71eb27",
                          typeString:
                            'literal_string hex"0962616c616e6365546f2020202020202020203d20"',
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      expression: {
                        id: 71287,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "10124:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71289,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "10133:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37057,
                      src: "10124:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        typeString: "function (string memory,uint256) pure",
                      },
                    },
                    id: 71293,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "10124:58:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71294,
                  nodeType: "ExpressionStatement",
                  src: "10124:58:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "09617070726f766564466f72416c6c202020203d20",
                        id: 71298,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "10205:24:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_2bbe9d74d37124a9bbacfb0d829a3ad2e0613c7301e950748604c880744feb6f",
                          typeString:
                            'literal_string hex"09617070726f766564466f72416c6c202020203d20"',
                        },
                        value: "\tapprovedForAll    = ",
                      },
                      {
                        expression: {
                          id: 71299,
                          name: "testCase",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 71213,
                          src: "10231:8:111",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_struct$_TestCase_$70659_memory_ptr",
                            typeString:
                              "struct MultiToken__transferFrom.TestCase memory",
                          },
                        },
                        id: 71300,
                        isConstant: false,
                        isLValue: true,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "10240:14:111",
                        memberName: "approvedForAll",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 70658,
                        src: "10231:23:111",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_2bbe9d74d37124a9bbacfb0d829a3ad2e0613c7301e950748604c880744feb6f",
                          typeString:
                            'literal_string hex"09617070726f766564466f72416c6c202020203d20"',
                        },
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      ],
                      expression: {
                        id: 71295,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "10192:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71297,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "10201:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 37108,
                      src: "10192:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$_t_bool_$returns$__$",
                        typeString: "function (string memory,bool) pure",
                      },
                    },
                    id: 71301,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "10192:63:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71302,
                  nodeType: "ExpressionStatement",
                  src: "10192:63:111",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "",
                        id: 71306,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "10278:2:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          typeString: 'literal_string ""',
                        },
                        value: "",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          typeString: 'literal_string ""',
                        },
                      ],
                      expression: {
                        id: 71303,
                        name: "console2",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 44430,
                        src: "10265:8:111",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_console2_$44430_$",
                          typeString: "type(library console2)",
                        },
                      },
                      id: 71305,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "10274:3:111",
                      memberName: "log",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 36944,
                      src: "10265:12:111",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (string memory) pure",
                      },
                    },
                    id: 71307,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "10265:16:111",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 71308,
                  nodeType: "ExpressionStatement",
                  src: "10265:16:111",
                },
              ],
            },
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "__log",
            nameLocation: "9459:5:111",
            parameters: {
              id: 71214,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 71210,
                  mutability: "mutable",
                  name: "prelude",
                  nameLocation: "9488:7:111",
                  nodeType: "VariableDeclaration",
                  scope: 71310,
                  src: "9474:21:111",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 71209,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "9474:6:111",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 71213,
                  mutability: "mutable",
                  name: "testCase",
                  nameLocation: "9521:8:111",
                  nodeType: "VariableDeclaration",
                  scope: 71310,
                  src: "9505:24:111",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_struct$_TestCase_$70659_memory_ptr",
                    typeString: "struct MultiToken__transferFrom.TestCase",
                  },
                  typeName: {
                    id: 71212,
                    nodeType: "UserDefinedTypeName",
                    pathNode: {
                      id: 71211,
                      name: "TestCase",
                      nameLocations: ["9505:8:111"],
                      nodeType: "IdentifierPath",
                      referencedDeclaration: 70659,
                      src: "9505:8:111",
                    },
                    referencedDeclaration: 70659,
                    src: "9505:8:111",
                    typeDescriptions: {
                      typeIdentifier: "t_struct$_TestCase_$70659_storage_ptr",
                      typeString: "struct MultiToken__transferFrom.TestCase",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "9464:71:111",
            },
            returnParameters: {
              id: 71215,
              nodeType: "ParameterList",
              parameters: [],
              src: "9550:0:111",
            },
            scope: 71311,
            stateMutability: "pure",
            virtual: false,
            visibility: "internal",
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 70574,
              name: "CombinatorialTest",
              nameLocations: ["486:17:111"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 118837,
              src: "486:17:111",
            },
            id: 70575,
            nodeType: "InheritanceSpecifier",
            src: "486:17:111",
          },
        ],
        canonicalName: "MultiToken__transferFrom",
        contractDependencies: [13135, 14555],
        contractKind: "contract",
        fullyImplemented: true,
        linearizedBaseContracts: [
          71311, 118837, 117331, 26704, 26653, 22391, 22101, 21337, 19283,
          18563, 17031, 17097, 17094,
        ],
        name: "MultiToken__transferFrom",
        nameLocation: "458:24:111",
        scope: 71312,
        usedErrors: [116815, 116817, 117367, 117369, 117371, 117373, 117375],
      },
    ],
    license: "Apache-2.0",
  },
  id: 111,
} as const;
