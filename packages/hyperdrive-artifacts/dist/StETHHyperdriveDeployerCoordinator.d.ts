export declare const StETHHyperdriveDeployerCoordinator: {
    readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_coreDeployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target0Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target1Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target2Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target3Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target4Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "contract ILido";
            readonly name: "_lido";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "HyperdriveAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "HyperdriveIsNotDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncompleteDeployment";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCheckpointDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidFeeAmounts";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumShareReserves";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumTransactionAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidPositionDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidTargetIndex";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedConfig";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedExtraData";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotPayable";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TargetAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "coreDeployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sweepCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sweepCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_targetIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deployTarget";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_deployer";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }];
        readonly name: "deployments";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "configHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "extraDataHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "initialSharePrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "hyperdrive";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target0";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target1";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target2";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target3";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target4";
                readonly type: "address";
            }];
            readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_lp";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_contribution";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_apr";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "destination";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "asBase";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraData";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IHyperdrive.Options";
            readonly name: "_options";
            readonly type: "tuple";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "lpShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lido";
        readonly outputs: readonly [{
            readonly internalType: "contract ILido";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target0Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target1Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target2Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target3Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target4Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "";
        readonly sourceMap: "807:4307:30:-:0;;;1411:498;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3753:28:0;;;;;3791:34;;;;;3835;;;;;3879;;;;;3923;;;;3967;;;;1890:12:30::1;;::::0;807:4307;;14:131:235;-1:-1:-1;;;;;89:31:235;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1074::-;289:6;297;305;313;321;329;337;390:3;378:9;369:7;365:23;361:33;358:53;;;407:1;404;397:12;358:53;439:9;433:16;458:31;483:5;458:31;:::i;:::-;558:2;543:18;;537:25;508:5;;-1:-1:-1;571:33:235;537:25;571:33;:::i;:::-;675:2;660:18;;654:25;623:7;;-1:-1:-1;688:33:235;654:25;688:33;:::i;:::-;792:2;777:18;;771:25;740:7;;-1:-1:-1;805:33:235;771:25;805:33;:::i;:::-;909:3;894:19;;888:26;857:7;;-1:-1:-1;923:33:235;888:26;923:33;:::i;:::-;1027:3;1012:19;;1006:26;975:7;;-1:-1:-1;1041:33:235;1006:26;1041:33;:::i;:::-;1145:3;1130:19;;1124:26;1093:7;;-1:-1:-1;1159:33:235;1124:26;1159:33;:::i;:::-;1211:7;1201:17;;;150:1074;;;;;;;;;;:::o;:::-;807:4307:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "";
        readonly sourceMap: "807:4307:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14865:1363:0;;;;;;:::i;:::-;;:::i;:::-;;;3146:25:235;;;3134:2;3119:18;14865:1363:0;;;;;;;;8078:6076;;;;;;;;;;-1:-1:-1;8078:6076:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5812:32:235;;;5794:51;;5782:2;5767:18;8078:6076:0;5648:203:235;16434:189:0;;;;;;;;;;-1:-1:-1;16434:189:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;964:27:30:-;;;;;;;;;;;;;;;4439:3006:0;;;;;;;;;;-1:-1:-1;4439:3006:0;;;;;:::i;:::-;;:::i;3007:40::-;;;;;;;;;;;;;;;2626;;;;;;;;;;;;;;;2880;;;;;;;;;;;;;;;2499;;;;;;;;;;;;;;;2753;;;;;;;;;;;;;;;2375:37;;;;;;;;;;;;;;;14865:1363;15300:10;15067:16;15287:24;;;;;;;;;;;:39;;;;;;;;:50;;;-1:-1:-1;;;;;15287:50:0;;15357:127;;15417:56;;-1:-1:-1;;;15417:56:0;;;;;;;;;;;15357:127;15564:13;15580:118;15612:10;15636:3;15653:13;15680:8;15580:18;:118::i;:::-;15564:134;;15758:10;-1:-1:-1;;;;;15758:21:0;;15788:5;15809:13;15836:4;15854:8;15758:114;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15747:125;-1:-1:-1;15933:14:0;15950:17;15962:5;15950:9;:17;:::i;:::-;15933:34;-1:-1:-1;15981:10:0;;15977:219;;16026:45;;16008:12;;16034:10;;16059:6;;16008:12;16026:45;16008:12;16026:45;16059:6;16034:10;16026:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16007:64;;;16090:7;16085:101;;16124:47;;-1:-1:-1;;;16124:47:0;;;;;;;;;;;16085:101;15993:203;15977:219;16206:15;;;14865:1363;;;;;;;;:::o;8078:6076::-;8300:14;8571:12;8587:1;8571:17;8567:1981;;8781:10;8830:1;8768:24;;;;;;;;;;;:39;;;;;;;;:50;:64;8747:196;;8872:56;;-1:-1:-1;;;8872:56:0;;;;;;;;;;;8747:196;9077:31;9094:13;9077:16;:31::i;:::-;9226:25;9254:38;9281:10;9254:26;:38::i;:::-;9226:66;;9306:19;9349:13;9338:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;9328:36;;;;;;9306:58;;9378:21;9412:10;9402:21;;;;;;9378:45;;9554:37;9594:60;9627:13;9594:15;:60::i;:::-;9668:30;;;;:50;;;10056:44;;;10067:10;10056:44;;;11591:51:235;11658:18;;;11651:34;;;11701:18;;;11694:34;;;9554:100:0;;-1:-1:-1;;;;;;9812:15:0;9786:49;;;;9554:100;;9878:10;;11564:18:235;;10056:44:0;;;;;;;;;;;;10046:55;;;;;;9786:329;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10180:10;10167:12;:24;;;;;;;;;;;:39;;;;;;;;:64;;;10245:70;;;:86;;;;-1:-1:-1;10345:74:0;;;:94;;;;10453:47;;:56;;-1:-1:-1;;;;;;10453:56:0;-1:-1:-1;;;;;10453:56:0;;;;;:39;-1:-1:-1;10524:13:0;;8567:1981;10727:10;10693:18;10714:24;;;;;;;;;;;:39;;;;;;;;:50;;10774:117;;10825:55;;-1:-1:-1;;;10825:55:0;;;;;;;;;;;10774:117;11013:10;10994:13;10983:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;10973:36;;;;;;:50;10969:137;;11046:49;;-1:-1:-1;;;11046:49:0;;;;;;;;;;;10969:137;11259:10;11246:12;:24;;;;;;;;;;;:39;;;;;;;;:53;;;11209:21;;;;;;;;;:90;11192:202;;11331:52;;-1:-1:-1;;;11331:52:0;;;;;;;;;;;11192:202;11670:31;11687:13;11670:16;:31::i;:::-;11820:36;11859:30;11875:13;11859:15;:30::i;:::-;11944:10;11931:12;:24;;;;;;;;;;;:39;;;;;;;;:70;;;11899:29;;;:102;11820:69;-1:-1:-1;12281:1:0;12265:17;;;12261:1863;;12315:10;12361:1;12302:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12302:47:0;:61;12298:161;;12390:54;;-1:-1:-1;;;12390:54:0;;;;;;;;;;;12298:161;12481:138;;-1:-1:-1;;;12481:138:0;;-1:-1:-1;;;;;12507:15:0;12481:49;;;;:138;;12548:6;;12572:10;;12600:5;;12481:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12646:10;12633:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;12633:56:0;-1:-1:-1;;;;;12633:56:0;;;;;;-1:-1:-1;12261:1863:0;;;12710:12;12726:1;12710:17;12706:1418;;12760:10;12806:1;12747:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12747:47:0;:61;12743:161;;12835:54;;-1:-1:-1;;;12835:54:0;;;;;;;;;;;12743:161;12926:138;;-1:-1:-1;;;12926:138:0;;-1:-1:-1;;;;;12952:15:0;12926:49;;;;:138;;12993:6;;13017:10;;13045:5;;12926:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13091:10;13078:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13078:56:0;-1:-1:-1;;;;;13078:56:0;;;;;;-1:-1:-1;12706:1418:0;;;13155:12;13171:1;13155:17;13151:973;;13205:10;13251:1;13192:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;13192:47:0;:61;13188:161;;13280:54;;-1:-1:-1;;;13280:54:0;;;;;;;;;;;13188:161;13371:138;;-1:-1:-1;;;13371:138:0;;-1:-1:-1;;;;;13397:15:0;13371:49;;;;:138;;13438:6;;13462:10;;13490:5;;13371:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13536:10;13523:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13523:56:0;-1:-1:-1;;;;;13523:56:0;;;;;;-1:-1:-1;13151:973:0;;;13600:12;13616:1;13600:17;13596:528;;13650:10;13696:1;13637:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;13637:47:0;:61;13633:161;;13725:54;;-1:-1:-1;;;13725:54:0;;;;;;;;;;;13633:161;13816:138;;-1:-1:-1;;;13816:138:0;;-1:-1:-1;;;;;13842:15:0;13816:49;;;;:138;;13883:6;;13907:10;;13935:5;;13816:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13981:10;13968:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13968:56:0;-1:-1:-1;;;;;13968:56:0;;;;;;-1:-1:-1;13596:528:0;;;14062:51;;-1:-1:-1;;;14062:51:0;;;;;;;;;;;13596:528;14134:13;;8078:6076;;;;;;;:::o;16434:189::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16578:23:0;;;:12;:23;;;;;;;;;;;:38;;;;;;;;;16571:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16434:189;;;;;:::o;4439:3006::-;4768:10;4625:7;4755:24;;;;;;;;;;;:39;;;;;;;;4724:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4724:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4808:35;4804:131;;4866:58;;-1:-1:-1;;;4866:58:0;;;;;;;;;;;4804:131;5084:21;;5080:128;;5142:55;;-1:-1:-1;;;5142:55:0;;;;;;;;;;;5080:128;5297:18;;;;-1:-1:-1;;;;;5297:32:0;;;:80;;-1:-1:-1;5345:18:0;;;;-1:-1:-1;;;;;5345:32:0;;5297:80;:128;;;-1:-1:-1;5393:18:0;;;;-1:-1:-1;;;;;5393:32:0;;5297:128;:176;;;-1:-1:-1;5441:18:0;;;;-1:-1:-1;;;;;5441:32:0;;5297:176;:224;;;-1:-1:-1;5489:18:0;;;;-1:-1:-1;;;;;5489:32:0;;5297:224;5280:337;;;5553:53;;-1:-1:-1;;;5553:53:0;;;;;;;;;;;5280:337;5739:21;;5709:25;;;;5720:13;;5709:25;;;:::i;:::-;;;;;;;;;;;;;5699:36;;;;;;:61;5695:148;;5783:49;;-1:-1:-1;;;5783:49:0;;;;;;;;;;;5695:148;5958:10;:24;;;5943:10;5933:21;;;;;;:49;5929:139;;6005:52;;-1:-1:-1;;;6005:52:0;;;;;;;;;;;5929:139;6344:31;6361:13;6344:16;:31::i;:::-;6494:36;6533:30;6549:13;6533:15;:30::i;:::-;6494:69;;6605:10;:28;;;6573:6;:29;;:60;;;;;6723:20;6746:13;6723:36;;6799:12;6814:5;6799:20;;6859:18;6904:12;-1:-1:-1;;;;;6880:44:0;;6938:6;6958:10;6982;:18;;;7014:10;:18;;;7046:10;:18;;;7078:10;:18;;;7110:10;:18;;;7295:10;7307:12;7321:4;7284:42;;;;;;;;;-1:-1:-1;;;;;11609:32:235;;;;11591:51;;11673:2;11658:18;;11651:34;;;;11716:2;11701:18;;11694:34;11579:2;11564:18;;11389:345;7284:42:0;;;;;;;;;;;;;7274:53;;;;;;6880:457;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7360:10;7347:12;:24;;;;;;;;;;;:39;;;;;;;;:50;;:63;;-1:-1:-1;;;;;;7347:63:0;-1:-1:-1;;;;;7347:63:0;;;;;;-1:-1:-1;;;;;;4439:3006:0;;;;;;;:::o;2561:980:30:-;2752:13;2967:8;:15;;;2963:549;;;3014:13;3002:9;:25;2998:121;;;3054:50;;-1:-1:-1;;;3054:50:30;;;;;;;;;;;2998:121;-1:-1:-1;3140:13:30;2963:549;;;3317:120;;-1:-1:-1;;;3317:120:30;;-1:-1:-1;;;;;14806:15:235;;;3317:120:30;;;14788:34:235;3387:4:30;14838:18:235;;;14831:43;14890:18;;;14883:34;;;3292:22:30;;3317:4;:23;;;;;;14723:18:235;;3317:120:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3451:50;;-1:-1:-1;;;3451:50:30;;-1:-1:-1;;;;;15120:32:235;;;3451:50:30;;;15102:51:235;15169:18;;;15162:34;;;3292:145:30;;-1:-1:-1;3451:4:30;:12;;;;;;15075:18:235;;3451:50:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3278:234;2561:980;;;;;;:::o;3811:920::-;3974:37;3997:13;3974:22;:37::i;:::-;4274:13;:34;;;4312:4;4274:42;4270:140;;4339:60;;-1:-1:-1;;;4339:60:30;;;;;;;;;;;4270:140;4564:13;:38;;;4606:4;4564:46;4560:165;;4633:81;;-1:-1:-1;;;4633:81:30;;;;;;;;;;;4560:165;3811:920;:::o;4879:233::-;5075:30;;-1:-1:-1;;;5075:30:30;;193:4:124;5075:30:30;;;3146:25:235;4996:7:30;;5075:4;-1:-1:-1;;;;;5075:25:30;;;;3119:18:235;;5075:30:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19584:926:0:-;19697:37;;:::i;:::-;19833:23;;-1:-1:-1;;;;;19813:43:0;;;;;19890:27;;;;;19866:51;;:21;;;:51;19952:28;;;;;19927:22;;;:53;20021:34;;;;19990:28;;;;:65;;;;20100:51;;;20065:32;;;;:86;;;;20188:30;;;20161:24;;;;:57;;;;20257:32;;;20228:26;;;;:61;;;;20321:25;;;20299:19;;;;:47;;;;20377:24;;;20356:45;;:18;;;;:45;;;;20434:26;;;20411:49;:20;;;:49;20485:18;;;;;20470:12;;;:33;19813:7;19584:926::o;17842:1191::-;18143:3;18106:13;:34;;;:40;18102:138;;;18169:60;;-1:-1:-1;;;18169:60:0;;;;;;;;;;;18102:138;18254:13;:32;;;18290:1;18254:37;18250:133;;18314:58;;-1:-1:-1;;;18314:58:0;;;;;;;;;;;18250:133;18442:13;:32;;;18409:13;:30;;;:65;:163;;;;18523:13;:32;;;18490:13;:30;;;:65;;;;:::i;:::-;:82;;18409:163;18392:279;;;18604:56;;-1:-1:-1;;;18604:56:0;;;;;;;;;;;18392:279;18749:18;;;;:24;193:4:124;-1:-1:-1;18749:30:0;:75;;;193:4:124;18795:13:0;:18;;;:23;;;:29;18749:75;:128;;;;193:4:124;18840:13:0;:18;;;:31;;;:37;18749:128;:185;;;;193:4:124;18893:13:0;:18;;;:35;;;:41;18749:185;18732:295;;;18966:50;;-1:-1:-1;;;18966:50:0;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:235:-;-1:-1:-1;;;;;89:31:235;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:127::-;350:10;345:3;341:20;338:1;331:31;381:4;378:1;371:15;405:4;402:1;395:15;421:251;493:2;487:9;535:2;523:15;;568:18;553:34;;589:22;;;550:62;547:88;;;615:18;;:::i;:::-;651:2;644:22;421:251;:::o;677:250::-;744:2;738:9;786:6;774:19;;823:18;808:34;;844:22;;;805:62;802:88;;;870:18;;:::i;932:118::-;1018:5;1011:13;1004:21;997:5;994:32;984:60;;1040:1;1037;1030:12;1055:718;1097:5;1150:3;1143:4;1135:6;1131:17;1127:27;1117:55;;1168:1;1165;1158:12;1117:55;1204:6;1191:20;1230:18;1267:2;1263;1260:10;1257:36;;;1273:18;;:::i;:::-;1348:2;1342:9;1316:2;1402:13;;-1:-1:-1;;1398:22:235;;;1422:2;1394:31;1390:40;1378:53;;;1446:18;;;1466:22;;;1443:46;1440:72;;;1492:18;;:::i;:::-;1532:10;1528:2;1521:22;1567:2;1559:6;1552:18;1613:3;1606:4;1601:2;1593:6;1589:15;1585:26;1582:35;1579:55;;;1630:1;1627;1620:12;1579:55;1694:2;1687:4;1679:6;1675:17;1668:4;1660:6;1656:17;1643:54;1741:1;1734:4;1729:2;1721:6;1717:15;1713:26;1706:37;1761:6;1752:15;;;;;;1055:718;;;;:::o;1778:1217::-;1899:6;1907;1915;1923;1931;1984:3;1972:9;1963:7;1959:23;1955:33;1952:53;;;2001:1;1998;1991:12;1952:53;2037:9;2024:23;2014:33;;2097:2;2086:9;2082:18;2069:32;2110:31;2135:5;2110:31;:::i;:::-;2160:5;-1:-1:-1;2212:2:235;2197:18;;2184:32;;-1:-1:-1;2263:2:235;2248:18;;2235:32;;-1:-1:-1;2318:3:235;2303:19;;2290:33;2342:18;2372:14;;;2369:34;;;2399:1;2396;2389:12;2369:34;2422:22;;;;2478:2;2460:16;;;2456:25;2453:45;;;2494:1;2491;2484:12;2453:45;2522:22;;:::i;:::-;2581:2;2568:16;2593:33;2618:7;2593:33;:::i;:::-;2635:24;;2704:2;2696:11;;2683:25;2717:30;2683:25;2717:30;:::i;:::-;2776:2;2763:16;;2756:33;2835:2;2827:11;;2814:25;2851:16;;;2848:36;;;2880:1;2877;2870:12;2848:36;2918:44;2954:7;2943:8;2939:2;2935:17;2918:44;:::i;:::-;2913:2;2904:7;2900:16;2893:70;;2982:7;2972:17;;;;;1778:1217;;;;;;;;:::o;3182:601::-;3233:5;3281:4;3269:9;3264:3;3260:19;3256:30;3253:50;;;3299:1;3296;3289:12;3253:50;3332:2;3326:9;3374:4;3366:6;3362:17;3445:6;3433:10;3430:22;3409:18;3397:10;3394:34;3391:62;3388:88;;;3456:18;;:::i;:::-;3496:10;3492:2;3485:22;;3525:6;3516:15;;3568:9;3555:23;3547:6;3540:39;3640:2;3629:9;3625:18;3612:32;3607:2;3599:6;3595:15;3588:57;3706:2;3695:9;3691:18;3678:32;3673:2;3665:6;3661:15;3654:57;3772:2;3761:9;3757:18;3744:32;3739:2;3731:6;3727:15;3720:57;;3182:601;;;;:::o;3788:1079::-;3851:5;3899:6;3887:9;3882:3;3878:19;3874:32;3871:52;;;3919:1;3916;3909:12;3871:52;3941:17;;:::i;:::-;3932:26;;3981:29;4000:9;3981:29;:::i;:::-;3974:5;3967:44;4043:38;4077:2;4066:9;4062:18;4043:38;:::i;:::-;4038:2;4031:5;4027:14;4020:62;4142:2;4131:9;4127:18;4114:32;4109:2;4102:5;4098:14;4091:56;4207:2;4196:9;4192:18;4179:32;4174:2;4167:5;4163:14;4156:56;4273:3;4262:9;4258:19;4245:33;4239:3;4232:5;4228:15;4221:58;4340:3;4329:9;4325:19;4312:33;4306:3;4299:5;4295:15;4288:58;4407:3;4396:9;4392:19;4379:33;4373:3;4366:5;4362:15;4355:58;4474:3;4463:9;4459:19;4446:33;4440:3;4433:5;4429:15;4422:58;4499:3;4534:38;4568:2;4557:9;4553:18;4534:38;:::i;:::-;4518:14;;;4511:62;4592:3;4627:38;4646:18;;;4627:38;:::i;:::-;4611:14;;;4604:62;4685:3;4720:38;4739:18;;;4720:38;:::i;:::-;4704:14;;;4697:62;4778:3;4813:47;4856:3;4836:18;;;4813:47;:::i;:::-;4797:14;;;4790:71;4801:5;3788:1079;-1:-1:-1;;3788:1079:235:o;4872:662::-;5011:6;5019;5027;5035;5043;5096:3;5084:9;5075:7;5071:23;5067:33;5064:53;;;5113:1;5110;5103:12;5064:53;5149:9;5136:23;5126:33;;5178:63;5233:7;5228:2;5217:9;5213:18;5178:63;:::i;:::-;5168:73;;5292:3;5281:9;5277:19;5264:33;5320:18;5312:6;5309:30;5306:50;;;5352:1;5349;5342:12;5306:50;5375:49;5416:7;5407:6;5396:9;5392:22;5375:49;:::i;:::-;4872:662;;;;-1:-1:-1;5365:59:235;;5471:3;5456:19;;5443:33;;-1:-1:-1;5523:3:235;5508:19;5495:33;;4872:662;-1:-1:-1;;;4872:662:235:o;5856:315::-;5924:6;5932;5985:2;5973:9;5964:7;5960:23;5956:32;5953:52;;;6001:1;5998;5991:12;5953:52;6040:9;6027:23;6059:31;6084:5;6059:31;:::i;:::-;6109:5;6161:2;6146:18;;;;6133:32;;-1:-1:-1;;;5856:315:235:o;6176:1087::-;6393:13;;6375:32;;6463:4;6451:17;;;6445:24;6423:20;;;6416:54;6526:4;6514:17;;;6508:24;6486:20;;;6479:54;6580:4;6568:17;;;6562:24;-1:-1:-1;;;;;6662:21:235;;;6640:20;;;6633:51;;;;6744:4;6732:17;;;6726:24;6722:33;;6700:20;;;6693:63;6613:3;6793:17;;;6787:24;5605:31;;6855:20;;;5593:44;6925:4;6913:17;;;6907:24;5605:31;;6975:20;;;5593:44;7045:4;7033:17;;;7027:24;5605:31;;7095:20;;;5593:44;7135:6;7178:15;;;7172:22;5605:31;;;7238:18;;;5593:44;6362:3;6347:19;;;7203:54;;;6176:1087;;;;:::o;7491:593::-;7621:6;7629;7637;7645;7698:3;7686:9;7677:7;7673:23;7669:33;7666:53;;;7715:1;7712;7705:12;7666:53;7751:9;7738:23;7728:33;;7780:63;7835:7;7830:2;7819:9;7815:18;7780:63;:::i;:::-;7770:73;;7894:3;7883:9;7879:19;7866:33;7922:18;7914:6;7911:30;7908:50;;;7954:1;7951;7944:12;7908:50;7977:49;8018:7;8009:6;7998:9;7994:22;7977:49;:::i;:::-;7491:593;;;;-1:-1:-1;7967:59:235;;8073:3;8058:19;8045:33;;-1:-1:-1;;;7491:593:235:o;8089:422::-;8130:3;8168:5;8162:12;8195:6;8190:3;8183:19;8220:1;8230:162;8244:6;8241:1;8238:13;8230:162;;;8306:4;8362:13;;;8358:22;;8352:29;8334:11;;;8330:20;;8323:59;8259:12;8230:162;;;8234:3;8437:1;8430:4;8421:6;8416:3;8412:16;8408:27;8401:38;8500:4;8493:2;8489:7;8484:2;8476:6;8472:15;8468:29;8463:3;8459:39;8455:50;8448:57;;;8089:422;;;;:::o;8516:643::-;8753:6;8742:9;8735:25;8796:6;8791:2;8780:9;8776:18;8769:34;8839:2;8834;8823:9;8819:18;8812:30;8914:1;8910;8905:3;8901:11;8897:19;8888:6;8882:13;8878:39;8873:2;8862:9;8858:18;8851:67;8987:2;8979:6;8975:15;8969:22;8962:30;8955:38;8949:3;8938:9;8934:19;8927:67;8716:4;9041:2;9033:6;9029:15;9023:22;9082:2;9076:3;9065:9;9061:19;9054:31;9102:51;9148:3;9137:9;9133:19;9119:12;9102:51;:::i;:::-;9094:59;8516:643;-1:-1:-1;;;;;;8516:643:235:o;9164:184::-;9234:6;9287:2;9275:9;9266:7;9262:23;9258:32;9255:52;;;9303:1;9300;9293:12;9255:52;-1:-1:-1;9326:16:235;;9164:184;-1:-1:-1;9164:184:235:o;9353:225::-;9420:9;;;9441:11;;;9438:134;;;9494:10;9489:3;9485:20;9482:1;9475:31;9529:4;9526:1;9519:15;9557:4;9554:1;9547:15;10055:1329;10291:13;;-1:-1:-1;;;;;5605:31:235;5593:44;;10259:3;10244:19;;10363:4;10355:6;10351:17;10345:24;10378:54;10426:4;10415:9;10411:20;10397:12;-1:-1:-1;;;;;5605:31:235;5593:44;;5539:104;10378:54;;10488:4;10480:6;10476:17;10470:24;10463:4;10452:9;10448:20;10441:54;10551:4;10543:6;10539:17;10533:24;10526:4;10515:9;10511:20;10504:54;10614:4;10606:6;10602:17;10596:24;10589:4;10578:9;10574:20;10567:54;10677:4;10669:6;10665:17;10659:24;10652:4;10641:9;10637:20;10630:54;10740:4;10732:6;10728:17;10722:24;10715:4;10704:9;10700:20;10693:54;10803:4;10795:6;10791:17;10785:24;10778:4;10767:9;10763:20;10756:54;10829:6;10884:2;10876:6;10872:15;10866:22;10897:54;10947:2;10936:9;10932:18;10916:14;-1:-1:-1;;;;;5605:31:235;5593:44;;5539:104;10897:54;-1:-1:-1;;10970:6:235;11013:15;;;11007:22;-1:-1:-1;;;;;5605:31:235;;11073:18;;;5593:44;-1:-1:-1;;11111:6:235;11154:15;;;11148:22;-1:-1:-1;;;;;5605:31:235;;11214:18;;;5593:44;-1:-1:-1;;11252:6:235;11295:15;;;11289:22;9863:12;;11359:18;;;9851:25;9925:4;9914:16;;9908:23;9892:14;;;9885:47;9981:4;9970:16;;9964:23;9948:14;;;9941:47;10037:4;10026:16;;10020:23;10004:14;;;9997:47;11320:58;9793:257;11739:1169;11822:12;;-1:-1:-1;;;;;5605:31:235;5593:44;;11886:4;11879:5;11875:16;11869:23;11901:48;11943:4;11938:3;11934:14;11920:12;-1:-1:-1;;;;;5605:31:235;5593:44;;5539:104;11901:48;;11998:4;11991:5;11987:16;11981:23;11974:4;11969:3;11965:14;11958:47;12054:4;12047:5;12043:16;12037:23;12030:4;12025:3;12021:14;12014:47;12110:4;12103:5;12099:16;12093:23;12086:4;12081:3;12077:14;12070:47;12166:4;12159:5;12155:16;12149:23;12142:4;12137:3;12133:14;12126:47;12222:4;12215:5;12211:16;12205:23;12198:4;12193:3;12189:14;12182:47;12278:4;12271:5;12267:16;12261:23;12254:4;12249:3;12245:14;12238:47;12304:6;12357:2;12350:5;12346:14;12340:21;12335:2;12330:3;12326:12;12319:43;;12381:6;12435:2;12428:5;12424:14;12418:21;12448:48;12492:2;12487:3;12483:12;12467:14;-1:-1:-1;;;;;5605:31:235;5593:44;;5539:104;12448:48;-1:-1:-1;;12515:6:235;12558:14;;;12552:21;-1:-1:-1;;;;;5605:31:235;;;12617:12;;;5593:44;;;;12649:6;12692:14;;;12686:21;5605:31;;;12751:12;;;5593:44;12783:6;12826:14;;;12820:21;9863:12;;12889;;;9851:25;;;;9925:4;9914:16;;9908:23;9892:14;;;9885:47;9981:4;9970:16;;9964:23;9948:14;;;9941:47;10037:4;10026:16;10020:23;10004:14;;;;9997:47;11739:1169::o;12913:463::-;13137:4;13166:3;13178:47;13215:9;13207:6;13178:47;:::i;:::-;13262:2;13256:3;13245:9;13241:19;13234:31;13282:44;13322:2;13311:9;13307:18;13299:6;13282:44;:::i;:::-;13274:52;;;13363:6;13357:3;13346:9;13342:19;13335:35;12913:463;;;;;;:::o;13381:251::-;13451:6;13504:2;13492:9;13483:7;13479:23;13475:32;13472:52;;;13520:1;13517;13510:12;13472:52;13552:9;13546:16;13571:31;13596:5;13571:31;:::i;:::-;13621:5;13381:251;-1:-1:-1;;;13381:251:235:o;13637:906::-;14001:4;14030:3;14042:47;14079:9;14071:6;14042:47;:::i;:::-;14126:2;14120:3;14109:9;14105:19;14098:31;14146:44;14186:2;14175:9;14171:18;14163:6;14146:44;:::i;:::-;-1:-1:-1;;;;;14265:15:235;;;14259:3;14244:19;;14237:44;14318:15;;;14312:3;14297:19;;14290:44;-1:-1:-1;;14371:15:235;;;14365:3;14350:19;;14343:44;14424:15;;;14418:3;14403:19;;14396:44;14477:15;;;14471:3;14456:19;;14449:44;14524:3;14509:19;14502:35;;;;14138:52;13637:906;-1:-1:-1;;13637:906:235:o;15207:245::-;15274:6;15327:2;15315:9;15306:7;15302:23;15298:32;15295:52;;;15343:1;15340;15333:12;15295:52;15375:9;15369:16;15394:28;15416:5;15394:28;:::i;15457:209::-;15489:1;15515;15505:132;;15559:10;15554:3;15550:20;15547:1;15540:31;15594:4;15591:1;15584:15;15622:4;15619:1;15612:15;15505:132;-1:-1:-1;15651:9:235;;15457:209::o";
        readonly linkReferences: {};
        readonly immutableReferences: {
            readonly "3517": readonly [{
                readonly start: 318;
                readonly length: 32;
            }, {
                readonly start: 4026;
                readonly length: 32;
            }, {
                readonly start: 4178;
                readonly length: 32;
            }, {
                readonly start: 4429;
                readonly length: 32;
            }];
            readonly "45": readonly [{
                readonly start: 662;
                readonly length: 32;
            }, {
                readonly start: 3613;
                readonly length: 32;
            }];
            readonly "48": readonly [{
                readonly start: 558;
                readonly length: 32;
            }, {
                readonly start: 1233;
                readonly length: 32;
            }];
            readonly "51": readonly [{
                readonly start: 454;
                readonly length: 32;
            }, {
                readonly start: 1822;
                readonly length: 32;
            }];
            readonly "54": readonly [{
                readonly start: 610;
                readonly length: 32;
            }, {
                readonly start: 2102;
                readonly length: 32;
            }];
            readonly "57": readonly [{
                readonly start: 506;
                readonly length: 32;
            }, {
                readonly start: 2382;
                readonly length: 32;
            }];
            readonly "60": readonly [{
                readonly start: 402;
                readonly length: 32;
            }, {
                readonly start: 2662;
                readonly length: 32;
            }];
        };
    };
    readonly methodIdentifiers: {
        readonly "coreDeployer()": "c83e1f51";
        readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": "8d10a15b";
        readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": "1b06a35b";
        readonly "deployments(address,bytes32)": "20503b3f";
        readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": "16abfc70";
        readonly "lido()": "23509a2d";
        readonly "target0Deployer()": "ab71905f";
        readonly "target1Deployer()": "a085fa30";
        readonly "target2Deployer()": "b6cb1118";
        readonly "target3Deployer()": "aa8cd6c4";
        readonly "target4Deployer()": "966ecd1c";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coreDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target0Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target1Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target2Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target3Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target4Deployer\",\"type\":\"address\"},{\"internalType\":\"contract ILido\",\"name\":\"_lido\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeploymentAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveIsNotDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumTransactionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTargetIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"coreDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"}],\"name\":\"deployments\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"configHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"extraDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hyperdrive\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target4\",\"type\":\"address\"}],\"internalType\":\"struct HyperdriveDeployerCoordinator.Deployment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpShares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lido\",\"outputs\":[{\"internalType\":\"contract ILido\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target0Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target1Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target2Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target3Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target4Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_coreDeployer\":\"The core deployer.\",\"_lido\":\"The Lido contract.\",\"_target0Deployer\":\"The target0 deployer.\",\"_target1Deployer\":\"The target1 deployer.\",\"_target2Deployer\":\"The target2 deployer.\",\"_target3Deployer\":\"The target3 deployer.\",\"_target4Deployer\":\"The target4 deployer.\"}},\"deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy Hyperdrive.\"},\"returns\":{\"_0\":\"The address of the newly deployed Hyperdrive instance.\"}},\"deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"details\":\"As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.\",\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy the target.\",\"_targetIndex\":\"The index of the target to deploy.\"},\"returns\":{\"target\":\"The address of the newly deployed target instance.\"}},\"deployments(address,bytes32)\":{\"params\":{\"_deployer\":\"The deployer.\",\"_deploymentId\":\"The deployment ID.\"},\"returns\":{\"_0\":\"The deployment.\"}},\"initialize(bytes32,address,uint256,uint256,(address,bool,bytes))\":{\"details\":\"This function utilizes several helper functions that provide      flexibility to implementations.\",\"params\":{\"_apr\":\"The target APR.\",\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_deploymentId\":\"The ID of the deployment.\",\"_lp\":\"The LP that is initializing the pool.\",\"_options\":\"The options that configure how the initialization is        settled.\"},\"returns\":{\"lpShares\":\"The initial number of LP shares created.\"}}},\"title\":\"StETHHyperdriveDeployerCoordinator\",\"version\":1},\"userdoc\":{\"errors\":{\"DeploymentAlreadyExists()\":[{\"notice\":\"Thrown when a user attempts to deploy target0 the deployment has         already been created.\"}],\"DeploymentDoesNotExist()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract that requires         the deployment to be created and the deployment doesn't exist.\"}],\"HyperdriveAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a hyperdrive contract         after it has already been deployed.\"}],\"HyperdriveIsNotDeployed()\":[{\"notice\":\"Thrown when a user attempts to initialize a hyperdrive contract         before is has been deployed.\"}],\"IncompleteDeployment()\":[{\"notice\":\"Thrown when a user attempts to deploy a Hyperdrive entrypoint         without first deploying the required targets.\"}],\"InsufficientValue()\":[{\"notice\":\"Thrown when a deployer provides an insufficient amount of base         to initialize a payable Hyperdrive instance.\"}],\"InvalidCheckpointDuration()\":[{\"notice\":\"Thrown when the checkpoint duration specified is zero.\"}],\"InvalidFeeAmounts()\":[{\"notice\":\"Thrown when the curve fee, flat fee, governance LP fee, or         governance zombie fee is greater than 100%.\"}],\"InvalidMinimumShareReserves()\":[{\"notice\":\"Thrown when the minimum share reserves is too small. The         absolute smallest allowable minimum share reserves is 1e3;         however, yield sources may require a larger minimum share         reserves.\"}],\"InvalidMinimumTransactionAmount()\":[{\"notice\":\"Thrown when the minimum transaction amount is too small.\"}],\"InvalidPositionDuration()\":[{\"notice\":\"Thrown when the position duration is smaller than the checkpoint         duration or is not a multiple of the checkpoint duration.\"}],\"InvalidTargetIndex()\":[{\"notice\":\"Thrown when a user attempts to deploy a target using a target         index that is outside of the accepted range.\"}],\"MismatchedConfig()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with a config that doesn't match the deployment's         config hash.\"}],\"MismatchedExtraData()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with extra data that doesn't match the deployment's         extra data hash.\"}],\"NotPayable()\":[{\"notice\":\"Thrown when ether is sent to an instance that doesn't accept         ether as a deposit asset.\"}],\"TargetAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a target contract after         it has already been deployed.\"}],\"TransferFailed()\":[{\"notice\":\"Thrown when an ether transfer fails.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates the deployer coordinator.\"},\"coreDeployer()\":{\"notice\":\"The contract used to deploy new instances of Hyperdrive.\"},\"deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"},\"deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"notice\":\"Deploys a Hyperdrive target instance with the given parameters.\"},\"deployments(address,bytes32)\":{\"notice\":\"Gets the deployment specified by the deployer and deployment ID.\"},\"initialize(bytes32,address,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Initializes a pool that was deployed by this coordinator.\"},\"lido()\":{\"notice\":\"The Lido contract.\"},\"target0Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget0.\"},\"target1Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget1.\"},\"target2Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget2.\"},\"target3Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget3.\"},\"target4Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget4.\"}},\"notice\":\"The deployer coordinator for the StETHHyperdrive implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol\":\"StETHHyperdriveDeployerCoordinator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/HyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xb914d1a15ee479fc2a5f6cea7e3032f5fe3c36c3d35abbdbe7f0e25ea871ec71\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d83f3ed3fd751c2324a69eeb8d165502b3330edf8497d9417c8e747e85949d49\",\"dweb:/ipfs/QmSnNbKq1Gmxa7HpG5LrqVqF47BQXmxPQJGYoV2XCspvxb\"]},\"contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xd737b2107533de4a33899b715cd4709431c771b3e54b7d6032dd980c71f09062\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c068f3e17d51018ddcdca28a161da0791aa1c1a11ed2c018c8cab148e1e382d\",\"dweb:/ipfs/QmemGr1LdTF3M2d1E2Ew2RtsENufp5aebBZkFQLqn7iYyY\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf\",\"dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24\",\"dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b\",\"dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU\"]},\"contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xb21fef06e9a50d1dd8fb765fe9efe9dd0cf01dfba1edf519743930e64b6cec9b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f5dba59592d1f4ff5359367ceadac86a19dbb976958c5abf632c953ae10b8799\",\"dweb:/ipfs/QmTfWhYzcMaLtmJFymXPweCXu6njXQPtHf4mhPEWErR8V5\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c\",\"dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IHyperdriveTargetDeployer.sol\":{\"keccak256\":\"0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed\",\"dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss\"]},\"contracts/src/interfaces/ILido.sol\":{\"keccak256\":\"0x4e281fcc11a2512234c3ca7fb3dd00708bfb78cea39a7cbd911f2a70812925e6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8db577a2a335ebc7011a7e413abd0a78010e85b1573a26218999e335280f3ba3\",\"dweb:/ipfs/QmQrjdiCvNUjDvEHyHH2Wmo8zRN7H3LLRuvrdftP7pc5kE\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_coreDeployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target0Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target1Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target2Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target3Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target4Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "contract ILido";
                    readonly name: "_lido";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentAlreadyExists";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentDoesNotExist";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveIsNotDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "IncompleteDeployment";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InsufficientValue";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFeeAmounts";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumShareReserves";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumTransactionAmount";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidTargetIndex";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedConfig";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedExtraData";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "NotPayable";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TargetAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TransferFailed";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "coreDeployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deploy";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_targetIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deployTarget";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "target";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "deployments";
                readonly outputs: readonly [{
                    readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "configHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "extraDataHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initialSharePrice";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "hyperdrive";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target0";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target1";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target2";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target3";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target4";
                        readonly type: "address";
                    }];
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "address";
                    readonly name: "_lp";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_contribution";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_apr";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "struct IHyperdrive.Options";
                    readonly name: "_options";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "destination";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bool";
                        readonly name: "asBase";
                        readonly type: "bool";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "extraData";
                        readonly type: "bytes";
                    }];
                }];
                readonly stateMutability: "payable";
                readonly type: "function";
                readonly name: "initialize";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "lpShares";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "lido";
                readonly outputs: readonly [{
                    readonly internalType: "contract ILido";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target0Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target1Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target2Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target3Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target4Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly constructor: {
                        readonly params: {
                            readonly _coreDeployer: "The core deployer.";
                            readonly _lido: "The Lido contract.";
                            readonly _target0Deployer: "The target0 deployer.";
                            readonly _target1Deployer: "The target1 deployer.";
                            readonly _target2Deployer: "The target2 deployer.";
                            readonly _target3Deployer: "The target3 deployer.";
                            readonly _target4Deployer: "The target4 deployer.";
                        };
                    };
                    readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy Hyperdrive.";
                        };
                        readonly returns: {
                            readonly _0: "The address of the newly deployed Hyperdrive instance.";
                        };
                    };
                    readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly details: "As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.";
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy the target.";
                            readonly _targetIndex: "The index of the target to deploy.";
                        };
                        readonly returns: {
                            readonly target: "The address of the newly deployed target instance.";
                        };
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly params: {
                            readonly _deployer: "The deployer.";
                            readonly _deploymentId: "The deployment ID.";
                        };
                        readonly returns: {
                            readonly _0: "The deployment.";
                        };
                    };
                    readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": {
                        readonly details: "This function utilizes several helper functions that provide      flexibility to implementations.";
                        readonly params: {
                            readonly _apr: "The target APR.";
                            readonly _contribution: "The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _lp: "The LP that is initializing the pool.";
                            readonly _options: "The options that configure how the initialization is        settled.";
                        };
                        readonly returns: {
                            readonly lpShares: "The initial number of LP shares created.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly constructor: {
                        readonly notice: "Instantiates the deployer coordinator.";
                    };
                    readonly "coreDeployer()": {
                        readonly notice: "The contract used to deploy new instances of Hyperdrive.";
                    };
                    readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the given parameters.";
                    };
                    readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive target instance with the given parameters.";
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly notice: "Gets the deployment specified by the deployer and deployment ID.";
                    };
                    readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": {
                        readonly notice: "Initializes a pool that was deployed by this coordinator.";
                    };
                    readonly "lido()": {
                        readonly notice: "The Lido contract.";
                    };
                    readonly "target0Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget0.";
                    };
                    readonly "target1Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget1.";
                    };
                    readonly "target2Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget2.";
                    };
                    readonly "target3Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget3.";
                    };
                    readonly "target4Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget4.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol": "StETHHyperdriveDeployerCoordinator";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/deployers/HyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xb914d1a15ee479fc2a5f6cea7e3032f5fe3c36c3d35abbdbe7f0e25ea871ec71";
                readonly urls: readonly ["bzz-raw://d83f3ed3fd751c2324a69eeb8d165502b3330edf8497d9417c8e747e85949d49", "dweb:/ipfs/QmSnNbKq1Gmxa7HpG5LrqVqF47BQXmxPQJGYoV2XCspvxb"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xd737b2107533de4a33899b715cd4709431c771b3e54b7d6032dd980c71f09062";
                readonly urls: readonly ["bzz-raw://9c068f3e17d51018ddcdca28a161da0791aa1c1a11ed2c018c8cab148e1e382d", "dweb:/ipfs/QmemGr1LdTF3M2d1E2Ew2RtsENufp5aebBZkFQLqn7iYyY"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952";
                readonly urls: readonly ["bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf", "dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e";
                readonly urls: readonly ["bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24", "dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761";
                readonly urls: readonly ["bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b", "dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xb21fef06e9a50d1dd8fb765fe9efe9dd0cf01dfba1edf519743930e64b6cec9b";
                readonly urls: readonly ["bzz-raw://f5dba59592d1f4ff5359367ceadac86a19dbb976958c5abf632c953ae10b8799", "dweb:/ipfs/QmTfWhYzcMaLtmJFymXPweCXu6njXQPtHf4mhPEWErR8V5"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0";
                readonly urls: readonly ["bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c", "dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55";
                readonly urls: readonly ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveTargetDeployer.sol": {
                readonly keccak256: "0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205";
                readonly urls: readonly ["bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed", "dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/ILido.sol": {
                readonly keccak256: "0x4e281fcc11a2512234c3ca7fb3dd00708bfb78cea39a7cbd911f2a70812925e6";
                readonly urls: readonly ["bzz-raw://8db577a2a335ebc7011a7e413abd0a78010e85b1573a26218999e335280f3ba3", "dweb:/ipfs/QmQrjdiCvNUjDvEHyHH2Wmo8zRN7H3LLRuvrdftP7pc5kE"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501";
                readonly urls: readonly ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca";
                readonly urls: readonly ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0";
                readonly urls: readonly ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076";
                readonly urls: readonly ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/SafeCast.sol": {
                readonly keccak256: "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148";
                readonly urls: readonly ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"];
                readonly license: "Apache-2.0";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol";
        readonly id: 3671;
        readonly exportedSymbols: {
            readonly FixedPointMath: readonly [19394];
            readonly HyperdriveDeployerCoordinator: readonly [1040];
            readonly IHyperdrive: readonly [11028];
            readonly IHyperdriveDeployerCoordinator: readonly [11350];
            readonly ILido: readonly [11973];
            readonly ONE: readonly [18628];
            readonly StETHHyperdriveDeployerCoordinator: readonly [3670];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:5076:30";
        readonly nodes: readonly [{
            readonly id: 3496;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:30";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 3498;
            readonly nodeType: "ImportDirective";
            readonly src: "64:63:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3671;
            readonly sourceUnit: 11029;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3497;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11028;
                    readonly src: "73:11:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3500;
            readonly nodeType: "ImportDirective";
            readonly src: "128:101:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly file: "../../interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3671;
            readonly sourceUnit: 11351;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3499;
                    readonly name: "IHyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11350;
                    readonly src: "137:30:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3502;
            readonly nodeType: "ImportDirective";
            readonly src: "230:51:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/ILido.sol";
            readonly file: "../../interfaces/ILido.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3671;
            readonly sourceUnit: 11974;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3501;
                    readonly name: "ILido";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11973;
                    readonly src: "239:5:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3505;
            readonly nodeType: "ImportDirective";
            readonly src: "282:73:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/FixedPointMath.sol";
            readonly file: "../../libraries/FixedPointMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3671;
            readonly sourceUnit: 19395;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3503;
                    readonly name: "FixedPointMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 19394;
                    readonly src: "291:14:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }, {
                readonly foreign: {
                    readonly id: 3504;
                    readonly name: "ONE";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 18628;
                    readonly src: "307:3:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3507;
            readonly nodeType: "ImportDirective";
            readonly src: "356:85:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/deployers/HyperdriveDeployerCoordinator.sol";
            readonly file: "../HyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3671;
            readonly sourceUnit: 1041;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3506;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 1040;
                    readonly src: "365:29:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3670;
            readonly nodeType: "ContractDefinition";
            readonly src: "807:4307:30";
            readonly nodes: readonly [{
                readonly id: 3513;
                readonly nodeType: "UsingForDirective";
                readonly src: "890:33:30";
                readonly nodes: readonly [];
                readonly global: false;
                readonly libraryName: {
                    readonly id: 3511;
                    readonly name: "FixedPointMath";
                    readonly nameLocations: readonly ["896:14:30"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 19394;
                    readonly src: "896:14:30";
                };
                readonly typeName: {
                    readonly id: 3512;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "915:7:30";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
            }, {
                readonly id: 3517;
                readonly nodeType: "VariableDeclaration";
                readonly src: "964:27:30";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3514;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "929:30:30";
                    readonly text: "@notice The Lido contract.";
                };
                readonly functionSelector: "23509a2d";
                readonly mutability: "immutable";
                readonly name: "lido";
                readonly nameLocation: "987:4:30";
                readonly scope: 3670;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_contract$_ILido_$11973";
                    readonly typeString: "contract ILido";
                };
                readonly typeName: {
                    readonly id: 3516;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 3515;
                        readonly name: "ILido";
                        readonly nameLocations: readonly ["964:5:30"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 11973;
                        readonly src: "964:5:30";
                    };
                    readonly referencedDeclaration: 11973;
                    readonly src: "964:5:30";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_ILido_$11973";
                        readonly typeString: "contract ILido";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3549;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1411:498:30";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3548;
                    readonly nodeType: "Block";
                    readonly src: "1880:29:30";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 3546;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3544;
                                readonly name: "lido";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3517;
                                readonly src: "1890:4:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_ILido_$11973";
                                    readonly typeString: "contract ILido";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 3545;
                                readonly name: "_lido";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3533;
                                readonly src: "1897:5:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_ILido_$11973";
                                    readonly typeString: "contract ILido";
                                };
                            };
                            readonly src: "1890:12:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_ILido_$11973";
                                readonly typeString: "contract ILido";
                            };
                        };
                        readonly id: 3547;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1890:12:30";
                    }];
                };
                readonly documentation: {
                    readonly id: 3518;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "998:408:30";
                    readonly text: "@notice Instantiates the deployer coordinator.\n @param _coreDeployer The core deployer.\n @param _target0Deployer The target0 deployer.\n @param _target1Deployer The target1 deployer.\n @param _target2Deployer The target2 deployer.\n @param _target3Deployer The target3 deployer.\n @param _target4Deployer The target4 deployer.\n @param _lido The Lido contract.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [{
                    readonly arguments: readonly [{
                        readonly id: 3536;
                        readonly name: "_coreDeployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3520;
                        readonly src: "1702:13:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3537;
                        readonly name: "_target0Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3522;
                        readonly src: "1729:16:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3538;
                        readonly name: "_target1Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3524;
                        readonly src: "1759:16:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3539;
                        readonly name: "_target2Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3526;
                        readonly src: "1789:16:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3540;
                        readonly name: "_target3Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3528;
                        readonly src: "1819:16:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3541;
                        readonly name: "_target4Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3530;
                        readonly src: "1849:16:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }];
                    readonly id: 3542;
                    readonly kind: "baseConstructorSpecifier";
                    readonly modifierName: {
                        readonly id: 3535;
                        readonly name: "HyperdriveDeployerCoordinator";
                        readonly nameLocations: readonly ["1659:29:30"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 1040;
                        readonly src: "1659:29:30";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "1659:216:30";
                }];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 3534;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3520;
                        readonly mutability: "mutable";
                        readonly name: "_coreDeployer";
                        readonly nameLocation: "1440:13:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3549;
                        readonly src: "1432:21:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3519;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1432:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3522;
                        readonly mutability: "mutable";
                        readonly name: "_target0Deployer";
                        readonly nameLocation: "1471:16:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3549;
                        readonly src: "1463:24:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3521;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1463:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3524;
                        readonly mutability: "mutable";
                        readonly name: "_target1Deployer";
                        readonly nameLocation: "1505:16:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3549;
                        readonly src: "1497:24:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3523;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1497:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3526;
                        readonly mutability: "mutable";
                        readonly name: "_target2Deployer";
                        readonly nameLocation: "1539:16:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3549;
                        readonly src: "1531:24:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3525;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1531:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3528;
                        readonly mutability: "mutable";
                        readonly name: "_target3Deployer";
                        readonly nameLocation: "1573:16:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3549;
                        readonly src: "1565:24:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3527;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1565:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3530;
                        readonly mutability: "mutable";
                        readonly name: "_target4Deployer";
                        readonly nameLocation: "1607:16:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3549;
                        readonly src: "1599:24:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3529;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1599:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3533;
                        readonly mutability: "mutable";
                        readonly name: "_lido";
                        readonly nameLocation: "1639:5:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3549;
                        readonly src: "1633:11:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_ILido_$11973";
                            readonly typeString: "contract ILido";
                        };
                        readonly typeName: {
                            readonly id: 3532;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3531;
                                readonly name: "ILido";
                                readonly nameLocations: readonly ["1633:5:30"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 11973;
                                readonly src: "1633:5:30";
                            };
                            readonly referencedDeclaration: 11973;
                            readonly src: "1633:5:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_ILido_$11973";
                                readonly typeString: "contract ILido";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1422:228:30";
                };
                readonly returnParameters: {
                    readonly id: 3543;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1880:0:30";
                };
                readonly scope: 3670;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 3611;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2561:980:30";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3610;
                    readonly nodeType: "Block";
                    readonly src: "2767:774:30";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly expression: {
                                readonly id: 3566;
                                readonly name: "_options";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3560;
                                readonly src: "2967:8:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Options_$10875_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.Options memory";
                                };
                            };
                            readonly id: 3567;
                            readonly isConstant: false;
                            readonly isLValue: true;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly memberLocation: "2976:6:30";
                            readonly memberName: "asBase";
                            readonly nodeType: "MemberAccess";
                            readonly referencedDeclaration: 10871;
                            readonly src: "2967:15:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly falseBody: {
                            readonly id: 3606;
                            readonly nodeType: "Block";
                            readonly src: "3278:234:30";
                            readonly statements: readonly [{
                                readonly assignments: readonly [3585];
                                readonly declarations: readonly [{
                                    readonly constant: false;
                                    readonly id: 3585;
                                    readonly mutability: "mutable";
                                    readonly name: "approvalAmount";
                                    readonly nameLocation: "3300:14:30";
                                    readonly nodeType: "VariableDeclaration";
                                    readonly scope: 3606;
                                    readonly src: "3292:22:30";
                                    readonly stateVariable: false;
                                    readonly storageLocation: "default";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly typeName: {
                                        readonly id: 3584;
                                        readonly name: "uint256";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3292:7:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly visibility: "internal";
                                }];
                                readonly id: 3595;
                                readonly initialValue: {
                                    readonly arguments: readonly [{
                                        readonly id: 3588;
                                        readonly name: "_lp";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3555;
                                        readonly src: "3358:3:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly arguments: readonly [{
                                            readonly id: 3591;
                                            readonly name: "this";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -28;
                                            readonly src: "3387:4:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_StETHHyperdriveDeployerCoordinator_$3670";
                                                readonly typeString: "contract StETHHyperdriveDeployerCoordinator";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_contract$_StETHHyperdriveDeployerCoordinator_$3670";
                                                readonly typeString: "contract StETHHyperdriveDeployerCoordinator";
                                            }];
                                            readonly id: 3590;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "ElementaryTypeNameExpression";
                                            readonly src: "3379:7:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_address_$";
                                                readonly typeString: "type(address)";
                                            };
                                            readonly typeName: {
                                                readonly id: 3589;
                                                readonly name: "address";
                                                readonly nodeType: "ElementaryTypeName";
                                                readonly src: "3379:7:30";
                                                readonly typeDescriptions: {};
                                            };
                                        };
                                        readonly id: 3592;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "3379:13:30";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 3593;
                                        readonly name: "_contribution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3557;
                                        readonly src: "3410:13:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly id: 3586;
                                            readonly name: "lido";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3517;
                                            readonly src: "3317:4:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_ILido_$11973";
                                                readonly typeString: "contract ILido";
                                            };
                                        };
                                        readonly id: 3587;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3322:18:30";
                                        readonly memberName: "transferSharesFrom";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11930;
                                        readonly src: "3317:23:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$";
                                            readonly typeString: "function (address,address,uint256) external returns (uint256)";
                                        };
                                    };
                                    readonly id: 3594;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3317:120:30";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "VariableDeclarationStatement";
                                readonly src: "3292:145:30";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly arguments: readonly [{
                                            readonly id: 3601;
                                            readonly name: "_hyperdrive";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3553;
                                            readonly src: "3472:11:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_IHyperdrive_$11028";
                                                readonly typeString: "contract IHyperdrive";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_contract$_IHyperdrive_$11028";
                                                readonly typeString: "contract IHyperdrive";
                                            }];
                                            readonly id: 3600;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "ElementaryTypeNameExpression";
                                            readonly src: "3464:7:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_address_$";
                                                readonly typeString: "type(address)";
                                            };
                                            readonly typeName: {
                                                readonly id: 3599;
                                                readonly name: "address";
                                                readonly nodeType: "ElementaryTypeName";
                                                readonly src: "3464:7:30";
                                                readonly typeDescriptions: {};
                                            };
                                        };
                                        readonly id: 3602;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "3464:20:30";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 3603;
                                        readonly name: "approvalAmount";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3585;
                                        readonly src: "3486:14:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly id: 3596;
                                            readonly name: "lido";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3517;
                                            readonly src: "3451:4:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_ILido_$11973";
                                                readonly typeString: "contract ILido";
                                            };
                                        };
                                        readonly id: 3598;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3456:7:30";
                                        readonly memberName: "approve";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10254;
                                        readonly src: "3451:12:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$";
                                            readonly typeString: "function (address,uint256) external returns (bool)";
                                        };
                                    };
                                    readonly id: 3604;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3451:50:30";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly id: 3605;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3451:50:30";
                            }];
                        };
                        readonly id: 3607;
                        readonly nodeType: "IfStatement";
                        readonly src: "2963:549:30";
                        readonly trueBody: {
                            readonly id: 3583;
                            readonly nodeType: "Block";
                            readonly src: "2984:180:30";
                            readonly statements: readonly [{
                                readonly condition: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 3571;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 3568;
                                            readonly name: "msg";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -15;
                                            readonly src: "3002:3:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_message";
                                                readonly typeString: "msg";
                                            };
                                        };
                                        readonly id: 3569;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3006:5:30";
                                        readonly memberName: "value";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "3002:9:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 3570;
                                        readonly name: "_contribution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3557;
                                        readonly src: "3014:13:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "3002:25:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly id: 3578;
                                readonly nodeType: "IfStatement";
                                readonly src: "2998:121:30";
                                readonly trueBody: {
                                    readonly id: 3577;
                                    readonly nodeType: "Block";
                                    readonly src: "3029:90:30";
                                    readonly statements: readonly [{
                                        readonly errorCall: {
                                            readonly arguments: readonly [];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [];
                                                readonly expression: {
                                                    readonly id: 3572;
                                                    readonly name: "IHyperdriveDeployerCoordinator";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 11350;
                                                    readonly src: "3054:30:30";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$11350_$";
                                                        readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                                    };
                                                };
                                                readonly id: 3574;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "3085:17:30";
                                                readonly memberName: "InsufficientValue";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 11267;
                                                readonly src: "3054:48:30";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                                    readonly typeString: "function () pure";
                                                };
                                            };
                                            readonly id: 3575;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "3054:50:30";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_tuple$__$";
                                                readonly typeString: "tuple()";
                                            };
                                        };
                                        readonly id: 3576;
                                        readonly nodeType: "RevertStatement";
                                        readonly src: "3047:57:30";
                                    }];
                                };
                            }, {
                                readonly expression: {
                                    readonly id: 3581;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftHandSide: {
                                        readonly id: 3579;
                                        readonly name: "value";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3564;
                                        readonly src: "3132:5:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "Assignment";
                                    readonly operator: "=";
                                    readonly rightHandSide: {
                                        readonly id: 3580;
                                        readonly name: "_contribution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3557;
                                        readonly src: "3140:13:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "3132:21:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly id: 3582;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3132:21:30";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 3608;
                            readonly name: "value";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 3564;
                            readonly src: "3529:5:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 3565;
                        readonly id: 3609;
                        readonly nodeType: "Return";
                        readonly src: "3522:12:30";
                    }];
                };
                readonly baseFunctions: readonly [859];
                readonly documentation: {
                    readonly id: 3550;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1915:641:30";
                    readonly text: "@dev Prepares the coordinator for initialization by drawing funds from\n      the LP, if necessary.\n @param _hyperdrive The Hyperdrive instance that is being initialized.\n @param _lp The LP that is initializing the pool.\n @param _contribution The amount of capital to supply. The units of this\n        quantity are either base or vault shares, depending on the value\n        of `_options.asBase`.\n @param _options The options that configure how the initialization is\n        settled.\n @return value The value that should be sent in the initialize\n         transaction.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_prepareInitialize";
                readonly nameLocation: "2570:18:30";
                readonly overrides: {
                    readonly id: 3562;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "2734:8:30";
                };
                readonly parameters: {
                    readonly id: 3561;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3553;
                        readonly mutability: "mutable";
                        readonly name: "_hyperdrive";
                        readonly nameLocation: "2610:11:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3611;
                        readonly src: "2598:23:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IHyperdrive_$11028";
                            readonly typeString: "contract IHyperdrive";
                        };
                        readonly typeName: {
                            readonly id: 3552;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3551;
                                readonly name: "IHyperdrive";
                                readonly nameLocations: readonly ["2598:11:30"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 11028;
                                readonly src: "2598:11:30";
                            };
                            readonly referencedDeclaration: 11028;
                            readonly src: "2598:11:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$11028";
                                readonly typeString: "contract IHyperdrive";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3555;
                        readonly mutability: "mutable";
                        readonly name: "_lp";
                        readonly nameLocation: "2639:3:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3611;
                        readonly src: "2631:11:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3554;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2631:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3557;
                        readonly mutability: "mutable";
                        readonly name: "_contribution";
                        readonly nameLocation: "2660:13:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3611;
                        readonly src: "2652:21:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 3556;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2652:7:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3560;
                        readonly mutability: "mutable";
                        readonly name: "_options";
                        readonly nameLocation: "2710:8:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3611;
                        readonly src: "2683:35:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Options_$10875_memory_ptr";
                            readonly typeString: "struct IHyperdrive.Options";
                        };
                        readonly typeName: {
                            readonly id: 3559;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3558;
                                readonly name: "IHyperdrive.Options";
                                readonly nameLocations: readonly ["2683:11:30", "2695:7:30"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10875;
                                readonly src: "2683:19:30";
                            };
                            readonly referencedDeclaration: 10875;
                            readonly src: "2683:19:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Options_$10875_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Options";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2588:136:30";
                };
                readonly returnParameters: {
                    readonly id: 3565;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3564;
                        readonly mutability: "mutable";
                        readonly name: "value";
                        readonly nameLocation: "2760:5:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3611;
                        readonly src: "2752:13:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 3563;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2752:7:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2751:15:30";
                };
                readonly scope: 3670;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 3617;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3598:55:30";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3616;
                    readonly nodeType: "Block";
                    readonly src: "3651:2:30";
                    readonly nodes: readonly [];
                    readonly statements: readonly [];
                };
                readonly baseFunctions: readonly [863];
                readonly documentation: {
                    readonly id: 3612;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3547:46:30";
                    readonly text: "@dev Allows the contract to receive ether.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkMessageValue";
                readonly nameLocation: "3607:18:30";
                readonly overrides: {
                    readonly id: 3614;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "3642:8:30";
                };
                readonly parameters: {
                    readonly id: 3613;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3625:2:30";
                };
                readonly returnParameters: {
                    readonly id: 3615;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3651:0:30";
                };
                readonly scope: 3670;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 3654;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3811:920:30";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3653;
                    readonly nodeType: "Block";
                    readonly src: "3925:806:30";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 3628;
                                readonly name: "_deployConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3621;
                                readonly src: "3997:13:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }];
                                readonly expression: {
                                    readonly id: 3625;
                                    readonly name: "super";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -25;
                                    readonly src: "3974:5:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_super$_StETHHyperdriveDeployerCoordinator_$3670_$";
                                        readonly typeString: "type(contract super StETHHyperdriveDeployerCoordinator)";
                                    };
                                };
                                readonly id: 3627;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3980:16:30";
                                readonly memberName: "_checkPoolConfig";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 943;
                                readonly src: "3974:22:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$10777_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory) view";
                                };
                            };
                            readonly id: 3629;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3974:37:30";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 3630;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "3974:37:30";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 3634;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 3631;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3621;
                                    readonly src: "4274:13:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 3632;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4288:20:30";
                                readonly memberName: "minimumShareReserves";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10751;
                                readonly src: "4274:34:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly hexValue: "31653135";
                                readonly id: 3633;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "4312:4:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000";
                                };
                                readonly value: "1e15";
                            };
                            readonly src: "4274:42:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3641;
                        readonly nodeType: "IfStatement";
                        readonly src: "4270:140:30";
                        readonly trueBody: {
                            readonly id: 3640;
                            readonly nodeType: "Block";
                            readonly src: "4318:92:30";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3635;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11350;
                                            readonly src: "4339:30:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$11350_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 3637;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "4370:27:30";
                                        readonly memberName: "InvalidMinimumShareReserves";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11276;
                                        readonly src: "4339:58:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3638;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4339:60:30";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3639;
                                readonly nodeType: "RevertStatement";
                                readonly src: "4332:67:30";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 3645;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 3642;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3621;
                                    readonly src: "4564:13:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 3643;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4578:24:30";
                                readonly memberName: "minimumTransactionAmount";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10754;
                                readonly src: "4564:38:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly hexValue: "31653135";
                                readonly id: 3644;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "4606:4:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000";
                                };
                                readonly value: "1e15";
                            };
                            readonly src: "4564:46:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3652;
                        readonly nodeType: "IfStatement";
                        readonly src: "4560:165:30";
                        readonly trueBody: {
                            readonly id: 3651;
                            readonly nodeType: "Block";
                            readonly src: "4612:113:30";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3646;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11350;
                                            readonly src: "4633:30:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$11350_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 3648;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "4681:31:30";
                                        readonly memberName: "InvalidMinimumTransactionAmount";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11279;
                                        readonly src: "4633:79:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3649;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4633:81:30";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3650;
                                readonly nodeType: "RevertStatement";
                                readonly src: "4626:88:30";
                            }];
                        };
                    }];
                };
                readonly baseFunctions: readonly [943];
                readonly documentation: {
                    readonly id: 3618;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3659:147:30";
                    readonly text: "@notice Checks the pool configuration to ensure that it is valid.\n @param _deployConfig The deploy configuration of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkPoolConfig";
                readonly nameLocation: "3820:16:30";
                readonly overrides: {
                    readonly id: 3623;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "3916:8:30";
                };
                readonly parameters: {
                    readonly id: 3622;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3621;
                        readonly mutability: "mutable";
                        readonly name: "_deployConfig";
                        readonly nameLocation: "3882:13:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3654;
                        readonly src: "3846:49:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 3620;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3619;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["3846:11:30", "3858:16:30"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10777;
                                readonly src: "3846:28:30";
                            };
                            readonly referencedDeclaration: 10777;
                            readonly src: "3846:28:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3836:65:30";
                };
                readonly returnParameters: {
                    readonly id: 3624;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3925:0:30";
                };
                readonly scope: 3670;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 3669;
                readonly nodeType: "FunctionDefinition";
                readonly src: "4879:233:30";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3668;
                    readonly nodeType: "Block";
                    readonly src: "5005:107:30";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 3665;
                                readonly name: "ONE";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 18628;
                                readonly src: "5101:3:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 3663;
                                    readonly name: "lido";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3517;
                                    readonly src: "5075:4:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_ILido_$11973";
                                        readonly typeString: "contract ILido";
                                    };
                                };
                                readonly id: 3664;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5080:20:30";
                                readonly memberName: "getPooledEthByShares";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 11946;
                                readonly src: "5075:25:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_view$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256) view external returns (uint256)";
                                };
                            };
                            readonly id: 3666;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5075:30:30";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 3662;
                        readonly id: 3667;
                        readonly nodeType: "Return";
                        readonly src: "5068:37:30";
                    }];
                };
                readonly baseFunctions: readonly [951];
                readonly documentation: {
                    readonly id: 3655;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "4737:137:30";
                    readonly text: "@dev Gets the initial vault share price of the Hyperdrive pool.\n @return The initial vault share price of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_getInitialVaultSharePrice";
                readonly nameLocation: "4888:26:30";
                readonly overrides: {
                    readonly id: 3659;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "4978:8:30";
                };
                readonly parameters: {
                    readonly id: 3658;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3657;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3669;
                        readonly src: "4924:12:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 3656;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4924:5:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4914:49:30";
                };
                readonly returnParameters: {
                    readonly id: 3662;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3661;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3669;
                        readonly src: "4996:7:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 3660;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4996:7:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4995:9:30";
                };
                readonly scope: 3670;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 3509;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nameLocations: readonly ["854:29:30"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 1040;
                    readonly src: "854:29:30";
                };
                readonly id: 3510;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "854:29:30";
            }];
            readonly canonicalName: "StETHHyperdriveDeployerCoordinator";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 3508;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "443:364:30";
                readonly text: "@author DELV\n @title StETHHyperdriveDeployerCoordinator\n @notice The deployer coordinator for the StETHHyperdrive implementation.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [3670, 1040, 11350];
            readonly name: "StETHHyperdriveDeployerCoordinator";
            readonly nameLocation: "816:34:30";
            readonly scope: 3671;
            readonly usedErrors: readonly [11252, 11255, 11258, 11261, 11264, 11267, 11270, 11273, 11276, 11279, 11282, 11285, 11288, 11291, 11294, 11297, 11300];
            readonly usedEvents: readonly [];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 30;
};
//# sourceMappingURL=StETHHyperdriveDeployerCoordinator.d.ts.map