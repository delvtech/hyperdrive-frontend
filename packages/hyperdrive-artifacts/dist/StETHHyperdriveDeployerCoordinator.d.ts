export declare const StETHHyperdriveDeployerCoordinator: {
    readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_factory";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_coreDeployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target0Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target1Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target2Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target3Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target4Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "contract ILido";
            readonly name: "_lido";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "HyperdriveAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "HyperdriveIsNotDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncompleteDeployment";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidBaseToken";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCheckpointDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidFeeAmounts";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumShareReserves";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumTransactionAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidPositionDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidTargetIndex";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidVaultSharesToken";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedConfig";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedExtraData";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotPayable";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SenderIsNotFactory";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TargetAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "coreDeployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "vaultSharesToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sweepCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "vaultSharesToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sweepCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_targetIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deployTarget";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }];
        readonly name: "deployments";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "configHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "extraDataHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "initialSharePrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "hyperdrive";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target0";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target1";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target2";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target3";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target4";
                readonly type: "address";
            }];
            readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "factory";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_lp";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_contribution";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_apr";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "destination";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "asBase";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraData";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IHyperdrive.Options";
            readonly name: "_options";
            readonly type: "tuple";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "lpShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lido";
        readonly outputs: readonly [{
            readonly internalType: "contract ILido";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target0Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target1Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target2Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target3Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target4Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "";
        readonly sourceMap: "860:4953:30:-:0;;;1544:546;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3938:18:0;;;;;3966:28;;;;;4004:34;;;;;4048;;;;;4092;;;;4136;;;;4180;;;;2071:12:30::1;;::::0;860:4953;;14:131:234;-1:-1:-1;;;;;89:31:234;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1209::-;298:6;306;314;322;330;338;346;354;407:3;395:9;386:7;382:23;378:33;375:53;;;424:1;421;414:12;375:53;456:9;450:16;475:31;500:5;475:31;:::i;:::-;575:2;560:18;;554:25;525:5;;-1:-1:-1;588:33:234;554:25;588:33;:::i;:::-;692:2;677:18;;671:25;640:7;;-1:-1:-1;705:33:234;671:25;705:33;:::i;:::-;809:2;794:18;;788:25;757:7;;-1:-1:-1;822:33:234;788:25;822:33;:::i;:::-;926:3;911:19;;905:26;874:7;;-1:-1:-1;940:33:234;905:26;940:33;:::i;:::-;1044:3;1029:19;;1023:26;992:7;;-1:-1:-1;1058:33:234;1023:26;1058:33;:::i;:::-;1162:3;1147:19;;1141:26;1110:7;;-1:-1:-1;1176:33:234;1141:26;1176:33;:::i;:::-;1280:3;1265:19;;1259:26;1228:7;;-1:-1:-1;1294:33:234;1259:26;1294:33;:::i;:::-;1346:7;1336:17;;;150:1209;;;;;;;;;;;:::o;:::-;860:4953:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "0x6080604052600436106100a75760003560e01c8063a085fa3011610064578063a085fa3014610290578063aa8cd6c4146102c4578063ab71905f146102f8578063b6cb11181461032c578063c45a015514610360578063c83e1f511461039457600080fd5b80630b3c4f86146100ac57806316abfc70146100e95780631ae6f5151461010a57806323509a2d1461012a578063374040171461015e578063966ecd1c1461025c575b600080fd5b3480156100b857600080fd5b506100cc6100c73660046117b3565b6103c8565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fc6100f736600461182f565b610adc565b6040519081526020016100e0565b34801561011657600080fd5b506100cc6101253660046118f4565b610c70565b34801561013657600080fd5b506100cc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561016a57600080fd5b5061024f610179366004611957565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915250600090815260208181526040918290208251610120810184528154815260018201549281019290925260028101549282019290925260038201546001600160a01b0390811660608301526004830154811660808301526005830154811660a08301526006830154811660c08301526007830154811660e083015260089092015490911661010082015290565b6040516100e09190611970565b34801561026857600080fd5b506100cc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561029c57600080fd5b506100cc7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d057600080fd5b506100cc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561030457600080fd5b506100cc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561033857600080fd5b506100cc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561036c57600080fd5b506100cc7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a057600080fd5b506100cc7f000000000000000000000000000000000000000000000000000000000000000081565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461041357604051634084351160e01b815260040160405180910390fd5b6000868152602081905260408120908490036105a85780541561044957604051633be1b34d60e11b815260040160405180910390fd5b61045286610fc7565b600061045e87876110bd565b905060008760405160200161047391906119ed565b60405160208183030381529060405280519060200120905060008780519060200120905060006104a28a611159565b9050838160800181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663195d4bfc828b8e8b6040516020016104fb929190918252602082015260400190565b604051602081830303815290604052805190602001206040518463ffffffff1660e01b815260040161052f93929190611c3b565b6020604051808303816000875af115801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190611c6f565b9285555060018401556002830191909155600490910180546001600160a01b0319166001600160a01b0383161790559050610ad3565b600087815260208190526040902054806105d55760405163398b1c0960e21b815260040160405180910390fd5b80876040516020016105e791906119ed565b604051602081830303815290604052805190602001201461061b5760405163332ee11f60e01b815260040160405180910390fd5b6001820154865160208801201461064557604051631a3272d160e31b815260040160405180910390fd5b61064e87610fc7565b600061065988611159565b600284015460808201529050600186900361077a5760058301546001600160a01b0316156106995760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663195d4bfc8289338d8a6040516020016106df93929190611c93565b604051602081830303815290604052805190602001206040518463ffffffff1660e01b815260040161071393929190611c3b565b6020604051808303816000875af1158015610732573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107569190611c6f565b6005840180546001600160a01b0319166001600160a01b0383161790559350610acf565b8560020361088e5760068301546001600160a01b0316156107ad5760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663195d4bfc8289338d8a6040516020016107f393929190611c93565b604051602081830303815290604052805190602001206040518463ffffffff1660e01b815260040161082793929190611c3b565b6020604051808303816000875af1158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a9190611c6f565b6006840180546001600160a01b0319166001600160a01b0383161790559350610acf565b856003036109a25760078301546001600160a01b0316156108c15760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663195d4bfc8289338d8a60405160200161090793929190611c93565b604051602081830303815290604052805190602001206040518463ffffffff1660e01b815260040161093b93929190611c3b565b6020604051808303816000875af115801561095a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190611c6f565b6007840180546001600160a01b0319166001600160a01b0383161790559350610acf565b85600403610ab65760088301546001600160a01b0316156109d55760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663195d4bfc8289338d8a604051602001610a1b93929190611c93565b604051602081830303815290604052805190602001206040518463ffffffff1660e01b8152600401610a4f93929190611c3b565b6020604051808303816000875af1158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a929190611c6f565b6008840180546001600160a01b0319166001600160a01b0383161790559350610acf565b604051631d9f815960e11b815260040160405180910390fd5b5050505b95945050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b2757604051634084351160e01b815260040160405180910390fd5b6000868152602081905260409020600301546001600160a01b031680610b605760405163952b05cb60e01b815260040160405180910390fd5b6000610b6e8288888761120b565b9050816001600160a01b03166377d05ff4828888886040518563ffffffff1660e01b8152600401610ba193929190611cb4565b60206040518083038185885af1158015610bbf573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610be49190611d04565b92506000610bf28234611d1d565b90508015610acf57604051600090339083908381818185875af1925050503d8060008114610c3c576040519150601f19603f3d011682016040523d82523d6000602084013e610c41565b606091505b5050905080610c63576040516312171d8360e31b815260040160405180910390fd5b5050505095945050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cbb57604051634084351160e01b815260040160405180910390fd5b600085815260208181526040918290208251610120810184528154815260018201549281019290925260028101549282019290925260038201546001600160a01b03908116606083018190526004840154821660808401526005840154821660a08401526006840154821660c08401526007840154821660e0840152600890930154166101008201529015610d6357604051632c95caeb60e01b815260040160405180910390fd5b8051610d825760405163398b1c0960e21b815260040160405180910390fd5b60808101516001600160a01b03161580610da7575060a08101516001600160a01b0316155b80610dbd575060c08101516001600160a01b0316155b80610dd3575060e08101516001600160a01b0316155b80610dea57506101008101516001600160a01b0316155b15610e085760405163e97cc2bf60e01b815260040160405180910390fd5b8051604051610e1b9087906020016119ed565b6040516020818303038152906040528051906020012014610e4f5760405163332ee11f60e01b815260040160405180910390fd5b8060200151848051906020012014610e7a57604051631a3272d160e31b815260040160405180910390fd5b610e8385610fc7565b6000610e8e86611159565b905081604001518160800181815250506000879050600085905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ed871fd7858a88608001518960a001518a60c001518b60e001518c61010001518b8b604051602001610f11929190918252602082015260400190565b604051602081830303815290604052805190602001206040518963ffffffff1660e01b8152600401610f4a989796959493929190611d3e565b6020604051808303816000875af1158015610f69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8d9190611c6f565b60008b815260208190526040902060030180546001600160a01b0319166001600160a01b038316179055955050505050505b949350505050565b610fd08161137f565b80516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461100e57604051630722152560e11b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681602001516001600160a01b0316146110645760405163073f739d60e51b815260040160405180910390fd5b806080015166038d7ea4c680001461108f576040516349db44f560e01b815260040160405180910390fd5b8060a0015166038d7ea4c68000146110ba576040516318c9522360e11b815260040160405180910390fd5b50565b604051630f451f7160e31b8152670de0b6b3a764000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637a28fb8890602401602060405180830381865afa15801561112c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111509190611d04565b90505b92915050565b611161611491565b81516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015190830152608083015160a08084019190915283015160c08084019190915283015160e08084019190915283015161010080840191909152830151610120808401919091528301518116610140808401919091528301518116610160808401919091528301511661018080830191909152909101516101a082015290565b600081602001511561123f57823410156112385760405163044044a560e21b815260040160405180910390fd5b5081610fbf565b604051636d78045960e01b81526001600160a01b038581166004830152306024830152604482018590526000917f000000000000000000000000000000000000000000000000000000000000000090911690636d780459906064016020604051808303816000875af11580156112b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112dd9190611d04565b60405163095ea7b360e01b81526001600160a01b038881166004830152602482018390529192507f00000000000000000000000000000000000000000000000000000000000000009091169063095ea7b3906044016020604051808303816000875af1158015611351573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113759190611da5565b5050949350505050565b6103e8816080015110156113a6576040516349db44f560e01b815260040160405180910390fd5b8060e001516000036113cb57604051635428734d60e01b815260040160405180910390fd5b8060e001518160c0015110806113f357508060e001518160c001516113f09190611dc2565b15155b156114115760405163253fffcf60e11b815260040160405180910390fd5b61018081015151670de0b6b3a7640000108061143d5750670de0b6b3a764000081610180015160200151115b806114585750670de0b6b3a764000081610180015160400151115b806114735750670de0b6b3a764000081610180015160600151115b156110ba576040516322f72cc360e11b815260040160405180910390fd5b604051806101c0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200161155c6040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b634e487b7160e01b600052604160045260246000fd5b6040516101a0810167ffffffffffffffff8111828210171561159b5761159b611561565b60405290565b6040516060810167ffffffffffffffff8111828210171561159b5761159b611561565b6001600160a01b03811681146110ba57600080fd5b80356115e4816115c4565b919050565b6000608082840312156115fb57600080fd5b6040516080810181811067ffffffffffffffff8211171561161e5761161e611561565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b6000610200828403121561166257600080fd5b61166a611577565b9050611675826115d9565b8152611683602083016115d9565b6020820152611694604083016115d9565b6040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101206116e58184016115d9565b908201526101406116f78382016115d9565b908201526101606117098382016115d9565b9082015261018061171c848483016115e9565b9082015292915050565b600082601f83011261173757600080fd5b813567ffffffffffffffff8082111561175257611752611561565b604051601f8301601f19908116603f0116810190828211818310171561177a5761177a611561565b8160405283815286602085880101111561179357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600061028086880312156117cc57600080fd5b853594506117dd876020880161164f565b935061022086013567ffffffffffffffff8111156117fa57600080fd5b61180688828901611726565b95989497509495610240810135955061026001359392505050565b80151581146110ba57600080fd5b600080600080600060a0868803121561184757600080fd5b853594506020860135611859816115c4565b93506040860135925060608601359150608086013567ffffffffffffffff8082111561188457600080fd5b908701906060828a03121561189857600080fd5b6118a06115a1565b82356118ab816115c4565b815260208301356118bb81611821565b60208201526040830135828111156118d257600080fd5b6118de8b828601611726565b6040830152508093505050509295509295909350565b600080600080610260858703121561190b57600080fd5b8435935061191c866020870161164f565b925061022085013567ffffffffffffffff81111561193957600080fd5b61194587828801611726565b94979396509394610240013593505050565b60006020828403121561196957600080fd5b5035919050565b8151815260208083015190820152604080830151908201526060808301516001600160a01b039081169183019190915260808084015182169083015260a08084015182169083015260c08084015182169083015260e08084015182169083015261010080840151918216818401526101208301915b505092915050565b81516001600160a01b0316815261020081016020830151611a1960208401826001600160a01b03169052565b506040830151611a3460408401826001600160a01b03169052565b50606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151611a8e828501826001600160a01b03169052565b5050610140838101516001600160a01b038116848301525050610160838101516001600160a01b0381168483015250506101808381015180518483015260208101516101a085015260408101516101c085015260608101516101e08501526119e5565b80516001600160a01b031682526020810151611b1860208401826001600160a01b03169052565b506040810151611b3360408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151818401525061012080820151818401525061014080820151611b99828501826001600160a01b03169052565b5050610160818101516001600160a01b039081169184019190915261018080830151909116908301526101a09081015180519183019190915260208101516101c083015260408101516101e08301526060015161020090910152565b6000815180845260005b81811015611c1b57602081850181015186830182015201611bff565b506000602082860101526020601f19601f83011685010191505092915050565b6000610260611c4a8387611af1565b80610220840152611c5d81840186611bf5565b91505082610240830152949350505050565b600060208284031215611c8157600080fd5b8151611c8c816115c4565b9392505050565b6001600160a01b039390931683526020830191909152604082015260600190565b8381528260208201526060604082015260018060a01b03825116606082015260208201511515608082015260006040830151606060a0840152611cfa60c0840182611bf5565b9695505050505050565b600060208284031215611d1657600080fd5b5051919050565b8181038181111561115357634e487b7160e01b600052601160045260246000fd5b6000610300611d4d838c611af1565b80610220840152611d608184018b611bf5565b6001600160a01b03998a1661024085015297891661026084015250509386166102808501529185166102a08401529093166102c08201526102e0019190915292915050565b600060208284031215611db757600080fd5b8151611c8c81611821565b600082611ddf57634e487b7160e01b600052601260045260246000fd5b50069056fea26469706673582212204355d84866be9c04381f3597bc2bc297204744674a3af23c2a0fdf0d27afa7a964736f6c63430008140033";
        readonly sourceMap: "860:4953:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8649:5837:0;;;;;;;;;;-1:-1:-1;8649:5837:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4450:32:234;;;4432:51;;4420:2;4405:18;8649:5837:0;;;;;;;;15263:1363;;;;;;:::i;:::-;;:::i;:::-;;;6001:25:234;;;5989:2;5974:18;15263:1363:0;5855:177:234;4979:2971:0;;;;;;;;;;-1:-1:-1;4979:2971:0;;;;;:::i;:::-;;:::i;1017:27:30:-;;;;;;;;;;;;;;;16780:151:0;;;;;;;;;;-1:-1:-1;16780:151:0;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16897:12:0;:27;;;;;;;;;;;;16890:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16890:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16780:151;;;;;;;;:::i;3118:40::-;;;;;;;;;;;;;;;2737;;;;;;;;;;;;;;;2991;;;;;;;;;;;;;;;2610;;;;;;;;;;;;;;;2864;;;;;;;;;;;;;;;2374:32;;;;;;;;;;;;;;;2486:37;;;;;;;;;;;;;;;8649:5837;8883:14;4359:10;-1:-1:-1;;;;;4373:7:0;4359:21;;4355:110;;4403:51;;-1:-1:-1;;;4403:51:0;;;;;;;;;;;4355:110;9150:29:::1;9182:27:::0;;;::::1;::::0;;;;;;;9223:17;;;9219:1810:::1;;9403:21:::0;;:35;9399:137:::1;;9465:56;;-1:-1:-1::0;;;9465:56:0::1;;;;;;;;;;;9399:137;9670:31;9687:13;9670:16;:31::i;:::-;9819:25;9847:99;9891:13;9922:10;9847:26;:99::i;:::-;9819:127;;9960:19;10003:13;9992:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;9982:36;;;;;;9960:58;;10032:21;10066:10;10056:21;;;;;;10032:45;;10208:37;10248:60;10281:13;10248:15;:60::i;:::-;10208:100;;10355:17;10322:7;:30;;:50;;;::::0;::::1;10466:15;-1:-1:-1::0;;;;;10440:49:0::1;;10507:7;10532:10;10710:13;10725:5;10699:32;;;;;;;;10046:25:234::0;;;10102:2;10087:18;;10080:34;10034:2;10019:18;;9872:248;10699:32:0::1;;;;;;;;;;;;;10689:43;;;;;;10440:306;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10798:35:::0;;;-1:-1:-1;10847:24:0::1;::::0;::::1;:40:::0;10901:28:::1;::::0;::::1;:48:::0;;;;10963:18:::1;::::0;;::::1;:27:::0;;-1:-1:-1;;;;;;10963:27:0::1;-1:-1:-1::0;;;;;10963:27:0;::::1;;::::0;;10798:35;-1:-1:-1;11005:13:0::1;;9219:1810;11174:18;11195:27:::0;;;::::1;::::0;;;;;;:38;;11243:117:::1;;11294:55;;-1:-1:-1::0;;;11294:55:0::1;;;;;;;;;;;11243:117;11482:10;11463:13;11452:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;11442:36;;;;;;:50;11438:137;;11515:49;;-1:-1:-1::0;;;11515:49:0::1;;;;;;;;;;;11438:137;11690:24;::::0;::::1;::::0;11665:21;;::::1;::::0;::::1;::::0;:49:::1;11661:139;;11737:52;;-1:-1:-1::0;;;11737:52:0::1;;;;;;;;;;;11661:139;12076:31;12093:13;12076:16;:31::i;:::-;12226:36;12265:30;12281:13;12265:15;:30::i;:::-;12337:28;::::0;::::1;::::0;12305:29:::1;::::0;::::1;:60:::0;12226:69;-1:-1:-1;12645:1:0::1;12629:17:::0;;;12625:1831:::1;;12666:18;::::0;::::1;::::0;-1:-1:-1;;;;;12666:18:0::1;:32:::0;12662:132:::1;;12725:54;;-1:-1:-1::0;;;12725:54:0::1;;;;;;;;;;;12662:132;12842:15;-1:-1:-1::0;;;;;12816:49:0::1;;12883:6;12907:10;12956;12968:13;12983:5;12945:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12935:55;;;;;;12816:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13018:18;::::0;::::1;:27:::0;;-1:-1:-1;;;;;;13018:27:0::1;-1:-1:-1::0;;;;;13018:27:0;::::1;;::::0;;;-1:-1:-1;12625:1831:0::1;;;13066:12;13082:1;13066:17:::0;13062:1394:::1;;13103:18;::::0;::::1;::::0;-1:-1:-1;;;;;13103:18:0::1;:32:::0;13099:132:::1;;13162:54;;-1:-1:-1::0;;;13162:54:0::1;;;;;;;;;;;13099:132;13279:15;-1:-1:-1::0;;;;;13253:49:0::1;;13320:6;13344:10;13393;13405:13;13420:5;13382:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13372:55;;;;;;13253:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13455:18;::::0;::::1;:27:::0;;-1:-1:-1;;;;;;13455:27:0::1;-1:-1:-1::0;;;;;13455:27:0;::::1;;::::0;;;-1:-1:-1;13062:1394:0::1;;;13503:12;13519:1;13503:17:::0;13499:957:::1;;13540:18;::::0;::::1;::::0;-1:-1:-1;;;;;13540:18:0::1;:32:::0;13536:132:::1;;13599:54;;-1:-1:-1::0;;;13599:54:0::1;;;;;;;;;;;13536:132;13716:15;-1:-1:-1::0;;;;;13690:49:0::1;;13757:6;13781:10;13830;13842:13;13857:5;13819:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13809:55;;;;;;13690:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13892:18;::::0;::::1;:27:::0;;-1:-1:-1;;;;;;13892:27:0::1;-1:-1:-1::0;;;;;13892:27:0;::::1;;::::0;;;-1:-1:-1;13499:957:0::1;;;13940:12;13956:1;13940:17:::0;13936:520:::1;;13977:18;::::0;::::1;::::0;-1:-1:-1;;;;;13977:18:0::1;:32:::0;13973:132:::1;;14036:54;;-1:-1:-1::0;;;14036:54:0::1;;;;;;;;;;;13973:132;14153:15;-1:-1:-1::0;;;;;14127:49:0::1;;14194:6;14218:10;14267;14279:13;14294:5;14256:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14246:55;;;;;;14127:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14329:18;::::0;::::1;:27:::0;;-1:-1:-1;;;;;;14329:27:0::1;-1:-1:-1::0;;;;;14329:27:0;::::1;;::::0;;;-1:-1:-1;13936:520:0::1;;;14394:51;;-1:-1:-1::0;;;14394:51:0::1;;;;;;;;;;;13936:520;14466:13;;;4474:1;8649:5837:::0;;;;;;;:::o;15263:1363::-;15477:16;4359:10;-1:-1:-1;;;;;4373:7:0;4359:21;;4355:110;;4403:51;;-1:-1:-1;;;4403:51:0;;;;;;;;;;;4355:110;15647:22:::1;15697:27:::0;;;::::1;::::0;;;;;;:38:::1;;::::0;-1:-1:-1;;;;;15697:38:0::1;::::0;15755:127:::1;;15815:56;;-1:-1:-1::0;;;15815:56:0::1;;;;;;;;;;;15755:127;15962:13;15978:118;16010:10;16034:3;16051:13;16078:8;15978:18;:118::i;:::-;15962:134;;16156:10;-1:-1:-1::0;;;;;16156:21:0::1;;16186:5;16207:13;16234:4;16252:8;16156:114;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16145:125:::0;-1:-1:-1;16331:14:0::1;16348:17;16360:5:::0;16348:9:::1;:17;:::i;:::-;16331:34:::0;-1:-1:-1;16379:10:0;;16375:219:::1;;16424:45;::::0;16406:12:::1;::::0;16432:10:::1;::::0;16457:6;;16406:12;16424:45;16406:12;16424:45;16457:6;16432:10;16424:45:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16405:64;;;16488:7;16483:101;;16522:47;;-1:-1:-1::0;;;16522:47:0::1;;;;;;;;;;;16483:101;16391:203;16604:15;;;15263:1363:::0;;;;;;;:::o;4979:2971::-;5177:7;4359:10;-1:-1:-1;;;;;4373:7:0;4359:21;;4355:110;;4403:51;;-1:-1:-1;;;4403:51:0;;;;;;;;;;;4355:110;5276:28:::1;5307:27:::0;;;::::1;::::0;;;;;;;;5276:58;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;5276:58:0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;;::::0;;;;5348:35;5344:131:::1;;5406:58;;-1:-1:-1::0;;;5406:58:0::1;;;;;;;;;;;5344:131;5624:21:::0;;5620:128:::1;;5682:55;;-1:-1:-1::0;;;5682:55:0::1;;;;;;;;;;;5620:128;5837:18;::::0;::::1;::::0;-1:-1:-1;;;;;5837:32:0::1;::::0;;:80:::1;;-1:-1:-1::0;5885:18:0::1;::::0;::::1;::::0;-1:-1:-1;;;;;5885:32:0::1;::::0;5837:80:::1;:128;;;-1:-1:-1::0;5933:18:0::1;::::0;::::1;::::0;-1:-1:-1;;;;;5933:32:0::1;::::0;5837:128:::1;:176;;;-1:-1:-1::0;5981:18:0::1;::::0;::::1;::::0;-1:-1:-1;;;;;5981:32:0::1;::::0;5837:176:::1;:224;;;-1:-1:-1::0;6029:18:0::1;::::0;::::1;::::0;-1:-1:-1;;;;;6029:32:0::1;::::0;5837:224:::1;5820:337;;;6093:53;;-1:-1:-1::0;;;6093:53:0::1;;;;;;;;;;;5820:337;6279:21:::0;;6249:25:::1;::::0;::::1;::::0;6260:13;;6249:25:::1;;;:::i;:::-;;;;;;;;;;;;;6239:36;;;;;;:61;6235:148;;6323:49;;-1:-1:-1::0;;;6323:49:0::1;;;;;;;;;;;6235:148;6498:10;:24;;;6483:10;6473:21;;;;;;:49;6469:139;;6545:52;;-1:-1:-1::0;;;6545:52:0::1;;;;;;;;;;;6469:139;6884:31;6901:13;6884:16;:31::i;:::-;7034:36;7073:30;7089:13;7073:15;:30::i;:::-;7034:69;;7145:10;:28;;;7113:6;:29;;:60;;;::::0;::::1;7263:20;7286:13;7263:36;;7339:12;7354:5;7339:20;;7399:18;7444:12;-1:-1:-1::0;;;;;7420:44:0::1;;7478:6;7498:10;7522;:18;;;7554:10;:18;;;7586:10;:18;;;7618:10;:18;;;7650:10;:18;;;7824:12;7838:4;7813:30;;;;;;;;10046:25:234::0;;;10102:2;10087:18;;10080:34;10034:2;10019:18;;9872:248;7813:30:0::1;;;;;;;;;;;;;7803:41;;;;;;7420:434;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7864:12;:27:::0;;;::::1;::::0;;;;;;:38:::1;;:51:::0;;-1:-1:-1;;;;;;7864:51:0::1;-1:-1:-1::0;;;;;7864:51:0;::::1;;::::0;;;-1:-1:-1;;;;;;4474:1:0::1;4979:2971:::0;;;;;;:::o;3992:1364:30:-;4155:37;4178:13;4155:22;:37::i;:::-;4285:23;;-1:-1:-1;;;;;4277:39:30;129:42:120;4277:39:30;4273:126;;4339:49;;-1:-1:-1;;;4339:49:30;;;;;;;;;;;4273:126;4542:4;-1:-1:-1;;;;;4491:56:30;4499:13;:30;;;-1:-1:-1;;;;;4491:56:30;;4487:150;;4570:56;;-1:-1:-1;;;4570:56:30;;;;;;;;;;;4487:150;4899:13;:34;;;4937:4;4899:42;4895:140;;4964:60;;-1:-1:-1;;;4964:60:30;;;;;;;;;;;4895:140;5189:13;:38;;;5231:4;5189:46;5185:165;;5258:81;;-1:-1:-1;;;5258:81:30;;;;;;;;;;;5185:165;3992:1364;:::o;5504:307::-;5774:30;;-1:-1:-1;;;5774:30:30;;193:4:122;5774:30:30;;;6001:25:234;5695:7:30;;5774:4;-1:-1:-1;;;;;5774:25:30;;;;5974:18:234;;5774:30:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5767:37;;5504:307;;;;;:::o;20051:1056:0:-;20164:37;;:::i;:::-;20300:23;;-1:-1:-1;;;;;20280:43:0;;;;;20360:30;;;;;20333:57;;:24;;;:57;20424:27;;;;;20400:51;;:21;;;:51;20486:28;;;;;20461:22;;;:53;20555:34;;;;20524:28;;;;:65;;;;20634:51;;;20599:32;;;;:86;;;;20722:30;;;20695:24;;;;:57;;;;20791:32;;;20762:26;;;;:61;;;;20855:25;;;20833:19;;;;:47;;;;20911:24;;;20890:45;;:18;;;;:45;;;;20968:26;;;20945:49;;:20;;;;:49;;;;21029:28;;;21004:53;:22;;;;:53;;;;21082:18;;;;21067:12;;;:33;20280:7;20051:1056::o;2742:980:30:-;2933:13;3148:8;:15;;;3144:549;;;3195:13;3183:9;:25;3179:121;;;3235:50;;-1:-1:-1;;;3235:50:30;;;;;;;;;;;3179:121;-1:-1:-1;3321:13:30;3144:549;;;3498:120;;-1:-1:-1;;;3498:120:30;;-1:-1:-1;;;;;15388:15:234;;;3498:120:30;;;15370:34:234;3568:4:30;15420:18:234;;;15413:43;15472:18;;;15465:34;;;3473:22:30;;3498:4;:23;;;;;;15305:18:234;;3498:120:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3632:50;;-1:-1:-1;;;3632:50:30;;-1:-1:-1;;;;;15702:32:234;;;3632:50:30;;;15684:51:234;15751:18;;;15744:34;;;3473:145:30;;-1:-1:-1;3632:4:30;:12;;;;;;15657:18:234;;3632:50:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3459:234;2742:980;;;;;;:::o;18150:1191:0:-;18451:3;18414:13;:34;;;:40;18410:138;;;18477:60;;-1:-1:-1;;;18477:60:0;;;;;;;;;;;18410:138;18562:13;:32;;;18598:1;18562:37;18558:133;;18622:58;;-1:-1:-1;;;18622:58:0;;;;;;;;;;;18558:133;18750:13;:32;;;18717:13;:30;;;:65;:163;;;;18831:13;:32;;;18798:13;:30;;;:65;;;;:::i;:::-;:82;;18717:163;18700:279;;;18912:56;;-1:-1:-1;;;18912:56:0;;;;;;;;;;;18700:279;19057:18;;;;:24;193:4:122;-1:-1:-1;19057:30:0;:75;;;193:4:122;19103:13:0;:18;;;:23;;;:29;19057:75;:128;;;;193:4:122;19148:13:0;:18;;;:31;;;:37;19057:128;:185;;;;193:4:122;19201:13:0;:18;;;:35;;;:41;19057:185;19040:295;;;19274:50;;-1:-1:-1;;;19274:50:0;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:234:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;213:2;207:9;255:6;243:19;;292:18;277:34;;313:22;;;274:62;271:88;;;339:18;;:::i;:::-;375:2;368:22;146:250;:::o;401:251::-;473:2;467:9;515:2;503:15;;548:18;533:34;;569:22;;;530:62;527:88;;;595:18;;:::i;657:139::-;-1:-1:-1;;;;;740:31:234;;730:42;;720:70;;786:1;783;776:12;801:150;877:20;;906:39;877:20;906:39;:::i;:::-;801:150;;;:::o;956:601::-;1007:5;1055:4;1043:9;1038:3;1034:19;1030:30;1027:50;;;1073:1;1070;1063:12;1027:50;1106:2;1100:9;1148:4;1140:6;1136:17;1219:6;1207:10;1204:22;1183:18;1171:10;1168:34;1165:62;1162:88;;;1230:18;;:::i;:::-;1270:10;1266:2;1259:22;;1299:6;1290:15;;1342:9;1329:23;1321:6;1314:39;1414:2;1403:9;1399:18;1386:32;1381:2;1373:6;1369:15;1362:57;1480:2;1469:9;1465:18;1452:32;1447:2;1439:6;1435:15;1428:57;1546:2;1535:9;1531:18;1518:32;1513:2;1505:6;1501:15;1494:57;;956:601;;;;:::o;1562:1220::-;1625:5;1673:6;1661:9;1656:3;1652:19;1648:32;1645:52;;;1693:1;1690;1683:12;1645:52;1715:17;;:::i;:::-;1706:26;;1755:37;1782:9;1755:37;:::i;:::-;1748:5;1741:52;1825:46;1867:2;1856:9;1852:18;1825:46;:::i;:::-;1820:2;1813:5;1809:14;1802:70;1904:46;1946:2;1935:9;1931:18;1904:46;:::i;:::-;1899:2;1892:5;1888:14;1881:70;2011:2;2000:9;1996:18;1983:32;1978:2;1971:5;1967:14;1960:56;2077:3;2066:9;2062:19;2049:33;2043:3;2036:5;2032:15;2025:58;2144:3;2133:9;2129:19;2116:33;2110:3;2103:5;2099:15;2092:58;2211:3;2200:9;2196:19;2183:33;2177:3;2170:5;2166:15;2159:58;2278:3;2267:9;2263:19;2250:33;2244:3;2237:5;2233:15;2226:58;2303:3;2366:2;2355:9;2351:18;2338:32;2333:2;2326:5;2322:14;2315:56;;2390:3;2425:46;2467:2;2456:9;2452:18;2425:46;:::i;:::-;2409:14;;;2402:70;2491:3;2526:46;2553:18;;;2526:46;:::i;:::-;2510:14;;;2503:70;2592:3;2627:46;2654:18;;;2627:46;:::i;:::-;2611:14;;;2604:70;2693:3;2728:47;2771:3;2751:18;;;2728:47;:::i;:::-;2712:14;;;2705:71;2716:5;1562:1220;-1:-1:-1;;1562:1220:234:o;2787:718::-;2829:5;2882:3;2875:4;2867:6;2863:17;2859:27;2849:55;;2900:1;2897;2890:12;2849:55;2936:6;2923:20;2962:18;2999:2;2995;2992:10;2989:36;;;3005:18;;:::i;:::-;3080:2;3074:9;3048:2;3134:13;;-1:-1:-1;;3130:22:234;;;3154:2;3126:31;3122:40;3110:53;;;3178:18;;;3198:22;;;3175:46;3172:72;;;3224:18;;:::i;:::-;3264:10;3260:2;3253:22;3299:2;3291:6;3284:18;3345:3;3338:4;3333:2;3325:6;3321:15;3317:26;3314:35;3311:55;;;3362:1;3359;3352:12;3311:55;3426:2;3419:4;3411:6;3407:17;3400:4;3392:6;3388:17;3375:54;3473:1;3466:4;3461:2;3453:6;3449:15;3445:26;3438:37;3493:6;3484:15;;;;;;2787:718;;;;:::o;3510:662::-;3649:6;3657;3665;3673;3681;3734:3;3722:9;3713:7;3709:23;3705:33;3702:53;;;3751:1;3748;3741:12;3702:53;3787:9;3774:23;3764:33;;3816:63;3871:7;3866:2;3855:9;3851:18;3816:63;:::i;:::-;3806:73;;3930:3;3919:9;3915:19;3902:33;3958:18;3950:6;3947:30;3944:50;;;3990:1;3987;3980:12;3944:50;4013:49;4054:7;4045:6;4034:9;4030:22;4013:49;:::i;:::-;3510:662;;;;-1:-1:-1;4003:59:234;;4109:3;4094:19;;4081:33;;-1:-1:-1;4161:3:234;4146:19;4133:33;;3510:662;-1:-1:-1;;;3510:662:234:o;4494:118::-;4580:5;4573:13;4566:21;4559:5;4556:32;4546:60;;4602:1;4599;4592:12;4617:1233;4738:6;4746;4754;4762;4770;4823:3;4811:9;4802:7;4798:23;4794:33;4791:53;;;4840:1;4837;4830:12;4791:53;4876:9;4863:23;4853:33;;4936:2;4925:9;4921:18;4908:32;4949:39;4982:5;4949:39;:::i;:::-;5007:5;-1:-1:-1;5059:2:234;5044:18;;5031:32;;-1:-1:-1;5110:2:234;5095:18;;5082:32;;-1:-1:-1;5165:3:234;5150:19;;5137:33;5189:18;5219:14;;;5216:34;;;5246:1;5243;5236:12;5216:34;5269:22;;;;5325:2;5307:16;;;5303:25;5300:45;;;5341:1;5338;5331:12;5300:45;5369:22;;:::i;:::-;5428:2;5415:16;5440:41;5473:7;5440:41;:::i;:::-;5490:24;;5559:2;5551:11;;5538:25;5572:30;5538:25;5572:30;:::i;:::-;5631:2;5618:16;;5611:33;5690:2;5682:11;;5669:25;5706:16;;;5703:36;;;5735:1;5732;5725:12;5703:36;5773:44;5809:7;5798:8;5794:2;5790:17;5773:44;:::i;:::-;5768:2;5759:7;5755:16;5748:70;;5837:7;5827:17;;;;;4617:1233;;;;;;;;:::o;6037:593::-;6167:6;6175;6183;6191;6244:3;6232:9;6223:7;6219:23;6215:33;6212:53;;;6261:1;6258;6251:12;6212:53;6297:9;6284:23;6274:33;;6326:63;6381:7;6376:2;6365:9;6361:18;6326:63;:::i;:::-;6316:73;;6440:3;6429:9;6425:19;6412:33;6468:18;6460:6;6457:30;6454:50;;;6500:1;6497;6490:12;6454:50;6523:49;6564:7;6555:6;6544:9;6540:22;6523:49;:::i;:::-;6037:593;;;;-1:-1:-1;6513:59:234;;6619:3;6604:19;6591:33;;-1:-1:-1;;;6037:593:234:o;6858:180::-;6917:6;6970:2;6958:9;6949:7;6945:23;6941:32;6938:52;;;6986:1;6983;6976:12;6938:52;-1:-1:-1;7009:23:234;;6858:180;-1:-1:-1;6858:180:234:o;7043:1087::-;7260:13;;7242:32;;7330:4;7318:17;;;7312:24;7290:20;;;7283:54;7393:4;7381:17;;;7375:24;7353:20;;;7346:54;7447:4;7435:17;;;7429:24;-1:-1:-1;;;;;7529:21:234;;;7507:20;;;7500:51;;;;7611:4;7599:17;;;7593:24;7589:33;;7567:20;;;7560:63;7480:3;7660:17;;;7654:24;4243:31;;7722:20;;;4231:44;7792:4;7780:17;;;7774:24;4243:31;;7842:20;;;4231:44;7912:4;7900:17;;;7894:24;4243:31;;7962:20;;;4231:44;8002:6;8045:15;;;8039:22;4243:31;;;8105:18;;;4231:44;7229:3;7214:19;;;8070:54;;;7043:1087;;;;:::o;8397:1470::-;8633:13;;-1:-1:-1;;;;;4243:31:234;4231:44;;8601:3;8586:19;;8705:4;8697:6;8693:17;8687:24;8720:54;8768:4;8757:9;8753:20;8739:12;-1:-1:-1;;;;;4243:31:234;4231:44;;4177:104;8720:54;;8823:4;8815:6;8811:17;8805:24;8838:56;8888:4;8877:9;8873:20;8857:14;-1:-1:-1;;;;;4243:31:234;4231:44;;4177:104;8838:56;;8950:4;8942:6;8938:17;8932:24;8925:4;8914:9;8910:20;8903:54;9013:4;9005:6;9001:17;8995:24;8988:4;8977:9;8973:20;8966:54;9076:4;9068:6;9064:17;9058:24;9051:4;9040:9;9036:20;9029:54;9139:4;9131:6;9127:17;9121:24;9114:4;9103:9;9099:20;9092:54;9202:4;9194:6;9190:17;9184:24;9177:4;9166:9;9162:20;9155:54;9228:6;9288:2;9280:6;9276:15;9270:22;9265:2;9254:9;9250:18;9243:50;;9312:6;9367:2;9359:6;9355:15;9349:22;9380:54;9430:2;9419:9;9415:18;9399:14;-1:-1:-1;;;;;4243:31:234;4231:44;;4177:104;9380:54;-1:-1:-1;;9453:6:234;9496:15;;;9490:22;-1:-1:-1;;;;;4243:31:234;;9556:18;;;4231:44;-1:-1:-1;;9594:6:234;9637:15;;;9631:22;-1:-1:-1;;;;;4243:31:234;;9697:18;;;4231:44;-1:-1:-1;;9735:6:234;9778:15;;;9772:22;8205:12;;9842:18;;;8193:25;8267:4;8256:16;;8250:23;8234:14;;;8227:47;8323:4;8312:16;;8306:23;8290:14;;;8283:47;8379:4;8368:16;;8362:23;8346:14;;;8339:47;9803:58;8135:257;10125:1303;10208:12;;-1:-1:-1;;;;;4243:31:234;4231:44;;10272:4;10265:5;10261:16;10255:23;10287:48;10329:4;10324:3;10320:14;10306:12;-1:-1:-1;;;;;4243:31:234;4231:44;;4177:104;10287:48;;10383:4;10376:5;10372:16;10366:23;10398:50;10442:4;10437:3;10433:14;10417;-1:-1:-1;;;;;4243:31:234;4231:44;;4177:104;10398:50;;10497:4;10490:5;10486:16;10480:23;10473:4;10468:3;10464:14;10457:47;10553:4;10546:5;10542:16;10536:23;10529:4;10524:3;10520:14;10513:47;10609:4;10602:5;10598:16;10592:23;10585:4;10580:3;10576:14;10569:47;10665:4;10658:5;10654:16;10648:23;10641:4;10636:3;10632:14;10625:47;10721:4;10714:5;10710:16;10704:23;10697:4;10692:3;10688:14;10681:47;10747:6;10800:2;10793:5;10789:14;10783:21;10778:2;10773:3;10769:12;10762:43;;10824:6;10877:2;10870:5;10866:14;10860:21;10855:2;10850:3;10846:12;10839:43;;10901:6;10955:2;10948:5;10944:14;10938:21;10968:48;11012:2;11007:3;11003:12;10987:14;-1:-1:-1;;;;;4243:31:234;4231:44;;4177:104;10968:48;-1:-1:-1;;11035:6:234;11078:14;;;11072:21;-1:-1:-1;;;;;4243:31:234;;;11137:12;;;4231:44;;;;11169:6;11212:14;;;11206:21;4243:31;;;11271:12;;;4231:44;11303:6;11346:14;;;11340:21;8205:12;;11409;;;8193:25;;;;8267:4;8256:16;;8250:23;8234:14;;;8227:47;8323:4;8312:16;;8306:23;8290:14;;;8283:47;8379:4;8368:16;8362:23;8346:14;;;;8339:47;10125:1303::o;11433:422::-;11474:3;11512:5;11506:12;11539:6;11534:3;11527:19;11564:1;11574:162;11588:6;11585:1;11582:13;11574:162;;;11650:4;11706:13;;;11702:22;;11696:29;11678:11;;;11674:20;;11667:59;11603:12;11574:162;;;11578:3;11781:1;11774:4;11765:6;11760:3;11756:16;11752:27;11745:38;11844:4;11837:2;11833:7;11828:2;11820:6;11816:15;11812:29;11807:3;11803:39;11799:50;11792:57;;;11433:422;;;;:::o;11860:463::-;12084:4;12113:3;12125:47;12162:9;12154:6;12125:47;:::i;:::-;12209:2;12203:3;12192:9;12188:19;12181:31;12229:44;12269:2;12258:9;12254:18;12246:6;12229:44;:::i;:::-;12221:52;;;12310:6;12304:3;12293:9;12289:19;12282:35;11860:463;;;;;;:::o;12328:259::-;12398:6;12451:2;12439:9;12430:7;12426:23;12422:32;12419:52;;;12467:1;12464;12457:12;12419:52;12499:9;12493:16;12518:39;12551:5;12518:39;:::i;:::-;12576:5;12328:259;-1:-1:-1;;;12328:259:234:o;12592:345::-;-1:-1:-1;;;;;12812:32:234;;;;12794:51;;12876:2;12861:18;;12854:34;;;;12919:2;12904:18;;12897:34;12782:2;12767:18;;12592:345::o;12942:643::-;13179:6;13168:9;13161:25;13222:6;13217:2;13206:9;13202:18;13195:34;13265:2;13260;13249:9;13245:18;13238:30;13340:1;13336;13331:3;13327:11;13323:19;13314:6;13308:13;13304:39;13299:2;13288:9;13284:18;13277:67;13413:2;13405:6;13401:15;13395:22;13388:30;13381:38;13375:3;13364:9;13360:19;13353:67;13142:4;13467:2;13459:6;13455:15;13449:22;13508:2;13502:3;13491:9;13487:19;13480:31;13528:51;13574:3;13563:9;13559:19;13545:12;13528:51;:::i;:::-;13520:59;12942:643;-1:-1:-1;;;;;;12942:643:234:o;13590:184::-;13660:6;13713:2;13701:9;13692:7;13688:23;13684:32;13681:52;;;13729:1;13726;13719:12;13681:52;-1:-1:-1;13752:16:234;;13590:184;-1:-1:-1;13590:184:234:o;13779:225::-;13846:9;;;13867:11;;;13864:134;;;13920:10;13915:3;13911:20;13908:1;13901:31;13955:4;13952:1;13945:15;13983:4;13980:1;13973:15;14219:906;14583:4;14612:3;14624:47;14661:9;14653:6;14624:47;:::i;:::-;14708:2;14702:3;14691:9;14687:19;14680:31;14728:44;14768:2;14757:9;14753:18;14745:6;14728:44;:::i;:::-;-1:-1:-1;;;;;14847:15:234;;;14841:3;14826:19;;14819:44;14900:15;;;14894:3;14879:19;;14872:44;-1:-1:-1;;14953:15:234;;;14947:3;14932:19;;14925:44;15006:15;;;15000:3;14985:19;;14978:44;15059:15;;;15053:3;15038:19;;15031:44;15106:3;15091:19;15084:35;;;;14720:52;14219:906;-1:-1:-1;;14219:906:234:o;15789:245::-;15856:6;15909:2;15897:9;15888:7;15884:23;15880:32;15877:52;;;15925:1;15922;15915:12;15877:52;15957:9;15951:16;15976:28;15998:5;15976:28;:::i;16039:209::-;16071:1;16097;16087:132;;16141:10;16136:3;16132:20;16129:1;16122:31;16176:4;16173:1;16166:15;16204:4;16201:1;16194:15;16087:132;-1:-1:-1;16233:9:234;;16039:209::o";
        readonly linkReferences: {};
        readonly immutableReferences: {
            readonly "3348": readonly [{
                readonly start: 316;
                readonly length: 32;
            }, {
                readonly start: 4112;
                readonly length: 32;
            }, {
                readonly start: 4317;
                readonly length: 32;
            }, {
                readonly start: 4718;
                readonly length: 32;
            }, {
                readonly start: 4870;
                readonly length: 32;
            }];
            readonly "45": readonly [{
                readonly start: 882;
                readonly length: 32;
            }, {
                readonly start: 981;
                readonly length: 32;
            }, {
                readonly start: 2793;
                readonly length: 32;
            }, {
                readonly start: 3197;
                readonly length: 32;
            }];
            readonly "48": readonly [{
                readonly start: 934;
                readonly length: 32;
            }, {
                readonly start: 3756;
                readonly length: 32;
            }];
            readonly "51": readonly [{
                readonly start: 778;
                readonly length: 32;
            }, {
                readonly start: 1200;
                readonly length: 32;
            }];
            readonly "54": readonly [{
                readonly start: 674;
                readonly length: 32;
            }, {
                readonly start: 1691;
                readonly length: 32;
            }];
            readonly "57": readonly [{
                readonly start: 830;
                readonly length: 32;
            }, {
                readonly start: 1967;
                readonly length: 32;
            }];
            readonly "60": readonly [{
                readonly start: 726;
                readonly length: 32;
            }, {
                readonly start: 2243;
                readonly length: 32;
            }];
            readonly "63": readonly [{
                readonly start: 622;
                readonly length: 32;
            }, {
                readonly start: 2519;
                readonly length: 32;
            }];
        };
    };
    readonly methodIdentifiers: {
        readonly "coreDeployer()": "c83e1f51";
        readonly "deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": "1ae6f515";
        readonly "deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": "0b3c4f86";
        readonly "deployments(bytes32)": "37404017";
        readonly "factory()": "c45a0155";
        readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": "16abfc70";
        readonly "lido()": "23509a2d";
        readonly "target0Deployer()": "ab71905f";
        readonly "target1Deployer()": "a085fa30";
        readonly "target2Deployer()": "b6cb1118";
        readonly "target3Deployer()": "aa8cd6c4";
        readonly "target4Deployer()": "966ecd1c";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_coreDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target0Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target1Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target2Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target3Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target4Deployer\",\"type\":\"address\"},{\"internalType\":\"contract ILido\",\"name\":\"_lido\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeploymentAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveIsNotDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBaseToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumTransactionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTargetIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultSharesToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SenderIsNotFactory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"coreDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"vaultSharesToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"vaultSharesToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"}],\"name\":\"deployments\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"configHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"extraDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hyperdrive\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target4\",\"type\":\"address\"}],\"internalType\":\"struct HyperdriveDeployerCoordinator.Deployment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpShares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lido\",\"outputs\":[{\"internalType\":\"contract ILido\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target0Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target1Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target2Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target3Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target4Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_coreDeployer\":\"The core deployer.\",\"_factory\":\"The factory that this deployer will be registered with.\",\"_lido\":\"The Lido contract.\",\"_target0Deployer\":\"The target0 deployer.\",\"_target1Deployer\":\"The target1 deployer.\",\"_target2Deployer\":\"The target2 deployer.\",\"_target3Deployer\":\"The target3 deployer.\",\"_target4Deployer\":\"The target4 deployer.\"}},\"deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"details\":\"This can only be deployed by the associated factory.\",\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy Hyperdrive.\"},\"returns\":{\"_0\":\"The address of the newly deployed Hyperdrive instance.\"}},\"deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"details\":\"This can only be deployed by the associated factory.As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.\",\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy the target.\",\"_targetIndex\":\"The index of the target to deploy.\"},\"returns\":{\"target\":\"The address of the newly deployed target instance.\"}},\"deployments(bytes32)\":{\"params\":{\"_deploymentId\":\"The deployment ID.\"},\"returns\":{\"_0\":\"The deployment.\"}},\"initialize(bytes32,address,uint256,uint256,(address,bool,bytes))\":{\"details\":\"This can only be deployed by the associated factory.This function utilizes several helper functions that provide      flexibility to implementations.\",\"params\":{\"_apr\":\"The target APR.\",\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_deploymentId\":\"The ID of the deployment.\",\"_lp\":\"The LP that is initializing the pool.\",\"_options\":\"The options that configure how the initialization is        settled.\"},\"returns\":{\"lpShares\":\"The initial number of LP shares created.\"}}},\"title\":\"StETHHyperdriveDeployerCoordinator\",\"version\":1},\"userdoc\":{\"errors\":{\"DeploymentAlreadyExists()\":[{\"notice\":\"Thrown when a user attempts to deploy target0 the deployment has         already been created.\"}],\"DeploymentDoesNotExist()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract that requires         the deployment to be created and the deployment doesn't exist.\"}],\"HyperdriveAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a hyperdrive contract         after it has already been deployed.\"}],\"HyperdriveIsNotDeployed()\":[{\"notice\":\"Thrown when a user attempts to initialize a hyperdrive contract         before is has been deployed.\"}],\"IncompleteDeployment()\":[{\"notice\":\"Thrown when a user attempts to deploy a Hyperdrive entrypoint         without first deploying the required targets.\"}],\"InsufficientValue()\":[{\"notice\":\"Thrown when a deployer provides an insufficient amount of base         to initialize a payable Hyperdrive instance.\"}],\"InvalidBaseToken()\":[{\"notice\":\"Thrown when the base token isn't valid. Each instance will have         different criteria for what constitutes a valid base token.\"}],\"InvalidCheckpointDuration()\":[{\"notice\":\"Thrown when the checkpoint duration specified is zero.\"}],\"InvalidFeeAmounts()\":[{\"notice\":\"Thrown when the curve fee, flat fee, governance LP fee, or         governance zombie fee is greater than 100%.\"}],\"InvalidMinimumShareReserves()\":[{\"notice\":\"Thrown when the minimum share reserves is too small. The         absolute smallest allowable minimum share reserves is 1e3;         however, yield sources may require a larger minimum share         reserves.\"}],\"InvalidMinimumTransactionAmount()\":[{\"notice\":\"Thrown when the minimum transaction amount is too small.\"}],\"InvalidPositionDuration()\":[{\"notice\":\"Thrown when the position duration is smaller than the checkpoint         duration or is not a multiple of the checkpoint duration.\"}],\"InvalidTargetIndex()\":[{\"notice\":\"Thrown when a user attempts to deploy a target using a target         index that is outside of the accepted range.\"}],\"InvalidVaultSharesToken()\":[{\"notice\":\"Thrown when the vault shares token isn't valid. Each instance         will have different criteria for what constitutes a valid base         token.\"}],\"MismatchedConfig()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with a config that doesn't match the deployment's         config hash.\"}],\"MismatchedExtraData()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with extra data that doesn't match the deployment's         extra data hash.\"}],\"NotPayable()\":[{\"notice\":\"Thrown when ether is sent to an instance that doesn't accept         ether as a deposit asset.\"}],\"SenderIsNotFactory()\":[{\"notice\":\"Thrown when the sender of a `deploy`, `deployTarget`, or         `initialize` transaction isn't the associated factory.\"}],\"TargetAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a target contract after         it has already been deployed.\"}],\"TransferFailed()\":[{\"notice\":\"Thrown when an ether transfer fails.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates the deployer coordinator.\"},\"coreDeployer()\":{\"notice\":\"The contract used to deploy new instances of Hyperdrive.\"},\"deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"},\"deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"notice\":\"Deploys a Hyperdrive target instance with the given parameters.\"},\"deployments(bytes32)\":{\"notice\":\"Gets the deployment specified by the deployment ID.\"},\"factory()\":{\"notice\":\"The factory that this deployer will be registered with.\"},\"initialize(bytes32,address,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Initializes a pool that was deployed by this coordinator.\"},\"lido()\":{\"notice\":\"The Lido contract.\"},\"target0Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget0.\"},\"target1Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget1.\"},\"target2Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget2.\"},\"target3Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget3.\"},\"target4Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget4.\"}},\"notice\":\"The deployer coordinator for the StETHHyperdrive implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol\":\"StETHHyperdriveDeployerCoordinator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/HyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xa808014ce91bfbe6e112f7ad34c35a0a6b127fc8d9c86f285e0e85db2887d08a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://85951b911bd00eb9ba8595b8aa822ca165b7ea6ba7059461c7e55466cc8996b9\",\"dweb:/ipfs/Qmdh8MTn2oHYgGhmftdg6KDZGpUcuoWM7QWW8e9pSFjNn3\"]},\"contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0x5b867788f4a34ec312817e9d81ebc6e91f26509a5fa03082f1d7e3a470d88b4e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a836f20a1c2e84a5d9ab80583ca5e274ff1f6f29bb69dd38c73c9d86f818d29\",\"dweb:/ipfs/QmV9gWh5AW9wxrUxxByg4RJUeSaRAUsZHezTtxWxQfX87K\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x8b726cbf87e5dbec80207d47b64bb20e35a9fb42667b9d1612a87ad8b2d361b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b2015112addc7b4ba33c0626a14c963294164906afce52296f3dc209737a7339\",\"dweb:/ipfs/QmZYR6qwGspufCtiofdvYbaHhxSrguNnP52rd3y3zXWiDz\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0xa48349cf2fcd27ce3aafcffeba25647d289e17653dc1a4e643c3de0b47e5c75f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4dee6d2061cc68e3bc52acfa0d35c973785e49170f49d2e09efd50ead85e2a19\",\"dweb:/ipfs/QmX6tpGgXTnVGt1CdD796N5kn8YrZWFX1FcRLqtBBhB5qk\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b\",\"dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU\"]},\"contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xe7bf783c896c0c519f4872a4f21d9279d9913a7dc124dd9c1b7d2ffd7c5e61cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d0f7bc4f5cccaea086cee416479d0a7aaf919220a92b9fb74cca7fdcfb58d58\",\"dweb:/ipfs/QmPhKYBLix7tiEPq32mVNmFJkkzeTSt2qGQA7LWh8DM3Ru\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://338a9f960049c37d13b6e23e5bc2c9e6005366aa99c95168f57f170ef2a4bcfa\",\"dweb:/ipfs/QmaeAwacrvMgJGqrKDSXZkYNYRJ5FvirYFpY3xjbCbJTF9\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0xfbe341a751b577daa735f836ae9e213b23fffecfb1b7512e4faf3d7807f5b045\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://78ba0c247e48f642f44c30d7771bd752a5fe8bd4a6c10f849f1ad66804149c86\",\"dweb:/ipfs/QmXtSLfErEvA8wqMzXDdqNU9TRMVVgoMibmFSDRJCypi6j\"]},\"contracts/src/interfaces/IHyperdriveTargetDeployer.sol\":{\"keccak256\":\"0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed\",\"dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss\"]},\"contracts/src/interfaces/ILido.sol\":{\"keccak256\":\"0x4e281fcc11a2512234c3ca7fb3dd00708bfb78cea39a7cbd911f2a70812925e6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8db577a2a335ebc7011a7e413abd0a78010e85b1573a26218999e335280f3ba3\",\"dweb:/ipfs/QmQrjdiCvNUjDvEHyHH2Wmo8zRN7H3LLRuvrdftP7pc5kE\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/libraries/Constants.sol\":{\"keccak256\":\"0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418\",\"dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x44e018888d5a9fe0c3e44d9d814879d8f0c3adb78154edc98ba07da86b976f5a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e3990bc86aaa8b4eb4b948ed3a26f0b018f1422c6470a00d146aa69e599a90d\",\"dweb:/ipfs/QmWg9hKoQK1po8ZxRC4xrSWePtoJhgndkHXmwLCpCtwAUu\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xa15878749f26b198b59e039cf814143b141698064d341cd8b88cb4a04491551c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b3fdd810b779630fce33fa7d2bfc17d6cca1bd3d646e5c702d09fd277167fde4\",\"dweb:/ipfs/QmW8C19uY5WLkVQfqFRsSU5NtuQDgoqt4jBoMhvuJ7kMn2\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_factory";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_coreDeployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target0Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target1Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target2Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target3Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target4Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "contract ILido";
                    readonly name: "_lido";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentAlreadyExists";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentDoesNotExist";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveIsNotDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "IncompleteDeployment";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InsufficientValue";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidBaseToken";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFeeAmounts";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumShareReserves";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumTransactionAmount";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidTargetIndex";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidVaultSharesToken";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedConfig";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedExtraData";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "NotPayable";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "SenderIsNotFactory";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TargetAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TransferFailed";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "coreDeployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "contract IERC20";
                        readonly name: "vaultSharesToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deploy";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "contract IERC20";
                        readonly name: "vaultSharesToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_targetIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deployTarget";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "target";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "deployments";
                readonly outputs: readonly [{
                    readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "configHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "extraDataHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initialSharePrice";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "hyperdrive";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target0";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target1";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target2";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target3";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target4";
                        readonly type: "address";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "factory";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "address";
                    readonly name: "_lp";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_contribution";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_apr";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "struct IHyperdrive.Options";
                    readonly name: "_options";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "destination";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bool";
                        readonly name: "asBase";
                        readonly type: "bool";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "extraData";
                        readonly type: "bytes";
                    }];
                }];
                readonly stateMutability: "payable";
                readonly type: "function";
                readonly name: "initialize";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "lpShares";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "lido";
                readonly outputs: readonly [{
                    readonly internalType: "contract ILido";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target0Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target1Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target2Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target3Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target4Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly constructor: {
                        readonly params: {
                            readonly _coreDeployer: "The core deployer.";
                            readonly _factory: "The factory that this deployer will be registered with.";
                            readonly _lido: "The Lido contract.";
                            readonly _target0Deployer: "The target0 deployer.";
                            readonly _target1Deployer: "The target1 deployer.";
                            readonly _target2Deployer: "The target2 deployer.";
                            readonly _target3Deployer: "The target3 deployer.";
                            readonly _target4Deployer: "The target4 deployer.";
                        };
                    };
                    readonly "deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly details: "This can only be deployed by the associated factory.";
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy Hyperdrive.";
                        };
                        readonly returns: {
                            readonly _0: "The address of the newly deployed Hyperdrive instance.";
                        };
                    };
                    readonly "deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly details: "This can only be deployed by the associated factory.As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.";
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy the target.";
                            readonly _targetIndex: "The index of the target to deploy.";
                        };
                        readonly returns: {
                            readonly target: "The address of the newly deployed target instance.";
                        };
                    };
                    readonly "deployments(bytes32)": {
                        readonly params: {
                            readonly _deploymentId: "The deployment ID.";
                        };
                        readonly returns: {
                            readonly _0: "The deployment.";
                        };
                    };
                    readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": {
                        readonly details: "This can only be deployed by the associated factory.This function utilizes several helper functions that provide      flexibility to implementations.";
                        readonly params: {
                            readonly _apr: "The target APR.";
                            readonly _contribution: "The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _lp: "The LP that is initializing the pool.";
                            readonly _options: "The options that configure how the initialization is        settled.";
                        };
                        readonly returns: {
                            readonly lpShares: "The initial number of LP shares created.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly constructor: {
                        readonly notice: "Instantiates the deployer coordinator.";
                    };
                    readonly "coreDeployer()": {
                        readonly notice: "The contract used to deploy new instances of Hyperdrive.";
                    };
                    readonly "deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the given parameters.";
                    };
                    readonly "deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive target instance with the given parameters.";
                    };
                    readonly "deployments(bytes32)": {
                        readonly notice: "Gets the deployment specified by the deployment ID.";
                    };
                    readonly "factory()": {
                        readonly notice: "The factory that this deployer will be registered with.";
                    };
                    readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": {
                        readonly notice: "Initializes a pool that was deployed by this coordinator.";
                    };
                    readonly "lido()": {
                        readonly notice: "The Lido contract.";
                    };
                    readonly "target0Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget0.";
                    };
                    readonly "target1Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget1.";
                    };
                    readonly "target2Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget2.";
                    };
                    readonly "target3Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget3.";
                    };
                    readonly "target4Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget4.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol": "StETHHyperdriveDeployerCoordinator";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/deployers/HyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xa808014ce91bfbe6e112f7ad34c35a0a6b127fc8d9c86f285e0e85db2887d08a";
                readonly urls: readonly ["bzz-raw://85951b911bd00eb9ba8595b8aa822ca165b7ea6ba7059461c7e55466cc8996b9", "dweb:/ipfs/Qmdh8MTn2oHYgGhmftdg6KDZGpUcuoWM7QWW8e9pSFjNn3"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0x5b867788f4a34ec312817e9d81ebc6e91f26509a5fa03082f1d7e3a470d88b4e";
                readonly urls: readonly ["bzz-raw://5a836f20a1c2e84a5d9ab80583ca5e274ff1f6f29bb69dd38c73c9d86f818d29", "dweb:/ipfs/QmV9gWh5AW9wxrUxxByg4RJUeSaRAUsZHezTtxWxQfX87K"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0x8b726cbf87e5dbec80207d47b64bb20e35a9fb42667b9d1612a87ad8b2d361b5";
                readonly urls: readonly ["bzz-raw://b2015112addc7b4ba33c0626a14c963294164906afce52296f3dc209737a7339", "dweb:/ipfs/QmZYR6qwGspufCtiofdvYbaHhxSrguNnP52rd3y3zXWiDz"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0xa48349cf2fcd27ce3aafcffeba25647d289e17653dc1a4e643c3de0b47e5c75f";
                readonly urls: readonly ["bzz-raw://4dee6d2061cc68e3bc52acfa0d35c973785e49170f49d2e09efd50ead85e2a19", "dweb:/ipfs/QmX6tpGgXTnVGt1CdD796N5kn8YrZWFX1FcRLqtBBhB5qk"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761";
                readonly urls: readonly ["bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b", "dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xe7bf783c896c0c519f4872a4f21d9279d9913a7dc124dd9c1b7d2ffd7c5e61cc";
                readonly urls: readonly ["bzz-raw://5d0f7bc4f5cccaea086cee416479d0a7aaf919220a92b9fb74cca7fdcfb58d58", "dweb:/ipfs/QmPhKYBLix7tiEPq32mVNmFJkkzeTSt2qGQA7LWh8DM3Ru"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784";
                readonly urls: readonly ["bzz-raw://338a9f960049c37d13b6e23e5bc2c9e6005366aa99c95168f57f170ef2a4bcfa", "dweb:/ipfs/QmaeAwacrvMgJGqrKDSXZkYNYRJ5FvirYFpY3xjbCbJTF9"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0xfbe341a751b577daa735f836ae9e213b23fffecfb1b7512e4faf3d7807f5b045";
                readonly urls: readonly ["bzz-raw://78ba0c247e48f642f44c30d7771bd752a5fe8bd4a6c10f849f1ad66804149c86", "dweb:/ipfs/QmXtSLfErEvA8wqMzXDdqNU9TRMVVgoMibmFSDRJCypi6j"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveTargetDeployer.sol": {
                readonly keccak256: "0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205";
                readonly urls: readonly ["bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed", "dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/ILido.sol": {
                readonly keccak256: "0x4e281fcc11a2512234c3ca7fb3dd00708bfb78cea39a7cbd911f2a70812925e6";
                readonly urls: readonly ["bzz-raw://8db577a2a335ebc7011a7e413abd0a78010e85b1573a26218999e335280f3ba3", "dweb:/ipfs/QmQrjdiCvNUjDvEHyHH2Wmo8zRN7H3LLRuvrdftP7pc5kE"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501";
                readonly urls: readonly ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca";
                readonly urls: readonly ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0";
                readonly urls: readonly ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/Constants.sol": {
                readonly keccak256: "0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d";
                readonly urls: readonly ["bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418", "dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0x44e018888d5a9fe0c3e44d9d814879d8f0c3adb78154edc98ba07da86b976f5a";
                readonly urls: readonly ["bzz-raw://5e3990bc86aaa8b4eb4b948ed3a26f0b018f1422c6470a00d146aa69e599a90d", "dweb:/ipfs/QmWg9hKoQK1po8ZxRC4xrSWePtoJhgndkHXmwLCpCtwAUu"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/SafeCast.sol": {
                readonly keccak256: "0xa15878749f26b198b59e039cf814143b141698064d341cd8b88cb4a04491551c";
                readonly urls: readonly ["bzz-raw://b3fdd810b779630fce33fa7d2bfc17d6cca1bd3d646e5c702d09fd277167fde4", "dweb:/ipfs/QmW8C19uY5WLkVQfqFRsSU5NtuQDgoqt4jBoMhvuJ7kMn2"];
                readonly license: "Apache-2.0";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol";
        readonly id: 3539;
        readonly exportedSymbols: {
            readonly ETH: readonly [18015];
            readonly FixedPointMath: readonly [18822];
            readonly HyperdriveDeployerCoordinator: readonly [1039];
            readonly IHyperdrive: readonly [10351];
            readonly IHyperdriveDeployerCoordinator: readonly [10684];
            readonly ILido: readonly [11315];
            readonly ONE: readonly [18039];
            readonly StETHHyperdriveDeployerCoordinator: readonly [3538];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:5775:30";
        readonly nodes: readonly [{
            readonly id: 3325;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:30";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 3327;
            readonly nodeType: "ImportDirective";
            readonly src: "64:63:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3539;
            readonly sourceUnit: 10352;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3326;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 10351;
                    readonly src: "73:11:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3329;
            readonly nodeType: "ImportDirective";
            readonly src: "128:101:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly file: "../../interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3539;
            readonly sourceUnit: 10685;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3328;
                    readonly name: "IHyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 10684;
                    readonly src: "137:30:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3331;
            readonly nodeType: "ImportDirective";
            readonly src: "230:51:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/ILido.sol";
            readonly file: "../../interfaces/ILido.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3539;
            readonly sourceUnit: 11316;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3330;
                    readonly name: "ILido";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11315;
                    readonly src: "239:5:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3333;
            readonly nodeType: "ImportDirective";
            readonly src: "282:52:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/Constants.sol";
            readonly file: "../../libraries/Constants.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3539;
            readonly sourceUnit: 18016;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3332;
                    readonly name: "ETH";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 18015;
                    readonly src: "291:3:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3336;
            readonly nodeType: "ImportDirective";
            readonly src: "335:73:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/FixedPointMath.sol";
            readonly file: "../../libraries/FixedPointMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3539;
            readonly sourceUnit: 18823;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3334;
                    readonly name: "FixedPointMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 18822;
                    readonly src: "344:14:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }, {
                readonly foreign: {
                    readonly id: 3335;
                    readonly name: "ONE";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 18039;
                    readonly src: "360:3:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3338;
            readonly nodeType: "ImportDirective";
            readonly src: "409:85:30";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/deployers/HyperdriveDeployerCoordinator.sol";
            readonly file: "../HyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 3539;
            readonly sourceUnit: 1040;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 3337;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 1039;
                    readonly src: "418:29:30";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 3538;
            readonly nodeType: "ContractDefinition";
            readonly src: "860:4953:30";
            readonly nodes: readonly [{
                readonly id: 3344;
                readonly nodeType: "UsingForDirective";
                readonly src: "943:33:30";
                readonly nodes: readonly [];
                readonly global: false;
                readonly libraryName: {
                    readonly id: 3342;
                    readonly name: "FixedPointMath";
                    readonly nameLocations: readonly ["949:14:30"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 18822;
                    readonly src: "949:14:30";
                };
                readonly typeName: {
                    readonly id: 3343;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "968:7:30";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
            }, {
                readonly id: 3348;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1017:27:30";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 3345;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "982:30:30";
                    readonly text: "@notice The Lido contract.";
                };
                readonly functionSelector: "23509a2d";
                readonly mutability: "immutable";
                readonly name: "lido";
                readonly nameLocation: "1040:4:30";
                readonly scope: 3538;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_contract$_ILido_$11315";
                    readonly typeString: "contract ILido";
                };
                readonly typeName: {
                    readonly id: 3347;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 3346;
                        readonly name: "ILido";
                        readonly nameLocations: readonly ["1017:5:30"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 11315;
                        readonly src: "1017:5:30";
                    };
                    readonly referencedDeclaration: 11315;
                    readonly src: "1017:5:30";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_ILido_$11315";
                        readonly typeString: "contract ILido";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 3383;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1544:546:30";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3382;
                    readonly nodeType: "Block";
                    readonly src: "2061:29:30";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 3380;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 3378;
                                readonly name: "lido";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3348;
                                readonly src: "2071:4:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_ILido_$11315";
                                    readonly typeString: "contract ILido";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 3379;
                                readonly name: "_lido";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3366;
                                readonly src: "2078:5:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_ILido_$11315";
                                    readonly typeString: "contract ILido";
                                };
                            };
                            readonly src: "2071:12:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_ILido_$11315";
                                readonly typeString: "contract ILido";
                            };
                        };
                        readonly id: 3381;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2071:12:30";
                    }];
                };
                readonly documentation: {
                    readonly id: 3349;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1051:488:30";
                    readonly text: "@notice Instantiates the deployer coordinator.\n @param _factory The factory that this deployer will be registered with.\n @param _coreDeployer The core deployer.\n @param _target0Deployer The target0 deployer.\n @param _target1Deployer The target1 deployer.\n @param _target2Deployer The target2 deployer.\n @param _target3Deployer The target3 deployer.\n @param _target4Deployer The target4 deployer.\n @param _lido The Lido contract.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [{
                    readonly arguments: readonly [{
                        readonly id: 3369;
                        readonly name: "_factory";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3351;
                        readonly src: "1861:8:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3370;
                        readonly name: "_coreDeployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3353;
                        readonly src: "1883:13:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3371;
                        readonly name: "_target0Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3355;
                        readonly src: "1910:16:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3372;
                        readonly name: "_target1Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3357;
                        readonly src: "1940:16:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3373;
                        readonly name: "_target2Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3359;
                        readonly src: "1970:16:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3374;
                        readonly name: "_target3Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3361;
                        readonly src: "2000:16:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 3375;
                        readonly name: "_target4Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 3363;
                        readonly src: "2030:16:30";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }];
                    readonly id: 3376;
                    readonly kind: "baseConstructorSpecifier";
                    readonly modifierName: {
                        readonly id: 3368;
                        readonly name: "HyperdriveDeployerCoordinator";
                        readonly nameLocations: readonly ["1818:29:30"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 1039;
                        readonly src: "1818:29:30";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "1818:238:30";
                }];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 3367;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3351;
                        readonly mutability: "mutable";
                        readonly name: "_factory";
                        readonly nameLocation: "1573:8:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3383;
                        readonly src: "1565:16:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3350;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1565:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3353;
                        readonly mutability: "mutable";
                        readonly name: "_coreDeployer";
                        readonly nameLocation: "1599:13:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3383;
                        readonly src: "1591:21:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3352;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1591:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3355;
                        readonly mutability: "mutable";
                        readonly name: "_target0Deployer";
                        readonly nameLocation: "1630:16:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3383;
                        readonly src: "1622:24:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3354;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1622:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3357;
                        readonly mutability: "mutable";
                        readonly name: "_target1Deployer";
                        readonly nameLocation: "1664:16:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3383;
                        readonly src: "1656:24:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3356;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1656:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3359;
                        readonly mutability: "mutable";
                        readonly name: "_target2Deployer";
                        readonly nameLocation: "1698:16:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3383;
                        readonly src: "1690:24:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3358;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1690:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3361;
                        readonly mutability: "mutable";
                        readonly name: "_target3Deployer";
                        readonly nameLocation: "1732:16:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3383;
                        readonly src: "1724:24:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3360;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1724:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3363;
                        readonly mutability: "mutable";
                        readonly name: "_target4Deployer";
                        readonly nameLocation: "1766:16:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3383;
                        readonly src: "1758:24:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3362;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1758:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3366;
                        readonly mutability: "mutable";
                        readonly name: "_lido";
                        readonly nameLocation: "1798:5:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3383;
                        readonly src: "1792:11:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_ILido_$11315";
                            readonly typeString: "contract ILido";
                        };
                        readonly typeName: {
                            readonly id: 3365;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3364;
                                readonly name: "ILido";
                                readonly nameLocations: readonly ["1792:5:30"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 11315;
                                readonly src: "1792:5:30";
                            };
                            readonly referencedDeclaration: 11315;
                            readonly src: "1792:5:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_ILido_$11315";
                                readonly typeString: "contract ILido";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1555:254:30";
                };
                readonly returnParameters: {
                    readonly id: 3377;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2061:0:30";
                };
                readonly scope: 3538;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 3445;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2742:980:30";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3444;
                    readonly nodeType: "Block";
                    readonly src: "2948:774:30";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly expression: {
                                readonly id: 3400;
                                readonly name: "_options";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3394;
                                readonly src: "3148:8:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Options_$10210_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.Options memory";
                                };
                            };
                            readonly id: 3401;
                            readonly isConstant: false;
                            readonly isLValue: true;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly memberLocation: "3157:6:30";
                            readonly memberName: "asBase";
                            readonly nodeType: "MemberAccess";
                            readonly referencedDeclaration: 10206;
                            readonly src: "3148:15:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly falseBody: {
                            readonly id: 3440;
                            readonly nodeType: "Block";
                            readonly src: "3459:234:30";
                            readonly statements: readonly [{
                                readonly assignments: readonly [3419];
                                readonly declarations: readonly [{
                                    readonly constant: false;
                                    readonly id: 3419;
                                    readonly mutability: "mutable";
                                    readonly name: "approvalAmount";
                                    readonly nameLocation: "3481:14:30";
                                    readonly nodeType: "VariableDeclaration";
                                    readonly scope: 3440;
                                    readonly src: "3473:22:30";
                                    readonly stateVariable: false;
                                    readonly storageLocation: "default";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly typeName: {
                                        readonly id: 3418;
                                        readonly name: "uint256";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3473:7:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly visibility: "internal";
                                }];
                                readonly id: 3429;
                                readonly initialValue: {
                                    readonly arguments: readonly [{
                                        readonly id: 3422;
                                        readonly name: "_lp";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3389;
                                        readonly src: "3539:3:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly arguments: readonly [{
                                            readonly id: 3425;
                                            readonly name: "this";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -28;
                                            readonly src: "3568:4:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_StETHHyperdriveDeployerCoordinator_$3538";
                                                readonly typeString: "contract StETHHyperdriveDeployerCoordinator";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_contract$_StETHHyperdriveDeployerCoordinator_$3538";
                                                readonly typeString: "contract StETHHyperdriveDeployerCoordinator";
                                            }];
                                            readonly id: 3424;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "ElementaryTypeNameExpression";
                                            readonly src: "3560:7:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_address_$";
                                                readonly typeString: "type(address)";
                                            };
                                            readonly typeName: {
                                                readonly id: 3423;
                                                readonly name: "address";
                                                readonly nodeType: "ElementaryTypeName";
                                                readonly src: "3560:7:30";
                                                readonly typeDescriptions: {};
                                            };
                                        };
                                        readonly id: 3426;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "3560:13:30";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 3427;
                                        readonly name: "_contribution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3391;
                                        readonly src: "3591:13:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly id: 3420;
                                            readonly name: "lido";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3348;
                                            readonly src: "3498:4:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_ILido_$11315";
                                                readonly typeString: "contract ILido";
                                            };
                                        };
                                        readonly id: 3421;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3503:18:30";
                                        readonly memberName: "transferSharesFrom";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11272;
                                        readonly src: "3498:23:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$";
                                            readonly typeString: "function (address,address,uint256) external returns (uint256)";
                                        };
                                    };
                                    readonly id: 3428;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3498:120:30";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly nodeType: "VariableDeclarationStatement";
                                readonly src: "3473:145:30";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly arguments: readonly [{
                                            readonly id: 3435;
                                            readonly name: "_hyperdrive";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3387;
                                            readonly src: "3653:11:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_IHyperdrive_$10351";
                                                readonly typeString: "contract IHyperdrive";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_contract$_IHyperdrive_$10351";
                                                readonly typeString: "contract IHyperdrive";
                                            }];
                                            readonly id: 3434;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "ElementaryTypeNameExpression";
                                            readonly src: "3645:7:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_address_$";
                                                readonly typeString: "type(address)";
                                            };
                                            readonly typeName: {
                                                readonly id: 3433;
                                                readonly name: "address";
                                                readonly nodeType: "ElementaryTypeName";
                                                readonly src: "3645:7:30";
                                                readonly typeDescriptions: {};
                                            };
                                        };
                                        readonly id: 3436;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "3645:20:30";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 3437;
                                        readonly name: "approvalAmount";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3419;
                                        readonly src: "3667:14:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly id: 3430;
                                            readonly name: "lido";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 3348;
                                            readonly src: "3632:4:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_ILido_$11315";
                                                readonly typeString: "contract ILido";
                                            };
                                        };
                                        readonly id: 3432;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3637:7:30";
                                        readonly memberName: "approve";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 9601;
                                        readonly src: "3632:12:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$";
                                            readonly typeString: "function (address,uint256) external returns (bool)";
                                        };
                                    };
                                    readonly id: 3438;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3632:50:30";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly id: 3439;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3632:50:30";
                            }];
                        };
                        readonly id: 3441;
                        readonly nodeType: "IfStatement";
                        readonly src: "3144:549:30";
                        readonly trueBody: {
                            readonly id: 3417;
                            readonly nodeType: "Block";
                            readonly src: "3165:180:30";
                            readonly statements: readonly [{
                                readonly condition: {
                                    readonly commonType: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                    readonly id: 3405;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftExpression: {
                                        readonly expression: {
                                            readonly id: 3402;
                                            readonly name: "msg";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -15;
                                            readonly src: "3183:3:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_message";
                                                readonly typeString: "msg";
                                            };
                                        };
                                        readonly id: 3403;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3187:5:30";
                                        readonly memberName: "value";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "3183:9:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "BinaryOperation";
                                    readonly operator: "<";
                                    readonly rightExpression: {
                                        readonly id: 3404;
                                        readonly name: "_contribution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3391;
                                        readonly src: "3195:13:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "3183:25:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly id: 3412;
                                readonly nodeType: "IfStatement";
                                readonly src: "3179:121:30";
                                readonly trueBody: {
                                    readonly id: 3411;
                                    readonly nodeType: "Block";
                                    readonly src: "3210:90:30";
                                    readonly statements: readonly [{
                                        readonly errorCall: {
                                            readonly arguments: readonly [];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [];
                                                readonly expression: {
                                                    readonly id: 3406;
                                                    readonly name: "IHyperdriveDeployerCoordinator";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 10684;
                                                    readonly src: "3235:30:30";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10684_$";
                                                        readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                                    };
                                                };
                                                readonly id: 3408;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly lValueRequested: false;
                                                readonly memberLocation: "3266:17:30";
                                                readonly memberName: "InsufficientValue";
                                                readonly nodeType: "MemberAccess";
                                                readonly referencedDeclaration: 10592;
                                                readonly src: "3235:48:30";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                                    readonly typeString: "function () pure";
                                                };
                                            };
                                            readonly id: 3409;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "3235:50:30";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_tuple$__$";
                                                readonly typeString: "tuple()";
                                            };
                                        };
                                        readonly id: 3410;
                                        readonly nodeType: "RevertStatement";
                                        readonly src: "3228:57:30";
                                    }];
                                };
                            }, {
                                readonly expression: {
                                    readonly id: 3415;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly leftHandSide: {
                                        readonly id: 3413;
                                        readonly name: "value";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3398;
                                        readonly src: "3313:5:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly nodeType: "Assignment";
                                    readonly operator: "=";
                                    readonly rightHandSide: {
                                        readonly id: 3414;
                                        readonly name: "_contribution";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3391;
                                        readonly src: "3321:13:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    };
                                    readonly src: "3313:21:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly id: 3416;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3313:21:30";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly id: 3442;
                            readonly name: "value";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 3398;
                            readonly src: "3710:5:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 3399;
                        readonly id: 3443;
                        readonly nodeType: "Return";
                        readonly src: "3703:12:30";
                    }];
                };
                readonly baseFunctions: readonly [841];
                readonly documentation: {
                    readonly id: 3384;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2096:641:30";
                    readonly text: "@dev Prepares the coordinator for initialization by drawing funds from\n      the LP, if necessary.\n @param _hyperdrive The Hyperdrive instance that is being initialized.\n @param _lp The LP that is initializing the pool.\n @param _contribution The amount of capital to supply. The units of this\n        quantity are either base or vault shares, depending on the value\n        of `_options.asBase`.\n @param _options The options that configure how the initialization is\n        settled.\n @return value The value that should be sent in the initialize\n         transaction.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_prepareInitialize";
                readonly nameLocation: "2751:18:30";
                readonly overrides: {
                    readonly id: 3396;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "2915:8:30";
                };
                readonly parameters: {
                    readonly id: 3395;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3387;
                        readonly mutability: "mutable";
                        readonly name: "_hyperdrive";
                        readonly nameLocation: "2791:11:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3445;
                        readonly src: "2779:23:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IHyperdrive_$10351";
                            readonly typeString: "contract IHyperdrive";
                        };
                        readonly typeName: {
                            readonly id: 3386;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3385;
                                readonly name: "IHyperdrive";
                                readonly nameLocations: readonly ["2779:11:30"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10351;
                                readonly src: "2779:11:30";
                            };
                            readonly referencedDeclaration: 10351;
                            readonly src: "2779:11:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$10351";
                                readonly typeString: "contract IHyperdrive";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3389;
                        readonly mutability: "mutable";
                        readonly name: "_lp";
                        readonly nameLocation: "2820:3:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3445;
                        readonly src: "2812:11:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 3388;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2812:7:30";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3391;
                        readonly mutability: "mutable";
                        readonly name: "_contribution";
                        readonly nameLocation: "2841:13:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3445;
                        readonly src: "2833:21:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 3390;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2833:7:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3394;
                        readonly mutability: "mutable";
                        readonly name: "_options";
                        readonly nameLocation: "2891:8:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3445;
                        readonly src: "2864:35:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Options_$10210_memory_ptr";
                            readonly typeString: "struct IHyperdrive.Options";
                        };
                        readonly typeName: {
                            readonly id: 3393;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3392;
                                readonly name: "IHyperdrive.Options";
                                readonly nameLocations: readonly ["2864:11:30", "2876:7:30"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10210;
                                readonly src: "2864:19:30";
                            };
                            readonly referencedDeclaration: 10210;
                            readonly src: "2864:19:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Options_$10210_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Options";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2769:136:30";
                };
                readonly returnParameters: {
                    readonly id: 3399;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3398;
                        readonly mutability: "mutable";
                        readonly name: "value";
                        readonly nameLocation: "2941:5:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3445;
                        readonly src: "2933:13:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 3397;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2933:7:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2932:15:30";
                };
                readonly scope: 3538;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 3451;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3779:55:30";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3450;
                    readonly nodeType: "Block";
                    readonly src: "3832:2:30";
                    readonly nodes: readonly [];
                    readonly statements: readonly [];
                };
                readonly baseFunctions: readonly [845];
                readonly documentation: {
                    readonly id: 3446;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3728:46:30";
                    readonly text: "@dev Allows the contract to receive ether.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkMessageValue";
                readonly nameLocation: "3788:18:30";
                readonly overrides: {
                    readonly id: 3448;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "3823:8:30";
                };
                readonly parameters: {
                    readonly id: 3447;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3806:2:30";
                };
                readonly returnParameters: {
                    readonly id: 3449;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3832:0:30";
                };
                readonly scope: 3538;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 3519;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3992:1364:30";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3518;
                    readonly nodeType: "Block";
                    readonly src: "4106:1250:30";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 3462;
                                readonly name: "_deployConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 3455;
                                readonly src: "4178:13:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10108_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10108_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }];
                                readonly expression: {
                                    readonly id: 3459;
                                    readonly name: "super";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -25;
                                    readonly src: "4155:5:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_super$_StETHHyperdriveDeployerCoordinator_$3538_$";
                                        readonly typeString: "type(contract super StETHHyperdriveDeployerCoordinator)";
                                    };
                                };
                                readonly id: 3461;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4161:16:30";
                                readonly memberName: "_checkPoolConfig";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 925;
                                readonly src: "4155:22:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$10108_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory) view";
                                };
                            };
                            readonly id: 3463;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "4155:37:30";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 3464;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "4155:37:30";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly id: 3471;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly expression: {
                                        readonly id: 3467;
                                        readonly name: "_deployConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3455;
                                        readonly src: "4285:13:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10108_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                        };
                                    };
                                    readonly id: 3468;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "4299:9:30";
                                    readonly memberName: "baseToken";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10069;
                                    readonly src: "4285:23:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                        readonly typeString: "contract IERC20";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                        readonly typeString: "contract IERC20";
                                    }];
                                    readonly id: 3466;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "4277:7:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 3465;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "4277:7:30";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 3469;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "4277:32:30";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 3470;
                                readonly name: "ETH";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 18015;
                                readonly src: "4313:3:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "4277:39:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3478;
                        readonly nodeType: "IfStatement";
                        readonly src: "4273:126:30";
                        readonly trueBody: {
                            readonly id: 3477;
                            readonly nodeType: "Block";
                            readonly src: "4318:81:30";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3472;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 10684;
                                            readonly src: "4339:30:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10684_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 3474;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "4370:16:30";
                                        readonly memberName: "InvalidBaseToken";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10595;
                                        readonly src: "4339:47:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3475;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4339:49:30";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3476;
                                readonly nodeType: "RevertStatement";
                                readonly src: "4332:56:30";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly id: 3488;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly expression: {
                                        readonly id: 3481;
                                        readonly name: "_deployConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 3455;
                                        readonly src: "4499:13:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10108_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                        };
                                    };
                                    readonly id: 3482;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "4513:16:30";
                                    readonly memberName: "vaultSharesToken";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10073;
                                    readonly src: "4499:30:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                        readonly typeString: "contract IERC20";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                        readonly typeString: "contract IERC20";
                                    }];
                                    readonly id: 3480;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "4491:7:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 3479;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "4491:7:30";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 3483;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "4491:39:30";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly id: 3486;
                                    readonly name: "lido";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3348;
                                    readonly src: "4542:4:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_ILido_$11315";
                                        readonly typeString: "contract ILido";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_ILido_$11315";
                                        readonly typeString: "contract ILido";
                                    }];
                                    readonly id: 3485;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "4534:7:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 3484;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "4534:7:30";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 3487;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "4534:13:30";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "4491:56:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3495;
                        readonly nodeType: "IfStatement";
                        readonly src: "4487:150:30";
                        readonly trueBody: {
                            readonly id: 3494;
                            readonly nodeType: "Block";
                            readonly src: "4549:88:30";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3489;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 10684;
                                            readonly src: "4570:30:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10684_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 3491;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "4601:23:30";
                                        readonly memberName: "InvalidVaultSharesToken";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10598;
                                        readonly src: "4570:54:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3492;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4570:56:30";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3493;
                                readonly nodeType: "RevertStatement";
                                readonly src: "4563:63:30";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 3499;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 3496;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3455;
                                    readonly src: "4899:13:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10108_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 3497;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4913:20:30";
                                readonly memberName: "minimumShareReserves";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10082;
                                readonly src: "4899:34:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly hexValue: "31653135";
                                readonly id: 3498;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "4937:4:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000";
                                };
                                readonly value: "1e15";
                            };
                            readonly src: "4899:42:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3506;
                        readonly nodeType: "IfStatement";
                        readonly src: "4895:140:30";
                        readonly trueBody: {
                            readonly id: 3505;
                            readonly nodeType: "Block";
                            readonly src: "4943:92:30";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3500;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 10684;
                                            readonly src: "4964:30:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10684_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 3502;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "4995:27:30";
                                        readonly memberName: "InvalidMinimumShareReserves";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10607;
                                        readonly src: "4964:58:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3503;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4964:60:30";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3504;
                                readonly nodeType: "RevertStatement";
                                readonly src: "4957:67:30";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 3510;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 3507;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3455;
                                    readonly src: "5189:13:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10108_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 3508;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5203:24:30";
                                readonly memberName: "minimumTransactionAmount";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10085;
                                readonly src: "5189:38:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly hexValue: "31653135";
                                readonly id: 3509;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "5231:4:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000";
                                };
                                readonly value: "1e15";
                            };
                            readonly src: "5189:46:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 3517;
                        readonly nodeType: "IfStatement";
                        readonly src: "5185:165:30";
                        readonly trueBody: {
                            readonly id: 3516;
                            readonly nodeType: "Block";
                            readonly src: "5237:113:30";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 3511;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 10684;
                                            readonly src: "5258:30:30";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10684_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 3513;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "5306:31:30";
                                        readonly memberName: "InvalidMinimumTransactionAmount";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10610;
                                        readonly src: "5258:79:30";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 3514;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5258:81:30";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 3515;
                                readonly nodeType: "RevertStatement";
                                readonly src: "5251:88:30";
                            }];
                        };
                    }];
                };
                readonly baseFunctions: readonly [925];
                readonly documentation: {
                    readonly id: 3452;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3840:147:30";
                    readonly text: "@notice Checks the pool configuration to ensure that it is valid.\n @param _deployConfig The deploy configuration of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkPoolConfig";
                readonly nameLocation: "4001:16:30";
                readonly overrides: {
                    readonly id: 3457;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "4097:8:30";
                };
                readonly parameters: {
                    readonly id: 3456;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3455;
                        readonly mutability: "mutable";
                        readonly name: "_deployConfig";
                        readonly nameLocation: "4063:13:30";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3519;
                        readonly src: "4027:49:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10108_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 3454;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3453;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["4027:11:30", "4039:16:30"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10108;
                                readonly src: "4027:28:30";
                            };
                            readonly referencedDeclaration: 10108;
                            readonly src: "4027:28:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10108_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4017:65:30";
                };
                readonly returnParameters: {
                    readonly id: 3458;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "4106:0:30";
                };
                readonly scope: 3538;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 3537;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5504:307:30";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 3536;
                    readonly nodeType: "Block";
                    readonly src: "5704:107:30";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 3533;
                                readonly name: "ONE";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 18039;
                                readonly src: "5800:3:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 3531;
                                    readonly name: "lido";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 3348;
                                    readonly src: "5774:4:30";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_ILido_$11315";
                                        readonly typeString: "contract ILido";
                                    };
                                };
                                readonly id: 3532;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5779:20:30";
                                readonly memberName: "getPooledEthByShares";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 11288;
                                readonly src: "5774:25:30";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_view$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256) view external returns (uint256)";
                                };
                            };
                            readonly id: 3534;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5774:30:30";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 3530;
                        readonly id: 3535;
                        readonly nodeType: "Return";
                        readonly src: "5767:37:30";
                    }];
                };
                readonly baseFunctions: readonly [936];
                readonly documentation: {
                    readonly id: 3520;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "5362:137:30";
                    readonly text: "@dev Gets the initial vault share price of the Hyperdrive pool.\n @return The initial vault share price of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_getInitialVaultSharePrice";
                readonly nameLocation: "5513:26:30";
                readonly overrides: {
                    readonly id: 3527;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "5677:8:30";
                };
                readonly parameters: {
                    readonly id: 3526;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3523;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3537;
                        readonly src: "5549:35:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10108_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 3522;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 3521;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["5549:11:30", "5561:16:30"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10108;
                                readonly src: "5549:28:30";
                            };
                            readonly referencedDeclaration: 10108;
                            readonly src: "5549:28:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10108_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 3525;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3537;
                        readonly src: "5623:12:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 3524;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5623:5:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "5539:123:30";
                };
                readonly returnParameters: {
                    readonly id: 3530;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 3529;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 3537;
                        readonly src: "5695:7:30";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 3528;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5695:7:30";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "5694:9:30";
                };
                readonly scope: 3538;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 3340;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nameLocations: readonly ["907:29:30"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 1039;
                    readonly src: "907:29:30";
                };
                readonly id: 3341;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "907:29:30";
            }];
            readonly canonicalName: "StETHHyperdriveDeployerCoordinator";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 3339;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "496:364:30";
                readonly text: "@author DELV\n @title StETHHyperdriveDeployerCoordinator\n @notice The deployer coordinator for the StETHHyperdrive implementation.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [3538, 1039, 10684];
            readonly name: "StETHHyperdriveDeployerCoordinator";
            readonly nameLocation: "869:34:30";
            readonly scope: 3539;
            readonly usedErrors: readonly [10577, 10580, 10583, 10586, 10589, 10592, 10595, 10598, 10601, 10604, 10607, 10610, 10613, 10616, 10619, 10622, 10625, 10628, 10631, 10634];
            readonly usedEvents: readonly [];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 30;
};
//# sourceMappingURL=StETHHyperdriveDeployerCoordinator.d.ts.map