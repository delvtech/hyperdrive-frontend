export declare const StETHHyperdriveDeployerCoordinator: {
    readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_coreDeployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target0Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target1Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target2Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target3Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target4Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "contract ILido";
            readonly name: "_lido";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "HyperdriveAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncompleteDeployment";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCheckpointDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidFeeAmounts";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumShareReserves";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumTransactionAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidPositionDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidTargetIndex";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedConfig";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedExtraData";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TargetAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "coreDeployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_targetIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deployTarget";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_deployer";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }];
        readonly name: "deployments";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "configHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "extraDataHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "initialSharePrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "hyperdrive";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target0";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target1";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target2";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target3";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target4";
                readonly type: "address";
            }];
            readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lido";
        readonly outputs: readonly [{
            readonly internalType: "contract ILido";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target0Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target1Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target2Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target3Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target4Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "";
        readonly sourceMap: "807:2563:9:-:0;;;1411:498;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3698:28:0;;;;;3736:34;;;;;3780;;;;;3824;;;;;3868;;;;3912;;;;1890:12:9::1;;::::0;807:2563;;14:131:182;-1:-1:-1;;;;;89:31:182;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1073::-;288:6;296;304;312;320;328;336;389:3;377:9;368:7;364:23;360:33;357:53;;;406:1;403;396:12;357:53;438:9;432:16;457:31;482:5;457:31;:::i;:::-;557:2;542:18;;536:25;507:5;;-1:-1:-1;570:33:182;536:25;570:33;:::i;:::-;674:2;659:18;;653:25;622:7;;-1:-1:-1;687:33:182;653:25;687:33;:::i;:::-;791:2;776:18;;770:25;739:7;;-1:-1:-1;804:33:182;770:25;804:33;:::i;:::-;908:3;893:19;;887:26;856:7;;-1:-1:-1;922:33:182;887:26;922:33;:::i;:::-;1026:3;1011:19;;1005:26;974:7;;-1:-1:-1;1040:33:182;1005:26;1040:33;:::i;:::-;1144:3;1129:19;;1123:26;1092:7;;-1:-1:-1;1158:33:182;1123:26;1158:33;:::i;:::-;1210:7;1200:17;;;150:1073;;;;;;;;;;:::o;:::-;807:2563:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "";
        readonly sourceMap: "807:2563:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13830:189:0;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13974:23:0;;;:12;:23;;;;;;;;;;;:38;;;;;;;;;;13967:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13830:189;;;;;;;;:::i;:::-;;;;;;;;964:27:9;;;;;;;;-1:-1:-1;;;;;1988:32:182;;;1970:51;;1958:2;1943:18;964:27:9;1810:217:182;7707:5917:0;;;;;;:::i;:::-;;:::i;2952:40::-;;;;;2571;;;;;2825;;;;;2444;;;;;2698;;;;;4384:2690;;;;;;:::i;:::-;;:::i;2320:37::-;;;;;7707:5917;7929:14;8200:12;8216:1;8200:17;8196:1789;;8410:10;8459:1;8397:24;;;;;;;;;;;:39;;;;;;;;:50;:64;8376:196;;8501:56;;-1:-1:-1;;;8501:56:0;;;;;;;;;;;8376:196;8706:31;8723:13;8706:16;:31::i;:::-;8855:25;8883:38;8910:10;8883:26;:38::i;:::-;8855:66;;8935:18;8977:13;8966:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;8956:36;;;;;;8935:57;;9006:21;9040:10;9030:21;;;;;;9006:45;;9182:37;9222:60;9255:13;9222:15;:60::i;:::-;9296:30;;;:50;;;9414:139;;-1:-1:-1;;;9414:139:0;;9182:100;;-1:-1:-1;;;;;;9440:15:0;9414:49;;;;:139;;9182:100;;9506:10;;9534:5;;9414:139;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9618:10;9605:12;:24;;;;;;;;;;;:39;;;;;;;;:63;;;9682:70;;;:86;;;;-1:-1:-1;9782:74:0;;;:94;;;;9890:47;;:56;;-1:-1:-1;;;;;;9890:56:0;-1:-1:-1;;;;;9890:56:0;;;;;:39;-1:-1:-1;9961:13:0;;8196:1789;10147:10;10196:1;10134:24;;;;;;;;;;;:39;;;;;;;;:50;10130:157;;10221:55;;-1:-1:-1;;;10221:55:0;;;;;;;;;;;10130:157;10447:10;10434:12;:24;;;;;;;;;;;:39;;;;;;;;;:50;10392:25;;;;10403:13;;10392:25;;:::i;:::-;;;;;;;;;;;;;10382:36;;;;;;:102;10365:211;;10516:49;;-1:-1:-1;;;10516:49:0;;;;;;;;;;;10365:211;10729:10;10716:12;:24;;;;;;;;;;;:39;;;;;;;;:53;;;10679:21;;;;;;;;;:90;10662:202;;10801:52;;-1:-1:-1;;;10801:52:0;;;;;;;;;;;10662:202;11140:31;11157:13;11140:16;:31::i;:::-;11290:36;11329:30;11345:13;11329:15;:30::i;:::-;11414:10;11401:12;:24;;;;;;;;;;;:39;;;;;;;;:70;;;11369:29;;;:102;11290:69;-1:-1:-1;11751:1:0;11735:17;;;11731:1863;;11785:10;11831:1;11772:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;11772:47:0;:61;11768:161;;11860:54;;-1:-1:-1;;;11860:54:0;;;;;;;;;;;11768:161;11951:138;;-1:-1:-1;;;11951:138:0;;-1:-1:-1;;;;;11977:15:0;11951:49;;;;:138;;12018:6;;12042:10;;12070:5;;11951:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12116:10;12103:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;12103:56:0;-1:-1:-1;;;;;12103:56:0;;;;;;-1:-1:-1;11731:1863:0;;;12180:12;12196:1;12180:17;12176:1418;;12230:10;12276:1;12217:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12217:47:0;:61;12213:161;;12305:54;;-1:-1:-1;;;12305:54:0;;;;;;;;;;;12213:161;12396:138;;-1:-1:-1;;;12396:138:0;;-1:-1:-1;;;;;12422:15:0;12396:49;;;;:138;;12463:6;;12487:10;;12515:5;;12396:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12561:10;12548:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;12548:56:0;-1:-1:-1;;;;;12548:56:0;;;;;;-1:-1:-1;12176:1418:0;;;12625:12;12641:1;12625:17;12621:973;;12675:10;12721:1;12662:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12662:47:0;:61;12658:161;;12750:54;;-1:-1:-1;;;12750:54:0;;;;;;;;;;;12658:161;12841:138;;-1:-1:-1;;;12841:138:0;;-1:-1:-1;;;;;12867:15:0;12841:49;;;;:138;;12908:6;;12932:10;;12960:5;;12841:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13006:10;12993:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;12993:56:0;-1:-1:-1;;;;;12993:56:0;;;;;;-1:-1:-1;12621:973:0;;;13070:12;13086:1;13070:17;13066:528;;13120:10;13166:1;13107:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;13107:47:0;:61;13103:161;;13195:54;;-1:-1:-1;;;13195:54:0;;;;;;;;;;;13103:161;13286:138;;-1:-1:-1;;;13286:138:0;;-1:-1:-1;;;;;13312:15:0;13286:49;;;;:138;;13353:6;;13377:10;;13405:5;;13286:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13451:10;13438:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13438:56:0;-1:-1:-1;;;;;13438:56:0;;;;;;-1:-1:-1;13066:528:0;;;13532:51;;-1:-1:-1;;;13532:51:0;;;;;;;;;;;13066:528;13604:13;7707:5917;;;;;;;;:::o;4384:2690::-;4713:10;4570:7;4700:24;;;;;;;;;;;:39;;;;;;;;4669:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4669:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4753:35;4749:131;;4811:58;;-1:-1:-1;;;4811:58:0;;;;;;;;;;;4749:131;5029:21;;5025:128;;5087:55;;-1:-1:-1;;;5087:55:0;;;;;;;;;;;5025:128;5242:18;;;;-1:-1:-1;;;;;5242:32:0;;;:80;;-1:-1:-1;5290:18:0;;;;-1:-1:-1;;;;;5290:32:0;;5242:80;:128;;;-1:-1:-1;5338:18:0;;;;-1:-1:-1;;;;;5338:32:0;;5242:128;:176;;;-1:-1:-1;5386:18:0;;;;-1:-1:-1;;;;;5386:32:0;;5242:176;:224;;;-1:-1:-1;5434:18:0;;;;-1:-1:-1;;;;;5434:32:0;;5242:224;5225:337;;;5498:53;;-1:-1:-1;;;5498:53:0;;;;;;;;;;;5225:337;5684:21;;5654:25;;;;5665:13;;5654:25;;;:::i;:::-;;;;;;;;;;;;;5644:36;;;;;;:61;5640:148;;5728:49;;-1:-1:-1;;;5728:49:0;;;;;;;;;;;5640:148;5903:10;:24;;;5888:10;5878:21;;;;;;:49;5874:139;;5950:52;;-1:-1:-1;;;5950:52:0;;;;;;;;;;;5874:139;6289:31;6306:13;6289:16;:31::i;:::-;6439:36;6478:30;6494:13;6478:15;:30::i;:::-;6550:28;;;;;6518:29;;;:60;6791:18;;;;6823;;;;6855;;;;6887;;;;6919;;;;6689:277;;-1:-1:-1;;;6689:277:0;;6439:69;;-1:-1:-1;6668:18:0;;-1:-1:-1;;;;;6713:12:0;6689:44;;;;:277;;6439:69;;6767:10;;6791:18;;6823;;6855;;6887;6951:5;;6689:277;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6989:10;6976:12;:24;;;;;;;;;;;:39;;;;;;;;;;:50;;:63;;-1:-1:-1;;;;;;6976:63:0;-1:-1:-1;;;;;6976:63:0;;;;;-1:-1:-1;6976:63:0;;4384:2690;-1:-1:-1;;;;;;4384:2690:0:o;2067:920:9:-;2230:37;2253:13;2230:22;:37::i;:::-;2530:13;:34;;;2568:4;2530:42;2526:140;;2595:60;;-1:-1:-1;;;2595:60:9;;;;;;;;;;;2526:140;2820:13;:38;;;2862:4;2820:46;2816:165;;2889:81;;-1:-1:-1;;;2889:81:9;;;;;;;;;;;2816:165;2067:920;:::o;3135:233::-;3331:30;;-1:-1:-1;;;3331:30:9;;150:4:73;3331:30:9;;;10907:25:182;3252:7:9;;3331:4;-1:-1:-1;;;;;3331:25:9;;;;10880:18:182;;3331:30:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3324:37;3135:233;-1:-1:-1;;3135:233:9:o;15920:926:0:-;16033:37;;:::i;:::-;16169:23;;-1:-1:-1;;;;;16149:43:0;;;;;16226:27;;;;;16202:51;;:21;;;:51;16288:28;;;;;16263:22;;;:53;16357:34;;;;16326:28;;;;:65;;;;16436:51;;;16401:32;;;;:86;;;;16524:30;;;16497:24;;;;:57;;;;16593:32;;;16564:26;;;;:61;;;;16657:25;;;16635:19;;;;:47;;;;16713:24;;;16692:45;;:18;;;;:45;;;;16770:26;;;16747:49;:20;;;;:49;;;;16821:18;;;;16806:12;;;:33;16149:7;15920:926::o;14174:1195::-;14475:3;14438:13;:34;;;:40;14434:138;;;14501:60;;-1:-1:-1;;;14501:60:0;;;;;;;;;;;14434:138;14586:13;:32;;;14622:1;14586:37;14582:133;;14646:58;;-1:-1:-1;;;14646:58:0;;;;;;;;;;;14582:133;14774:13;:32;;;14741:13;:30;;;:65;:163;;;;14855:13;:32;;;14822:13;:30;;;:65;;;;:::i;:::-;:82;;14741:163;14724:279;;;14936:56;;-1:-1:-1;;;14936:56:0;;;;;;;;;;;14724:279;15081:18;;;;:24;15108:4;-1:-1:-1;15081:31:0;:77;;;15154:4;15128:13;:18;;;:23;;;:30;15081:77;:131;;;;15208:4;15174:13;:18;;;:31;;;:38;15081:131;:189;;;;15266:4;15228:13;:18;;;:35;;;:42;15081:189;15064:299;;;15302:50;;-1:-1:-1;;;15302:50:0;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:182:-;-1:-1:-1;;;;;89:31:182;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:182:o;718:1087::-;935:13;;917:32;;1005:4;993:17;;;987:24;965:20;;;958:54;1068:4;1056:17;;;1050:24;1028:20;;;1021:54;1122:4;1110:17;;;1104:24;-1:-1:-1;;;;;1204:21:182;;;1182:20;;;1175:51;;;;1286:4;1274:17;;;1268:24;1264:33;;1242:20;;;1235:63;1155:3;1335:17;;;1329:24;675:31;;1397:20;;;663:44;1467:4;1455:17;;;1449:24;675:31;;1517:20;;;663:44;1587:4;1575:17;;;1569:24;675:31;;1637:20;;;663:44;1677:6;1720:15;;;1714:22;675:31;;;1780:18;;;663:44;904:3;889:19;;;1745:54;;;718:1087;;;;:::o;2032:127::-;2093:10;2088:3;2084:20;2081:1;2074:31;2124:4;2121:1;2114:15;2148:4;2145:1;2138:15;2164:250;2231:2;2225:9;2273:6;2261:19;;2310:18;2295:34;;2331:22;;;2292:62;2289:88;;;2357:18;;:::i;:::-;2393:2;2386:22;2164:250;:::o;2419:601::-;2470:5;2518:4;2506:9;2501:3;2497:19;2493:30;2490:50;;;2536:1;2533;2526:12;2490:50;2569:2;2563:9;2611:4;2603:6;2599:17;2682:6;2670:10;2667:22;2646:18;2634:10;2631:34;2628:62;2625:88;;;2693:18;;:::i;:::-;2733:10;2729:2;2722:22;;2762:6;2753:15;;2805:9;2792:23;2784:6;2777:39;2877:2;2866:9;2862:18;2849:32;2844:2;2836:6;2832:15;2825:57;2943:2;2932:9;2928:18;2915:32;2910:2;2902:6;2898:15;2891:57;3009:2;2998:9;2994:18;2981:32;2976:2;2968:6;2964:15;2957:57;;2419:601;;;;:::o;3025:986::-;3088:5;3136:6;3124:9;3119:3;3115:19;3111:32;3108:52;;;3156:1;3153;3146:12;3108:52;3178:17;;:::i;:::-;3169:26;;3218:29;3237:9;3218:29;:::i;:::-;3211:5;3204:44;3280:38;3314:2;3303:9;3299:18;3280:38;:::i;:::-;3275:2;3268:5;3264:14;3257:62;3379:2;3368:9;3364:18;3351:32;3346:2;3339:5;3335:14;3328:56;3444:2;3433:9;3429:18;3416:32;3411:2;3404:5;3400:14;3393:56;3510:3;3499:9;3495:19;3482:33;3476:3;3469:5;3465:15;3458:58;3577:3;3566:9;3562:19;3549:33;3543:3;3536:5;3532:15;3525:58;3644:3;3633:9;3629:19;3616:33;3610:3;3603:5;3599:15;3592:58;3711:3;3700:9;3696:19;3683:33;3677:3;3670:5;3666:15;3659:58;3736:3;3771:38;3805:2;3794:9;3790:18;3771:38;:::i;:::-;3755:14;;;3748:62;3829:3;3864:38;3883:18;;;3864:38;:::i;:::-;3848:14;;;3841:62;3922:3;3957:47;4000:3;3980:18;;;3957:47;:::i;:::-;3941:14;;;3934:71;3945:5;3025:986;-1:-1:-1;;3025:986:182:o;4016:718::-;4058:5;4111:3;4104:4;4096:6;4092:17;4088:27;4078:55;;4129:1;4126;4119:12;4078:55;4165:6;4152:20;4191:18;4228:2;4224;4221:10;4218:36;;;4234:18;;:::i;:::-;4309:2;4303:9;4277:2;4363:13;;-1:-1:-1;;4359:22:182;;;4383:2;4355:31;4351:40;4339:53;;;4407:18;;;4427:22;;;4404:46;4401:72;;;4453:18;;:::i;:::-;4493:10;4489:2;4482:22;4528:2;4520:6;4513:18;4574:3;4567:4;4562:2;4554:6;4550:15;4546:26;4543:35;4540:55;;;4591:1;4588;4581:12;4540:55;4655:2;4648:4;4640:6;4636:17;4629:4;4621:6;4617:17;4604:54;4702:1;4695:4;4690:2;4682:6;4678:15;4674:26;4667:37;4722:6;4713:15;;;;;;4016:718;;;;:::o;4739:661::-;4877:6;4885;4893;4901;4909;4962:3;4950:9;4941:7;4937:23;4933:33;4930:53;;;4979:1;4976;4969:12;4930:53;5015:9;5002:23;4992:33;;5044:63;5099:7;5094:2;5083:9;5079:18;5044:63;:::i;:::-;5034:73;;5158:3;5147:9;5143:19;5130:33;5186:18;5178:6;5175:30;5172:50;;;5218:1;5215;5208:12;5172:50;5241:49;5282:7;5273:6;5262:9;5258:22;5241:49;:::i;:::-;4739:661;;;;-1:-1:-1;5231:59:182;;5337:3;5322:19;;5309:33;;-1:-1:-1;5389:3:182;5374:19;5361:33;;4739:661;-1:-1:-1;;;4739:661:182:o;5613:592::-;5742:6;5750;5758;5766;5819:3;5807:9;5798:7;5794:23;5790:33;5787:53;;;5836:1;5833;5826:12;5787:53;5872:9;5859:23;5849:33;;5901:63;5956:7;5951:2;5940:9;5936:18;5901:63;:::i;:::-;5891:73;;6015:3;6004:9;6000:19;5987:33;6043:18;6035:6;6032:30;6029:50;;;6075:1;6072;6065:12;6029:50;6098:49;6139:7;6130:6;6119:9;6115:22;6098:49;:::i;:::-;5613:592;;;;-1:-1:-1;6088:59:182;;6194:3;6179:19;6166:33;;-1:-1:-1;;;5613:592:182:o;6472:1186::-;6706:13;;-1:-1:-1;;;;;675:31:182;663:44;;6674:3;6659:19;;6778:4;6770:6;6766:17;6760:24;6793:54;6841:4;6830:9;6826:20;6812:12;-1:-1:-1;;;;;675:31:182;663:44;;609:104;6793:54;;6903:4;6895:6;6891:17;6885:24;6878:4;6867:9;6863:20;6856:54;6966:4;6958:6;6954:17;6948:24;6941:4;6930:9;6926:20;6919:54;7029:4;7021:6;7017:17;7011:24;7004:4;6993:9;6989:20;6982:54;7092:4;7084:6;7080:17;7074:24;7067:4;7056:9;7052:20;7045:54;7155:4;7147:6;7143:17;7137:24;7130:4;7119:9;7115:20;7108:54;7218:4;7210:6;7206:17;7200:24;7193:4;7182:9;7178:20;7171:54;7244:6;7299:2;7291:6;7287:15;7281:22;7312:54;7362:2;7351:9;7347:18;7331:14;-1:-1:-1;;;;;675:31:182;663:44;;609:104;7312:54;-1:-1:-1;;7385:6:182;7428:15;;;7422:22;-1:-1:-1;;;;;675:31:182;7488:18;;;663:44;7526:6;7569:15;;;7563:22;6280:12;;7633:18;;;6268:25;6342:4;6331:16;;6325:23;6309:14;;;6302:47;6398:4;6387:16;;6381:23;6365:14;;;6358:47;6454:4;6443:16;;6437:23;6421:14;;;6414:47;7594:58;6210:257;7663:1035;7746:12;;-1:-1:-1;;;;;675:31:182;663:44;;7810:4;7803:5;7799:16;7793:23;7825:48;7867:4;7862:3;7858:14;7844:12;-1:-1:-1;;;;;675:31:182;663:44;;609:104;7825:48;;7922:4;7915:5;7911:16;7905:23;7898:4;7893:3;7889:14;7882:47;7978:4;7971:5;7967:16;7961:23;7954:4;7949:3;7945:14;7938:47;8034:4;8027:5;8023:16;8017:23;8010:4;8005:3;8001:14;7994:47;8090:4;8083:5;8079:16;8073:23;8066:4;8061:3;8057:14;8050:47;8146:4;8139:5;8135:16;8129:23;8122:4;8117:3;8113:14;8106:47;8202:4;8195:5;8191:16;8185:23;8178:4;8173:3;8169:14;8162:47;8228:6;8281:2;8274:5;8270:14;8264:21;8259:2;8254:3;8250:12;8243:43;;8305:6;8359:2;8352:5;8348:14;8342:21;8372:48;8416:2;8411:3;8407:12;8391:14;-1:-1:-1;;;;;675:31:182;663:44;;609:104;8372:48;-1:-1:-1;;8439:6:182;8482:14;;;8476:21;-1:-1:-1;;;;;675:31:182;8541:12;;;663:44;8573:6;8616:14;;;8610:21;6280:12;;8679;;;6268:25;;;;6342:4;6331:16;;6325:23;6309:14;;;6302:47;6398:4;6387:16;;6381:23;6365:14;;;6358:47;6454:4;6443:16;6437:23;6421:14;;;;6414:47;7663:1035::o;8703:422::-;8744:3;8782:5;8776:12;8809:6;8804:3;8797:19;8834:1;8844:162;8858:6;8855:1;8852:13;8844:162;;;8920:4;8976:13;;;8972:22;;8966:29;8948:11;;;8944:20;;8937:59;8873:12;8844:162;;;8848:3;9051:1;9044:4;9035:6;9030:3;9026:16;9022:27;9015:38;9114:4;9107:2;9103:7;9098:2;9090:6;9086:15;9082:29;9077:3;9073:39;9069:50;9062:57;;;8703:422;;;;:::o;9130:461::-;9352:4;9381:3;9393:47;9430:9;9422:6;9393:47;:::i;:::-;9477:2;9471:3;9460:9;9456:19;9449:31;9497:44;9537:2;9526:9;9522:18;9514:6;9497:44;:::i;:::-;9489:52;;;9578:6;9572:3;9561:9;9557:19;9550:35;9130:461;;;;;;:::o;9596:251::-;9666:6;9719:2;9707:9;9698:7;9694:23;9690:32;9687:52;;;9735:1;9732;9725:12;9687:52;9767:9;9761:16;9786:31;9811:5;9786:31;:::i;:::-;9836:5;9596:251;-1:-1:-1;;;9596:251:182:o;9852:904::-;10214:4;10243:3;10255:47;10292:9;10284:6;10255:47;:::i;:::-;10339:2;10333:3;10322:9;10318:19;10311:31;10359:44;10399:2;10388:9;10384:18;10376:6;10359:44;:::i;:::-;-1:-1:-1;;;;;10478:15:182;;;10472:3;10457:19;;10450:44;10531:15;;;10525:3;10510:19;;10503:44;-1:-1:-1;;10584:15:182;;;10578:3;10563:19;;10556:44;10637:15;;;10631:3;10616:19;;10609:44;10690:15;;;10684:3;10669:19;;10662:44;10737:3;10722:19;10715:35;;;;10351:52;9852:904;-1:-1:-1;;9852:904:182:o;10943:184::-;11013:6;11066:2;11054:9;11045:7;11041:23;11037:32;11034:52;;;11082:1;11079;11072:12;11034:52;-1:-1:-1;11105:16:182;;10943:184;-1:-1:-1;10943:184:182:o;11132:209::-;11164:1;11190;11180:132;;11234:10;11229:3;11225:20;11222:1;11215:31;11269:4;11266:1;11259:15;11297:4;11294:1;11287:15;11180:132;-1:-1:-1;11326:9:182;;11132:209::o";
        readonly linkReferences: {};
        readonly immutableReferences: {
            readonly "1440": readonly [{
                readonly start: 429;
                readonly length: 32;
            }, {
                readonly start: 3439;
                readonly length: 32;
            }];
            readonly "43": readonly [{
                readonly start: 725;
                readonly length: 32;
            }, {
                readonly start: 3112;
                readonly length: 32;
            }];
            readonly "46": readonly [{
                readonly start: 628;
                readonly length: 32;
            }, {
                readonly start: 945;
                readonly length: 32;
            }];
            readonly "49": readonly [{
                readonly start: 550;
                readonly length: 32;
            }, {
                readonly start: 1514;
                readonly length: 32;
            }];
            readonly "52": readonly [{
                readonly start: 667;
                readonly length: 32;
            }, {
                readonly start: 1794;
                readonly length: 32;
            }];
            readonly "55": readonly [{
                readonly start: 589;
                readonly length: 32;
            }, {
                readonly start: 2074;
                readonly length: 32;
            }];
            readonly "58": readonly [{
                readonly start: 511;
                readonly length: 32;
            }, {
                readonly start: 2354;
                readonly length: 32;
            }];
        };
    };
    readonly methodIdentifiers: {
        readonly "coreDeployer()": "c83e1f51";
        readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": "c47e90c4";
        readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": "7cc39092";
        readonly "deployments(address,bytes32)": "20503b3f";
        readonly "lido()": "23509a2d";
        readonly "target0Deployer()": "ab71905f";
        readonly "target1Deployer()": "a085fa30";
        readonly "target2Deployer()": "b6cb1118";
        readonly "target3Deployer()": "aa8cd6c4";
        readonly "target4Deployer()": "966ecd1c";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coreDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target0Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target1Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target2Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target3Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target4Deployer\",\"type\":\"address\"},{\"internalType\":\"contract ILido\",\"name\":\"_lido\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeploymentAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumTransactionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTargetIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"coreDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"}],\"name\":\"deployments\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"configHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"extraDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hyperdrive\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target4\",\"type\":\"address\"}],\"internalType\":\"struct HyperdriveDeployerCoordinator.Deployment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lido\",\"outputs\":[{\"internalType\":\"contract ILido\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target0Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target1Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target2Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target3Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target4Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_coreDeployer\":\"The core deployer.\",\"_lido\":\"The Lido contract.\",\"_target0Deployer\":\"The target0 deployer.\",\"_target1Deployer\":\"The target1 deployer.\",\"_target2Deployer\":\"The target2 deployer.\",\"_target3Deployer\":\"The target3 deployer.\",\"_target4Deployer\":\"The target4 deployer.\"}},\"deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy Hyperdrive.\"},\"returns\":{\"_0\":\"The address of the newly deployed Hyperdrive instance.\"}},\"deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"details\":\"As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.\",\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy the target.\",\"_targetIndex\":\"The index of the target to deploy.\"},\"returns\":{\"target\":\"The address of the newly deployed target instance.\"}},\"deployments(address,bytes32)\":{\"params\":{\"_deployer\":\"The deployer.\",\"_deploymentId\":\"The deployment ID.\"},\"returns\":{\"_0\":\"The deployment.\"}}},\"title\":\"StETHHyperdriveDeployerCoordinator\",\"version\":1},\"userdoc\":{\"errors\":{\"DeploymentAlreadyExists()\":[{\"notice\":\"Thrown when a user attempts to deploy target0 the deployment has         already been created.\"}],\"DeploymentDoesNotExist()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract that requires         the deployment to be created and the deployment doesn't exist.\"}],\"HyperdriveAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a hyperdrive contract         after it has already been deployed.\"}],\"IncompleteDeployment()\":[{\"notice\":\"Thrown when a user attempts to deploy a Hyperdrive entrypoint         without first deploying the required targets.\"}],\"InvalidCheckpointDuration()\":[{\"notice\":\"Thrown when the checkpoint duration specified is zero.\"}],\"InvalidFeeAmounts()\":[{\"notice\":\"Thrown when the curve fee, flat fee, governance LP fee, or         governance zombie fee is greater than 100%.\"}],\"InvalidMinimumShareReserves()\":[{\"notice\":\"Thrown when the minimum share reserves is too small. The         absolute smallest allowable minimum share reserves is 1e3;         however, yield sources may require a larger minimum share         reserves.\"}],\"InvalidMinimumTransactionAmount()\":[{\"notice\":\"Thrown when the minimum transaction amount is too small.\"}],\"InvalidPositionDuration()\":[{\"notice\":\"Thrown when the position duration is smaller than the checkpoint         duration or is not a multiple of the checkpoint duration.\"}],\"InvalidTargetIndex()\":[{\"notice\":\"Thrown when a user attempts to deploy a target using a target         index that is outside of the accepted range.\"}],\"MismatchedConfig()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with a config that doesn't match the deployment's         config hash.\"}],\"MismatchedExtraData()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with extra data that doesn't match the deployment's         extra data hash.\"}],\"TargetAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a target contract after         it has already been deployed.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates the deployer coordinator.\"},\"coreDeployer()\":{\"notice\":\"The contract used to deploy new instances of Hyperdrive.\"},\"deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"},\"deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"notice\":\"Deploys a Hyperdrive target instance with the given parameters.\"},\"deployments(address,bytes32)\":{\"notice\":\"Gets the deployment specified by the deployer and deployment ID.\"},\"lido()\":{\"notice\":\"The Lido contract.\"},\"target0Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget0.\"},\"target1Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget1.\"},\"target2Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget2.\"},\"target3Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget3.\"},\"target4Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget4.\"}},\"notice\":\"The deployer coordinator for the StETHHyperdrive implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol\":\"StETHHyperdriveDeployerCoordinator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/HyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xa514f3df6feb2126925db532c8b0dca054eb6763c3a264c594829108ded99b64\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://eb2beb980386b097c6ef754ce41cb805b8d37520c14f6a3b237626a7048b2bab\",\"dweb:/ipfs/QmXVVfRufQse6p2VmWcWn8Qf5RKW4cdbVNnLfeLHtSERsX\"]},\"contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0x4a9b90d005732d65be0cfe79e2e7e5acff598b363dd2b4e947db2a7d24b7cfb7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://be6eb9c6682ed50430c9f99ed66451aaa63f20ccd9868980673cedd8036c5eec\",\"dweb:/ipfs/QmeRyCbxyscLv75PAw4nYgpgqjjMvqhLtKAy5QtdjAyZ5z\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xbb41b77195a206fee42f1c801d1feeefcb84d1d33fcdb537ba2597a2eaf7bf94\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad3474360d05cf4002ea0703ff36dba900dc1b17da8077f8bcaf159c0b0861eb\",\"dweb:/ipfs/QmYTehjAXpiuLErAWGfVw1LFn8g2oZ7YnjLNXcmU5ngPBf\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x2836b8e9e2b6e143d4601e0047dfd09232352038a2133670d2f40da5442ff4b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://64eec4fc70dd4fdf3ad835ef343d56bd4a7c48f2bb0e1f338d9f090e42848660\",\"dweb:/ipfs/Qmeg2aX8QZBggY1tChJQJbkhkbxWFRQPDsZRxUMsGfFg5m\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b\",\"dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU\"]},\"contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0x7d0e883b5d68892df654212a0f4448839358fe66d88728dc2535414edcfb4bdc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d0290659a7ef8ceb30f33617a696b1410d7fd110061eee77419ccce580f5a586\",\"dweb:/ipfs/QmXg2p6zmomxS2B3huDMtgUMSHpstWh3wMYdxt2czs45en\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x1841703b12d5b2ca7dedff94c7dd71a4ad0a0b47ca59ba9de98ea14929fb72e5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c192bfc8bee91341d7e7530d71df2fbaec69d7bf0017e7b318dea276b7f3e171\",\"dweb:/ipfs/QmRWCkdXJ7G2FDo4CpsNuRvDgYWzN9U3LXLzM3YKHs9M4y\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IHyperdriveTargetDeployer.sol\":{\"keccak256\":\"0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed\",\"dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss\"]},\"contracts/src/interfaces/ILido.sol\":{\"keccak256\":\"0x5942f8acaa122bd9f40cc0c6c4a5d489de3537efef6f7e744a89dae8a616ecc9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://629e5370ec6464f25f476b20635d67b06919f37aac7b8decba0756ab3ccbc8e3\",\"dweb:/ipfs/QmdZi8CygBNpvd1oX2GMReYRffbYirNJqnnEGxTkHoWqrw\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0xf692b4673daac8627a185253b5fb99c843d9c5a2897be50599030fbd02c21a28\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ec28e35b2523d2f399c79ec5c8e29a4985a0e7a2d1d83c9a834d84dfc44130a2\",\"dweb:/ipfs/QmZLHmSUkDJsnU2FJ4FuaMfo2t6dPimmLaCDrfuxYF8nmD\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xeabffcfcd0fd642caaa2355dccad38269d25fbd4db1b0db43fd97328bf464862\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6970e3db54bfcca6748db01b871fcee4f8d74fea2e66c39e3320232086633355\",\"dweb:/ipfs/QmPq66eyA4DmnU7m1QpMgKGrJ3ebUeN6e8UEuhb64U3BH2\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xc28d1017afe010c20c2fbe9b78e0001eb8b7db16e0fe5038990692227be365ec\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8056e866c6da775c66cefc4e03d8856d75980d8c6eb98e954e1319b2478ad51c\",\"dweb:/ipfs/Qme9n2mBoeFUxf7Tzx4dD3iYt2kDsza6mqPXoUogPnS2hx\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0xdcf0c77bc29a0b5b2ce06cccfa6f5e936128e5c0f14a5636bfe21faf95c515bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://088172c3f97db68914cdef042d942b0d0c585cce77d004625bfa62a72ac1e95d\",\"dweb:/ipfs/Qmewa9GJtYxBw4fAx4HZJaNuUCKEoQT4c5nmhPyXxVEwwq\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_coreDeployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target0Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target1Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target2Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target3Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target4Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "contract ILido";
                    readonly name: "_lido";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentAlreadyExists";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentDoesNotExist";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "IncompleteDeployment";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFeeAmounts";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumShareReserves";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumTransactionAmount";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidTargetIndex";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedConfig";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedExtraData";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TargetAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "coreDeployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deploy";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_targetIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deployTarget";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "target";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "deployments";
                readonly outputs: readonly [{
                    readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "configHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "extraDataHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initialSharePrice";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "hyperdrive";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target0";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target1";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target2";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target3";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target4";
                        readonly type: "address";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "lido";
                readonly outputs: readonly [{
                    readonly internalType: "contract ILido";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target0Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target1Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target2Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target3Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target4Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly constructor: {
                        readonly params: {
                            readonly _coreDeployer: "The core deployer.";
                            readonly _lido: "The Lido contract.";
                            readonly _target0Deployer: "The target0 deployer.";
                            readonly _target1Deployer: "The target1 deployer.";
                            readonly _target2Deployer: "The target2 deployer.";
                            readonly _target3Deployer: "The target3 deployer.";
                            readonly _target4Deployer: "The target4 deployer.";
                        };
                    };
                    readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy Hyperdrive.";
                        };
                        readonly returns: {
                            readonly _0: "The address of the newly deployed Hyperdrive instance.";
                        };
                    };
                    readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly details: "As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.";
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy the target.";
                            readonly _targetIndex: "The index of the target to deploy.";
                        };
                        readonly returns: {
                            readonly target: "The address of the newly deployed target instance.";
                        };
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly params: {
                            readonly _deployer: "The deployer.";
                            readonly _deploymentId: "The deployment ID.";
                        };
                        readonly returns: {
                            readonly _0: "The deployment.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly constructor: {
                        readonly notice: "Instantiates the deployer coordinator.";
                    };
                    readonly "coreDeployer()": {
                        readonly notice: "The contract used to deploy new instances of Hyperdrive.";
                    };
                    readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the given parameters.";
                    };
                    readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive target instance with the given parameters.";
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly notice: "Gets the deployment specified by the deployer and deployment ID.";
                    };
                    readonly "lido()": {
                        readonly notice: "The Lido contract.";
                    };
                    readonly "target0Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget0.";
                    };
                    readonly "target1Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget1.";
                    };
                    readonly "target2Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget2.";
                    };
                    readonly "target3Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget3.";
                    };
                    readonly "target4Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget4.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol": "StETHHyperdriveDeployerCoordinator";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/deployers/HyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xa514f3df6feb2126925db532c8b0dca054eb6763c3a264c594829108ded99b64";
                readonly urls: readonly ["bzz-raw://eb2beb980386b097c6ef754ce41cb805b8d37520c14f6a3b237626a7048b2bab", "dweb:/ipfs/QmXVVfRufQse6p2VmWcWn8Qf5RKW4cdbVNnLfeLHtSERsX"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0x4a9b90d005732d65be0cfe79e2e7e5acff598b363dd2b4e947db2a7d24b7cfb7";
                readonly urls: readonly ["bzz-raw://be6eb9c6682ed50430c9f99ed66451aaa63f20ccd9868980673cedd8036c5eec", "dweb:/ipfs/QmeRyCbxyscLv75PAw4nYgpgqjjMvqhLtKAy5QtdjAyZ5z"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0xbb41b77195a206fee42f1c801d1feeefcb84d1d33fcdb537ba2597a2eaf7bf94";
                readonly urls: readonly ["bzz-raw://ad3474360d05cf4002ea0703ff36dba900dc1b17da8077f8bcaf159c0b0861eb", "dweb:/ipfs/QmYTehjAXpiuLErAWGfVw1LFn8g2oZ7YnjLNXcmU5ngPBf"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0x2836b8e9e2b6e143d4601e0047dfd09232352038a2133670d2f40da5442ff4b3";
                readonly urls: readonly ["bzz-raw://64eec4fc70dd4fdf3ad835ef343d56bd4a7c48f2bb0e1f338d9f090e42848660", "dweb:/ipfs/Qmeg2aX8QZBggY1tChJQJbkhkbxWFRQPDsZRxUMsGfFg5m"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761";
                readonly urls: readonly ["bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b", "dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0x7d0e883b5d68892df654212a0f4448839358fe66d88728dc2535414edcfb4bdc";
                readonly urls: readonly ["bzz-raw://d0290659a7ef8ceb30f33617a696b1410d7fd110061eee77419ccce580f5a586", "dweb:/ipfs/QmXg2p6zmomxS2B3huDMtgUMSHpstWh3wMYdxt2czs45en"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x1841703b12d5b2ca7dedff94c7dd71a4ad0a0b47ca59ba9de98ea14929fb72e5";
                readonly urls: readonly ["bzz-raw://c192bfc8bee91341d7e7530d71df2fbaec69d7bf0017e7b318dea276b7f3e171", "dweb:/ipfs/QmRWCkdXJ7G2FDo4CpsNuRvDgYWzN9U3LXLzM3YKHs9M4y"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55";
                readonly urls: readonly ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveTargetDeployer.sol": {
                readonly keccak256: "0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205";
                readonly urls: readonly ["bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed", "dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/ILido.sol": {
                readonly keccak256: "0x5942f8acaa122bd9f40cc0c6c4a5d489de3537efef6f7e744a89dae8a616ecc9";
                readonly urls: readonly ["bzz-raw://629e5370ec6464f25f476b20635d67b06919f37aac7b8decba0756ab3ccbc8e3", "dweb:/ipfs/QmdZi8CygBNpvd1oX2GMReYRffbYirNJqnnEGxTkHoWqrw"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0xf692b4673daac8627a185253b5fb99c843d9c5a2897be50599030fbd02c21a28";
                readonly urls: readonly ["bzz-raw://ec28e35b2523d2f399c79ec5c8e29a4985a0e7a2d1d83c9a834d84dfc44130a2", "dweb:/ipfs/QmZLHmSUkDJsnU2FJ4FuaMfo2t6dPimmLaCDrfuxYF8nmD"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xeabffcfcd0fd642caaa2355dccad38269d25fbd4db1b0db43fd97328bf464862";
                readonly urls: readonly ["bzz-raw://6970e3db54bfcca6748db01b871fcee4f8d74fea2e66c39e3320232086633355", "dweb:/ipfs/QmPq66eyA4DmnU7m1QpMgKGrJ3ebUeN6e8UEuhb64U3BH2"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xc28d1017afe010c20c2fbe9b78e0001eb8b7db16e0fe5038990692227be365ec";
                readonly urls: readonly ["bzz-raw://8056e866c6da775c66cefc4e03d8856d75980d8c6eb98e954e1319b2478ad51c", "dweb:/ipfs/Qme9n2mBoeFUxf7Tzx4dD3iYt2kDsza6mqPXoUogPnS2hx"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0xdcf0c77bc29a0b5b2ce06cccfa6f5e936128e5c0f14a5636bfe21faf95c515bf";
                readonly urls: readonly ["bzz-raw://088172c3f97db68914cdef042d942b0d0c585cce77d004625bfa62a72ac1e95d", "dweb:/ipfs/Qmewa9GJtYxBw4fAx4HZJaNuUCKEoQT4c5nmhPyXxVEwwq"];
                readonly license: "Apache-2.0";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/deployers/steth/StETHHyperdriveDeployerCoordinator.sol";
        readonly id: 1526;
        readonly exportedSymbols: {
            readonly FixedPointMath: readonly [14585];
            readonly HyperdriveDeployerCoordinator: readonly [890];
            readonly IHyperdrive: readonly [7480];
            readonly IHyperdriveDeployerCoordinator: readonly [7752];
            readonly ILido: readonly [8338];
            readonly ONE: readonly [13820];
            readonly StETHHyperdriveDeployerCoordinator: readonly [1525];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:3332:9";
        readonly nodes: readonly [{
            readonly id: 1419;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:9";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 1421;
            readonly nodeType: "ImportDirective";
            readonly src: "64:63:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1526;
            readonly sourceUnit: 7481;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1420;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7480;
                    readonly src: "73:11:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1423;
            readonly nodeType: "ImportDirective";
            readonly src: "128:101:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly file: "../../interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1526;
            readonly sourceUnit: 7753;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1422;
                    readonly name: "IHyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 7752;
                    readonly src: "137:30:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1425;
            readonly nodeType: "ImportDirective";
            readonly src: "230:51:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/ILido.sol";
            readonly file: "../../interfaces/ILido.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1526;
            readonly sourceUnit: 8339;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1424;
                    readonly name: "ILido";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 8338;
                    readonly src: "239:5:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1428;
            readonly nodeType: "ImportDirective";
            readonly src: "282:73:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/FixedPointMath.sol";
            readonly file: "../../libraries/FixedPointMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1526;
            readonly sourceUnit: 14586;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1426;
                    readonly name: "FixedPointMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 14585;
                    readonly src: "291:14:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }, {
                readonly foreign: {
                    readonly id: 1427;
                    readonly name: "ONE";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 13820;
                    readonly src: "307:3:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1430;
            readonly nodeType: "ImportDirective";
            readonly src: "356:85:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/deployers/HyperdriveDeployerCoordinator.sol";
            readonly file: "../HyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1526;
            readonly sourceUnit: 891;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1429;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 890;
                    readonly src: "365:29:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1525;
            readonly nodeType: "ContractDefinition";
            readonly src: "807:2563:9";
            readonly nodes: readonly [{
                readonly id: 1436;
                readonly nodeType: "UsingForDirective";
                readonly src: "890:33:9";
                readonly nodes: readonly [];
                readonly global: false;
                readonly libraryName: {
                    readonly id: 1434;
                    readonly name: "FixedPointMath";
                    readonly nameLocations: readonly ["896:14:9"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 14585;
                    readonly src: "896:14:9";
                };
                readonly typeName: {
                    readonly id: 1435;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "915:7:9";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
            }, {
                readonly id: 1440;
                readonly nodeType: "VariableDeclaration";
                readonly src: "964:27:9";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 1437;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "929:30:9";
                    readonly text: "@notice The Lido contract.";
                };
                readonly functionSelector: "23509a2d";
                readonly mutability: "immutable";
                readonly name: "lido";
                readonly nameLocation: "987:4:9";
                readonly scope: 1525;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_contract$_ILido_$8338";
                    readonly typeString: "contract ILido";
                };
                readonly typeName: {
                    readonly id: 1439;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 1438;
                        readonly name: "ILido";
                        readonly nameLocations: readonly ["964:5:9"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 8338;
                        readonly src: "964:5:9";
                    };
                    readonly referencedDeclaration: 8338;
                    readonly src: "964:5:9";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_ILido_$8338";
                        readonly typeString: "contract ILido";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 1472;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1411:498:9";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1471;
                    readonly nodeType: "Block";
                    readonly src: "1880:29:9";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 1469;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 1467;
                                readonly name: "lido";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1440;
                                readonly src: "1890:4:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_ILido_$8338";
                                    readonly typeString: "contract ILido";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 1468;
                                readonly name: "_lido";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1456;
                                readonly src: "1897:5:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_ILido_$8338";
                                    readonly typeString: "contract ILido";
                                };
                            };
                            readonly src: "1890:12:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_ILido_$8338";
                                readonly typeString: "contract ILido";
                            };
                        };
                        readonly id: 1470;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1890:12:9";
                    }];
                };
                readonly documentation: {
                    readonly id: 1441;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "998:408:9";
                    readonly text: "@notice Instantiates the deployer coordinator.\n @param _coreDeployer The core deployer.\n @param _target0Deployer The target0 deployer.\n @param _target1Deployer The target1 deployer.\n @param _target2Deployer The target2 deployer.\n @param _target3Deployer The target3 deployer.\n @param _target4Deployer The target4 deployer.\n @param _lido The Lido contract.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [{
                    readonly arguments: readonly [{
                        readonly id: 1459;
                        readonly name: "_coreDeployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1443;
                        readonly src: "1702:13:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1460;
                        readonly name: "_target0Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1445;
                        readonly src: "1729:16:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1461;
                        readonly name: "_target1Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1447;
                        readonly src: "1759:16:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1462;
                        readonly name: "_target2Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1449;
                        readonly src: "1789:16:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1463;
                        readonly name: "_target3Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1451;
                        readonly src: "1819:16:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1464;
                        readonly name: "_target4Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1453;
                        readonly src: "1849:16:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }];
                    readonly id: 1465;
                    readonly kind: "baseConstructorSpecifier";
                    readonly modifierName: {
                        readonly id: 1458;
                        readonly name: "HyperdriveDeployerCoordinator";
                        readonly nameLocations: readonly ["1659:29:9"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 890;
                        readonly src: "1659:29:9";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "1659:216:9";
                }];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 1457;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1443;
                        readonly mutability: "mutable";
                        readonly name: "_coreDeployer";
                        readonly nameLocation: "1440:13:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1472;
                        readonly src: "1432:21:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1442;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1432:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1445;
                        readonly mutability: "mutable";
                        readonly name: "_target0Deployer";
                        readonly nameLocation: "1471:16:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1472;
                        readonly src: "1463:24:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1444;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1463:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1447;
                        readonly mutability: "mutable";
                        readonly name: "_target1Deployer";
                        readonly nameLocation: "1505:16:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1472;
                        readonly src: "1497:24:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1446;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1497:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1449;
                        readonly mutability: "mutable";
                        readonly name: "_target2Deployer";
                        readonly nameLocation: "1539:16:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1472;
                        readonly src: "1531:24:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1448;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1531:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1451;
                        readonly mutability: "mutable";
                        readonly name: "_target3Deployer";
                        readonly nameLocation: "1573:16:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1472;
                        readonly src: "1565:24:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1450;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1565:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1453;
                        readonly mutability: "mutable";
                        readonly name: "_target4Deployer";
                        readonly nameLocation: "1607:16:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1472;
                        readonly src: "1599:24:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1452;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1599:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1456;
                        readonly mutability: "mutable";
                        readonly name: "_lido";
                        readonly nameLocation: "1639:5:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1472;
                        readonly src: "1633:11:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_ILido_$8338";
                            readonly typeString: "contract ILido";
                        };
                        readonly typeName: {
                            readonly id: 1455;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 1454;
                                readonly name: "ILido";
                                readonly nameLocations: readonly ["1633:5:9"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 8338;
                                readonly src: "1633:5:9";
                            };
                            readonly referencedDeclaration: 8338;
                            readonly src: "1633:5:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_ILido_$8338";
                                readonly typeString: "contract ILido";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1422:228:9";
                };
                readonly returnParameters: {
                    readonly id: 1466;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1880:0:9";
                };
                readonly scope: 1525;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 1509;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2067:920:9";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1508;
                    readonly nodeType: "Block";
                    readonly src: "2181:806:9";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 1483;
                                readonly name: "_deployConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1476;
                                readonly src: "2253:13:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7241_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7241_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }];
                                readonly expression: {
                                    readonly id: 1480;
                                    readonly name: "super";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -25;
                                    readonly src: "2230:5:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_super$_StETHHyperdriveDeployerCoordinator_$1525_$";
                                        readonly typeString: "type(contract super StETHHyperdriveDeployerCoordinator)";
                                    };
                                };
                                readonly id: 1482;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2236:16:9";
                                readonly memberName: "_checkPoolConfig";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 793;
                                readonly src: "2230:22:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$7241_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory) view";
                                };
                            };
                            readonly id: 1484;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2230:37:9";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 1485;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2230:37:9";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 1489;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 1486;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1476;
                                    readonly src: "2530:13:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7241_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 1487;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2544:20:9";
                                readonly memberName: "minimumShareReserves";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7218;
                                readonly src: "2530:34:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly hexValue: "31653135";
                                readonly id: 1488;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "2568:4:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000";
                                };
                                readonly value: "1e15";
                            };
                            readonly src: "2530:42:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1496;
                        readonly nodeType: "IfStatement";
                        readonly src: "2526:140:9";
                        readonly trueBody: {
                            readonly id: 1495;
                            readonly nodeType: "Block";
                            readonly src: "2574:92:9";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1490;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7752;
                                            readonly src: "2595:30:9";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$7752_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 1492;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2626:27:9";
                                        readonly memberName: "InvalidMinimumShareReserves";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7701;
                                        readonly src: "2595:58:9";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 1493;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2595:60:9";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 1494;
                                readonly nodeType: "RevertStatement";
                                readonly src: "2588:67:9";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 1500;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 1497;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1476;
                                    readonly src: "2820:13:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7241_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 1498;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2834:24:9";
                                readonly memberName: "minimumTransactionAmount";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 7221;
                                readonly src: "2820:38:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly hexValue: "31653135";
                                readonly id: 1499;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "2862:4:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000";
                                };
                                readonly value: "1e15";
                            };
                            readonly src: "2820:46:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1507;
                        readonly nodeType: "IfStatement";
                        readonly src: "2816:165:9";
                        readonly trueBody: {
                            readonly id: 1506;
                            readonly nodeType: "Block";
                            readonly src: "2868:113:9";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1501;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 7752;
                                            readonly src: "2889:30:9";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$7752_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 1503;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2937:31:9";
                                        readonly memberName: "InvalidMinimumTransactionAmount";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 7704;
                                        readonly src: "2889:79:9";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 1504;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2889:81:9";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 1505;
                                readonly nodeType: "RevertStatement";
                                readonly src: "2882:88:9";
                            }];
                        };
                    }];
                };
                readonly baseFunctions: readonly [793];
                readonly documentation: {
                    readonly id: 1473;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1915:147:9";
                    readonly text: "@notice Checks the pool configuration to ensure that it is valid.\n @param _deployConfig The deploy configuration of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkPoolConfig";
                readonly nameLocation: "2076:16:9";
                readonly overrides: {
                    readonly id: 1478;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "2172:8:9";
                };
                readonly parameters: {
                    readonly id: 1477;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1476;
                        readonly mutability: "mutable";
                        readonly name: "_deployConfig";
                        readonly nameLocation: "2138:13:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1509;
                        readonly src: "2102:49:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7241_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 1475;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 1474;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["2102:11:9", "2114:16:9"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 7241;
                                readonly src: "2102:28:9";
                            };
                            readonly referencedDeclaration: 7241;
                            readonly src: "2102:28:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$7241_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2092:65:9";
                };
                readonly returnParameters: {
                    readonly id: 1479;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2181:0:9";
                };
                readonly scope: 1525;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 1524;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3135:233:9";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1523;
                    readonly nodeType: "Block";
                    readonly src: "3261:107:9";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 1520;
                                readonly name: "ONE";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 13820;
                                readonly src: "3357:3:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 1518;
                                    readonly name: "lido";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1440;
                                    readonly src: "3331:4:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_ILido_$8338";
                                        readonly typeString: "contract ILido";
                                    };
                                };
                                readonly id: 1519;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3336:20:9";
                                readonly memberName: "getPooledEthByShares";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 8311;
                                readonly src: "3331:25:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_view$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256) view external returns (uint256)";
                                };
                            };
                            readonly id: 1521;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3331:30:9";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 1517;
                        readonly id: 1522;
                        readonly nodeType: "Return";
                        readonly src: "3324:37:9";
                    }];
                };
                readonly baseFunctions: readonly [801];
                readonly documentation: {
                    readonly id: 1510;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2993:137:9";
                    readonly text: "@dev Gets the initial vault share price of the Hyperdrive pool.\n @return The initial vault share price of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_getInitialVaultSharePrice";
                readonly nameLocation: "3144:26:9";
                readonly overrides: {
                    readonly id: 1514;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "3234:8:9";
                };
                readonly parameters: {
                    readonly id: 1513;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1512;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1524;
                        readonly src: "3180:12:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 1511;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3180:5:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3170:49:9";
                };
                readonly returnParameters: {
                    readonly id: 1517;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1516;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1524;
                        readonly src: "3252:7:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 1515;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3252:7:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3251:9:9";
                };
                readonly scope: 1525;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 1432;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nameLocations: readonly ["854:29:9"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 890;
                    readonly src: "854:29:9";
                };
                readonly id: 1433;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "854:29:9";
            }];
            readonly canonicalName: "StETHHyperdriveDeployerCoordinator";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 1431;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "443:364:9";
                readonly text: "@author DELV\n @title StETHHyperdriveDeployerCoordinator\n @notice The deployer coordinator for the StETHHyperdrive implementation.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [1525, 890, 7752];
            readonly name: "StETHHyperdriveDeployerCoordinator";
            readonly nameLocation: "816:34:9";
            readonly scope: 1526;
            readonly usedErrors: readonly [7683, 7686, 7689, 7692, 7695, 7698, 7701, 7704, 7707, 7710, 7713, 7716, 7719];
            readonly usedEvents: readonly [];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 9;
};
//# sourceMappingURL=StETHHyperdriveDeployerCoordinator.d.ts.map