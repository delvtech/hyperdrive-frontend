export const ERC4626Factory = 
{"abi":[{"type":"function","name":"computeERC4626Address","inputs":[{"name":"asset","type":"address","internalType":"contract ERC20"}],"outputs":[{"name":"vault","type":"address","internalType":"contract ERC4626"}],"stateMutability":"view"},{"type":"function","name":"createERC4626","inputs":[{"name":"asset","type":"address","internalType":"contract ERC20"}],"outputs":[{"name":"vault","type":"address","internalType":"contract ERC4626"}],"stateMutability":"nonpayable"},{"type":"event","name":"CreateERC4626","inputs":[{"name":"asset","type":"address","indexed":true,"internalType":"contract ERC20"},{"name":"vault","type":"address","indexed":false,"internalType":"contract ERC4626"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"computeERC4626Address(address)":"80cfde3c","createERC4626(address)":"abeccaa4"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ERC4626\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"CreateERC4626\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"computeERC4626Address\",\"outputs\":[{\"internalType\":\"contract ERC4626\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"createERC4626\",\"outputs\":[{\"internalType\":\"contract ERC4626\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"zefram.eth\",\"details\":\"Uses CREATE2 deterministic deployment, so there can only be a single vault for each asset.\",\"events\":{\"CreateERC4626(address,address)\":{\"params\":{\"asset\":\"The base asset used by the vault\",\"vault\":\"The vault that was created\"}}},\"kind\":\"dev\",\"methods\":{\"computeERC4626Address(address)\":{\"params\":{\"asset\":\"The base asset used by the vault\"},\"returns\":{\"vault\":\"The vault corresponding to the asset\"}},\"createERC4626(address)\":{\"details\":\"Uses CREATE2 deterministic deployment, so there can only be a single vault for each asset. Will revert if a vault has already been deployed for the asset.\",\"params\":{\"asset\":\"The base asset used by the vault\"},\"returns\":{\"vault\":\"The vault that was created\"}}},\"title\":\"ERC4626Factory\",\"version\":1},\"userdoc\":{\"events\":{\"CreateERC4626(address,address)\":{\"notice\":\"Emitted when a new ERC4626 vault has been created\"}},\"kind\":\"user\",\"methods\":{\"computeERC4626Address(address)\":{\"notice\":\"Computes the address of the ERC4626 vault corresponding to an asset. Returns a valid result regardless of whether the vault has already been deployed.\"},\"createERC4626(address)\":{\"notice\":\"Creates an ERC4626 vault for an asset\"}},\"notice\":\"Abstract base contract for deploying ERC4626 wrappers\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/yield-daddy/src/base/ERC4626Factory.sol\":\"ERC4626Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":aave-v3-core/=lib/aave-v3-core/\",\":create3-factory/=lib/yield-daddy/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\",\":yield-daddy/=lib/yield-daddy/\"]},\"sources\":{\"lib/solmate/src/mixins/ERC4626.sol\":{\"keccak256\":\"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1\",\"dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/Bytes32AddressLib.sol\":{\"keccak256\":\"0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9633ab7c471e653dfb37c78b6475db47924c9ee731118545b5bc28aad97f2434\",\"dweb:/ipfs/Qmbt9gLb3hrs21nQxwSiG1ciE56Y73LLt1iPDfnmkcz27E\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"lib/yield-daddy/src/base/ERC4626Factory.sol\":{\"keccak256\":\"0x84317f4b0f013d7406bf4ed58ad60e01d0f317faa8793404c2b825900f7ffe06\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://5dc99858968ceb4da6ff7a3c0a7c4e1fccf614763a8fc9f04b4d5b3de372bb16\",\"dweb:/ipfs/Qmd8czni6sRePUnjhof36VgX2eZFDFTC58Y7wYk73KzSHC\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract ERC20","name":"asset","type":"address","indexed":true},{"internalType":"contract ERC4626","name":"vault","type":"address","indexed":false}],"type":"event","name":"CreateERC4626","anonymous":false},{"inputs":[{"internalType":"contract ERC20","name":"asset","type":"address"}],"stateMutability":"view","type":"function","name":"computeERC4626Address","outputs":[{"internalType":"contract ERC4626","name":"vault","type":"address"}]},{"inputs":[{"internalType":"contract ERC20","name":"asset","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"createERC4626","outputs":[{"internalType":"contract ERC4626","name":"vault","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"computeERC4626Address(address)":{"params":{"asset":"The base asset used by the vault"},"returns":{"vault":"The vault corresponding to the asset"}},"createERC4626(address)":{"details":"Uses CREATE2 deterministic deployment, so there can only be a single vault for each asset. Will revert if a vault has already been deployed for the asset.","params":{"asset":"The base asset used by the vault"},"returns":{"vault":"The vault that was created"}}},"version":1},"userdoc":{"kind":"user","methods":{"computeERC4626Address(address)":{"notice":"Computes the address of the ERC4626 vault corresponding to an asset. Returns a valid result regardless of whether the vault has already been deployed."},"createERC4626(address)":{"notice":"Creates an ERC4626 vault for an asset"}},"version":1}},"settings":{"remappings":["aave-v3-core/=lib/aave-v3-core/","create3-factory/=lib/yield-daddy/lib/create3-factory/","ds-test/=lib/forge-std/lib/ds-test/src/","forge-std/=lib/forge-std/src/","solmate/=lib/solmate/src/","yield-daddy/=lib/yield-daddy/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/yield-daddy/src/base/ERC4626Factory.sol":"ERC4626Factory"},"libraries":{}},"sources":{"lib/solmate/src/mixins/ERC4626.sol":{"keccak256":"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b","urls":["bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1","dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs"],"license":"AGPL-3.0-only"},"lib/solmate/src/tokens/ERC20.sol":{"keccak256":"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10","urls":["bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35","dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"],"license":"AGPL-3.0-only"},"lib/solmate/src/utils/Bytes32AddressLib.sol":{"keccak256":"0xe709c9f2c6fb8bfe1158fa31967c0a2109844c52079fe4e327baec82fb87acb6","urls":["bzz-raw://9633ab7c471e653dfb37c78b6475db47924c9ee731118545b5bc28aad97f2434","dweb:/ipfs/Qmbt9gLb3hrs21nQxwSiG1ciE56Y73LLt1iPDfnmkcz27E"],"license":"AGPL-3.0-only"},"lib/solmate/src/utils/FixedPointMathLib.sol":{"keccak256":"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843","urls":["bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9","dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"],"license":"AGPL-3.0-only"},"lib/solmate/src/utils/SafeTransferLib.sol":{"keccak256":"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a","urls":["bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4","dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"],"license":"AGPL-3.0-only"},"lib/yield-daddy/src/base/ERC4626Factory.sol":{"keccak256":"0x84317f4b0f013d7406bf4ed58ad60e01d0f317faa8793404c2b825900f7ffe06","urls":["bzz-raw://5dc99858968ceb4da6ff7a3c0a7c4e1fccf614763a8fc9f04b4d5b3de372bb16","dweb:/ipfs/Qmd8czni6sRePUnjhof36VgX2eZFDFTC58Y7wYk73KzSHC"],"license":"AGPL-3.0"}},"version":1},"ast":{"absolutePath":"lib/yield-daddy/src/base/ERC4626Factory.sol","id":66700,"exportedSymbols":{"Bytes32AddressLib":[65314],"ERC20":[65275],"ERC4626":[64887],"ERC4626Factory":[66699]},"nodeType":"SourceUnit","src":"37:3124:120","nodes":[{"id":66629,"nodeType":"PragmaDirective","src":"37:24:120","nodes":[],"literals":["solidity","^","0.8",".13"]},{"id":66631,"nodeType":"ImportDirective","src":"63:47:120","nodes":[],"absolutePath":"lib/solmate/src/tokens/ERC20.sol","file":"solmate/tokens/ERC20.sol","nameLocation":"-1:-1:-1","scope":66700,"sourceUnit":65276,"symbolAliases":[{"foreign":{"id":66630,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65275,"src":"71:5:120","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":66633,"nodeType":"ImportDirective","src":"111:51:120","nodes":[],"absolutePath":"lib/solmate/src/mixins/ERC4626.sol","file":"solmate/mixins/ERC4626.sol","nameLocation":"-1:-1:-1","scope":66700,"sourceUnit":64888,"symbolAliases":[{"foreign":{"id":66632,"name":"ERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64887,"src":"119:7:120","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":66635,"nodeType":"ImportDirective","src":"163:70:120","nodes":[],"absolutePath":"lib/solmate/src/utils/Bytes32AddressLib.sol","file":"solmate/utils/Bytes32AddressLib.sol","nameLocation":"-1:-1:-1","scope":66700,"sourceUnit":65315,"symbolAliases":[{"foreign":{"id":66634,"name":"Bytes32AddressLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65314,"src":"171:17:120","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":66699,"nodeType":"ContractDefinition","src":"454:2706:120","nodes":[{"id":66639,"nodeType":"UsingForDirective","src":"676:36:120","nodes":[],"global":false,"libraryName":{"id":66637,"name":"Bytes32AddressLib","nameLocations":["682:17:120"],"nodeType":"IdentifierPath","referencedDeclaration":65314,"src":"682:17:120"},"typeName":{"id":66638,"name":"bytes32","nodeType":"ElementaryTypeName","src":"704:7:120","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"id":66648,"nodeType":"EventDefinition","src":"1062:56:120","nodes":[],"anonymous":false,"documentation":{"id":66640,"nodeType":"StructuredDocumentation","src":"894:163:120","text":"@notice Emitted when a new ERC4626 vault has been created\n @param asset The base asset used by the vault\n @param vault The vault that was created"},"eventSelector":"cbd4e5d1362721c7fd10daaabb1a046344447d4798be55684b8a6b4fc1765d72","name":"CreateERC4626","nameLocation":"1068:13:120","parameters":{"id":66647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66643,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"1096:5:120","nodeType":"VariableDeclaration","scope":66648,"src":"1082:19:120","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$65275","typeString":"contract ERC20"},"typeName":{"id":66642,"nodeType":"UserDefinedTypeName","pathNode":{"id":66641,"name":"ERC20","nameLocations":["1082:5:120"],"nodeType":"IdentifierPath","referencedDeclaration":65275,"src":"1082:5:120"},"referencedDeclaration":65275,"src":"1082:5:120","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$65275","typeString":"contract ERC20"}},"visibility":"internal"},{"constant":false,"id":66646,"indexed":false,"mutability":"mutable","name":"vault","nameLocation":"1111:5:120","nodeType":"VariableDeclaration","scope":66648,"src":"1103:13:120","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$64887","typeString":"contract ERC4626"},"typeName":{"id":66645,"nodeType":"UserDefinedTypeName","pathNode":{"id":66644,"name":"ERC4626","nameLocations":["1103:7:120"],"nodeType":"IdentifierPath","referencedDeclaration":64887,"src":"1103:7:120"},"referencedDeclaration":64887,"src":"1103:7:120","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$64887","typeString":"contract ERC4626"}},"visibility":"internal"}],"src":"1081:36:120"}},{"id":66658,"nodeType":"FunctionDefinition","src":"1645:77:120","nodes":[],"documentation":{"id":66649,"nodeType":"StructuredDocumentation","src":"1312:328:120","text":"@notice Creates an ERC4626 vault for an asset\n @dev Uses CREATE2 deterministic deployment, so there can only be a single\n vault for each asset. Will revert if a vault has already been deployed for the asset.\n @param asset The base asset used by the vault\n @return vault The vault that was created"},"functionSelector":"abeccaa4","implemented":false,"kind":"function","modifiers":[],"name":"createERC4626","nameLocation":"1654:13:120","parameters":{"id":66653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66652,"mutability":"mutable","name":"asset","nameLocation":"1674:5:120","nodeType":"VariableDeclaration","scope":66658,"src":"1668:11:120","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$65275","typeString":"contract ERC20"},"typeName":{"id":66651,"nodeType":"UserDefinedTypeName","pathNode":{"id":66650,"name":"ERC20","nameLocations":["1668:5:120"],"nodeType":"IdentifierPath","referencedDeclaration":65275,"src":"1668:5:120"},"referencedDeclaration":65275,"src":"1668:5:120","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$65275","typeString":"contract ERC20"}},"visibility":"internal"}],"src":"1667:13:120"},"returnParameters":{"id":66657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66656,"mutability":"mutable","name":"vault","nameLocation":"1715:5:120","nodeType":"VariableDeclaration","scope":66658,"src":"1707:13:120","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$64887","typeString":"contract ERC4626"},"typeName":{"id":66655,"nodeType":"UserDefinedTypeName","pathNode":{"id":66654,"name":"ERC4626","nameLocations":["1707:7:120"],"nodeType":"IdentifierPath","referencedDeclaration":64887,"src":"1707:7:120"},"referencedDeclaration":64887,"src":"1707:7:120","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$64887","typeString":"contract ERC4626"}},"visibility":"internal"}],"src":"1706:15:120"},"scope":66699,"stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"id":66668,"nodeType":"FunctionDefinition","src":"2016:90:120","nodes":[],"documentation":{"id":66659,"nodeType":"StructuredDocumentation","src":"1728:283:120","text":"@notice Computes the address of the ERC4626 vault corresponding to an asset. Returns\n a valid result regardless of whether the vault has already been deployed.\n @param asset The base asset used by the vault\n @return vault The vault corresponding to the asset"},"functionSelector":"80cfde3c","implemented":false,"kind":"function","modifiers":[],"name":"computeERC4626Address","nameLocation":"2025:21:120","parameters":{"id":66663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66662,"mutability":"mutable","name":"asset","nameLocation":"2053:5:120","nodeType":"VariableDeclaration","scope":66668,"src":"2047:11:120","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$65275","typeString":"contract ERC20"},"typeName":{"id":66661,"nodeType":"UserDefinedTypeName","pathNode":{"id":66660,"name":"ERC20","nameLocations":["2047:5:120"],"nodeType":"IdentifierPath","referencedDeclaration":65275,"src":"2047:5:120"},"referencedDeclaration":65275,"src":"2047:5:120","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20_$65275","typeString":"contract ERC20"}},"visibility":"internal"}],"src":"2046:13:120"},"returnParameters":{"id":66667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66666,"mutability":"mutable","name":"vault","nameLocation":"2099:5:120","nodeType":"VariableDeclaration","scope":66668,"src":"2091:13:120","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$64887","typeString":"contract ERC4626"},"typeName":{"id":66665,"nodeType":"UserDefinedTypeName","pathNode":{"id":66664,"name":"ERC4626","nameLocations":["2091:7:120"],"nodeType":"IdentifierPath","referencedDeclaration":64887,"src":"2091:7:120"},"referencedDeclaration":64887,"src":"2091:7:120","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$64887","typeString":"contract ERC4626"}},"visibility":"internal"}],"src":"2090:15:120"},"scope":66699,"stateMutability":"view","virtual":true,"visibility":"external"},{"id":66698,"nodeType":"FunctionDefinition","src":"2784:374:120","nodes":[],"body":{"id":66697,"nodeType":"Block","src":"2878:280:120","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30784646","id":66681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2929:4:120","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}],"id":66680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2922:6:120","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":66679,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2922:6:120","typeDescriptions":{}}},"id":66682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:12:120","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"arguments":[{"id":66685,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2944:4:120","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626Factory_$66699","typeString":"contract ERC4626Factory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626Factory_$66699","typeString":"contract ERC4626Factory"}],"id":66684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2936:7:120","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":66683,"name":"address","nodeType":"ElementaryTypeName","src":"2936:7:120","typeDescriptions":{}}},"id":66686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2936:13:120","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":66689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2959:1:120","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":66688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2951:7:120","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":66687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2951:7:120","typeDescriptions":{}}},"id":66690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2951:10:120","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":66691,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66671,"src":"2963:12:120","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":66677,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2905:3:120","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":66678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2909:12:120","memberName":"encodePacked","nodeType":"MemberAccess","src":"2905:16:120","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":66692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2905:71:120","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":66676,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2895:9:120","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":66693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2895:82:120","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":66694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3089:15:120","memberName":"fromLast20Bytes","nodeType":"MemberAccess","referencedDeclaration":65297,"src":"2895:209:120","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (address)"}},"id":66695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2895:211:120","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":66675,"id":66696,"nodeType":"Return","src":"2888:218:120"}]},"documentation":{"id":66669,"nodeType":"StructuredDocumentation","src":"2300:479:120","text":"@notice Computes the address of a contract deployed by this factory using CREATE2, given\n the bytecode hash of the contract. Can also be used to predict addresses of contracts yet to\n be deployed.\n @dev Always uses bytes32(0) as the salt\n @param bytecodeHash The keccak256 hash of the creation code of the contract being deployed concatenated\n with the ABI-encoded constructor arguments.\n @return The address of the deployed contract"},"implemented":true,"kind":"function","modifiers":[],"name":"_computeCreate2Address","nameLocation":"2793:22:120","parameters":{"id":66672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66671,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2824:12:120","nodeType":"VariableDeclaration","scope":66698,"src":"2816:20:120","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":66670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2816:7:120","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2815:22:120"},"returnParameters":{"id":66675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":66698,"src":"2869:7:120","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66673,"name":"address","nodeType":"ElementaryTypeName","src":"2869:7:120","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2868:9:120"},"scope":66699,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ERC4626Factory","contractDependencies":[],"contractKind":"contract","documentation":{"id":66636,"nodeType":"StructuredDocumentation","src":"235:219:120","text":"@title ERC4626Factory\n @author zefram.eth\n @notice Abstract base contract for deploying ERC4626 wrappers\n @dev Uses CREATE2 deterministic deployment, so there can only be a single\n vault for each asset."},"fullyImplemented":false,"linearizedBaseContracts":[66699],"name":"ERC4626Factory","nameLocation":"472:14:120","scope":66700,"usedErrors":[]}],"license":"AGPL-3.0"},"id":120} as const;
