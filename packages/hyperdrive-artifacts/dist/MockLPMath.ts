export const MockLPMath = 
{
  "abi": [
    {
      "inputs": [],
      "name": "FixedPointMath_InvalidExponent",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FixedPointMath_InvalidInput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidShareReserves",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTradeSize",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NegativePresentValue",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "shareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "shareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "bondReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeStretch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longAverageTimeRemaining",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortAverageTimeRemaining",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LPMath.PresentValueParams",
              "name": "presentValueParams",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "startingPresentValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "activeLpTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalSharesTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "idle",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "netCurveTrade",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "originalShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "originalShareAdjustment",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "originalBondReserves",
              "type": "uint256"
            }
          ],
          "internalType": "struct LPMath.DistributeExcessIdleParams",
          "name": "_params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_originalEffectiveShareReserves",
          "type": "uint256"
        }
      ],
      "name": "calculateDistributeExcessIdleShareProceeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "shareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "shareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "bondReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeStretch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longAverageTimeRemaining",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortAverageTimeRemaining",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LPMath.PresentValueParams",
              "name": "presentValueParams",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "startingPresentValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "activeLpTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalSharesTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "idle",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "netCurveTrade",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "originalShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "originalShareAdjustment",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "originalBondReserves",
              "type": "uint256"
            }
          ],
          "internalType": "struct LPMath.DistributeExcessIdleParams",
          "name": "_params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_shareReservesDelta",
          "type": "uint256"
        }
      ],
      "name": "calculateDistributeExcessIdleWithdrawalSharesRedeemed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "shareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "shareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "bondReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeStretch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longAverageTimeRemaining",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortAverageTimeRemaining",
                  "type": "uint256"
                }
              ],
              "internalType": "struct LPMath.PresentValueParams",
              "name": "presentValueParams",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "startingPresentValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "activeLpTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalSharesTotalSupply",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "idle",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "netCurveTrade",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "originalShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "originalShareAdjustment",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "originalBondReserves",
              "type": "uint256"
            }
          ],
          "internalType": "struct LPMath.DistributeExcessIdleParams",
          "name": "_params",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_originalEffectiveShareReserves",
          "type": "uint256"
        }
      ],
      "name": "calculateMaxShareReservesDelta",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "shareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "shareAdjustment",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "bondReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeStretch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longsOutstanding",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longAverageTimeRemaining",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortsOutstanding",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortAverageTimeRemaining",
              "type": "uint256"
            }
          ],
          "internalType": "struct LPMath.PresentValueParams",
          "name": "_params",
          "type": "tuple"
        }
      ],
      "name": "calculateNetCurveTrade",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "shareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "shareAdjustment",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "bondReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeStretch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longsOutstanding",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longAverageTimeRemaining",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortsOutstanding",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortAverageTimeRemaining",
              "type": "uint256"
            }
          ],
          "internalType": "struct LPMath.PresentValueParams",
          "name": "_params",
          "type": "tuple"
        }
      ],
      "name": "calculateNetFlatTrade",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "shareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "shareAdjustment",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "bondReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "sharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialSharePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minimumShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeStretch",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longsOutstanding",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "longAverageTimeRemaining",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortsOutstanding",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "shortAverageTimeRemaining",
              "type": "uint256"
            }
          ],
          "internalType": "struct LPMath.PresentValueParams",
          "name": "_params",
          "type": "tuple"
        }
      ],
      "name": "calculatePresentValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shareReserves",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "_shareAdjustment",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_bondReserves",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimumShareReserves",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "_shareReservesDelta",
          "type": "int256"
        }
      ],
      "name": "calculateUpdateLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shareReserves",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "shareAdjustment",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "bondReserves",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612344806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637d840b6d1161005b5780637d840b6d146100ce578063b500f3cb146100e1578063ce2e339c1461010f578063f10824481461012257600080fd5b806337043a53146100825780635dcbd5ca146100a857806374bbc903146100bb575b600080fd5b610095610090366004612143565b610135565b6040519081526020015b60405180910390f35b6100956100b6366004612160565b610146565b6100956100c9366004612143565b610159565b6100956100dc366004612160565b610164565b6100f46100ef3660046121ff565b610170565b6040805193845260208401929092529082015260600161009f565b61009561011d366004612160565b610194565b610095610130366004612143565b6101a0565b600061014082610220565b92915050565b60006101528383610250565b9392505050565b600061014082610554565b600061015283836105bb565b600080600061018288888888886109e6565b9250925092505b955095509592505050565b60006101528383610a99565b60008060006101ae84610b4e565b91509150806102195760405162461bcd60e51b815260206004820152602d60248201527f4d6f636b4c504d6174683a2063616c63756c6174654e6574437572766554726160448201526c191954d859994819985a5b1959609a1b606482015260840160405180910390fd5b5092915050565b600080600061022e84610d8b565b91509150806102195760405163aeeb825d60e01b815260040160405180910390fd5b6000808360a001511261026857506080820151610140565b60008360a0015161027890612250565b90506102a98460c001518560e00151866101000151876000015160a0015188608001516102a490612250565b6109e6565b865160408101919091526020808201929092529190915284518051910151600091610309916102d89190610e05565b8651604081015160c0909101516102f790670de0b6b3a764000061226c565b88516060810151608090910151610e22565b905081811061031f575050506080820151610140565b50600061032d858584610ebf565b905060005b60038110156104af576103618660c001518760e00151886101000151896000015160a00151866102a490612250565b8851604081019190915260208082019290925291909152865180519101516000916103c1916103909190610e05565b8851604081015160c0909101516103af90670de0b6b3a764000061226c565b8a516060810151608090910151610e22565b90506000806103d0898961106c565b91509150806103e1575050506104af565b858311156104435784965061040d620f4240670de0b6b3a7640000610406919061227f565b87906112ea565b831161041e57505050505050610140565b6104328261042c888661226c565b906112ff565b61043c908661227f565b945061048d565b8583101561047f57600061045b8361042c868a61226c565b905085811061046d57505050506104af565b610477818761226c565b95505061048d565b849650505050505050610140565b88608001518511156104a157886080015194505b836001019350505050610332565b5082811461054c576104dd8560c001518660e00151876101000151886000015160a00151856102a490612250565b87516040810191909152602080820192909252919091528551805191015160009161053d9161050c9190610e05565b8751604081015160c09091015161052b90670de0b6b3a764000061226c565b89516060810151608090910151610e22565b905082811061054a578193505b505b505092915050565b6000610583826101000151670de0b6b3a7640000610572919061226c565b606084015160e08501519190611310565b6105b1836101400151670de0b6b3a764000061059f919061226c565b60608501516101208601519190611310565b6101409190612292565b600080836060015184604001516105d2919061227f565b90508360a001516000036105fc57606084015160208501516105f49183611310565b915050610140565b60208401516060850151600091610614919084611310565b905060008560a0015113156108565760005b6004811015610850576106558660c001518760e00151886101000151896000015160a00151866102a490612250565b88516040810191909152602081019190915252855160009061067690610220565b905061068387828661132e565b1561068e5750610850565b865180516020820151604083015160a084015160c09094015160009485946106db94909390929091906106c990670de0b6b3a764000061226c565b8e5160608101516080909101516113a7565b91509150806106ec57505050610850565b6000828a60a001511161074f576107088a8a8c60a00151611489565b925090508115806107215750670de0b6b3a76400008110155b15610736576000975050505050505050610140565b61074881670de0b6b3a764000061226c565b9050610781565b6107588a61174a565b909650915081610772576000975050505050505050610140565b85975050505050505050610140565b600061079e8b604001518c6020015161183590919063ffffffff16565b6107a8868a6112ea565b6107b29190612292565b905060008113156107e2576107d16107ca838a611835565b82906112ff565b6107db908861227f565b9650610840565b60008112156108365760006108036107fa848b611835565b61042c84612250565b90508781101561081e57610817818961226c565b9750610830565b60009950505050505050505050610140565b50610840565b5050505050610850565b8560010195505050505050610626565b506109de565b60005b60048110156109dc576108888660c001518760e00151886101000151896000015160a00151866102a490612250565b8851604081019190915260208101919091525285516000906108a990610220565b90506108b687828661132e565b156108c157506109dc565b6000806108dc89898b60a001516108d790612250565b61184a565b915091508015806108f55750670de0b6b3a76400008210155b156109095760009650505050505050610140565b61091b82670de0b6b3a764000061226c565b9150600061093a8a604001518b6020015161183590919063ffffffff16565b61094485896112ea565b61094e9190612292565b90506000811315610978576109678761042c83866112ff565b610971908761227f565b95506109cd565b60008112156109c45760006109928861042c868186612250565b9050868110156109ad576109a6818861226c565b96506109be565b600098505050505050505050610140565b506109cd565b505050506109dc565b84600101945050505050610859565b505b949350505050565b600080600083600003610a00575086915085905084610189565b6000610a0c858a6122b2565b905085811215610a2f5760405163585fe6df60e11b815260040160405180910390fd5b80935060008812610a4c57610a4584898b611310565b9250610a6c565b610a60610a5889612250565b85908b611310565b610a6990612250565b92505b610a8b87610a7a8b8b610e05565b610a848787610e05565b9190611310565b915050955095509592505050565b6000610ac18360c001518460e00151856101000151866000015160a00151866102a490612250565b8551604081019190915260208101919091525282516000908190610ae490610d8b565b91509150801580610af9575084602001518210155b15610b0957600092505050610140565b600085606001518660400151610b1f919061227f565b9050610b3a838760200151836113109092919063ffffffff16565b610b44908261226c565b9695505050505050565b6000806000610b708461014001518561012001516112ea90919063ffffffff16565b61010085015160e0860151610b84916112ea565b610b8e9190612292565b90506000610ba485600001518660200151610e05565b90506000821315610ca7576000829050600080610bf5886000015189602001518a604001518b60a001518c60c00151670de0b6b3a7640000610be6919061226c565b8d606001518e608001516113a7565b9150915080610c0e575060009788975095505050505050565b828210610c63576000610c48858a60400151868c60c00151670de0b6b3a7640000610c39919061226c565b8d606001518e60800151611989565b9050610c5381612250565b9960019950975050505050505050565b6000886020015112610c965760a0880151610c7e908561226c565b610c8790612250565b98600198509650505050505050565b60a08801518851610c7e919061226c565b6000821215610d7d576000610cbb83612250565b90506000610cef8388604001518960c00151670de0b6b3a7640000610ce0919061226c565b8a606001518b60800151610e22565b9050818110610d2b576000610c87848960400151858b60c00151670de0b6b3a7640000610d1c919061226c565b8c606001518d608001516119c8565b6000610d5d8489604001518a60c00151670de0b6b3a7640000610d4e919061226c565b8b606001518c60800151611a6a565b9050610d738860600151838561042c919061226c565b610c87908261227f565b506000946001945092505050565b6000806000806000610d9c86610b4e565b9150915080610db357506000958695509350505050565b8560a00151610dc187610554565b8751610dce9085906122b2565b610dd891906122b2565b610de29190612292565b925050506000811215610dfb5750600093849350915050565b9360019350915050565b600080610e128385612292565b9050600081121561015257600080fd5b600080610e328787878787611af9565b90506000610e5d670de0b6b3a7640000610e4c87876112ff565b610e56919061227f565b8390611b28565b9050670de0b6b3a76400008110610e9157610e8a610e83670de0b6b3a764000088611b28565b8290611b3d565b9050610ea9565b610ea6610e83670de0b6b3a7640000886112ff565b90505b610eb3818861226c565b98975050505050505050565b825160808101516060909101516000918291610f2e91670de0b6b3a764000091610ee8916112ff565b610ef2919061227f565b610100870151875160c00151610f28918891610f1690670de0b6b3a764000061226c565b8a516060810151608090910151611af9565b90611b28565b9050670de0b6b3a76400008110610f7557845160c00151610f6e90610e8390610f5f90670de0b6b3a764000061226c565b670de0b6b3a764000090611b28565b9050610fa7565b845160c00151610fa490610e8390610f9590670de0b6b3a764000061226c565b670de0b6b3a7640000906112ff565b90505b610fb1838261227f565b905060008560e001511261100d57611006610fff610fe08760c001518860e00151611b2890919063ffffffff16565b610ff290670de0b6b3a764000061226c565b6101008801519087611310565b8290611b28565b905061103e565b61103b610fff6110298760c001518860e0015161042c90612250565b610ff290670de0b6b3a764000061227f565b90505b8460c001518110611053576000915050610152565b808560c00151611063919061226c565b95945050505050565b815180516020909101516000918291829161108691610e05565b855160c08101516040909101519192506000916110bd916110b1916110aa91611b3d565b8790611835565b610100880151906112ff565b865160c08101516080909101516110ee916110e2916110dc9087611835565b90611b3d565b885160600151906112ff565b6110f8919061227f565b9050600061113783886000015160400151896000015160c00151670de0b6b3a7640000611125919061226c565b8a516060810151608090910151611b94565b9050670de0b6b3a7640000811061118e57611187611180611179896000015160c00151670de0b6b3a764000061116d919061226c565b8a5160c00151906112ff565b8390611b3d565b83906112ea565b91506111c2565b6111bf611180611179896000015160c00151670de0b6b3a76400006111b3919061226c565b8a5160c0015190611b28565b91505b6112196112126111e7896000015160c00151670de0b6b3a7640000610f5f919061226c565b89516080810151606090910151670de0b6b3a7640000916112089190611b28565b6110dc919061227f565b83906112ff565b9150600061123587896101000151611b2890919063ffffffff16565b905080831161124f57611248838261226c565b925061125f565b60008095509550505050506112e3565b60008860e00151126112a9576112a28361128a8a60c001518b60e001516112ff90919063ffffffff16565b61129c90670de0b6b3a764000061226c565b90611835565b92506112d8565b6112d5836112c38a60c001518b60e00151610f2890612250565b61129c90670de0b6b3a764000061227f565b92505b509093506001925050505b9250929050565b60006101528383670de0b6b3a7640000611310565b600061015283670de0b6b3a7640000845b600082600019048411830215820261132757600080fd5b5091020490565b6000806113488486602001516112ff90919063ffffffff16565b905060006113638660400151856112ff90919063ffffffff16565b90508181101561137857600092505050610152565b818110158015610b44575061139c611180633b9aca00670de0b6b3a764000061227f565b101595945050505050565b60008060008812156113c9576113bc88612250565b6113c6908761227f565b95505b60006113d58a8a610e05565b905060006113e6828a898989611b94565b905060006114036113fb896110dc898d611835565b889088611bb9565b61140d908361226c565b9050670de0b6b3a7640000811061143a57611433610e83670de0b6b3a76400008a6112ff565b9050611452565b61144f610e83670de0b6b3a76400008a611b28565b90505b89811015611469576000809450945050505061147d565b6114738a8261226c565b6001945094505050505b97509795505050505050565b82518051602090910151600091829182916114a391610e05565b905060006114e06114d46114cd896000015160c00151888b60000151604001516110dc919061227f565b8890611835565b610100890151906112ff565b875160c081015160409091015161151191611505916114fe91611b3d565b89906112ea565b6101008a015190611b28565b885160c081015160809091015161153c91611530916110dc90886112ea565b8a516060015190611b28565b611546919061227f565b611550919061226c565b9050600061158f838960000151604001518a6000015160c00151670de0b6b3a764000061157d919061226c565b8b516060810151608090910151611af9565b905060006115c3896000015160c00151670de0b6b3a76400006115b2919061226c565b8a51604001516110dc908a9061227f565b9050808210156115dd576000809550955050505050611742565b6115fe6115ea828461226c565b8a5160608101516080909101519190611bb9565b9050670de0b6b3a7640000811061164257885160c0015161163b90610e839061162f90670de0b6b3a764000061226c565b8b5160c0015190611b28565b9050611671565b885160c0015161166e90610e839061166290670de0b6b3a764000061226c565b8b5160c00151906112ff565b90505b8851606001516116849084908390611bb9565b925082670de0b6b3a7640000106116ae576116a783670de0b6b3a764000061226c565b92506116bf565b600060019550955050505050611742565b60008960e0015112611709576117026116e98a60c001518b60e00151611b2890919063ffffffff16565b6116fb90670de0b6b3a764000061226c565b84906112ea565b9250611737565b6117346117228a60c001518b60e0015161042c90612250565b6116fb90670de0b6b3a764000061227f565b92505b509093506001925050505b935093915050565b60008060008360e001511361176457506000928392509050565b60c083015183515260e0830151835160200152610100830151835160400152825160009061179190610554565b905060008082126117d3576040850151606086015183916117c2916117b6908261227f565b60208901519190611bb9565b6117cc919061226c565b9050611802565b6117dc82612250565b604086015160608701516117f591906117b6908261227f565b6117ff919061227f565b90505b60e085015160c0860151611817918390611bb9565b9050808560c00151611829919061226c565b95600195509350505050565b60006101528383670de0b6b3a7640000611bb9565b825180516020909101516000918291829161186491610e05565b9050600061188e6114d46114cd896000015160c00151888b60000151604001516110dc919061226c565b875160c08101516040909101516118ac91611505916114fe91611b3d565b885160c08101516080909101516118cb91611530916110dc90886112ea565b6118d5919061227f565b6118df919061226c565b9050600061190c838960000151604001518a6000015160c00151670de0b6b3a764000061157d919061226c565b90506000611940896000015160c00151670de0b6b3a764000061192f919061226c565b8a51604001516110dc908a9061226c565b90508082101561195a576000809550955050505050611742565b6119676115ea828461226c565b9050885160c0015161163b90610e839061162f90670de0b6b3a764000061226c565b60008061199a888888888888611bdf565b9092509050806119bd57604051637ac17d2560e01b815260040160405180910390fd5b509695505050505050565b6000806119d88888878787611af9565b90506119e8856110dc888a61226c565b96506000611a0284866119fb8b8661226c565b9190611bb9565b9050670de0b6b3a76400008110611a2f57611a28610e83670de0b6b3a764000088611b28565b9050611a47565b611a44610e83670de0b6b3a7640000886112ff565b90505b611a518185611b28565b9050611a5d898261226c565b9998505050505050505050565b600080611a7a8787878787611b94565b90506000611a9e670de0b6b3a7640000611a948787611b28565b611212919061227f565b9050670de0b6b3a76400008110611acb57611ac4610e83670de0b6b3a7640000886112ff565b9050611ae3565b611ae0610e83670de0b6b3a764000088611b28565b90505b611aed81856112ff565b9050610eb3888261226c565b6000611b058585611b3d565b611b1e611b16866110dc868b611835565b859085611bb9565b610b44919061227f565b600061015283670de0b6b3a764000084611bb9565b600081600003611b565750670de0b6b3a7640000610140565b82600003611b6657506000610140565b816000611b7285611ca1565b9050818102611b89670de0b6b3a7640000826122d2565b9050610b4481611ebd565b6000611ba08585611b3d565b611b1e611bb1866110dc868b6112ea565b859085611310565b6000826000190484118302158202611bd057600080fd5b50910281810615159190040190565b6000806000611bf18989888888611af9565b9050611c01866110dc898b61227f565b975087811015611c18576000809250925050611c96565b6000611c2985876119fb8c8661226c565b9050670de0b6b3a76400008110611c5657611c4f610e83670de0b6b3a764000089611b28565b9050611c6e565b611c6b610e83670de0b6b3a7640000896112ff565b90505b611c788186611b28565b9050808a1115611c8f57611c8c818b61226c565b93505b6001925050505b965096945050505050565b6000808213611cc357604051636838feed60e11b815260040160405180910390fd5b5060606fffffffffffffffffffffffffffffffff821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110600190811b90911783811c90911017609f81810383019390931b90921c6c465772b2bbbb5f824b15207a3081018102821d6d0388eaa27412d5aca026815d636e018102821d6d0df99ac502031bf953eff472fdcc018102821d6d13cdffb29d51d99322bdff5f2211018102821d6d0a0f742023def783a307a986912e018102821d6d01920d8043ca89b5239253284e42018102821d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7882018202831d6d0139601a2efabe717e604cbb4894018202831d6d02247f7a7b6594320649aa03aba1018202831d6c8c3f38e95a6b1ff2ab1c3b343619018202831d6d02384773bdf1ac5676facced60901901820290921d6cb9a025d814b29c212b8b1a07cd190102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a550602605f19919091017d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b6000680248ce36a70cb26b3e198213611ed857506000919050565b680755bf798b4a1bf1e58212611f015760405163df92cc9d60e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b39881029093036c240c330e9fb2d9cbaf0fd5aafb1981018102606090811d6d0277594991cfc85f6e2461837cd9018202811d6d1a521255e34f6a5061b25ef1c9c319018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d6e02c72388d9f74f51a9331fed693f1419018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084016d01d3967ed30fc4f89c02bab5708119010290911d6e0587f503bb6ea29d25fcb740196450019091026d360d7aeea093263ecc6e0ecb291760621b010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b604051610160810167ffffffffffffffff8111828210171561207a57634e487b7160e01b600052604160045260246000fd5b60405290565b604051610120810167ffffffffffffffff8111828210171561207a57634e487b7160e01b600052604160045260246000fd5b600061016082840312156120c557600080fd5b6120cd612048565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b6000610160828403121561215657600080fd5b61015283836120b2565b60008082840361028081121561217557600080fd5b6102608082121561218557600080fd5b61218d612080565b915061219986866120b2565b8252610160850135602083015261018085013560408301526101a085013560608301526101c085013560808301526101e085013560a083015261020085013560c083015261022085013560e0830152610240850135610100830152909593013593505050565b600080600080600060a0868803121561221757600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016122655761226561223a565b5060000390565b818103818111156101405761014061223a565b808201808211156101405761014061223a565b81810360008312801583831316838312821617156102195761021961223a565b808201828112600083128015821682158216171561054c5761054c61223a565b6000826122ef57634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156123095761230961223a565b50059056fea26469706673582212209b3cdaa05c933635ccbb8fe4f4ba039c7fdb47cb233675fad757db4c2326a99f64736f6c63430008130033",
    "sourceMap": "126:2473:69:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80637d840b6d1161005b5780637d840b6d146100ce578063b500f3cb146100e1578063ce2e339c1461010f578063f10824481461012257600080fd5b806337043a53146100825780635dcbd5ca146100a857806374bbc903146100bb575b600080fd5b610095610090366004612143565b610135565b6040519081526020015b60405180910390f35b6100956100b6366004612160565b610146565b6100956100c9366004612143565b610159565b6100956100dc366004612160565b610164565b6100f46100ef3660046121ff565b610170565b6040805193845260208401929092529082015260600161009f565b61009561011d366004612160565b610194565b610095610130366004612143565b6101a0565b600061014082610220565b92915050565b60006101528383610250565b9392505050565b600061014082610554565b600061015283836105bb565b600080600061018288888888886109e6565b9250925092505b955095509592505050565b60006101528383610a99565b60008060006101ae84610b4e565b91509150806102195760405162461bcd60e51b815260206004820152602d60248201527f4d6f636b4c504d6174683a2063616c63756c6174654e6574437572766554726160448201526c191954d859994819985a5b1959609a1b606482015260840160405180910390fd5b5092915050565b600080600061022e84610d8b565b91509150806102195760405163aeeb825d60e01b815260040160405180910390fd5b6000808360a001511261026857506080820151610140565b60008360a0015161027890612250565b90506102a98460c001518560e00151866101000151876000015160a0015188608001516102a490612250565b6109e6565b865160408101919091526020808201929092529190915284518051910151600091610309916102d89190610e05565b8651604081015160c0909101516102f790670de0b6b3a764000061226c565b88516060810151608090910151610e22565b905081811061031f575050506080820151610140565b50600061032d858584610ebf565b905060005b60038110156104af576103618660c001518760e00151886101000151896000015160a00151866102a490612250565b8851604081019190915260208082019290925291909152865180519101516000916103c1916103909190610e05565b8851604081015160c0909101516103af90670de0b6b3a764000061226c565b8a516060810151608090910151610e22565b90506000806103d0898961106c565b91509150806103e1575050506104af565b858311156104435784965061040d620f4240670de0b6b3a7640000610406919061227f565b87906112ea565b831161041e57505050505050610140565b6104328261042c888661226c565b906112ff565b61043c908661227f565b945061048d565b8583101561047f57600061045b8361042c868a61226c565b905085811061046d57505050506104af565b610477818761226c565b95505061048d565b849650505050505050610140565b88608001518511156104a157886080015194505b836001019350505050610332565b5082811461054c576104dd8560c001518660e00151876101000151886000015160a00151856102a490612250565b87516040810191909152602080820192909252919091528551805191015160009161053d9161050c9190610e05565b8751604081015160c09091015161052b90670de0b6b3a764000061226c565b89516060810151608090910151610e22565b905082811061054a578193505b505b505092915050565b6000610583826101000151670de0b6b3a7640000610572919061226c565b606084015160e08501519190611310565b6105b1836101400151670de0b6b3a764000061059f919061226c565b60608501516101208601519190611310565b6101409190612292565b600080836060015184604001516105d2919061227f565b90508360a001516000036105fc57606084015160208501516105f49183611310565b915050610140565b60208401516060850151600091610614919084611310565b905060008560a0015113156108565760005b6004811015610850576106558660c001518760e00151886101000151896000015160a00151866102a490612250565b88516040810191909152602081019190915252855160009061067690610220565b905061068387828661132e565b1561068e5750610850565b865180516020820151604083015160a084015160c09094015160009485946106db94909390929091906106c990670de0b6b3a764000061226c565b8e5160608101516080909101516113a7565b91509150806106ec57505050610850565b6000828a60a001511161074f576107088a8a8c60a00151611489565b925090508115806107215750670de0b6b3a76400008110155b15610736576000975050505050505050610140565b61074881670de0b6b3a764000061226c565b9050610781565b6107588a61174a565b909650915081610772576000975050505050505050610140565b85975050505050505050610140565b600061079e8b604001518c6020015161183590919063ffffffff16565b6107a8868a6112ea565b6107b29190612292565b905060008113156107e2576107d16107ca838a611835565b82906112ff565b6107db908861227f565b9650610840565b60008112156108365760006108036107fa848b611835565b61042c84612250565b90508781101561081e57610817818961226c565b9750610830565b60009950505050505050505050610140565b50610840565b5050505050610850565b8560010195505050505050610626565b506109de565b60005b60048110156109dc576108888660c001518760e00151886101000151896000015160a00151866102a490612250565b8851604081019190915260208101919091525285516000906108a990610220565b90506108b687828661132e565b156108c157506109dc565b6000806108dc89898b60a001516108d790612250565b61184a565b915091508015806108f55750670de0b6b3a76400008210155b156109095760009650505050505050610140565b61091b82670de0b6b3a764000061226c565b9150600061093a8a604001518b6020015161183590919063ffffffff16565b61094485896112ea565b61094e9190612292565b90506000811315610978576109678761042c83866112ff565b610971908761227f565b95506109cd565b60008112156109c45760006109928861042c868186612250565b9050868110156109ad576109a6818861226c565b96506109be565b600098505050505050505050610140565b506109cd565b505050506109dc565b84600101945050505050610859565b505b949350505050565b600080600083600003610a00575086915085905084610189565b6000610a0c858a6122b2565b905085811215610a2f5760405163585fe6df60e11b815260040160405180910390fd5b80935060008812610a4c57610a4584898b611310565b9250610a6c565b610a60610a5889612250565b85908b611310565b610a6990612250565b92505b610a8b87610a7a8b8b610e05565b610a848787610e05565b9190611310565b915050955095509592505050565b6000610ac18360c001518460e00151856101000151866000015160a00151866102a490612250565b8551604081019190915260208101919091525282516000908190610ae490610d8b565b91509150801580610af9575084602001518210155b15610b0957600092505050610140565b600085606001518660400151610b1f919061227f565b9050610b3a838760200151836113109092919063ffffffff16565b610b44908261226c565b9695505050505050565b6000806000610b708461014001518561012001516112ea90919063ffffffff16565b61010085015160e0860151610b84916112ea565b610b8e9190612292565b90506000610ba485600001518660200151610e05565b90506000821315610ca7576000829050600080610bf5886000015189602001518a604001518b60a001518c60c00151670de0b6b3a7640000610be6919061226c565b8d606001518e608001516113a7565b9150915080610c0e575060009788975095505050505050565b828210610c63576000610c48858a60400151868c60c00151670de0b6b3a7640000610c39919061226c565b8d606001518e60800151611989565b9050610c5381612250565b9960019950975050505050505050565b6000886020015112610c965760a0880151610c7e908561226c565b610c8790612250565b98600198509650505050505050565b60a08801518851610c7e919061226c565b6000821215610d7d576000610cbb83612250565b90506000610cef8388604001518960c00151670de0b6b3a7640000610ce0919061226c565b8a606001518b60800151610e22565b9050818110610d2b576000610c87848960400151858b60c00151670de0b6b3a7640000610d1c919061226c565b8c606001518d608001516119c8565b6000610d5d8489604001518a60c00151670de0b6b3a7640000610d4e919061226c565b8b606001518c60800151611a6a565b9050610d738860600151838561042c919061226c565b610c87908261227f565b506000946001945092505050565b6000806000806000610d9c86610b4e565b9150915080610db357506000958695509350505050565b8560a00151610dc187610554565b8751610dce9085906122b2565b610dd891906122b2565b610de29190612292565b925050506000811215610dfb5750600093849350915050565b9360019350915050565b600080610e128385612292565b9050600081121561015257600080fd5b600080610e328787878787611af9565b90506000610e5d670de0b6b3a7640000610e4c87876112ff565b610e56919061227f565b8390611b28565b9050670de0b6b3a76400008110610e9157610e8a610e83670de0b6b3a764000088611b28565b8290611b3d565b9050610ea9565b610ea6610e83670de0b6b3a7640000886112ff565b90505b610eb3818861226c565b98975050505050505050565b825160808101516060909101516000918291610f2e91670de0b6b3a764000091610ee8916112ff565b610ef2919061227f565b610100870151875160c00151610f28918891610f1690670de0b6b3a764000061226c565b8a516060810151608090910151611af9565b90611b28565b9050670de0b6b3a76400008110610f7557845160c00151610f6e90610e8390610f5f90670de0b6b3a764000061226c565b670de0b6b3a764000090611b28565b9050610fa7565b845160c00151610fa490610e8390610f9590670de0b6b3a764000061226c565b670de0b6b3a7640000906112ff565b90505b610fb1838261227f565b905060008560e001511261100d57611006610fff610fe08760c001518860e00151611b2890919063ffffffff16565b610ff290670de0b6b3a764000061226c565b6101008801519087611310565b8290611b28565b905061103e565b61103b610fff6110298760c001518860e0015161042c90612250565b610ff290670de0b6b3a764000061227f565b90505b8460c001518110611053576000915050610152565b808560c00151611063919061226c565b95945050505050565b815180516020909101516000918291829161108691610e05565b855160c08101516040909101519192506000916110bd916110b1916110aa91611b3d565b8790611835565b610100880151906112ff565b865160c08101516080909101516110ee916110e2916110dc9087611835565b90611b3d565b885160600151906112ff565b6110f8919061227f565b9050600061113783886000015160400151896000015160c00151670de0b6b3a7640000611125919061226c565b8a516060810151608090910151611b94565b9050670de0b6b3a7640000811061118e57611187611180611179896000015160c00151670de0b6b3a764000061116d919061226c565b8a5160c00151906112ff565b8390611b3d565b83906112ea565b91506111c2565b6111bf611180611179896000015160c00151670de0b6b3a76400006111b3919061226c565b8a5160c0015190611b28565b91505b6112196112126111e7896000015160c00151670de0b6b3a7640000610f5f919061226c565b89516080810151606090910151670de0b6b3a7640000916112089190611b28565b6110dc919061227f565b83906112ff565b9150600061123587896101000151611b2890919063ffffffff16565b905080831161124f57611248838261226c565b925061125f565b60008095509550505050506112e3565b60008860e00151126112a9576112a28361128a8a60c001518b60e001516112ff90919063ffffffff16565b61129c90670de0b6b3a764000061226c565b90611835565b92506112d8565b6112d5836112c38a60c001518b60e00151610f2890612250565b61129c90670de0b6b3a764000061227f565b92505b509093506001925050505b9250929050565b60006101528383670de0b6b3a7640000611310565b600061015283670de0b6b3a7640000845b600082600019048411830215820261132757600080fd5b5091020490565b6000806113488486602001516112ff90919063ffffffff16565b905060006113638660400151856112ff90919063ffffffff16565b90508181101561137857600092505050610152565b818110158015610b44575061139c611180633b9aca00670de0b6b3a764000061227f565b101595945050505050565b60008060008812156113c9576113bc88612250565b6113c6908761227f565b95505b60006113d58a8a610e05565b905060006113e6828a898989611b94565b905060006114036113fb896110dc898d611835565b889088611bb9565b61140d908361226c565b9050670de0b6b3a7640000811061143a57611433610e83670de0b6b3a76400008a6112ff565b9050611452565b61144f610e83670de0b6b3a76400008a611b28565b90505b89811015611469576000809450945050505061147d565b6114738a8261226c565b6001945094505050505b97509795505050505050565b82518051602090910151600091829182916114a391610e05565b905060006114e06114d46114cd896000015160c00151888b60000151604001516110dc919061227f565b8890611835565b610100890151906112ff565b875160c081015160409091015161151191611505916114fe91611b3d565b89906112ea565b6101008a015190611b28565b885160c081015160809091015161153c91611530916110dc90886112ea565b8a516060015190611b28565b611546919061227f565b611550919061226c565b9050600061158f838960000151604001518a6000015160c00151670de0b6b3a764000061157d919061226c565b8b516060810151608090910151611af9565b905060006115c3896000015160c00151670de0b6b3a76400006115b2919061226c565b8a51604001516110dc908a9061227f565b9050808210156115dd576000809550955050505050611742565b6115fe6115ea828461226c565b8a5160608101516080909101519190611bb9565b9050670de0b6b3a7640000811061164257885160c0015161163b90610e839061162f90670de0b6b3a764000061226c565b8b5160c0015190611b28565b9050611671565b885160c0015161166e90610e839061166290670de0b6b3a764000061226c565b8b5160c00151906112ff565b90505b8851606001516116849084908390611bb9565b925082670de0b6b3a7640000106116ae576116a783670de0b6b3a764000061226c565b92506116bf565b600060019550955050505050611742565b60008960e0015112611709576117026116e98a60c001518b60e00151611b2890919063ffffffff16565b6116fb90670de0b6b3a764000061226c565b84906112ea565b9250611737565b6117346117228a60c001518b60e0015161042c90612250565b6116fb90670de0b6b3a764000061227f565b92505b509093506001925050505b935093915050565b60008060008360e001511361176457506000928392509050565b60c083015183515260e0830151835160200152610100830151835160400152825160009061179190610554565b905060008082126117d3576040850151606086015183916117c2916117b6908261227f565b60208901519190611bb9565b6117cc919061226c565b9050611802565b6117dc82612250565b604086015160608701516117f591906117b6908261227f565b6117ff919061227f565b90505b60e085015160c0860151611817918390611bb9565b9050808560c00151611829919061226c565b95600195509350505050565b60006101528383670de0b6b3a7640000611bb9565b825180516020909101516000918291829161186491610e05565b9050600061188e6114d46114cd896000015160c00151888b60000151604001516110dc919061226c565b875160c08101516040909101516118ac91611505916114fe91611b3d565b885160c08101516080909101516118cb91611530916110dc90886112ea565b6118d5919061227f565b6118df919061226c565b9050600061190c838960000151604001518a6000015160c00151670de0b6b3a764000061157d919061226c565b90506000611940896000015160c00151670de0b6b3a764000061192f919061226c565b8a51604001516110dc908a9061226c565b90508082101561195a576000809550955050505050611742565b6119676115ea828461226c565b9050885160c0015161163b90610e839061162f90670de0b6b3a764000061226c565b60008061199a888888888888611bdf565b9092509050806119bd57604051637ac17d2560e01b815260040160405180910390fd5b509695505050505050565b6000806119d88888878787611af9565b90506119e8856110dc888a61226c565b96506000611a0284866119fb8b8661226c565b9190611bb9565b9050670de0b6b3a76400008110611a2f57611a28610e83670de0b6b3a764000088611b28565b9050611a47565b611a44610e83670de0b6b3a7640000886112ff565b90505b611a518185611b28565b9050611a5d898261226c565b9998505050505050505050565b600080611a7a8787878787611b94565b90506000611a9e670de0b6b3a7640000611a948787611b28565b611212919061227f565b9050670de0b6b3a76400008110611acb57611ac4610e83670de0b6b3a7640000886112ff565b9050611ae3565b611ae0610e83670de0b6b3a764000088611b28565b90505b611aed81856112ff565b9050610eb3888261226c565b6000611b058585611b3d565b611b1e611b16866110dc868b611835565b859085611bb9565b610b44919061227f565b600061015283670de0b6b3a764000084611bb9565b600081600003611b565750670de0b6b3a7640000610140565b82600003611b6657506000610140565b816000611b7285611ca1565b9050818102611b89670de0b6b3a7640000826122d2565b9050610b4481611ebd565b6000611ba08585611b3d565b611b1e611bb1866110dc868b6112ea565b859085611310565b6000826000190484118302158202611bd057600080fd5b50910281810615159190040190565b6000806000611bf18989888888611af9565b9050611c01866110dc898b61227f565b975087811015611c18576000809250925050611c96565b6000611c2985876119fb8c8661226c565b9050670de0b6b3a76400008110611c5657611c4f610e83670de0b6b3a764000089611b28565b9050611c6e565b611c6b610e83670de0b6b3a7640000896112ff565b90505b611c788186611b28565b9050808a1115611c8f57611c8c818b61226c565b93505b6001925050505b965096945050505050565b6000808213611cc357604051636838feed60e11b815260040160405180910390fd5b5060606fffffffffffffffffffffffffffffffff821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110600190811b90911783811c90911017609f81810383019390931b90921c6c465772b2bbbb5f824b15207a3081018102821d6d0388eaa27412d5aca026815d636e018102821d6d0df99ac502031bf953eff472fdcc018102821d6d13cdffb29d51d99322bdff5f2211018102821d6d0a0f742023def783a307a986912e018102821d6d01920d8043ca89b5239253284e42018102821d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7882018202831d6d0139601a2efabe717e604cbb4894018202831d6d02247f7a7b6594320649aa03aba1018202831d6c8c3f38e95a6b1ff2ab1c3b343619018202831d6d02384773bdf1ac5676facced60901901820290921d6cb9a025d814b29c212b8b1a07cd190102780a09507084cc699bb0e71ea869ffffffffffffffffffffffff190105711340daa0d5f769dba1915cef59f0815a550602605f19919091017d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b6000680248ce36a70cb26b3e198213611ed857506000919050565b680755bf798b4a1bf1e58212611f015760405163df92cc9d60e01b815260040160405180910390fd5b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056001605f1b01901d6bb17217f7d1cf79abc9e3b39881029093036c240c330e9fb2d9cbaf0fd5aafb1981018102606090811d6d0277594991cfc85f6e2461837cd9018202811d6d1a521255e34f6a5061b25ef1c9c319018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d6e02c72388d9f74f51a9331fed693f1419018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084016d01d3967ed30fc4f89c02bab5708119010290911d6e0587f503bb6ea29d25fcb740196450019091026d360d7aeea093263ecc6e0ecb291760621b010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b604051610160810167ffffffffffffffff8111828210171561207a57634e487b7160e01b600052604160045260246000fd5b60405290565b604051610120810167ffffffffffffffff8111828210171561207a57634e487b7160e01b600052604160045260246000fd5b600061016082840312156120c557600080fd5b6120cd612048565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e082015261010080830135818301525061012080830135818301525061014080830135818301525092915050565b6000610160828403121561215657600080fd5b61015283836120b2565b60008082840361028081121561217557600080fd5b6102608082121561218557600080fd5b61218d612080565b915061219986866120b2565b8252610160850135602083015261018085013560408301526101a085013560608301526101c085013560808301526101e085013560a083015261020085013560c083015261022085013560e0830152610240850135610100830152909593013593505050565b600080600080600060a0868803121561221757600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016122655761226561223a565b5060000390565b818103818111156101405761014061223a565b808201808211156101405761014061223a565b81810360008312801583831316838312821617156102195761021961223a565b808201828112600083128015821682158216171561054c5761054c61223a565b6000826122ef57634e487b7160e01b600052601260045260246000fd5b600160ff1b8214600019841416156123095761230961223a565b50059056fea26469706673582212209b3cdaa05c933635ccbb8fe4f4ba039c7fdb47cb233675fad757db4c2326a99f64736f6c63430008130033",
    "sourceMap": "126:2473:69:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:180;;;;;;:::i;:::-;;:::i;:::-;;;2078:25:161;;;2066:2;2051:18;789:180:69;;;;;;;;2251:346;;;;;;:::i;:::-;;:::i;975:179::-;;;;;;:::i;:::-;;:::i;1875:370::-;;;;;;:::i;:::-;;:::i;152:631::-;;;;;;:::i;:::-;;:::i;:::-;;;;3987:25:161;;;4043:2;4028:18;;4021:34;;;;4071:18;;;4064:34;3975:2;3960:18;152:631:69;3787:317:161;1501:368:69;;;;;;:::i;:::-;;:::i;1160:335::-;;;;;;:::i;:::-;;:::i;789:180::-;899:7;925:37;954:7;925:28;:37::i;:::-;918:44;789:180;-1:-1:-1;;789:180:69:o;2251:346::-;2427:7;2465:125;2520:7;2545:31;2465:37;:125::i;:::-;2446:144;2251:346;-1:-1:-1;;;2251:346:69:o;975:179::-;1085:6;1110:37;1139:7;1110:28;:37::i;1875:370::-;2063:7;2101:137;2168:7;2193:31;2101:49;:137::i;152:631::-;423:21;458:22;494:20;558:218;607:14;639:16;673:13;704:21;743:19;558:31;:218::i;:::-;539:237;;;;;;152:631;;;;;;;;;;:::o;1501:368::-;1688:7;1726:136;1804:7;1829:19;1726:60;:136::i;1160:335::-;1271:6;1290:20;1312:12;1328:55;1375:7;1328:46;:55::i;:::-;1289:94;;;;1401:7;1393:65;;;;-1:-1:-1;;;1393:65:69;;4311:2:161;1393:65:69;;;4293:21:161;4350:2;4330:18;;;4323:30;4389:34;4369:18;;;4362:62;-1:-1:-1;;;4440:18:161;;;4433:43;4493:19;;1393:65:69;;;;;;;;-1:-1:-1;1475:13:69;1160:335;-1:-1:-1;;1160:335:69:o;5846:342:53:-;5949:7;5969:20;5991:12;6007:56;6046:7;6007:25;:56::i;:::-;5968:95;;;;6078:7;6073:80;;6108:34;;-1:-1:-1;;;6108:34:53;;;;;;;;;;;39470:9223;39639:29;39845:1;39820:7;:21;;;:26;39816:76;;-1:-1:-1;39869:12:53;;;;39862:19;;39816:76;39901:21;39934:7;:21;;;39933:22;;;:::i;:::-;39901:55;;40479:284;40521:7;:29;;;40568:7;:31;;;40617:7;:28;;;40663:7;:26;;;:47;;;40736:7;:12;;;40728:21;;;:::i;:::-;40479:24;:284::i;:::-;40305:26;;40423:39;;;40287:476;;;;40363:42;;;;40287:476;;;;;;;;40925:26;;:40;;40987:42;;;40305:26;;40801:496;;40857:190;;40925:40;40857:46;:190::i;:::-;41065:26;;:39;;;;41128:38;;;;;41122:44;;150:4:51;41122:44:53;:::i;:::-;41184:26;;:37;;;;41239:44;;;;;40801:38;:496::i;:::-;40777:520;;41526:13;41509;:30;41505:88;;-1:-1:-1;;;41566:12:53;;;;41559:19;;41505:88;40141:1462;41676:34;41713:161;41773:7;41798:31;41847:13;41713:42;:161::i;:::-;41676:198;;41952:9;41947:5379;1188:1;41967;:43;41947:5379;;;42359:298;42401:7;:29;;;42448:7;:31;;;42497:7;:28;;;42543:7;:26;;;:47;;;42616:26;42608:35;;;:::i;42359:298::-;42185:26;;42303:39;;;42167:490;;;;42243:42;;;;42167:490;;;;;;;;42819:26;;:40;;42881:42;;;42185:26;;42695:496;;42751:190;;42819:40;42751:46;:190::i;:::-;42959:26;;:39;;;;43022:38;;;;;43016:44;;150:4:51;43016:44:53;:::i;:::-;43078:26;;:37;;;;43133:44;;;;;42695:38;:496::i;:::-;42671:520;;43379:18;43415:12;43444:137;43503:7;43532:31;43444:37;:137::i;:::-;43361:220;;;;43600:7;43595:52;;43627:5;;;;;43595:52;43837:13;43821;:29;43817:3134;;;44072:26;44048:50;;44336:113;1374:3;150:4:51;44383:44:53;;;;:::i;:::-;44336:13;;:21;:113::i;:::-;44299:13;:150;44274:263;;44490:28;;;;;;;;44274:263;45402:51;45442:10;45403:29;45419:13;45403;:29;:::i;:::-;45402:39;;:51::i;:::-;45353:100;;:26;:100;:::i;:::-;45304:149;;43817:3134;;;45662:13;45646;:29;45642:1309;;;46444:13;46460:89;46521:10;46461:29;46477:13;46461;:29;:::i;46460:89::-;46444:105;;46580:26;46571:5;:35;46567:87;;46630:5;;;;;;46567:87;46700:34;46729:5;46700:26;:34;:::i;:::-;46671:63;;45677:1072;45642:1309;;;46910:26;46903:33;;;;;;;;;;45642:1309;47125:7;:12;;;47096:26;:41;47092:121;;;47186:7;:12;;;47157:41;;47092:121;47298:3;;;;;42014:5312;;;41947:5379;;;;47444:21;47414:26;:51;47410:1238;;47673:298;47715:7;:29;;;47762:7;:31;;;47811:7;:28;;;47857:7;:26;;;:47;;;47930:26;47922:35;;;:::i;47673:298::-;47499:26;;47617:39;;;47481:490;;;;47557:42;;;;47481:490;;;;;;;;48133:26;;:40;;48195:42;;;47499:26;;48009:496;;48065:190;;48133:40;48065:46;:190::i;:::-;48273:26;;:39;;;;48336:38;;;;;48330:44;;150:4:51;48330:44:53;:::i;:::-;48392:26;;:37;;;;48447:44;;;;;48009:38;:496::i;:::-;47985:520;;48540:13;48523;:30;48519:119;;48597:26;48573:50;;48519:119;47467:1181;47410:1238;48658:28;;39470:9223;;;;:::o;14887:934::-;14990:6;15647:153;15710:7;:32;;;150:4:51;15704:38:53;;;;:::i;:::-;15764:18;;;;15647:24;;;;;:153;:35;:153::i;:::-;15439:155;15503:7;:33;;;150:4:51;15497:39:53;;;;:::i;:::-;15558:18;;;;15439:25;;;;;:155;:36;:155::i;:::-;15415:399;;;;:::i;23488:10845::-;23669:7;23730:21;23796:7;:35;;;23754:7;:27;;;:77;;;;:::i;:::-;23730:101;;23908:7;:21;;;23933:1;23908:26;23904:293;;24098:35;;;;24037:28;;;;:149;;24155:13;24037:39;:149::i;:::-;24014:172;;;;;23904:293;24754:28;;;;24694:35;;;;24670:21;;24694:125;;:35;24796:13;24694:46;:125::i;:::-;24670:149;;24927:1;24903:7;:21;;;:25;24899:9397;;;24949:9;24944:5329;839:1;24964;:33;24944:5329;;;25353:309;25399:7;:29;;;25450:7;:31;;;25503:7;:28;;;25553:7;:26;;;:47;;;25630:13;25622:22;;;:::i;25353:309::-;25167:26;;25293:39;;;25145:517;;;;25229:42;;;25145:517;;;;;25746:26;;25167;;25703:87;;:21;:87::i;:::-;25680:110;;25907:183;25984:7;26017:12;26055:13;25907:51;:183::i;:::-;25882:273;;;26131:5;;;25882:273;26587:26;;:40;;26653:42;;;;26721:39;;;;26786:47;;;;26865:38;;;;;26459:21;;;;26498:560;;26587:40;;26653:42;;26721:39;;26786:47;26859:44;;150:4:51;26859:44:53;:::i;:::-;26929:26;;:37;;;;26992:44;;;;;26498:63;:560::i;:::-;26458:600;;;;27081:7;27076:60;;27112:5;;;;;27076:60;27153:18;27227:13;27201:7;:21;;;27193:47;27189:1308;;27358:212;27428:7;27461:31;27526:7;:21;;;27358:44;:212::i;:::-;27264:306;-1:-1:-1;27264:306:53;-1:-1:-1;27596:8:53;;;:29;;;150:4:51;27608:10:53;:17;;27596:29;27592:221;;;27789:1;27782:8;;;;;;;;;;;27592:221;27847:16;27853:10;150:4:51;27847:16:53;:::i;:::-;27834:29;;27189:1308;;;28099:116;28186:7;28099:61;:116::i;:::-;28002:213;;-1:-1:-1;28002:213:53;-1:-1:-1;28002:213:53;28237:200;;28413:1;28406:8;;;;;;;;;;;28237:200;28465:13;28458:20;;;;;;;;;;;27189:1308;28963:12;29076:117;29140:7;:27;;;29076:7;:28;;;:34;;:117;;;;:::i;:::-;28985:35;:12;29006:13;28985:20;:35::i;:::-;28978:237;;;;:::i;:::-;28963:252;;29245:1;29237:5;:9;29233:907;;;29426:55;29449:31;:10;29466:13;29449:16;:31::i;:::-;29434:5;;29426:22;:55::i;:::-;29386:95;;:13;:95;:::i;:::-;29346:135;;29233:907;;;29518:1;29510:5;:9;29506:634;;;29619:14;29636:102;29685:31;:10;29702:13;29685:16;:31::i;:::-;29644:6;29645:5;29644:6;:::i;29636:102::-;29619:119;;29773:13;29764:6;:22;29760:310;;;29830:22;29846:6;29830:13;:22;:::i;:::-;29814:38;;29760:310;;;30046:1;30039:8;;;;;;;;;;;;;29760:310;29521:567;29506:634;;;30116:5;;;;;;;29506:634;30237:3;;;;;25001:5272;;;;;24944:5329;;;;24899:9397;;;30361:9;30356:3930;839:1;30376;:33;30356:3930;;;30765:309;30811:7;:29;;;30862:7;:31;;;30915:7;:28;;;30965:7;:26;;;:47;;;31042:13;31034:22;;;:::i;30765:309::-;30579:26;;30705:39;;;30557:517;;;;30641:42;;;30557:517;;;;;31158:26;;30579;;31115:87;;:21;:87::i;:::-;31092:110;;31319:183;31396:7;31429:12;31467:13;31319:51;:183::i;:::-;31294:273;;;31543:5;;;31294:273;31892:18;31932:12;31965:213;32035:7;32068:31;32134:7;:21;;;32133:22;;;:::i;:::-;31965:44;:213::i;:::-;31870:308;;;;32201:7;32200:8;:29;;;;150:4:51;32212:10:53;:17;;32200:29;32196:205;;;32381:1;32374:8;;;;;;;;;;32196:205;32431:16;32437:10;150:4:51;32431:16:53;:::i;:::-;32418:29;;32914:12;33027:117;33091:7;:27;;;33027:7;:28;;;:34;;:117;;;;:::i;:::-;32936:35;:12;32957:13;32936:20;:35::i;:::-;32929:237;;;;:::i;:::-;32914:252;;33196:1;33188:5;:9;33184:969;;;33377:111;33449:13;33377:34;33385:5;33400:10;33377:22;:34::i;:111::-;33337:151;;:13;:151;:::i;:::-;33297:191;;33184:969;;;33525:1;33517:5;:9;33513:640;;;33626:14;33643:108;33737:13;33643:60;33692:10;33643:60;33652:5;33651:6;:::i;33643:108::-;33626:125;;33786:13;33777:6;:22;33773:310;;;33843:22;33859:6;33843:13;:22;:::i;:::-;33827:38;;33773:310;;;34059:1;34052:8;;;;;;;;;;;;33773:310;33528:573;33513:640;;;34129:5;;;;;;33513:640;34250:3;;;;;30413:3873;;;;30356:3930;;;;24899:9397;34313:13;23488:10845;-1:-1:-1;;;;23488:10845:53:o;2162:2982::-;2433:21;2468:22;2504:20;2659:19;2682:1;2659:24;2655:111;;-1:-1:-1;2707:14:53;;-1:-1:-1;2723:16:53;;-1:-1:-1;2741:13:53;2699:56;;2655:111;2935:21;2959:44;2984:19;2966:14;2959:44;:::i;:::-;2935:68;;3041:21;3017:14;:46;3013:118;;;3086:34;;-1:-1:-1;;;3086:34:53;;;;;;;;;;;3013:118;3164:14;3140:39;;3754:1;3734:16;:21;3730:465;;3813:134;3821:13;3876:16;3915:14;3813:33;:134::i;:::-;3771:190;;3730:465;;;4035:135;4098:17;4099:16;4098:17;:::i;:::-;4043:13;;4138:14;4035:33;:135::i;:::-;4010:174;;;:::i;:::-;3992:192;;3730:465;4821:316;4954:13;4985:138;5053:14;5089:16;4985:46;:138::i;:::-;4821:91;4881:13;4896:15;4821:59;:91::i;:::-;:115;:316;:115;:316::i;:::-;4806:331;;2539:2605;2162:2982;;;;;;;;;:::o;21007:1838::-;21187:7;21462:267;21500:7;:29;;;21543:7;:31;;;21588:7;:28;;;21630:7;:26;;;:47;;;21699:19;21691:28;;;:::i;21462:267::-;21300:26;;21410:39;;;21286:443;;;;21354:42;;;21286:443;;;;;21823:26;;21300;;;;21784:75;;:25;:75::i;:::-;21739:120;;;;22215:7;22214:8;:62;;;;22248:7;:28;;;22226:18;:50;;22214:62;22210:101;;;22299:1;22292:8;;;;;;22210:101;22560:21;22626:7;:35;;;22584:7;:27;;;:77;;;;:::i;:::-;22560:101;;22718:120;22760:18;22796:7;:28;;;22718:13;:24;;:120;;;;;:::i;:::-;22690:148;;:13;:148;:::i;:::-;22671:167;21007:1838;-1:-1:-1;;;;;;21007:1838:53:o;8127:6470::-;8235:6;8243:4;8662:23;8823:106;8878:7;:33;;;8823:7;:25;;;:33;;:106;;;;:::i;:::-;8741:32;;;;8708:24;;;;:66;;:32;:66::i;:::-;8688:255;;;;:::i;:::-;8662:281;;8953:30;8986:153;9063:7;:21;;;9102:7;:23;;;8986:59;:153::i;:::-;8953:186;;9389:1;9370:16;:20;9366:5198;;;9406:25;9442:16;9406:53;;9648:21;9671:12;9687:391;9768:7;:21;;;9811:7;:23;;;9856:7;:20;;;9898:7;:28;;;9954:7;:19;;;150:4:51;9948:25:53;;;;:::i;:::-;9995:7;:18;;;10035:7;:25;;;9687:59;:391::i;:::-;9647:431;;;;10097:7;10092:64;;-1:-1:-1;10132:1:53;;;;-1:-1:-1;8127:6470:53;-1:-1:-1;;;;;;8127:6470:53:o;10092:64::-;10333:17;10316:13;:34;10312:2034;;10370:21;10394:375;10490:22;10538:7;:20;;;10584:17;10633:7;:19;;;150:4:51;10627:25:53;;;;:::i;:::-;10678:7;:18;;;10722:7;:25;;;10394:70;:375::i;:::-;10370:399;-1:-1:-1;10795:22:53;10370:399;10795:22;:::i;:::-;10787:37;10819:4;;-1:-1:-1;8127:6470:53;-1:-1:-1;;;;;;;;8127:6470:53:o;10312:2034::-;11509:1;11482:7;:23;;;:28;11478:854;;11661:28;;;;11604:85;;:22;:85;:::i;:::-;11567:148;;;:::i;:::-;11534:233;11741:4;;-1:-1:-1;8127:6470:53;-1:-1:-1;;;;;;;8127:6470:53:o;11478:854::-;12207:28;;;;12183:21;;:52;;12207:28;12183:52;:::i;9366:5198::-;12471:1;12452:16;:20;12448:2116;;;12488:25;12524:17;12525:16;12524:17;:::i;:::-;12488:54;;12659:21;12683:252;12739:22;12779:7;:20;;;12823:7;:19;;;150:4:51;12817:25:53;;;;:::i;:::-;12860:7;:18;;;12896:7;:25;;;12683:38;:252::i;:::-;12659:276;;13113:17;13096:13;:34;13092:1462;;13150:21;13174:373;13268:22;13316:7;:20;;;13362:17;13411:7;:19;;;150:4:51;13405:25:53;;;;:::i;:::-;13456:7;:18;;;13500:7;:25;;;13174:68;:373::i;13092:1462::-;13876:23;13902:321;13987:22;14035:7;:20;;;14087:7;:19;;;150:4:51;14081:25:53;;;;:::i;:::-;14132:7;:18;;;14176:7;:25;;;13902:59;:321::i;:::-;13876:347;;14348:125;14425:7;:18;;;14369:13;14349:17;:33;;;;:::i;14348:125::-;14302:171;;:15;:171;:::i;12448:2116::-;-1:-1:-1;14582:1:53;;14585:4;;-1:-1:-1;8127:6470:53;-1:-1:-1;;;8127:6470:53:o;6590:1166::-;6697:7;6706:4;7083:19;7127:20;7149:12;7165:65;7209:7;7165:26;:65::i;:::-;7126:104;;;;7249:7;7244:64;;-1:-1:-1;7284:1:53;;;;-1:-1:-1;6590:1166:53;-1:-1:-1;;;;6590:1166:53:o;7244:64::-;7488:7;:28;;;7432:30;7454:7;7432:21;:30::i;:::-;7359:21;;7352:61;;7400:13;;7352:61;:::i;:::-;:110;;;;:::i;:::-;:165;;;;:::i;:::-;7321:196;;7112:416;;7658:1;7643:12;:16;7639:64;;;-1:-1:-1;7683:1:53;;;;-1:-1:-1;6590:1166:53;-1:-1:-1;;6590:1166:53:o;7639:64::-;7729:12;7744:4;;-1:-1:-1;6590:1166:53;-1:-1:-1;;6590:1166:53:o;3613:340:52:-;3748:7;;3799:53;3836:16;3806:14;3799:53;:::i;:::-;3767:85;;3896:1;3870:22;:27;;3862:36;;;;;11679:861:55;11838:7;12053:9;12065:20;12069:2;12073:1;12076;12079;12082:2;12065:3;:20::i;:::-;12053:32;-1:-1:-1;12095:16:55;12114:28;150:4:51;12122:13:55;:1;12132:2;12122:9;:13::i;:::-;:19;;;;:::i;:::-;12114:1;;:7;:28::i;:::-;12095:47;;150:4:51;12156:8:55;:15;12152:293;;12267:26;12280:12;150:4:51;12290:1:55;12280:9;:12::i;:::-;12267:8;;:12;:26::i;:::-;12256:37;;12152:293;;;12406:28;12419:14;150:4:51;12431:1:55;12419:11;:14::i;12406:28::-;12395:39;;12152:293;12521:12;12525:8;12521:1;:12;:::i;:::-;12514:19;11679:861;-1:-1:-1;;;;;;;;11679:861:55:o;49971:2755:53:-;50788:26;;:44;;;;50721:37;;;;;50184:7;;;;50365:505;;150:4:51;;50721:129:53;;:45;:129::i;:::-;:135;;;;:::i;:::-;50463:28;;;;50515:26;;:38;;;50365:319;;50414:31;;50509:44;;150:4:51;50509:44:53;:::i;:::-;50571:26;;:37;;;;50626:44;;;;;50365:31;:319::i;:::-;:338;;:505::i;:::-;50351:519;;150:4:51;50884:3:53;:10;50880:428;;51033:26;;:38;;;50992:94;;51017:55;;51027:44;;150:4:51;51027:44:53;:::i;:::-;150:4:51;;51017:9:53;:55::i;50992:94::-;50986:100;;50880:428;;;51244:26;;:38;;;51201:96;;51226:57;;51238:44;;150:4:51;51238:44:53;:::i;:::-;150:4:51;;51226:11:53;:57::i;51201:96::-;51195:102;;50880:428;51359:20;51365:14;51359:3;:20;:::i;:::-;51353:26;;51569:1;51534:7;:31;;;:36;51530:931;;51592:409;51694:293;51785:131;51861:7;:29;;;51793:7;:31;;;51785:46;;:131;;;;:::i;:::-;51755:161;;150:4:51;51755:161:53;:::i;:::-;51694:28;;;;;51938:31;51694:39;:293::i;:::-;51592:3;;:9;:409::i;:::-;51586:415;;51530:931;;;52038:412;52140:296;52231:134;52310:7;:29;;;52240:7;:31;;;52239:32;;;:::i;52231:134::-;52201:164;;150:4:51;52201:164:53;:::i;52038:412::-;52032:418;;51530:931;52604:7;:29;;;52597:3;:36;52593:75;;52656:1;52649:8;;;;;52593:75;52716:3;52684:7;:29;;;:35;;;;:::i;:::-;52677:42;49971:2755;-1:-1:-1;;;;;49971:2755:53:o;65339:4276::-;65819:26;;:40;;65877:42;;;;;65515:7;;;;;;65742:191;;:59;:191::i;:::-;66416:26;;:38;;;;66347:39;;;;;65709:224;;-1:-1:-1;65943:18:53;;66234:274;;66288:206;;66347:129;;:43;:129::i;:::-;66288:31;;:37;:206::i;:::-;66234:28;;;;;:36;:274::i;:::-;66170:26;;:38;;;;66023:78;;;;;65964:255;;66023:186;;:125;;66125:22;66023:101;:125::i;:::-;:146;;:186::i;:::-;65964:26;;:37;;;;:45;:255::i;:::-;:544;;;;:::i;:::-;65943:565;;66674:9;66686:286;66720:22;66756:7;:26;;;:39;;;66815:7;:26;;;:38;;;150:4:51;66809:44:53;;;;:::i;:::-;66867:26;;:37;;;;66918:44;;;;;66686:20;:286::i;:::-;66674:298;;150:4:51;66986:1:53;:8;66982:718;;67103:233;67139:183;67166:138;67244:7;:26;;;:38;;;150:4:51;67238:44:53;;;;:::i;:::-;67166:26;;:38;;;;:46;:138::i;:::-;67139:1;;:5;:183::i;:::-;67103:10;;:18;:233::i;:::-;67090:246;;66982:718;;;67458:231;67494:181;67521:136;67597:7;:26;;;:38;;;150:4:51;67591:44:53;;;;:::i;:::-;67521:26;;:38;;;;:44;:136::i;67458:231::-;67445:244;;66982:718;67884:558;67916:516;68359:55;68375:7;:26;;;:38;;;150:4:51;68369:44:53;;;;:::i;68359:55::-;68072:26;;:44;;;;68011:37;;;;;150:4:51;;68011:119:53;;:37;:43;:119::i;:::-;:125;;;;:::i;67916:516::-;67884:10;;:18;:558::i;:::-;67871:571;;68568:13;68584:89;68632:31;68584:7;:28;;;:34;;:89;;;;:::i;:::-;68568:105;;68745:5;68731:10;:19;68727:274;;68779:18;68787:10;68779:5;:18;:::i;:::-;68766:31;;68727:274;;;68981:1;68984:5;68973:17;;;;;;;;;;68727:274;69171:1;69136:7;:31;;;:36;69132:441;;69201:159;69349:10;69224:117;69294:7;:29;;;69232:7;:31;;;69224:48;;:117;;;;:::i;:::-;69202:139;;150:4:51;69202:139:53;:::i;:::-;69201:147;;:159::i;:::-;69188:172;;69132:441;;;69404:158;69551:10;69427:116;69496:7;:29;;;69436:7;:31;;;69435:32;;;:::i;69427:116::-;69405:138;;150:4:51;69405:138:53;:::i;69404:158::-;69391:171;;69132:441;-1:-1:-1;69591:10:53;;-1:-1:-1;69603:4:53;;-1:-1:-1;;;65339:4276:53;;;;;;:::o;1771:119:51:-;1833:7;1860:22;1871:1;1874;1877:4;1860:10;:22::i;2164:165::-;2226:7;2253:22;2264:1;2267:4;2273:1;941:556;1057:9;1322:1;-1:-1:-1;;1305:19:51;1302:1;1299:26;1296:1;1292:34;1285:42;1272:11;1268:60;1241:146;;1371:1;1368;1361:12;1241:146;-1:-1:-1;1458:9:51;;1454:27;;941:556::o;38011:769:53:-;38215:4;38231:26;38260:74;38310:14;38260:7;:28;;;:36;;:74;;;;:::i;:::-;38231:103;;38344:25;38372:72;38407:7;:27;;;38372:13;:21;;:72;;;;:::i;:::-;38344:100;;38478:18;38458:17;:38;38454:81;;;38519:5;38512:12;;;;;;38454:81;38584:18;38563:17;:39;;:210;;;;-1:-1:-1;38711:62:53;38738:34;1005:3;150:4:51;38738:34:53;:::i;38711:62::-;-1:-1:-1;38618:155:53;;38544:229;-1:-1:-1;;;;;38011:769:53:o;13167:1794:55:-;13372:7;13381:4;13678:1;13671:4;:8;13667:67;;;13717:5;13718:4;13717:5;:::i;:::-;13702:21;;:4;:21;:::i;:::-;13695:28;;13667:67;14229:10;14242:55;14289:1;14292:4;14242:46;:55::i;:::-;14229:68;;14307:9;14319:22;14325:2;14329:1;14332;14335;14338:2;14319:5;:22::i;:::-;14307:34;-1:-1:-1;14351:16:55;14374:37;14385:21;14404:1;14385:14;:2;14394:4;14385:8;:14::i;:21::-;14374:1;;14408:2;14374:10;:37::i;:::-;14370:41;;:1;:41;:::i;:::-;14351:60;;150:4:51;14425:8:55;:15;14421:295;;14539:28;14552:14;150:4:51;14564:1:55;14552:11;:14::i;14539:28::-;14528:39;;14421:295;;;14679:26;14692:12;150:4:51;14702:1:55;14692:9;:12::i;14679:26::-;14668:37;;14421:295;14873:1;14862:8;:12;14858:60;;;14898:1;14901:5;14890:17;;;;;;;;;14858:60;14935:12;14946:1;14935:8;:12;:::i;:::-;14949:4;14927:27;;;;;;;13167:1794;;;;;;;;;;;:::o;53765:4588:53:-;54361:26;;:40;;54419:42;;;;;53977:7;;;;;;54284:191;;:59;:191::i;:::-;54251:224;;54485:18;55126:290;55180:222;55239:145;55324:7;:26;;;:38;;;55282:11;55240:7;:26;;;:39;;;:53;;;;:::i;55239:145::-;55180:31;;:37;:222::i;:::-;55126:28;;;;;:36;:290::i;:::-;54958:26;;:38;;;;54889:39;;;;;54776:274;;54828:208;;54889:129;;:43;:129::i;:::-;54828:31;;:39;:208::i;:::-;54776:28;;;;;:34;:274::i;:::-;54712:26;;:38;;;;54563:78;;;;;54506:255;;54563:188;;:127;;54667:22;54563:103;:127::i;:188::-;54506:26;;:37;;;;:43;:255::i;:::-;:544;;;;:::i;:::-;:910;;;;:::i;:::-;54485:931;;55646:9;55658:284;55690:22;55726:7;:26;;;:39;;;55785:7;:26;;;:38;;;150:4:51;55779:44:53;;;;:::i;:::-;55837:26;;:37;;;;55888:44;;;;;55658:18;:284::i;:::-;55646:296;;55952:13;55968:118;56047:7;:26;;;:38;;;150:4:51;56041:44:53;;;;:::i;:::-;55969:26;;:39;;;:53;;56011:11;;55969:53;:::i;55968:118::-;55952:134;;56104:5;56100:1;:9;56096:201;;;56277:1;56280:5;56269:17;;;;;;;;;;56096:201;56314:137;56381:9;56385:5;56381:1;:9;:::i;:::-;56404:26;;:37;;;;56314:44;;;;;;:137;:53;:137::i;:::-;56306:145;;150:4:51;56465:5:53;:12;56461:584;;56676:26;;:38;;;56577:169;;56604:128;;56670:44;;150:4:51;56670:44:53;:::i;:::-;56604:26;;:38;;;;:44;:128::i;56577:169::-;56569:177;;56461:584;;;56964:26;;:38;;;56863:171;;56890:130;;56958:44;;150:4:51;56958:44:53;:::i;:::-;56890:26;;:38;;;;:46;:130::i;56863:171::-;56855:179;;56461:584;57197:26;;:37;;;57145:99;;:10;;57178:5;;57145:19;:99::i;:::-;57132:112;;57305:10;150:4:51;57298:17:53;57294:357;;57344:16;57350:10;150:4:51;57344:16:53;:::i;:::-;57331:29;;57294:357;;;57632:1;57635:4;57624:16;;;;;;;;;;57294:357;57825:1;57790:7;:31;;;:36;57786:525;;57855:199;57917:123;57989:7;:29;;;57925:7;:31;;;57917:46;;:123;;;;:::i;:::-;57891:149;;150:4:51;57891:149:53;:::i;:::-;57855:10;;:18;:199::i;:::-;57842:212;;57786:525;;;58098:202;58160:126;58235:7;:29;;;58169:7;:31;;;58168:32;;;:::i;58160:126::-;58134:152;;150:4:51;58134:152:53;:::i;58098:202::-;58085:215;;57786:525;-1:-1:-1;58329:10:53;;-1:-1:-1;58341:4:53;;-1:-1:-1;;;53765:4588:53;;;;;;;:::o;35015:2278::-;35166:7;35175:4;35457:1;35422:7;:31;;;:36;35418:84;;-1:-1:-1;35482:1:53;;;;-1:-1:-1;35015:2278:53;-1:-1:-1;35015:2278:53:o;35418:84::-;35807:42;;;;35764:26;;:85;35904:44;;;;35859:26;;:42;;:89;36000:28;;;;35958:26;;:39;;:70;36082:26;;35764;;36060:49;;:21;:49::i;:::-;36038:71;;36252:11;36293:1;36277:12;:17;36273:634;;36391:27;;;;36494:35;;;;36574:12;;36332:215;;36440:89;;36391:27;36440:89;:::i;:::-;36332:28;;;;;:215;:37;:215::i;:::-;:255;;;;:::i;:::-;36310:277;;36273:634;;;36882:13;36883:12;36882:13;:::i;:::-;36699:27;;;;36802:35;;;;36640:215;;36699:27;36748:89;;36699:27;36748:89;:::i;36640:215::-;:256;;;;:::i;:::-;36618:278;;36273:634;37147:31;;;;37070:29;;;;:119;;37122:3;;37070:38;:119::i;:::-;37064:125;;37276:3;37244:7;:29;;;:35;;;;:::i;:::-;37236:50;37281:4;;-1:-1:-1;35015:2278:53;-1:-1:-1;;;;35015:2278:53:o;3707:115:51:-;3767:7;3794:20;3803:1;3806;3809:4;3794:8;:20::i;59392:4958:53:-;59988:26;;:40;;60046:42;;;;;59604:7;;;;;;59911:191;;:59;:191::i;:::-;59878:224;;60112:18;60756:290;60810:222;60869:145;60954:7;:26;;;:38;;;60912:11;60870:7;:26;;;:39;;;:53;;;;:::i;60756:290::-;60585:26;;:38;;;;60516:39;;;;;60403:274;;60455:208;;60516:129;;:43;:129::i;60403:274::-;60339:26;;:38;;;;60190:78;;;;;60133:255;;60190:188;;:127;;60294:22;60190:103;:127::i;60133:255::-;:544;;;;:::i;:::-;:913;;;;:::i;:::-;60112:934;;61276:9;61288:284;61320:22;61356:7;:26;;;:39;;;61415:7;:26;;;:38;;;150:4:51;61409:44:53;;;;:::i;61288:284::-;61276:296;;61582:13;61598:118;61677:7;:26;;;:38;;;150:4:51;61671:44:53;;;;:::i;:::-;61599:26;;:39;;;:53;;61641:11;;61599:53;:::i;61598:118::-;61582:134;;61734:5;61730:1;:9;61726:201;;;61907:1;61910:5;61899:17;;;;;;;;;;61726:201;61944:137;62011:9;62015:5;62011:1;:9;:::i;61944:137::-;61936:145;-1:-1:-1;62304:26:53;;:38;;;62205:169;;62232:128;;62298:44;;150:4:51;62298:44:53;:::i;7078:491:55:-;7268:14;7294:12;7336:141;7388:2;7404:1;7419:2;7435:1;7450;7465:2;7336:38;:141::i;:::-;7316:161;;-1:-1:-1;7316:161:55;-1:-1:-1;7316:161:55;7487:76;;7522:30;;-1:-1:-1;;;7522:30:55;;;;;;;;;;;7487:76;7284:285;7078:491;;;;;;;;:::o;3719:1104::-;3907:7;4064:9;4076:20;4080:2;4084:1;4087;4090;4093:2;4076:3;:20::i;:::-;4064:32;-1:-1:-1;4139:15:55;4152:1;4140:6;4144:2;4140:1;:6;:::i;4139:15::-;4135:19;-1:-1:-1;4310:10:55;4323:23;4340:2;4344:1;4324:5;4135:19;4324:1;:5;:::i;:::-;4323:16;:23;:16;:23::i;:::-;4310:36;;150:4:51;4360:2:55;:9;4356:261;;4458:20;4465:12;150:4:51;4475:1:55;4465:9;:12::i;4458:20::-;4453:25;;4356:261;;;4584:22;4591:14;150:4:51;4603:1:55;4591:11;:14::i;4584:22::-;4579:27;;4356:261;4699:12;:2;4708;4699:8;:12::i;:::-;4694:17;-1:-1:-1;4809:7:55;4814:2;4694:17;4809:7;:::i;:::-;4802:14;3719:1104;-1:-1:-1;;;;;;;;;3719:1104:55:o;9985:1218::-;10144:7;10659:9;10671:22;10677:2;10681:1;10684;10687;10690:2;10671:5;:22::i;:::-;10659:34;-1:-1:-1;10703:17:55;10723:28;150:4:51;10733:11:55;:1;10741:2;10733:7;:11::i;:::-;:17;;;;:::i;10723:28::-;10703:48;;150:4:51;10765:9:55;:16;10761:300;;10881:29;10895:14;150:4:51;10907:1:55;10895:11;:14::i;10881:29::-;10869:41;;10761:300;;;11023:27;11037:12;150:4:51;11047:1:55;11037:9;:12::i;11023:27::-;11011:39;;10761:300;11082:21;:9;11100:2;11082:17;:21::i;:::-;11070:33;-1:-1:-1;11182:14:55;11194:2;11070:33;11182:14;:::i;15456:275::-;15595:7;15716:8;:1;15722;15716:5;:8::i;:::-;15678:35;15689:19;15706:1;15689:12;:2;15698;15689:8;:12::i;:19::-;15678:1;;15710:2;15678:10;:35::i;:::-;:46;;;;:::i;4098:115:51:-;4158:7;4185:20;4194:1;4197:4;4203:1;4185:8;:20::i;4628:840::-;4686:7;4752:1;4757;4752:6;4748:47;;-1:-1:-1;150:4:51;4774:10;;4748:47;4848:1;4853;4848:6;4844:45;;-1:-1:-1;4877:1:51;4870:8;;4844:45;5052:1;5027:15;5230:14;5241:1;5230:3;:14::i;:::-;5217:27;-1:-1:-1;5322:18:51;;;5359:19;150:4;5322:18;5359:19;:::i;:::-;;;5451:9;5455:4;5451:3;:9::i;16232:281:55:-;16373:7;16498:8;:1;16504;16498:5;:8::i;:::-;16456:39;16469:21;16488:1;16469:14;:2;16480;16469:10;:14::i;:21::-;16456:1;;16492:2;16456:12;:39::i;2683:748:51:-;2797:9;3062:1;-1:-1:-1;;3045:19:51;3042:1;3039:26;3036:1;3032:34;3025:42;3012:11;3008:60;2981:146;;3111:1;3108;3101:12;2981:146;-1:-1:-1;3378:9:51;;3325:27;;;3322:34;;3374:27;;;3301:114;;2683:748::o;8246:1320:55:-;8440:14;8456:12;8618:9;8630:20;8634:2;8638:1;8641;8644;8647:2;8630:3;:20::i;:::-;8618:32;-1:-1:-1;8693:15:55;8706:1;8694:6;8698:2;8694:1;:6;:::i;8693:15::-;8689:19;;8790:1;8786;:5;8782:53;;;8815:1;8818:5;8807:17;;;;;;;8782:53;8990:10;9003:23;9020:2;9024:1;9004:5;9008:1;9004;:5;:::i;9003:23::-;8990:36;;150:4:51;9040:2:55;:9;9036:263;;9139:20;9146:12;150:4:51;9156:1:55;9146:9;:12::i;9139:20::-;9134:25;;9036:263;;;9266:22;9273:14;150:4:51;9285:1:55;9273:11;:14::i;9266:22::-;9261:27;;9036:263;9381:12;:2;9390;9381:8;:12::i;:::-;9376:17;;9491:2;9486;:7;9482:54;;;9518:7;9523:2;9518;:7;:::i;:::-;9509:16;;9482:54;9555:4;9545:14;;8470:1096;;8246:1320;;;;;;;;;;:::o;9583:3592:51:-;9628:8;9681:1;9676;:6;9672:60;;9691:41;;-1:-1:-1;;;9691:41:51;;;;;;;;;;;9672:60;-1:-1:-1;10698:2:51;10115:34;-1:-1:-1;;10109:1:51;10105:49;10212:9;;;10192:18;10189:33;10186:1;10182:41;10176:48;10274:9;;;10262:10;10259:25;10256:1;10252:33;10246:40;10332:9;;;10324:6;10321:21;10318:1;10314:29;10308:36;10388:9;;;10382:4;10379:19;10376:1;10372:27;;;10366:34;;;10443:9;;;10438:3;10435:18;10432:1;10428:26;10422:33;10498:9;;;10490:18;;;10487:1;10483:26;;;10477:33;;;10546:9;;;10538:18;;;10532:25;10728:3;:7;;;;;10714:22;;;;10761:17;;;11554:31;11550:35;;11605:5;;11604:13;;11621:32;11603:50;11673:5;;11672:13;;11689:33;11671:51;11742:5;;11741:13;;11758:33;11740:51;11811:5;;11810:13;;11827:33;11809:51;11880:5;;11879:13;;11896:32;11878:50;11948:5;;11947:13;;11964:30;11946:48;10951:31;10947:35;;11002:5;;11001:13;;11018:32;11000:50;11070:5;;11069:13;;11086:32;11068:50;11138:5;;11137:13;;-1:-1:-1;;11136:50:51;11206:5;;11205:13;;-1:-1:-1;;11204:50:51;11274:5;;11273:13;;;-1:-1:-1;;11272:50:51;11340:5;-1:-1:-1;;11340:46:51;12335:10;12725:43;12720:48;-1:-1:-1;;10694:6:51;;;;12848:71;:91;12827:112;13012:72;13007:77;13155:3;13149:9;;9583:3592::o;5724:3347::-;5770:8;-1:-1:-1;;5947:1:51;:26;5943:40;;-1:-1:-1;5982:1:51;;5724:3347;-1:-1:-1;5724:3347:51:o;5943:40::-;6182:21;6177:1;:26;6173:99;;6228:44;;-1:-1:-1;;;6228:44:51;;;;;;;;;;;6173:99;6545:7;6539:2;6534:7;;;6533:19;;-1:-1:-1;6881:8:51;6965:2;6905:29;6894:7;;;6893:41;-1:-1:-1;;;6893:51:51;6892:75;;6993:29;6989:33;;6985:37;;;-1:-1:-1;;7664:35:51;;7719:5;;7299:2;7718:13;;;7735:32;7717:50;7787:5;;7786:13;;-1:-1:-1;;7785:51:51;7856:5;;7855:13;;7872:34;7854:52;7926:5;;7925:13;;-1:-1:-1;;7924:53:51;7997:5;;7996:13;;8013:35;7995:53;7305:32;7238:31;7234:35;;7289:5;;7288:13;;7287:50;;;7362:5;;;-1:-1:-1;;7362:40:51;7422:5;7421:13;;;7438:35;7420:53;7491:5;;;-1:-1:-1;;;7491:50:51;8413:10;8950:49;8917:82;9032:3;:7;;;;8916:124;;;;;;-1:-1:-1;;5724:3347:51:o;14:347:161:-;81:2;75:9;123:6;111:19;;160:18;145:34;;181:22;;;142:62;139:185;;;246:10;241:3;237:20;234:1;227:31;281:4;278:1;271:15;309:4;306:1;299:15;139:185;340:2;333:22;14:347;:::o;366:351::-;437:2;431:9;479:6;467:19;;516:18;501:34;;537:22;;;498:62;495:185;;;602:10;597:3;593:20;590:1;583:31;637:4;634:1;627:15;665:4;662:1;655:15;722:949;787:5;835:6;823:9;818:3;814:19;810:32;807:52;;;855:1;852;845:12;807:52;877:17;;:::i;:::-;868:26;;930:9;917:23;910:5;903:38;1001:2;990:9;986:18;973:32;968:2;961:5;957:14;950:56;1066:2;1055:9;1051:18;1038:32;1033:2;1026:5;1022:14;1015:56;1131:2;1120:9;1116:18;1103:32;1098:2;1091:5;1087:14;1080:56;1197:3;1186:9;1182:19;1169:33;1163:3;1156:5;1152:15;1145:58;1264:3;1253:9;1249:19;1236:33;1230:3;1223:5;1219:15;1212:58;1331:3;1320:9;1316:19;1303:33;1297:3;1290:5;1286:15;1279:58;1398:3;1387:9;1383:19;1370:33;1364:3;1357:5;1353:15;1346:58;1423:3;1486:2;1475:9;1471:18;1458:32;1453:2;1446:5;1442:14;1435:56;;1510:3;1573:2;1562:9;1558:18;1545:32;1540:2;1533:5;1529:14;1522:56;;1597:3;1660:2;1649:9;1645:18;1632:32;1627:2;1620:5;1616:14;1609:56;;722:949;;;;:::o;1676:251::-;1772:6;1825:3;1813:9;1804:7;1800:23;1796:33;1793:53;;;1842:1;1839;1832:12;1793:53;1865:56;1913:7;1902:9;1865:56;:::i;2114:1031::-;2227:6;2235;2279:9;2270:7;2266:23;2309:3;2305:2;2301:12;2298:32;;;2326:1;2323;2316:12;2298:32;2349:6;2375:2;2371;2367:11;2364:31;;;2391:1;2388;2381:12;2364:31;2417:21;;:::i;:::-;2404:34;;2461:56;2509:7;2498:9;2461:56;:::i;:::-;2447:71;;2580:3;2565:19;;2552:33;2545:4;2534:16;;2527:59;2648:3;2633:19;;2620:33;2613:4;2602:16;;2595:59;2716:3;2701:19;;2688:33;2681:4;2670:16;;2663:59;2784:3;2769:19;;2756:33;2749:4;2738:16;;2731:59;2852:3;2837:19;;2824:33;2817:4;2806:16;;2799:59;2920:3;2905:19;;2892:33;2885:4;2874:16;;2867:59;2988:3;2973:19;;2960:33;2953:4;2942:16;;2935:59;3058:3;3043:19;;3030:33;3021:6;3010:18;;3003:61;2454:5;;3120:18;;3107:32;;-1:-1:-1;;;2114:1031:161:o;3330:452::-;3423:6;3431;3439;3447;3455;3508:3;3496:9;3487:7;3483:23;3479:33;3476:53;;;3525:1;3522;3515:12;3476:53;-1:-1:-1;;3548:23:161;;;3618:2;3603:18;;3590:32;;-1:-1:-1;3669:2:161;3654:18;;3641:32;;3720:2;3705:18;;3692:32;;-1:-1:-1;3771:3:161;3756:19;3743:33;;-1:-1:-1;3330:452:161;-1:-1:-1;3330:452:161:o;4523:127::-;4584:10;4579:3;4575:20;4572:1;4565:31;4615:4;4612:1;4605:15;4639:4;4636:1;4629:15;4655:136;4690:3;-1:-1:-1;;;4711:22:161;;4708:48;;4736:18;;:::i;:::-;-1:-1:-1;4776:1:161;4772:13;;4655:136::o;4796:128::-;4863:9;;;4884:11;;;4881:37;;;4898:18;;:::i;4929:125::-;4994:9;;;5015:10;;;5012:36;;;5028:18;;:::i;5059:200::-;5125:9;;;5098:4;5153:9;;5181:10;;5193:12;;;5177:29;5216:12;;;5208:21;;5174:56;5171:82;;;5233:18;;:::i;5264:216::-;5328:9;;;5356:11;;;5303:3;5386:9;;5414:10;;5410:19;;5439:10;;5431:19;;5407:44;5404:70;;;5454:18;;:::i;5617:290::-;5656:1;5682;5672:132;;5726:10;5721:3;5717:20;5714:1;5707:31;5761:4;5758:1;5751:15;5789:4;5786:1;5779:15;5672:132;-1:-1:-1;;;5820:18:161;;-1:-1:-1;;5840:13:161;;5816:38;5813:64;;;5857:18;;:::i;:::-;-1:-1:-1;5891:10:161;;5617:290::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "calculateDistributeExcessIdleShareProceeds(((uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,int256,uint256,int256,uint256),uint256)": "7d840b6d",
    "calculateDistributeExcessIdleWithdrawalSharesRedeemed(((uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,int256,uint256,int256,uint256),uint256)": "ce2e339c",
    "calculateMaxShareReservesDelta(((uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256),uint256,uint256,uint256,uint256,int256,uint256,int256,uint256),uint256)": "5dcbd5ca",
    "calculateNetCurveTrade((uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "f1082448",
    "calculateNetFlatTrade((uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "74bbc903",
    "calculatePresentValue((uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "37043a53",
    "calculateUpdateLiquidity(uint256,int256,uint256,uint256,int256)": "b500f3cb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FixedPointMath_InvalidExponent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FixedPointMath_InvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTradeSize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NegativePresentValue\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageTimeRemaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageTimeRemaining\",\"type\":\"uint256\"}],\"internalType\":\"struct LPMath.PresentValueParams\",\"name\":\"presentValueParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startingPresentValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeLpTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idle\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"netCurveTrade\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"originalShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"originalShareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"originalBondReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct LPMath.DistributeExcessIdleParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_originalEffectiveShareReserves\",\"type\":\"uint256\"}],\"name\":\"calculateDistributeExcessIdleShareProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageTimeRemaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageTimeRemaining\",\"type\":\"uint256\"}],\"internalType\":\"struct LPMath.PresentValueParams\",\"name\":\"presentValueParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startingPresentValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeLpTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idle\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"netCurveTrade\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"originalShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"originalShareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"originalBondReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct LPMath.DistributeExcessIdleParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_shareReservesDelta\",\"type\":\"uint256\"}],\"name\":\"calculateDistributeExcessIdleWithdrawalSharesRedeemed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageTimeRemaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageTimeRemaining\",\"type\":\"uint256\"}],\"internalType\":\"struct LPMath.PresentValueParams\",\"name\":\"presentValueParams\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"startingPresentValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeLpTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalSharesTotalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idle\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"netCurveTrade\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"originalShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"originalShareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"originalBondReserves\",\"type\":\"uint256\"}],\"internalType\":\"struct LPMath.DistributeExcessIdleParams\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_originalEffectiveShareReserves\",\"type\":\"uint256\"}],\"name\":\"calculateMaxShareReservesDelta\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageTimeRemaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageTimeRemaining\",\"type\":\"uint256\"}],\"internalType\":\"struct LPMath.PresentValueParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"calculateNetCurveTrade\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageTimeRemaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageTimeRemaining\",\"type\":\"uint256\"}],\"internalType\":\"struct LPMath.PresentValueParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"calculateNetFlatTrade\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"longAverageTimeRemaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortsOutstanding\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shortAverageTimeRemaining\",\"type\":\"uint256\"}],\"internalType\":\"struct LPMath.PresentValueParams\",\"name\":\"_params\",\"type\":\"tuple\"}],\"name\":\"calculatePresentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_bondReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_shareReservesDelta\",\"type\":\"int256\"}],\"name\":\"calculateUpdateLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shareReserves\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"shareAdjustment\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bondReserves\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"FixedPointMath_InvalidExponent()\":[{\"notice\":\"###################### ### FixedPointMath ### ######################\"}],\"InvalidTradeSize()\":[{\"notice\":\"###################### ### YieldSpaceMath ### ######################\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockLPMath.sol\":\"MockLPMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":aave-v3-core/=lib/aave-v3-core/\",\":create3-factory/=lib/yield-daddy/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\",\":yield-daddy/=lib/yield-daddy/\"]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0xfb57fe2ee4d8d1c6a8e2aa3b007da6f0e53d65388245b0b7d876234077ee95b4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e4303c41b9752b51c6eaa9b16aa11e5bffb34fc80c5c8761302539cd5922ae36\",\"dweb:/ipfs/QmZjVYBikfgPDX47hmbGJpG6kvm3Gyt6nKkFbZH6r8U4cL\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xf62872798e8bb605416caed4df67bc933e7df0ac28db4a14104a481584ad7787\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d4650a2428a4b5eb302c1e2c596f4ae4358be4ea098694152e7223aa6a579d8\",\"dweb:/ipfs/QmYoopLx1zWyXKEt7bzCVSpQPHTbtDQRoc3yJ7kqThThYw\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x84c73d8c4b67da41635f57fce2f30b8f04fc826ff6fb54c605de23d376f3403d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e6d636dff5c24916ae35a76695d741de2f14ee46876ea67c5393618bb7f9cf85\",\"dweb:/ipfs/QmUwxh8JeAqSFA8Z2qabVx3YWRSz7PJ9V2TQgnfctAgqPF\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x402cde9d7823ea9762f43ce326703c64c441c5feb278bedcb9e1401d0a8b733b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e12e56585cf119a544a5382df36d725daf89a21660663d1e6dd9de839fc8ff17\",\"dweb:/ipfs/QmNSyGK8eagodGUUPniBptVyC9by2n9Ff3PUxF4FHNQYXc\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xcf3a4002275ea64e381f0a4aded3683e12960396ef79ba9dd153e2d1e395baad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9990491f7a5151fd696a45e6e5b0282a1dedf58521861dfb8c64db8cb60f5b6\",\"dweb:/ipfs/QmaywmqqQhz7DeYqZdoeykagr5h4ZhQRv6GasHqvdWqzSy\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0xdb7f24663cff7307a468ef5e4c6f3e4d01ec0475157b3bbb3405890c3e9ab87d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7f631a9a395fba5b07c3d9308fccac18d5aa59d890efe23442ed2a4da9871ae8\",\"dweb:/ipfs/QmV2a4wiAPfWzSST3faYt58i2tqEyoqCLAJV8aNCdJyxVE\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0x476240ea4328bae9ab820b6f0f40afb11c74ee52d26bdbef69e4ece28dc10bdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://843f73cb21eaec4e26952fd6cbde5e6815e3a28c438df9e026e249200d25076f\",\"dweb:/ipfs/QmXzE7gsRKMaRGQfTDodA1RXxNxUuBj8RT7grTYjZUdbe6\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0x9b92d81f2f038fcd4bb5d069ab2b754efc153234c451d4ee4caa6d74aaca16b4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8686fddc99564c6b6524ea68a6b7ff081a9988fc795fc13197bb59ddaa2041c6\",\"dweb:/ipfs/QmarJYJAgoH6Z4H1BmdPoRgqLubRu5S6NDXBNV2fDApPuW\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0xac200bd4172e6369dc6ad06bef96e3d4ce7df36a97e80ee8f1a033e622c99639\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0add90b8957805ae8e99581b76d81dec07bdf7586fdf2a05f31d2ce91f09439d\",\"dweb:/ipfs/QmRRBbguna6QmMUvANobcSfH6HM3DydFjNXSWZZr1VDKH8\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0xd87293bc10dfe09707a042bf05091baf40ba344bdca141bd99b62256a7611817\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8f6eadd454c6671c26bd22095c31a3bbaea7083df9aa6548dbaba32a4907e336\",\"dweb:/ipfs/QmY1jMW9DuAk9CSfVS6MsG5onqjZHKzdBrv2TcHvj9yKj4\"]},\"contracts/src/libraries/LPMath.sol\":{\"keccak256\":\"0x077931150bcba5b99dedcd9038f3fbeef9c9230046dc4649c457d75d4be32a5c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2a48e4046f7ae8acb965d0f8d79767f4f4c70c1a6a8d3cf635482587412d33fd\",\"dweb:/ipfs/QmcY8FbffppqTMBiMwniXG9R8i8eQoVJuLqqTXgpuiXyUr\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x077e800ae4f47bda111e72f8c40d50a57b10a1c5bce81f2e83bb57f94752159f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8e9433729a73747a65ececae27a8f634300a4e02a66577f796f596e5894a4bb5\",\"dweb:/ipfs/QmT2fC2xaRoFuDBURAtcwqvpqXvw1AQybSgb4khVBzit2S\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0x2f9511684820be7510155adfe3c2c2ef7e2583472946bae37f379bac801fc263\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7e9a84e4168448e3320a6682c8ba248c8b51757df173b86507e9aba4b6167247\",\"dweb:/ipfs/QmSonetYBP22Fnc8HrcaTxAA1Zg2PCR5ptPiEp22sA77Ka\"]},\"contracts/test/MockLPMath.sol\":{\"keccak256\":\"0xafee404e31d9542644f0929f10c9f39f36aed372d9f791afc8881fd46b728f91\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a1e105a589f5d2300d7aa425a1167904f595031bb22b59bb7ff9f95b42c348fa\",\"dweb:/ipfs/QmdTX8mgxNBySwuUXxcrMfEYrgAsa2Ekbdcqai92kxepVn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "FixedPointMath_InvalidExponent"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FixedPointMath_InvalidInput"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShareReserves"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTradeSize"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NegativePresentValue"
        },
        {
          "inputs": [
            {
              "internalType": "struct LPMath.DistributeExcessIdleParams",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct LPMath.PresentValueParams",
                  "name": "presentValueParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "shareReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "shareAdjustment",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bondReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sharePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "initialSharePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minimumShareReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timeStretch",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "longsOutstanding",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "longAverageTimeRemaining",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shortsOutstanding",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shortAverageTimeRemaining",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "startingPresentValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeLpTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalSharesTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "idle",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "netCurveTrade",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "originalShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "originalShareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "originalBondReserves",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "_originalEffectiveShareReserves",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateDistributeExcessIdleShareProceeds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LPMath.DistributeExcessIdleParams",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct LPMath.PresentValueParams",
                  "name": "presentValueParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "shareReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "shareAdjustment",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bondReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sharePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "initialSharePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minimumShareReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timeStretch",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "longsOutstanding",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "longAverageTimeRemaining",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shortsOutstanding",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shortAverageTimeRemaining",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "startingPresentValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeLpTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalSharesTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "idle",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "netCurveTrade",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "originalShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "originalShareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "originalBondReserves",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "_shareReservesDelta",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateDistributeExcessIdleWithdrawalSharesRedeemed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LPMath.DistributeExcessIdleParams",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct LPMath.PresentValueParams",
                  "name": "presentValueParams",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "shareReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "int256",
                      "name": "shareAdjustment",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bondReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "sharePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "initialSharePrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minimumShareReserves",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timeStretch",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "longsOutstanding",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "longAverageTimeRemaining",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shortsOutstanding",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "shortAverageTimeRemaining",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "startingPresentValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "activeLpTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "withdrawalSharesTotalSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "idle",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "netCurveTrade",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "originalShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "originalShareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "originalBondReserves",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "_originalEffectiveShareReserves",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateMaxShareReservesDelta",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LPMath.PresentValueParams",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "shareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "shareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "bondReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeStretch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longAverageTimeRemaining",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortAverageTimeRemaining",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateNetCurveTrade",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LPMath.PresentValueParams",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "shareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "shareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "bondReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeStretch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longAverageTimeRemaining",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortAverageTimeRemaining",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateNetFlatTrade",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct LPMath.PresentValueParams",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "shareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "int256",
                  "name": "shareAdjustment",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "bondReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "sharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "initialSharePrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumShareReserves",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timeStretch",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "longAverageTimeRemaining",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortsOutstanding",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "shortAverageTimeRemaining",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculatePresentValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_shareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "_shareAdjustment",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "_bondReserves",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minimumShareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "_shareReservesDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateUpdateLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shareReserves",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "shareAdjustment",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "bondReserves",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "aave-v3-core/=lib/aave-v3-core/",
        "create3-factory/=lib/yield-daddy/lib/create3-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "solmate/=lib/solmate/src/",
        "yield-daddy/=lib/yield-daddy/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/test/MockLPMath.sol": "MockLPMath"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/interfaces/IERC20.sol": {
        "keccak256": "0xfb57fe2ee4d8d1c6a8e2aa3b007da6f0e53d65388245b0b7d876234077ee95b4",
        "urls": [
          "bzz-raw://e4303c41b9752b51c6eaa9b16aa11e5bffb34fc80c5c8761302539cd5922ae36",
          "dweb:/ipfs/QmZjVYBikfgPDX47hmbGJpG6kvm3Gyt6nKkFbZH6r8U4cL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdrive.sol": {
        "keccak256": "0xf62872798e8bb605416caed4df67bc933e7df0ac28db4a14104a481584ad7787",
        "urls": [
          "bzz-raw://0d4650a2428a4b5eb302c1e2c596f4ae4358be4ea098694152e7223aa6a579d8",
          "dweb:/ipfs/QmYoopLx1zWyXKEt7bzCVSpQPHTbtDQRoc3yJ7kqThThYw"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveCore.sol": {
        "keccak256": "0x84c73d8c4b67da41635f57fce2f30b8f04fc826ff6fb54c605de23d376f3403d",
        "urls": [
          "bzz-raw://e6d636dff5c24916ae35a76695d741de2f14ee46876ea67c5393618bb7f9cf85",
          "dweb:/ipfs/QmUwxh8JeAqSFA8Z2qabVx3YWRSz7PJ9V2TQgnfctAgqPF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveRead.sol": {
        "keccak256": "0x402cde9d7823ea9762f43ce326703c64c441c5feb278bedcb9e1401d0a8b733b",
        "urls": [
          "bzz-raw://e12e56585cf119a544a5382df36d725daf89a21660663d1e6dd9de839fc8ff17",
          "dweb:/ipfs/QmNSyGK8eagodGUUPniBptVyC9by2n9Ff3PUxF4FHNQYXc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiToken.sol": {
        "keccak256": "0xcf3a4002275ea64e381f0a4aded3683e12960396ef79ba9dd153e2d1e395baad",
        "urls": [
          "bzz-raw://c9990491f7a5151fd696a45e6e5b0282a1dedf58521861dfb8c64db8cb60f5b6",
          "dweb:/ipfs/QmaywmqqQhz7DeYqZdoeykagr5h4ZhQRv6GasHqvdWqzSy"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenCore.sol": {
        "keccak256": "0xdb7f24663cff7307a468ef5e4c6f3e4d01ec0475157b3bbb3405890c3e9ab87d",
        "urls": [
          "bzz-raw://7f631a9a395fba5b07c3d9308fccac18d5aa59d890efe23442ed2a4da9871ae8",
          "dweb:/ipfs/QmV2a4wiAPfWzSST3faYt58i2tqEyoqCLAJV8aNCdJyxVE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenMetadata.sol": {
        "keccak256": "0x476240ea4328bae9ab820b6f0f40afb11c74ee52d26bdbef69e4ece28dc10bdb",
        "urls": [
          "bzz-raw://843f73cb21eaec4e26952fd6cbde5e6815e3a28c438df9e026e249200d25076f",
          "dweb:/ipfs/QmXzE7gsRKMaRGQfTDodA1RXxNxUuBj8RT7grTYjZUdbe6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenRead.sol": {
        "keccak256": "0x9b92d81f2f038fcd4bb5d069ab2b754efc153234c451d4ee4caa6d74aaca16b4",
        "urls": [
          "bzz-raw://8686fddc99564c6b6524ea68a6b7ff081a9988fc795fc13197bb59ddaa2041c6",
          "dweb:/ipfs/QmarJYJAgoH6Z4H1BmdPoRgqLubRu5S6NDXBNV2fDApPuW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/FixedPointMath.sol": {
        "keccak256": "0xac200bd4172e6369dc6ad06bef96e3d4ce7df36a97e80ee8f1a033e622c99639",
        "urls": [
          "bzz-raw://0add90b8957805ae8e99581b76d81dec07bdf7586fdf2a05f31d2ce91f09439d",
          "dweb:/ipfs/QmRRBbguna6QmMUvANobcSfH6HM3DydFjNXSWZZr1VDKH8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/HyperdriveMath.sol": {
        "keccak256": "0xd87293bc10dfe09707a042bf05091baf40ba344bdca141bd99b62256a7611817",
        "urls": [
          "bzz-raw://8f6eadd454c6671c26bd22095c31a3bbaea7083df9aa6548dbaba32a4907e336",
          "dweb:/ipfs/QmY1jMW9DuAk9CSfVS6MsG5onqjZHKzdBrv2TcHvj9yKj4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/LPMath.sol": {
        "keccak256": "0x077931150bcba5b99dedcd9038f3fbeef9c9230046dc4649c457d75d4be32a5c",
        "urls": [
          "bzz-raw://2a48e4046f7ae8acb965d0f8d79767f4f4c70c1a6a8d3cf635482587412d33fd",
          "dweb:/ipfs/QmcY8FbffppqTMBiMwniXG9R8i8eQoVJuLqqTXgpuiXyUr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/SafeCast.sol": {
        "keccak256": "0x077e800ae4f47bda111e72f8c40d50a57b10a1c5bce81f2e83bb57f94752159f",
        "urls": [
          "bzz-raw://8e9433729a73747a65ececae27a8f634300a4e02a66577f796f596e5894a4bb5",
          "dweb:/ipfs/QmT2fC2xaRoFuDBURAtcwqvpqXvw1AQybSgb4khVBzit2S"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/YieldSpaceMath.sol": {
        "keccak256": "0x2f9511684820be7510155adfe3c2c2ef7e2583472946bae37f379bac801fc263",
        "urls": [
          "bzz-raw://7e9a84e4168448e3320a6682c8ba248c8b51757df173b86507e9aba4b6167247",
          "dweb:/ipfs/QmSonetYBP22Fnc8HrcaTxAA1Zg2PCR5ptPiEp22sA77Ka"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/MockLPMath.sol": {
        "keccak256": "0xafee404e31d9542644f0929f10c9f39f36aed372d9f791afc8881fd46b728f91",
        "urls": [
          "bzz-raw://a1e105a589f5d2300d7aa425a1167904f595031bb22b59bb7ff9f95b42c348fa",
          "dweb:/ipfs/QmdTX8mgxNBySwuUXxcrMfEYrgAsa2Ekbdcqai92kxepVn"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/MockLPMath.sol",
    "id": 18650,
    "exportedSymbols": {
      "LPMath": [
        14276
      ],
      "MockLPMath": [
        18649
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2561:69",
    "nodes": [
      {
        "id": 18513,
        "nodeType": "PragmaDirective",
        "src": "39:23:69",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 18515,
        "nodeType": "ImportDirective",
        "src": "64:60:69",
        "nodes": [],
        "absolutePath": "contracts/src/libraries/LPMath.sol",
        "file": "contracts/src/libraries/LPMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 18650,
        "sourceUnit": 14277,
        "symbolAliases": [
          {
            "foreign": {
              "id": 18514,
              "name": "LPMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14276,
              "src": "73:6:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 18649,
        "nodeType": "ContractDefinition",
        "src": "126:2473:69",
        "nodes": [
          {
            "id": 18544,
            "nodeType": "FunctionDefinition",
            "src": "152:631:69",
            "nodes": [],
            "body": {
              "id": 18543,
              "nodeType": "Block",
              "src": "529:254:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18536,
                        "name": "_shareReserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18517,
                        "src": "607:14:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18537,
                        "name": "_shareAdjustment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18519,
                        "src": "639:16:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 18538,
                        "name": "_bondReserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18521,
                        "src": "673:13:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18539,
                        "name": "_minimumShareReserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18523,
                        "src": "704:21:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18540,
                        "name": "_shareReservesDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18525,
                        "src": "743:19:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 18534,
                        "name": "LPMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14276,
                        "src": "558:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LPMath_$14276_$",
                          "typeString": "type(library LPMath)"
                        }
                      },
                      "id": 18535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "565:24:69",
                      "memberName": "calculateUpdateLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11848,
                      "src": "558:31:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$_t_uint256_$_t_uint256_$_t_int256_$returns$_t_uint256_$_t_int256_$_t_uint256_$",
                        "typeString": "function (uint256,int256,uint256,uint256,int256) pure returns (uint256,int256,uint256)"
                      }
                    },
                    "id": 18541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "558:218:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_uint256_$",
                      "typeString": "tuple(uint256,int256,uint256)"
                    }
                  },
                  "functionReturnParameters": 18533,
                  "id": 18542,
                  "nodeType": "Return",
                  "src": "539:237:69"
                }
              ]
            },
            "functionSelector": "b500f3cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateUpdateLiquidity",
            "nameLocation": "161:24:69",
            "parameters": {
              "id": 18526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18517,
                  "mutability": "mutable",
                  "name": "_shareReserves",
                  "nameLocation": "203:14:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18544,
                  "src": "195:22:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "195:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18519,
                  "mutability": "mutable",
                  "name": "_shareAdjustment",
                  "nameLocation": "234:16:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18544,
                  "src": "227:23:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 18518,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18521,
                  "mutability": "mutable",
                  "name": "_bondReserves",
                  "nameLocation": "268:13:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18544,
                  "src": "260:21:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18523,
                  "mutability": "mutable",
                  "name": "_minimumShareReserves",
                  "nameLocation": "299:21:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18544,
                  "src": "291:29:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18525,
                  "mutability": "mutable",
                  "name": "_shareReservesDelta",
                  "nameLocation": "337:19:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18544,
                  "src": "330:26:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 18524,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "185:177:69"
            },
            "returnParameters": {
              "id": 18533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18528,
                  "mutability": "mutable",
                  "name": "shareReserves",
                  "nameLocation": "431:13:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18544,
                  "src": "423:21:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18527,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18530,
                  "mutability": "mutable",
                  "name": "shareAdjustment",
                  "nameLocation": "465:15:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18544,
                  "src": "458:22:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 18529,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18532,
                  "mutability": "mutable",
                  "name": "bondReserves",
                  "nameLocation": "502:12:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18544,
                  "src": "494:20:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "409:115:69"
            },
            "scope": 18649,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18558,
            "nodeType": "FunctionDefinition",
            "src": "789:180:69",
            "nodes": [],
            "body": {
              "id": 18557,
              "nodeType": "Block",
              "src": "908:61:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18554,
                        "name": "_params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18547,
                        "src": "954:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PresentValueParams_$11871_memory_ptr",
                          "typeString": "struct LPMath.PresentValueParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PresentValueParams_$11871_memory_ptr",
                          "typeString": "struct LPMath.PresentValueParams memory"
                        }
                      ],
                      "expression": {
                        "id": 18552,
                        "name": "LPMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14276,
                        "src": "925:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LPMath_$14276_$",
                          "typeString": "type(library LPMath)"
                        }
                      },
                      "id": 18553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "932:21:69",
                      "memberName": "calculatePresentValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11900,
                      "src": "925:28:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_PresentValueParams_$11871_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct LPMath.PresentValueParams memory) pure returns (uint256)"
                      }
                    },
                    "id": 18555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:37:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 18551,
                  "id": 18556,
                  "nodeType": "Return",
                  "src": "918:44:69"
                }
              ]
            },
            "functionSelector": "37043a53",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePresentValue",
            "nameLocation": "798:21:69",
            "parameters": {
              "id": 18548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18547,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "862:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18558,
                  "src": "829:40:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PresentValueParams_$11871_memory_ptr",
                    "typeString": "struct LPMath.PresentValueParams"
                  },
                  "typeName": {
                    "id": 18546,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18545,
                      "name": "LPMath.PresentValueParams",
                      "nameLocations": [
                        "829:6:69",
                        "836:18:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11871,
                      "src": "829:25:69"
                    },
                    "referencedDeclaration": 11871,
                    "src": "829:25:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PresentValueParams_$11871_storage_ptr",
                      "typeString": "struct LPMath.PresentValueParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:56:69"
            },
            "returnParameters": {
              "id": 18551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18550,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18558,
                  "src": "899:7:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "899:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "898:9:69"
            },
            "scope": 18649,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18572,
            "nodeType": "FunctionDefinition",
            "src": "975:179:69",
            "nodes": [],
            "body": {
              "id": 18571,
              "nodeType": "Block",
              "src": "1093:61:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18568,
                        "name": "_params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18561,
                        "src": "1139:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PresentValueParams_$11871_memory_ptr",
                          "typeString": "struct LPMath.PresentValueParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PresentValueParams_$11871_memory_ptr",
                          "typeString": "struct LPMath.PresentValueParams memory"
                        }
                      ],
                      "expression": {
                        "id": 18566,
                        "name": "LPMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14276,
                        "src": "1110:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LPMath_$14276_$",
                          "typeString": "type(library LPMath)"
                        }
                      },
                      "id": 18567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1117:21:69",
                      "memberName": "calculateNetFlatTrade",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12254,
                      "src": "1110:28:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_PresentValueParams_$11871_memory_ptr_$returns$_t_int256_$",
                        "typeString": "function (struct LPMath.PresentValueParams memory) pure returns (int256)"
                      }
                    },
                    "id": 18569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:37:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 18565,
                  "id": 18570,
                  "nodeType": "Return",
                  "src": "1103:44:69"
                }
              ]
            },
            "functionSelector": "74bbc903",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateNetFlatTrade",
            "nameLocation": "984:21:69",
            "parameters": {
              "id": 18562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18561,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "1048:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18572,
                  "src": "1015:40:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PresentValueParams_$11871_memory_ptr",
                    "typeString": "struct LPMath.PresentValueParams"
                  },
                  "typeName": {
                    "id": 18560,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18559,
                      "name": "LPMath.PresentValueParams",
                      "nameLocations": [
                        "1015:6:69",
                        "1022:18:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11871,
                      "src": "1015:25:69"
                    },
                    "referencedDeclaration": 11871,
                    "src": "1015:25:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PresentValueParams_$11871_storage_ptr",
                      "typeString": "struct LPMath.PresentValueParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1005:56:69"
            },
            "returnParameters": {
              "id": 18565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18564,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18572,
                  "src": "1085:6:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 18563,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1084:8:69"
            },
            "scope": 18649,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18597,
            "nodeType": "FunctionDefinition",
            "src": "1160:335:69",
            "nodes": [],
            "body": {
              "id": 18596,
              "nodeType": "Block",
              "src": "1279:216:69",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    18581,
                    18583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18581,
                      "mutability": "mutable",
                      "name": "netCurveTrade",
                      "nameLocation": "1297:13:69",
                      "nodeType": "VariableDeclaration",
                      "scope": 18596,
                      "src": "1290:20:69",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 18580,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1290:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 18583,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1317:7:69",
                      "nodeType": "VariableDeclaration",
                      "scope": 18596,
                      "src": "1312:12:69",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 18582,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1312:4:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18588,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 18586,
                        "name": "_params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18575,
                        "src": "1375:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PresentValueParams_$11871_memory_ptr",
                          "typeString": "struct LPMath.PresentValueParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PresentValueParams_$11871_memory_ptr",
                          "typeString": "struct LPMath.PresentValueParams memory"
                        }
                      ],
                      "expression": {
                        "id": 18584,
                        "name": "LPMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14276,
                        "src": "1328:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LPMath_$14276_$",
                          "typeString": "type(library LPMath)"
                        }
                      },
                      "id": 18585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1348:26:69",
                      "memberName": "calculateNetCurveTradeSafe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12216,
                      "src": "1328:46:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_PresentValueParams_$11871_memory_ptr_$returns$_t_int256_$_t_bool_$",
                        "typeString": "function (struct LPMath.PresentValueParams memory) pure returns (int256,bool)"
                      }
                    },
                    "id": 18587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:55:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_bool_$",
                      "typeString": "tuple(int256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1289:94:69"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18590,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18583,
                        "src": "1401:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6f636b4c504d6174683a2063616c63756c6174654e65744375727665547261646553616665206661696c6564",
                        "id": 18591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1410:47:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d6b234109070984815d54c0ad886a5e811642efea043271318956686e5476d9",
                          "typeString": "literal_string \"MockLPMath: calculateNetCurveTradeSafe failed\""
                        },
                        "value": "MockLPMath: calculateNetCurveTradeSafe failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d6b234109070984815d54c0ad886a5e811642efea043271318956686e5476d9",
                          "typeString": "literal_string \"MockLPMath: calculateNetCurveTradeSafe failed\""
                        }
                      ],
                      "id": 18589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1393:7:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:65:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18593,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:65:69"
                },
                {
                  "expression": {
                    "id": 18594,
                    "name": "netCurveTrade",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18581,
                    "src": "1475:13:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 18579,
                  "id": 18595,
                  "nodeType": "Return",
                  "src": "1468:20:69"
                }
              ]
            },
            "functionSelector": "f1082448",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateNetCurveTrade",
            "nameLocation": "1169:22:69",
            "parameters": {
              "id": 18576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18575,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "1234:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18597,
                  "src": "1201:40:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PresentValueParams_$11871_memory_ptr",
                    "typeString": "struct LPMath.PresentValueParams"
                  },
                  "typeName": {
                    "id": 18574,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18573,
                      "name": "LPMath.PresentValueParams",
                      "nameLocations": [
                        "1201:6:69",
                        "1208:18:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11871,
                      "src": "1201:25:69"
                    },
                    "referencedDeclaration": 11871,
                    "src": "1201:25:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PresentValueParams_$11871_storage_ptr",
                      "typeString": "struct LPMath.PresentValueParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1191:56:69"
            },
            "returnParameters": {
              "id": 18579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18578,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18597,
                  "src": "1271:6:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 18577,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1271:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1270:8:69"
            },
            "scope": 18649,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18614,
            "nodeType": "FunctionDefinition",
            "src": "1501:368:69",
            "nodes": [],
            "body": {
              "id": 18613,
              "nodeType": "Block",
              "src": "1697:172:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18609,
                        "name": "_params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18600,
                        "src": "1804:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_memory_ptr",
                          "typeString": "struct LPMath.DistributeExcessIdleParams memory"
                        }
                      },
                      {
                        "id": 18610,
                        "name": "_shareReservesDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18602,
                        "src": "1829:19:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_memory_ptr",
                          "typeString": "struct LPMath.DistributeExcessIdleParams memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 18607,
                        "name": "LPMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14276,
                        "src": "1726:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LPMath_$14276_$",
                          "typeString": "type(library LPMath)"
                        }
                      },
                      "id": 18608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1733:53:69",
                      "memberName": "calculateDistributeExcessIdleWithdrawalSharesRedeemed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12434,
                      "src": "1726:60:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_DistributeExcessIdleParams_$12274_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (struct LPMath.DistributeExcessIdleParams memory,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 18611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1726:136:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 18606,
                  "id": 18612,
                  "nodeType": "Return",
                  "src": "1707:155:69"
                }
              ]
            },
            "functionSelector": "ce2e339c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateDistributeExcessIdleWithdrawalSharesRedeemed",
            "nameLocation": "1510:53:69",
            "parameters": {
              "id": 18603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18600,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "1614:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18614,
                  "src": "1573:48:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_memory_ptr",
                    "typeString": "struct LPMath.DistributeExcessIdleParams"
                  },
                  "typeName": {
                    "id": 18599,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18598,
                      "name": "LPMath.DistributeExcessIdleParams",
                      "nameLocations": [
                        "1573:6:69",
                        "1580:26:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12274,
                      "src": "1573:33:69"
                    },
                    "referencedDeclaration": 12274,
                    "src": "1573:33:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_storage_ptr",
                      "typeString": "struct LPMath.DistributeExcessIdleParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18602,
                  "mutability": "mutable",
                  "name": "_shareReservesDelta",
                  "nameLocation": "1639:19:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18614,
                  "src": "1631:27:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:101:69"
            },
            "returnParameters": {
              "id": 18606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18614,
                  "src": "1688:7:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18604,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1687:9:69"
            },
            "scope": 18649,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18631,
            "nodeType": "FunctionDefinition",
            "src": "1875:370:69",
            "nodes": [],
            "body": {
              "id": 18630,
              "nodeType": "Block",
              "src": "2072:173:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18626,
                        "name": "_params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18617,
                        "src": "2168:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_memory_ptr",
                          "typeString": "struct LPMath.DistributeExcessIdleParams memory"
                        }
                      },
                      {
                        "id": 18627,
                        "name": "_originalEffectiveShareReserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18619,
                        "src": "2193:31:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_memory_ptr",
                          "typeString": "struct LPMath.DistributeExcessIdleParams memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 18624,
                        "name": "LPMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14276,
                        "src": "2101:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LPMath_$14276_$",
                          "typeString": "type(library LPMath)"
                        }
                      },
                      "id": 18625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2108:42:69",
                      "memberName": "calculateDistributeExcessIdleShareProceeds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12879,
                      "src": "2101:49:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_DistributeExcessIdleParams_$12274_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (struct LPMath.DistributeExcessIdleParams memory,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 18628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2101:137:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 18623,
                  "id": 18629,
                  "nodeType": "Return",
                  "src": "2082:156:69"
                }
              ]
            },
            "functionSelector": "7d840b6d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateDistributeExcessIdleShareProceeds",
            "nameLocation": "1884:42:69",
            "parameters": {
              "id": 18620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18617,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "1977:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18631,
                  "src": "1936:48:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_memory_ptr",
                    "typeString": "struct LPMath.DistributeExcessIdleParams"
                  },
                  "typeName": {
                    "id": 18616,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18615,
                      "name": "LPMath.DistributeExcessIdleParams",
                      "nameLocations": [
                        "1936:6:69",
                        "1943:26:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12274,
                      "src": "1936:33:69"
                    },
                    "referencedDeclaration": 12274,
                    "src": "1936:33:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_storage_ptr",
                      "typeString": "struct LPMath.DistributeExcessIdleParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18619,
                  "mutability": "mutable",
                  "name": "_originalEffectiveShareReserves",
                  "nameLocation": "2002:31:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18631,
                  "src": "1994:39:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1926:113:69"
            },
            "returnParameters": {
              "id": 18623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18631,
                  "src": "2063:7:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2062:9:69"
            },
            "scope": 18649,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 18648,
            "nodeType": "FunctionDefinition",
            "src": "2251:346:69",
            "nodes": [],
            "body": {
              "id": 18647,
              "nodeType": "Block",
              "src": "2436:161:69",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18643,
                        "name": "_params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18634,
                        "src": "2520:7:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_memory_ptr",
                          "typeString": "struct LPMath.DistributeExcessIdleParams memory"
                        }
                      },
                      {
                        "id": 18644,
                        "name": "_originalEffectiveShareReserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18636,
                        "src": "2545:31:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_memory_ptr",
                          "typeString": "struct LPMath.DistributeExcessIdleParams memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 18641,
                        "name": "LPMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14276,
                        "src": "2465:6:69",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LPMath_$14276_$",
                          "typeString": "type(library LPMath)"
                        }
                      },
                      "id": 18642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2472:30:69",
                      "memberName": "calculateMaxShareReservesDelta",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13395,
                      "src": "2465:37:69",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_DistributeExcessIdleParams_$12274_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (struct LPMath.DistributeExcessIdleParams memory,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 18645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2465:125:69",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 18640,
                  "id": 18646,
                  "nodeType": "Return",
                  "src": "2446:144:69"
                }
              ]
            },
            "functionSelector": "5dcbd5ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateMaxShareReservesDelta",
            "nameLocation": "2260:30:69",
            "parameters": {
              "id": 18637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18634,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "2341:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18648,
                  "src": "2300:48:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_memory_ptr",
                    "typeString": "struct LPMath.DistributeExcessIdleParams"
                  },
                  "typeName": {
                    "id": 18633,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 18632,
                      "name": "LPMath.DistributeExcessIdleParams",
                      "nameLocations": [
                        "2300:6:69",
                        "2307:26:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12274,
                      "src": "2300:33:69"
                    },
                    "referencedDeclaration": 12274,
                    "src": "2300:33:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributeExcessIdleParams_$12274_storage_ptr",
                      "typeString": "struct LPMath.DistributeExcessIdleParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18636,
                  "mutability": "mutable",
                  "name": "_originalEffectiveShareReserves",
                  "nameLocation": "2366:31:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 18648,
                  "src": "2358:39:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2358:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2290:113:69"
            },
            "returnParameters": {
              "id": 18640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18648,
                  "src": "2427:7:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2427:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2426:9:69"
            },
            "scope": 18649,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MockLPMath",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          18649
        ],
        "name": "MockLPMath",
        "nameLocation": "135:10:69",
        "scope": 18650,
        "usedErrors": [
          4537,
          4547,
          4649,
          4651,
          4658
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 69
} as const;
