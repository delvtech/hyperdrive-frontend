export declare const BaseTest: {
    readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "WhaleBalanceExceeded";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "WhaleIsContract";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "log_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "log_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "log_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "";
            readonly type: "int256";
        }];
        readonly name: "log_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "val";
            readonly type: "address";
        }];
        readonly name: "log_named_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "val";
            readonly type: "bytes";
        }];
        readonly name: "log_named_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "val";
            readonly type: "bytes32";
        }];
        readonly name: "log_named_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }];
        readonly name: "log_named_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "val";
            readonly type: "string";
        }];
        readonly name: "log_named_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }];
        readonly name: "log_named_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "log_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "logs";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "IS_TEST";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }];
        readonly name: "createUser";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "_user";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeArtifacts";
        readonly outputs: readonly [{
            readonly internalType: "string[]";
            readonly name: "excludedArtifacts_";
            readonly type: "string[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeContracts";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "excludedContracts_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeSenders";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "excludedSenders_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "failed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "setUp";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetArtifactSelectors";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "addr";
                readonly type: "address";
            }, {
                readonly internalType: "bytes4[]";
                readonly name: "selectors";
                readonly type: "bytes4[]";
            }];
            readonly internalType: "struct StdInvariant.FuzzSelector[]";
            readonly name: "targetedArtifactSelectors_";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetArtifacts";
        readonly outputs: readonly [{
            readonly internalType: "string[]";
            readonly name: "targetedArtifacts_";
            readonly type: "string[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetContracts";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "targetedContracts_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetSelectors";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "addr";
                readonly type: "address";
            }, {
                readonly internalType: "bytes4[]";
                readonly name: "selectors";
                readonly type: "bytes4[]";
            }];
            readonly internalType: "struct StdInvariant.FuzzSelector[]";
            readonly name: "targetedSelectors_";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetSenders";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "targetedSenders_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "whale";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly name: "whaleTransfer";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "whale";
            readonly type: "address";
        }, {
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }];
        readonly name: "whaleTransfer";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "0x6080604081905260078054600160ff199182168117909255600b8054909116909117905563f877cb1960e01b90526020608452600f60a4526e1350525393915517d49410d7d55493608a1b60c452737109709ecfa91a80626ff3989d68f67f5b1dd12d63f877cb1960e4600060405180830381865afa15801562000087573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000b1919081019062000194565b602a90620000c09082620002f8565b5060405163f877cb1960e01b815260206004820152600e60248201526d11d3d154931257d49410d7d5549360921b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f877cb1990606401600060405180830381865afa15801562000130573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200015a919081019062000194565b602b90620001699082620002f8565b503480156200017757600080fd5b50620003c4565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620001a857600080fd5b82516001600160401b0380821115620001c057600080fd5b818501915085601f830112620001d557600080fd5b815181811115620001ea57620001ea6200017e565b604051601f8201601f19908116603f011681019083821181831017156200021557620002156200017e565b8160405282815288868487010111156200022e57600080fd5b600093505b8284101562000252578484018601518185018701529285019262000233565b600086848301015280965050505050505092915050565b600181811c908216806200027e57607f821691505b6020821081036200029f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f357600081815260208120601f850160051c81016020861015620002ce5750805b601f850160051c820191505b81811015620002ef57828155600101620002da565b5050505b505050565b81516001600160401b038111156200031457620003146200017e565b6200032c8162000325845462000269565b84620002a5565b602080601f8311600181146200036457600084156200034b5750858301515b600019600386901b1c1916600185901b178555620002ef565b600085815260208120601f198616915b82811015620003955788860151825594840194600190910190840162000374565b5085821015620003b45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61139580620003d46000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806366d9a9a01161008c578063b5508aa911610066578063b5508aa9146101b4578063ba414fa6146101bc578063e20c9f71146101d4578063fa7626d4146101dc57600080fd5b806366d9a9a01461018257806385226c8114610197578063916a17c6146101ac57600080fd5b80633e5e0d26116100c85780633e5e0d26146101345780633e5e3c23146101475780633f7286f41461014f578063507ffba51461015757600080fd5b80630a9254e4146100ef57806310716760146100f95780631ed7831c1461011f575b600080fd5b6100f76101e9565b005b61010c610107366004610f48565b610503565b6040519081526020015b60405180910390f35b610127610586565b6040516101169190610f93565b61010c610142366004610fe0565b6105e8565b610127610856565b6101276108b6565b61016a610165366004611049565b610916565b6040516001600160a01b039091168152602001610116565b61018a610a2e565b60405161011691906110fa565b61019f610b1d565b60405161011691906111fd565b61018a610bed565b61019f610cd3565b6101c4610da3565b6040519015158152602001610116565b610127610ed0565b6007546101c49060ff1681565b61020f60405180604001604052806005815260200164616c69636560d81b815250610916565b601c80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152623137b160e91b602082015261025290610916565b601d80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526563656c696e6560d01b602082015261029890610916565b601e80546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260038152623230b760e91b60208201526102db90610916565b601f80546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600381526265766560e81b602082015261031e90610916565b602060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061036d604051806040016040528060088152602001673232b83637bcb2b960c11b815250610916565b602280546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526536b4b73a32b960d11b60208201526103b390610916565b602180546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600c81526b3332b2a1b7b63632b1ba37b960a11b60208201526103ff90610916565b602380546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600e81526d39bbb2b2b821b7b63632b1ba37b960911b602082015261044d90610916565b602480546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600a815269676f7665726e616e636560b01b602082015261049790610916565b602580546001600160a01b0319166001600160a01b03929092169190911790556040805180820190915260068152653830bab9b2b960d11b60208201526104dd90610916565b602680546001600160a01b0319166001600160a01b039290921691909117905542602955565b6040516370a0823160e01b81526001600160a01b03808516600483015260009161057e91869186918216906370a0823190602401602060405180830381865afa158015610554573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610578919061125f565b856105e8565b949350505050565b606060148054806020026020016040519081016040528092919081815260200182805480156105de57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105c0575b5050505050905090565b6040516370a0823160e01b81526001600160a01b03858116600483015260009182918616906370a0823190602401602060405180830381865afa158015610633573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610657919061125f565b90508084111561067a5760405163188c93a560e31b815260040160405180910390fd5b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106d857600080fd5b505af11580156106ec573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0389166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b15801561074557600080fd5b505af1158015610759573d6000803e3d6000fd5b505060405163c88a5e6d60e01b81526001600160a01b0389166004820152670de0b6b3a76400006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b1580156107c057600080fd5b505af11580156107d4573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890528816925063a9059cbb91506044016020604051808303816000875af1158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b9190611278565b509295945050505050565b606060168054806020026020016040519081016040528092919081815260200182805480156105de576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105c0575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156105de576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105c0575050505050905090565b60008160405160200161092991906112a1565b60408051601f198184030181529082905280516020909101206318caf8e360e31b82529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c7189061097a90849086906004016112b4565b600060405180830381600087803b15801561099457600080fd5b505af11580156109a8573d6000803e3d6000fd5b505060405163c88a5e6d60e01b81526001600160a01b038416600482015269021e19e0c9bab24000006024820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c88a5e6d9150604401600060405180830381600087803b158015610a1157600080fd5b505af1158015610a25573d6000803e3d6000fd5b50505050919050565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015610b145760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610afc57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610abe5790505b50505050508152505081526020019060010190610a52565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015610b14578382906000526020600020018054610b60906112d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8c906112d8565b8015610bd95780601f10610bae57610100808354040283529160200191610bd9565b820191906000526020600020905b815481529060010190602001808311610bbc57829003601f168201915b505050505081526020019060010190610b41565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015610b145760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610cbb57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411610c7d5790505b50505050508152505081526020019060010190610c11565b60606017805480602002602001604051908101604052809291908181526020016000905b82821015610b14578382906000526020600020018054610d16906112d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d42906112d8565b8015610d8f5780601f10610d6457610100808354040283529160200191610d8f565b820191906000526020600020905b815481529060010190602001808311610d7257829003601f168201915b505050505081526020019060010190610cf7565b600754600090610100900460ff1615610dc55750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610ecb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610e53917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611312565b60408051601f1981840301815290829052610e6d91611343565b6000604051808303816000865af19150503d8060008114610eaa576040519150601f19603f3d011682016040523d82523d6000602084013e610eaf565b606091505b5091505080806020019051810190610ec79190611278565b9150505b919050565b606060138054806020026020016040519081016040528092919081815260200182805480156105de576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116105c0575050505050905090565b6001600160a01b0381168114610f4557600080fd5b50565b600080600060608486031215610f5d57600080fd5b8335610f6881610f30565b92506020840135610f7881610f30565b91506040840135610f8881610f30565b809150509250925092565b6020808252825182820181905260009190848201906040850190845b81811015610fd45783516001600160a01b031683529284019291840191600101610faf565b50909695505050505050565b60008060008060808587031215610ff657600080fd5b843561100181610f30565b9350602085013561101181610f30565b925060408501359150606085013561102881610f30565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561105b57600080fd5b813567ffffffffffffffff8082111561107357600080fd5b818401915084601f83011261108757600080fd5b81358181111561109957611099611033565b604051601f8201601f19908116603f011681019083821181831017156110c1576110c1611033565b816040528281528760208487010111156110da57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561119e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156111895783516001600160e01b0319168252928b019260019290920191908b019061115f565b50978a01979550505091870191600101611122565b50919998505050505050505050565b60005b838110156111c85781810151838201526020016111b0565b50506000910152565b600081518084526111e98160208601602086016111ad565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561125257603f198886030184526112408583516111d1565b94509285019290850190600101611224565b5092979650505050505050565b60006020828403121561127157600080fd5b5051919050565b60006020828403121561128a57600080fd5b8151801515811461129a57600080fd5b9392505050565b60208152600061129a60208301846111d1565b6001600160a01b038316815260406020820181905260009061057e908301846111d1565b600181811c908216806112ec57607f821691505b60208210810361130c57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b03198316815281516000906113358160048501602087016111ad565b919091016004019392505050565b600082516113558184602087016111ad565b919091019291505056fea2646970667358221220f9f90a7092f0b5936be420b77bab197645b816822b27514f6b99be90987297de64736f6c63430008140033";
        readonly sourceMap: "308:3125:228:-:0;;;;;1572:26:143;;;1594:4;-1:-1:-1;;1572:26:143;;;;;;;;3126:44:146;;;;;;;;;;;-1:-1:-1;;;814:31:228;;216:2:234;814:31:228;198:21:234;255:2;235:18;228:30;-1:-1:-1;;;274:18:234;267:45;814:12:228;;329:18:234;814:31:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;814:31:228;;;;;;;;;;;;:::i;:::-;789:56;;;;;;:::i;:::-;-1:-1:-1;875:30:228;;-1:-1:-1;;;875:30:228;;4328:2:234;875:30:228;;;4310:21:234;4367:2;4347:18;;;4340:30;-1:-1:-1;;;4386:18:234;;;4379:44;875:12:228;;;;4440:18:234;;875:30:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;875:30:228;;;;;;;;;;;;:::i;:::-;851:54;;;;;;:::i;:::-;;308:3125;;;;;;;;;;;;358:127:234;419:10;414:3;410:20;407:1;400:31;450:4;447:1;440:15;474:4;471:1;464:15;490:1042;570:6;601:2;644;632:9;623:7;619:23;615:32;612:52;;;660:1;657;650:12;612:52;687:16;;-1:-1:-1;;;;;752:14:234;;;749:34;;;779:1;776;769:12;749:34;817:6;806:9;802:22;792:32;;862:7;855:4;851:2;847:13;843:27;833:55;;884:1;881;874:12;833:55;913:2;907:9;935:2;931;928:10;925:36;;;941:18;;:::i;:::-;1016:2;1010:9;984:2;1070:13;;-1:-1:-1;;1066:22:234;;;1090:2;1062:31;1058:40;1046:53;;;1114:18;;;1134:22;;;1111:46;1108:72;;;1160:18;;:::i;:::-;1200:10;1196:2;1189:22;1235:2;1227:6;1220:18;1275:7;1270:2;1265;1261;1257:11;1253:20;1250:33;1247:53;;;1296:1;1293;1286:12;1247:53;1318:1;1309:10;;1328:129;1342:2;1339:1;1336:9;1328:129;;;1430:10;;;1426:19;;1420:26;1399:14;;;1395:23;;1388:59;1353:10;;;;1328:129;;;1499:1;1494:2;1489;1481:6;1477:15;1473:24;1466:35;1520:6;1510:16;;;;;;;;490:1042;;;;:::o;1537:380::-;1616:1;1612:12;;;;1659;;;1680:61;;1734:4;1726:6;1722:17;1712:27;;1680:61;1787:2;1779:6;1776:14;1756:18;1753:38;1750:161;;1833:10;1828:3;1824:20;1821:1;1814:31;1868:4;1865:1;1858:15;1896:4;1893:1;1886:15;1750:161;;1537:380;;;:::o;2048:545::-;2150:2;2145:3;2142:11;2139:448;;;2186:1;2211:5;2207:2;2200:17;2256:4;2252:2;2242:19;2326:2;2314:10;2310:19;2307:1;2303:27;2297:4;2293:38;2362:4;2350:10;2347:20;2344:47;;;-1:-1:-1;2385:4:234;2344:47;2440:2;2435:3;2431:12;2428:1;2424:20;2418:4;2414:31;2404:41;;2495:82;2513:2;2506:5;2503:13;2495:82;;;2558:17;;;2539:1;2528:13;2495:82;;;2499:3;;;2139:448;2048:545;;;:::o;2769:1352::-;2889:10;;-1:-1:-1;;;;;2911:30:234;;2908:56;;;2944:18;;:::i;:::-;2973:97;3063:6;3023:38;3055:4;3049:11;3023:38;:::i;:::-;3017:4;2973:97;:::i;:::-;3125:4;;3189:2;3178:14;;3206:1;3201:663;;;;3908:1;3925:6;3922:89;;;-1:-1:-1;3977:19:234;;;3971:26;3922:89;-1:-1:-1;;2726:1:234;2722:11;;;2718:24;2714:29;2704:40;2750:1;2746:11;;;2701:57;4024:81;;3171:944;;3201:663;1995:1;1988:14;;;2032:4;2019:18;;-1:-1:-1;;3237:20:234;;;3355:236;3369:7;3366:1;3363:14;3355:236;;;3458:19;;;3452:26;3437:42;;3550:27;;;;3518:1;3506:14;;;;3385:19;;3355:236;;;3359:3;3619:6;3610:7;3607:19;3604:201;;;3680:19;;;3674:26;-1:-1:-1;;3763:1:234;3759:14;;;3775:3;3755:24;3751:37;3747:42;3732:58;3717:74;;3604:201;-1:-1:-1;;;;;3851:1:234;3835:14;;;3831:22;3818:36;;-1:-1:-1;2769:1352:234:o;4126:338::-;308:3125:228;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "";
        readonly sourceMap: "308:3125:228:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;932:526;;;:::i;:::-;;2152:198;;;;;;:::i;:::-;;:::i;:::-;;;845:25:234;;;833:2;818:18;2152:198:228;;;;;;;;2170:134:149;;;:::i;:::-;;;;;;;:::i;2356:417:228:-;;;;;;:::i;:::-;;:::i;2939:133:149:-;;;:::i;2640:141::-;;;:::i;1928:218:228:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3385:32:234;;;3367:51;;3355:2;3340:18;1928:218:228;3221:203:234;2456:178:149;;;:::i;:::-;;;;;;;:::i;2310:140::-;;;:::i;:::-;;;;;;;:::i;2787:146::-;;;:::i;1875:141::-;;;:::i;1819:584:143:-;;;:::i;:::-;;;6507:14:234;;6500:22;6482:41;;6470:2;6455:18;1819:584:143;6342:187:234;2022:142:149;;;:::i;1572:26:143:-;;;;;;;;;932:526:228;982:19;;;;;;;;;;;;;;-1:-1:-1;;;982:19:228;;;:10;:19::i;:::-;974:5;:27;;-1:-1:-1;;;;;;974:27:228;-1:-1:-1;;;;;974:27:228;;;;;;;;;;1017:17;;;;;;;;;;;;-1:-1:-1;;;1017:17:228;;;;;;:10;:17::i;:::-;1011:3;:23;;-1:-1:-1;;;;;;1011:23:228;-1:-1:-1;;;;;1011:23:228;;;;;;;;;;1053:20;;;;;;;;;;;;-1:-1:-1;;;1053:20:228;;;;;;:10;:20::i;:::-;1044:6;:29;;-1:-1:-1;;;;;;1044:29:228;-1:-1:-1;;;;;1044:29:228;;;;;;;;;;1089:17;;;;;;;;;;;;-1:-1:-1;;;1089:17:228;;;;;;:10;:17::i;:::-;1083:3;:23;;-1:-1:-1;;;;;;1083:23:228;-1:-1:-1;;;;;1083:23:228;;;;;;;;;;1122:17;;;;;;;;;;;;-1:-1:-1;;;1122:17:228;;;;;;:10;:17::i;:::-;1116:3;;:23;;;;;-1:-1:-1;;;;;1116:23:228;;;;;-1:-1:-1;;;;;1116:23:228;;;;;;1161:22;;;;;;;;;;;;;;-1:-1:-1;;;1161:22:228;;;:10;:22::i;:::-;1150:8;:33;;-1:-1:-1;;;;;;1150:33:228;-1:-1:-1;;;;;1150:33:228;;;;;;;;;;1202:20;;;;;;;;;;;;-1:-1:-1;;;1202:20:228;;;;;;:10;:20::i;:::-;1193:6;:29;;-1:-1:-1;;;;;;1193:29:228;-1:-1:-1;;;;;1193:29:228;;;;;;;;;;1247:26;;;;;;;;;;;;-1:-1:-1;;;1247:26:228;;;;;;:10;:26::i;:::-;1232:12;:41;;-1:-1:-1;;;;;;1232:41:228;-1:-1:-1;;;;;1232:41:228;;;;;;;;;;1300:28;;;;;;;;;;;;-1:-1:-1;;;1300:28:228;;;;;;:10;:28::i;:::-;1283:14;:45;;-1:-1:-1;;;;;;1283:45:228;-1:-1:-1;;;;;1283:45:228;;;;;;;;;;1351:24;;;;;;;;;;;;-1:-1:-1;;;1351:24:228;;;;;;:10;:24::i;:::-;1338:10;:37;;-1:-1:-1;;;;;;1338:37:228;-1:-1:-1;;;;;1338:37:228;;;;;;;;;;1394:20;;;;;;;;;;;;-1:-1:-1;;;1394:20:228;;;;;;:10;:20::i;:::-;1385:6;:29;;-1:-1:-1;;;;;;1385:29:228;-1:-1:-1;;;;;1385:29:228;;;;;;;;;;1436:15;1425:8;:26;932:526::o;2152:198::-;2316:22;;-1:-1:-1;;;2316:22:228;;-1:-1:-1;;;;;3385:32:234;;;2316:22:228;;;3367:51:234;2262:7:228;;2288:55;;2302:5;;2309;;2316:15;;;;;3340:18:234;;2316:22:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2340:2;2288:13;:55::i;:::-;2281:62;2152:198;-1:-1:-1;;;;2152:198:228:o;2170:134:149:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:149;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;2356:417:228:-;2532:22;;-1:-1:-1;;;2532:22:228;;-1:-1:-1;;;;;3385:32:234;;;2532:22:228;;;3367:51:234;2490:7:228;;;;2532:15;;;;;3340:18:234;;2532:22:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2509:45;;2577:12;2568:6;:21;2564:56;;;2598:22;;-1:-1:-1;;;2598:22:228;;;;;;;;;;;2564:56;317:28:144;309:37;;-1:-1:-1;;;;;2630:12:228;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2654:20:228;;-1:-1:-1;;;2654:20:228;;-1:-1:-1;;;;;3385:32:234;;2654:20:228;;;3367:51:234;2654:13:228;;-1:-1:-1;2654:13:228;;-1:-1:-1;3340:18:234;;2654:20:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2684:23:228;;-1:-1:-1;;;2684:23:228;;-1:-1:-1;;;;;6941:32:234;;2684:23:228;;;6923:51:234;2699:7:228;6990:18:234;;;6983:34;2684:7:228;;-1:-1:-1;2684:7:228;;-1:-1:-1;6896:18:234;;2684:23:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2717:26:228;;-1:-1:-1;;;2717:26:228;;-1:-1:-1;;;;;6941:32:234;;;2717:26:228;;;6923:51:234;6990:18;;;6983:34;;;2717:14:228;;;-1:-1:-1;2717:14:228;;-1:-1:-1;6896:18:234;;2717:26:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2760:6:228;;2356:417;-1:-1:-1;;;;;2356:417:228:o;2939:133:149:-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:149;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:149;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;1928:218:228:-;1984:13;2062:4;2051:16;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2051:16:228;;;;;;;;;;2041:27;;2051:16;2041:27;;;;-1:-1:-1;;;2081:21:228;;2041:27;-1:-1:-1;2081:8:228;;;;:21;;2041:27;;2097:4;;2081:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2112:27:228;;-1:-1:-1;;;2112:27:228;;-1:-1:-1;;;;;6941:32:234;;2112:27:228;;;6923:51:234;2127:11:228;6990:18:234;;;6983:34;2112:7:228;;-1:-1:-1;2112:7:228;;-1:-1:-1;6896:18:234;;2112:27:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1928:218;;;:::o;2456:178:149:-;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;2310:140::-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2787:146;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1875:141;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:143;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:143;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;6923:51:234;;;-1:-1:-1;;;6990:18:234;;;6983:34;2196:43:143;;;;;;;;;6896:18:234;;;2196:43:143;;;-1:-1:-1;;1671:64:143;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:143;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:143:o;2022:142:149:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:149;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;14:131:234:-;-1:-1:-1;;;;;89:31:234;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:544::-;242:6;250;258;311:2;299:9;290:7;286:23;282:32;279:52;;;327:1;324;317:12;279:52;366:9;353:23;385:31;410:5;385:31;:::i;:::-;435:5;-1:-1:-1;492:2:234;477:18;;464:32;505:33;464:32;505:33;:::i;:::-;557:7;-1:-1:-1;616:2:234;601:18;;588:32;629:33;588:32;629:33;:::i;:::-;681:7;671:17;;;150:544;;;;;:::o;881:658::-;1052:2;1104:21;;;1174:13;;1077:18;;;1196:22;;;1023:4;;1052:2;1275:15;;;;1249:2;1234:18;;;1023:4;1318:195;1332:6;1329:1;1326:13;1318:195;;;1397:13;;-1:-1:-1;;;;;1393:39:234;1381:52;;1488:15;;;;1453:12;;;;1429:1;1347:9;1318:195;;;-1:-1:-1;1530:3:234;;881:658;-1:-1:-1;;;;;;881:658:234:o;1544:613::-;1645:6;1653;1661;1669;1722:3;1710:9;1701:7;1697:23;1693:33;1690:53;;;1739:1;1736;1729:12;1690:53;1778:9;1765:23;1797:31;1822:5;1797:31;:::i;:::-;1847:5;-1:-1:-1;1904:2:234;1889:18;;1876:32;1917:33;1876:32;1917:33;:::i;:::-;1969:7;-1:-1:-1;2023:2:234;2008:18;;1995:32;;-1:-1:-1;2079:2:234;2064:18;;2051:32;2092:33;2051:32;2092:33;:::i;:::-;1544:613;;;;-1:-1:-1;1544:613:234;;-1:-1:-1;;1544:613:234:o;2162:127::-;2223:10;2218:3;2214:20;2211:1;2204:31;2254:4;2251:1;2244:15;2278:4;2275:1;2268:15;2294:922;2363:6;2416:2;2404:9;2395:7;2391:23;2387:32;2384:52;;;2432:1;2429;2422:12;2384:52;2472:9;2459:23;2501:18;2542:2;2534:6;2531:14;2528:34;;;2558:1;2555;2548:12;2528:34;2596:6;2585:9;2581:22;2571:32;;2641:7;2634:4;2630:2;2626:13;2622:27;2612:55;;2663:1;2660;2653:12;2612:55;2699:2;2686:16;2721:2;2717;2714:10;2711:36;;;2727:18;;:::i;:::-;2802:2;2796:9;2770:2;2856:13;;-1:-1:-1;;2852:22:234;;;2876:2;2848:31;2844:40;2832:53;;;2900:18;;;2920:22;;;2897:46;2894:72;;;2946:18;;:::i;:::-;2986:10;2982:2;2975:22;3021:2;3013:6;3006:18;3061:7;3056:2;3051;3047;3043:11;3039:20;3036:33;3033:53;;;3082:1;3079;3072:12;3033:53;3138:2;3133;3129;3125:11;3120:2;3112:6;3108:15;3095:46;3183:1;3161:15;;;3178:2;3157:24;3150:35;;;;-1:-1:-1;3165:6:234;2294:922;-1:-1:-1;;;;;2294:922:234:o;3429:1569::-;3633:4;3662:2;3702;3691:9;3687:18;3732:2;3721:9;3714:21;3755:6;3790;3784:13;3821:6;3813;3806:22;3847:2;3837:12;;3880:2;3869:9;3865:18;3858:25;;3942:2;3932:6;3929:1;3925:14;3914:9;3910:30;3906:39;3980:2;3972:6;3968:15;4001:1;4022;4032:937;4048:6;4043:3;4040:15;4032:937;;;4117:22;;;-1:-1:-1;;4113:36:234;4101:49;;4173:13;;4260:9;;-1:-1:-1;;;;;4256:35:234;4241:51;;4331:11;;4325:18;4363:15;;;4356:27;;;4444:19;;4213:15;;;4476:24;;;4566:21;;;;4611:1;;4534:2;4522:15;;;4625:236;4641:8;4636:3;4633:17;4625:236;;;4722:15;;-1:-1:-1;;;;;;4718:42:234;4704:57;;4830:17;;;;4669:1;4660:11;;;;;4787:14;;;;4625:236;;;-1:-1:-1;4947:12:234;;;;4884:5;-1:-1:-1;;;4912:15:234;;;;4074:1;4065:11;4032:937;;;-1:-1:-1;4986:6:234;;3429:1569;-1:-1:-1;;;;;;;;;3429:1569:234:o;5003:250::-;5088:1;5098:113;5112:6;5109:1;5106:13;5098:113;;;5188:11;;;5182:18;5169:11;;;5162:39;5134:2;5127:10;5098:113;;;-1:-1:-1;;5245:1:234;5227:16;;5220:27;5003:250::o;5258:271::-;5300:3;5338:5;5332:12;5365:6;5360:3;5353:19;5381:76;5450:6;5443:4;5438:3;5434:14;5427:4;5420:5;5416:16;5381:76;:::i;:::-;5511:2;5490:15;-1:-1:-1;;5486:29:234;5477:39;;;;5518:4;5473:50;;5258:271;-1:-1:-1;;5258:271:234:o;5534:803::-;5696:4;5725:2;5765;5754:9;5750:18;5795:2;5784:9;5777:21;5818:6;5853;5847:13;5884:6;5876;5869:22;5922:2;5911:9;5907:18;5900:25;;5984:2;5974:6;5971:1;5967:14;5956:9;5952:30;5948:39;5934:53;;6022:2;6014:6;6010:15;6043:1;6053:255;6067:6;6064:1;6061:13;6053:255;;;6160:2;6156:7;6144:9;6136:6;6132:22;6128:36;6123:3;6116:49;6188:40;6221:6;6212;6206:13;6188:40;:::i;:::-;6178:50;-1:-1:-1;6286:12:234;;;;6251:15;;;;6089:1;6082:9;6053:255;;;-1:-1:-1;6325:6:234;;5534:803;-1:-1:-1;;;;;;;5534:803:234:o;6534:184::-;6604:6;6657:2;6645:9;6636:7;6632:23;6628:32;6625:52;;;6673:1;6670;6663:12;6625:52;-1:-1:-1;6696:16:234;;6534:184;-1:-1:-1;6534:184:234:o;7307:277::-;7374:6;7427:2;7415:9;7406:7;7402:23;7398:32;7395:52;;;7443:1;7440;7433:12;7395:52;7475:9;7469:16;7528:5;7521:13;7514:21;7507:5;7504:32;7494:60;;7550:1;7547;7540:12;7494:60;7573:5;7307:277;-1:-1:-1;;;7307:277:234:o;7589:220::-;7738:2;7727:9;7720:21;7701:4;7758:45;7799:2;7788:9;7784:18;7776:6;7758:45;:::i;7814:317::-;-1:-1:-1;;;;;7991:32:234;;7973:51;;8060:2;8055;8040:18;;8033:30;;;-1:-1:-1;;8080:45:234;;8106:18;;8098:6;8080:45;:::i;8445:380::-;8524:1;8520:12;;;;8567;;;8588:61;;8642:4;8634:6;8630:17;8620:27;;8588:61;8695:2;8687:6;8684:14;8664:18;8661:38;8658:161;;8741:10;8736:3;8732:20;8729:1;8722:31;8776:4;8773:1;8766:15;8804:4;8801:1;8794:15;8658:161;;8445:380;;;:::o;9109:384::-;-1:-1:-1;;;;;;9294:33:234;;9282:46;;9351:13;;9264:3;;9373:74;9351:13;9436:1;9427:11;;9420:4;9408:17;;9373:74;:::i;:::-;9467:16;;;;9485:1;9463:24;;9109:384;-1:-1:-1;;;9109:384:234:o;9498:287::-;9627:3;9665:6;9659:13;9681:66;9740:6;9735:3;9728:4;9720:6;9716:17;9681:66;:::i;:::-;9763:16;;;;;9498:287;-1:-1:-1;;9498:287:234:o";
        readonly linkReferences: {};
    };
    readonly methodIdentifiers: {
        readonly "IS_TEST()": "fa7626d4";
        readonly "createUser(string)": "507ffba5";
        readonly "excludeArtifacts()": "b5508aa9";
        readonly "excludeContracts()": "e20c9f71";
        readonly "excludeSenders()": "1ed7831c";
        readonly "failed()": "ba414fa6";
        readonly "setUp()": "0a9254e4";
        readonly "targetArtifactSelectors()": "66d9a9a0";
        readonly "targetArtifacts()": "85226c81";
        readonly "targetContracts()": "3f7286f4";
        readonly "targetSelectors()": "916a17c6";
        readonly "targetSenders()": "3e5e3c23";
        readonly "whaleTransfer(address,address,address)": "10716760";
        readonly "whaleTransfer(address,address,uint256,address)": "3e5e0d26";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WhaleBalanceExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WhaleIsContract\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whale\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"whaleTransfer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whale\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"whaleTransfer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/BaseTest.sol\":\"BaseTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IERC20Forwarder.sol\":{\"keccak256\":\"0xeb9152fad7b2431ab4e9f0db4945462104825ac0ca2541319fafb1ea3e726592\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab76c60cc144e299295e24f00f4e642ab093eab7c0157de6201b96cd2097892e\",\"dweb:/ipfs/QmYLiPgwNvZgUKzuLqsJKAotqFoq1Yw7y5NQZgbUcdCWgV\"]},\"contracts/src/interfaces/IERC20ForwarderFactory.sol\":{\"keccak256\":\"0xd413c9701c4d8be234bd037de24aabacce110848f86eac44fa6de04eda6d05ed\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://59fcaa637112713c2d1264664f8c6b428da46cceb4689fd8757f07fa87633aad\",\"dweb:/ipfs/QmWGLox6p9Ja2dwH5bgED69JtuK4Y55G7pgTPeeTmYrW5Z\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/token/ERC20Forwarder.sol\":{\"keccak256\":\"0x4aaaf11bc296a3fa825341e4efd774678e9f61abbbfa7020a16c5ff9fc7a0ff6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a31b464a4cc1c442e373da3dd04edbbf3a631fb90ed13c29674c9be308f3d6d\",\"dweb:/ipfs/QmUNmwGwQiPwgESPWWSPWQCms4ydXqWyBGqS7zQFS1brjk\"]},\"contracts/src/token/ERC20ForwarderFactory.sol\":{\"keccak256\":\"0x9e11c237e16db734da588b1dd4324d0e5ef9d14f1eb92c19e92dc9c4b322c0d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8034d25041870c6a58a03c91f18fce321cdaa6a5f8318025670d79bd983feaf1\",\"dweb:/ipfs/QmYzeem28bs2z2hiDkZCY4ziS1M1wQ9B8epieGZKZEqrui\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xc576f8b81bf19c853baa1fdc23ddc3b9fa1856d5749b01a4f99bed73db7d847d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fad0b975990e50941e255397925be1695b1ec06c3649decdbf759f42e49638d4\",\"dweb:/ipfs/QmeeRsbdgzUoPj1GWZZaoTsiEEuSGfjx7MpykgfxcMa1r1\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a\",\"dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26\",\"dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765\",\"dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xc37bdacd465b44feb78cdf9a86f62255884be84acd5a4b175f48f004386ce8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8109a9cb6c5b2f6c137e4bc119ce468d88eaf926ed60558e997a5505827c9241\",\"dweb:/ipfs/QmR1H3wWXwhYD4bXgFFxNubnEZYB28WvvUUHkL9oZx14cx\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"test/utils/BaseTest.sol\":{\"keccak256\":\"0xb683b8a8179a824509e67a79c685663ab256d7cfd22306d7e717952755e96624\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6608f9ef25ea5bb6e692bac17e4f6fd2c70252860ec073e3ef3204adeadd8fb3\",\"dweb:/ipfs/QmbVAD5oXRkKJXWNvEpmFNBrDetq8GaLsKJnXw4xzhQiZo\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "WhaleBalanceExceeded";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "WhaleIsContract";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_address";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256[]";
                    readonly name: "val";
                    readonly type: "uint256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "int256[]";
                    readonly name: "val";
                    readonly type: "int256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "val";
                    readonly type: "address[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes";
                    readonly name: "";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_bytes";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_bytes32";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "int256";
                    readonly name: "";
                    readonly type: "int256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "address";
                    readonly name: "val";
                    readonly type: "address";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_address";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "val";
                    readonly type: "uint256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256[]";
                    readonly name: "val";
                    readonly type: "int256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "address[]";
                    readonly name: "val";
                    readonly type: "address[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "bytes";
                    readonly name: "val";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_bytes";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "val";
                    readonly type: "bytes32";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_bytes32";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256";
                    readonly name: "val";
                    readonly type: "int256";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "decimals";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_decimal_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "val";
                    readonly type: "uint256";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "decimals";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_decimal_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256";
                    readonly name: "val";
                    readonly type: "int256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "string";
                    readonly name: "val";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_string";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "val";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_string";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes";
                    readonly name: "";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "logs";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "IS_TEST";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "name";
                    readonly type: "string";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "createUser";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_user";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "excludeArtifacts";
                readonly outputs: readonly [{
                    readonly internalType: "string[]";
                    readonly name: "excludedArtifacts_";
                    readonly type: "string[]";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "excludeContracts";
                readonly outputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "excludedContracts_";
                    readonly type: "address[]";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "excludeSenders";
                readonly outputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "excludedSenders_";
                    readonly type: "address[]";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "failed";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "setUp";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "targetArtifactSelectors";
                readonly outputs: readonly [{
                    readonly internalType: "struct StdInvariant.FuzzSelector[]";
                    readonly name: "targetedArtifactSelectors_";
                    readonly type: "tuple[]";
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "addr";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes4[]";
                        readonly name: "selectors";
                        readonly type: "bytes4[]";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "targetArtifacts";
                readonly outputs: readonly [{
                    readonly internalType: "string[]";
                    readonly name: "targetedArtifacts_";
                    readonly type: "string[]";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "targetContracts";
                readonly outputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "targetedContracts_";
                    readonly type: "address[]";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "targetSelectors";
                readonly outputs: readonly [{
                    readonly internalType: "struct StdInvariant.FuzzSelector[]";
                    readonly name: "targetedSelectors_";
                    readonly type: "tuple[]";
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "addr";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes4[]";
                        readonly name: "selectors";
                        readonly type: "bytes4[]";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "targetSenders";
                readonly outputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "targetedSenders_";
                    readonly type: "address[]";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "whale";
                    readonly type: "address";
                }, {
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "to";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "whaleTransfer";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "whale";
                    readonly type: "address";
                }, {
                    readonly internalType: "contract IERC20";
                    readonly name: "token";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "amount";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "to";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "whaleTransfer";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {};
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {};
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "test/utils/BaseTest.sol": "BaseTest";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20Forwarder.sol": {
                readonly keccak256: "0xeb9152fad7b2431ab4e9f0db4945462104825ac0ca2541319fafb1ea3e726592";
                readonly urls: readonly ["bzz-raw://ab76c60cc144e299295e24f00f4e642ab093eab7c0157de6201b96cd2097892e", "dweb:/ipfs/QmYLiPgwNvZgUKzuLqsJKAotqFoq1Yw7y5NQZgbUcdCWgV"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20ForwarderFactory.sol": {
                readonly keccak256: "0xd413c9701c4d8be234bd037de24aabacce110848f86eac44fa6de04eda6d05ed";
                readonly urls: readonly ["bzz-raw://59fcaa637112713c2d1264664f8c6b428da46cceb4689fd8757f07fa87633aad", "dweb:/ipfs/QmWGLox6p9Ja2dwH5bgED69JtuK4Y55G7pgTPeeTmYrW5Z"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501";
                readonly urls: readonly ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca";
                readonly urls: readonly ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0";
                readonly urls: readonly ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/token/ERC20Forwarder.sol": {
                readonly keccak256: "0x4aaaf11bc296a3fa825341e4efd774678e9f61abbbfa7020a16c5ff9fc7a0ff6";
                readonly urls: readonly ["bzz-raw://4a31b464a4cc1c442e373da3dd04edbbf3a631fb90ed13c29674c9be308f3d6d", "dweb:/ipfs/QmUNmwGwQiPwgESPWWSPWQCms4ydXqWyBGqS7zQFS1brjk"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/token/ERC20ForwarderFactory.sol": {
                readonly keccak256: "0x9e11c237e16db734da588b1dd4324d0e5ef9d14f1eb92c19e92dc9c4b322c0d9";
                readonly urls: readonly ["bzz-raw://8034d25041870c6a58a03c91f18fce321cdaa6a5f8318025670d79bd983feaf1", "dweb:/ipfs/QmYzeem28bs2z2hiDkZCY4ziS1M1wQ9B8epieGZKZEqrui"];
                readonly license: "Apache-2.0";
            };
            readonly "lib/forge-std/lib/ds-test/src/test.sol": {
                readonly keccak256: "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b";
                readonly urls: readonly ["bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240", "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"];
                readonly license: "GPL-3.0-or-later";
            };
            readonly "lib/forge-std/src/Base.sol": {
                readonly keccak256: "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c";
                readonly urls: readonly ["bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224", "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdAssertions.sol": {
                readonly keccak256: "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60";
                readonly urls: readonly ["bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b", "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdChains.sol": {
                readonly keccak256: "0xc576f8b81bf19c853baa1fdc23ddc3b9fa1856d5749b01a4f99bed73db7d847d";
                readonly urls: readonly ["bzz-raw://fad0b975990e50941e255397925be1695b1ec06c3649decdbf759f42e49638d4", "dweb:/ipfs/QmeeRsbdgzUoPj1GWZZaoTsiEEuSGfjx7MpykgfxcMa1r1"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdCheats.sol": {
                readonly keccak256: "0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5";
                readonly urls: readonly ["bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a", "dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdError.sol": {
                readonly keccak256: "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77";
                readonly urls: readonly ["bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6", "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdInvariant.sol": {
                readonly keccak256: "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1";
                readonly urls: readonly ["bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c", "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdJson.sol": {
                readonly keccak256: "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b";
                readonly urls: readonly ["bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c", "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdMath.sol": {
                readonly keccak256: "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2";
                readonly urls: readonly ["bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92", "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdStorage.sol": {
                readonly keccak256: "0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d";
                readonly urls: readonly ["bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26", "dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdStyle.sol": {
                readonly keccak256: "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d";
                readonly urls: readonly ["bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8", "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdUtils.sol": {
                readonly keccak256: "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1";
                readonly urls: readonly ["bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140", "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/Test.sol": {
                readonly keccak256: "0x39b1729d5868c8e94ab8af16751eb500a17fe3870dc627d2b7ddcd5df18d7ad0";
                readonly urls: readonly ["bzz-raw://1568c82aff125cc4b0fc168be9d67ac313f469a3c7405c5493caecaaaecfb765", "dweb:/ipfs/QmXByuZReJsdu1jDcxj1FcmpcUnzoBcqybn9kWgDAECWri"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/Vm.sol": {
                readonly keccak256: "0xc37bdacd465b44feb78cdf9a86f62255884be84acd5a4b175f48f004386ce8f4";
                readonly urls: readonly ["bzz-raw://8109a9cb6c5b2f6c137e4bc119ce468d88eaf926ed60558e997a5505827c9241", "dweb:/ipfs/QmR1H3wWXwhYD4bXgFFxNubnEZYB28WvvUUHkL9oZx14cx"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/console.sol": {
                readonly keccak256: "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba";
                readonly urls: readonly ["bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70", "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/console2.sol": {
                readonly keccak256: "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea";
                readonly urls: readonly ["bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973", "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/interfaces/IMulticall3.sol": {
                readonly keccak256: "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a";
                readonly urls: readonly ["bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0", "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/safeconsole.sol": {
                readonly keccak256: "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381";
                readonly urls: readonly ["bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae", "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"];
                readonly license: "MIT";
            };
            readonly "test/utils/BaseTest.sol": {
                readonly keccak256: "0xb683b8a8179a824509e67a79c685663ab256d7cfd22306d7e717952755e96624";
                readonly urls: readonly ["bzz-raw://6608f9ef25ea5bb6e692bac17e4f6fd2c70252860ec073e3ef3204adeadd8fb3", "dweb:/ipfs/QmbVAD5oXRkKJXWNvEpmFNBrDetq8GaLsKJnXw4xzhQiZo"];
                readonly license: "Apache-2.0";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "test/utils/BaseTest.sol";
        readonly id: 152052;
        readonly exportedSymbols: {
            readonly BaseTest: readonly [152051];
            readonly ERC20ForwarderFactory: readonly [23343];
            readonly IERC20: readonly [9666];
            readonly Test: readonly [39241];
            readonly console2: readonly [56967];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:3395:228";
        readonly nodes: readonly [{
            readonly id: 151674;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:228";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 151676;
            readonly nodeType: "ImportDirective";
            readonly src: "64:50:228";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/forge-std/src/console2.sol";
            readonly file: "forge-std/console2.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 152052;
            readonly sourceUnit: 56968;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 151675;
                    readonly name: "console2";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 56967;
                    readonly src: "73:8:228";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 151678;
            readonly nodeType: "ImportDirective";
            readonly src: "115:42:228";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/forge-std/src/Test.sol";
            readonly file: "forge-std/Test.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 152052;
            readonly sourceUnit: 39242;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 151677;
                    readonly name: "Test";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 39241;
                    readonly src: "124:4:228";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 151680;
            readonly nodeType: "ImportDirective";
            readonly src: "158:61:228";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IERC20.sol";
            readonly file: "contracts/src/interfaces/IERC20.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 152052;
            readonly sourceUnit: 9667;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 151679;
                    readonly name: "IERC20";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 9666;
                    readonly src: "167:6:228";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 151682;
            readonly nodeType: "ImportDirective";
            readonly src: "220:86:228";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/token/ERC20ForwarderFactory.sol";
            readonly file: "contracts/src/token/ERC20ForwarderFactory.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 152052;
            readonly sourceUnit: 23344;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 151681;
                    readonly name: "ERC20ForwarderFactory";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 23343;
                    readonly src: "229:21:228";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 152051;
            readonly nodeType: "ContractDefinition";
            readonly src: "308:3125:228";
            readonly nodes: readonly [{
                readonly id: 151687;
                readonly nodeType: "VariableDeclaration";
                readonly src: "340:38:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "forwarderFactory";
                readonly nameLocation: "362:16:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_contract$_ERC20ForwarderFactory_$23343";
                    readonly typeString: "contract ERC20ForwarderFactory";
                };
                readonly typeName: {
                    readonly id: 151686;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 151685;
                        readonly name: "ERC20ForwarderFactory";
                        readonly nameLocations: readonly ["340:21:228"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 23343;
                        readonly src: "340:21:228";
                    };
                    readonly referencedDeclaration: 23343;
                    readonly src: "340:21:228";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_ERC20ForwarderFactory_$23343";
                        readonly typeString: "contract ERC20ForwarderFactory";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151689;
                readonly nodeType: "VariableDeclaration";
                readonly src: "385:13:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "alice";
                readonly nameLocation: "393:5:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151688;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "385:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151691;
                readonly nodeType: "VariableDeclaration";
                readonly src: "404:11:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "bob";
                readonly nameLocation: "412:3:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151690;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "404:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151693;
                readonly nodeType: "VariableDeclaration";
                readonly src: "421:14:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "celine";
                readonly nameLocation: "429:6:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151692;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "421:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151695;
                readonly nodeType: "VariableDeclaration";
                readonly src: "441:11:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "dan";
                readonly nameLocation: "449:3:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151694;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "441:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151697;
                readonly nodeType: "VariableDeclaration";
                readonly src: "458:11:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "eve";
                readonly nameLocation: "466:3:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151696;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "458:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151699;
                readonly nodeType: "VariableDeclaration";
                readonly src: "476:14:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "minter";
                readonly nameLocation: "484:6:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151698;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "476:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151701;
                readonly nodeType: "VariableDeclaration";
                readonly src: "496:16:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "deployer";
                readonly nameLocation: "504:8:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151700;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "496:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151703;
                readonly nodeType: "VariableDeclaration";
                readonly src: "518:20:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "feeCollector";
                readonly nameLocation: "526:12:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151702;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "518:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151705;
                readonly nodeType: "VariableDeclaration";
                readonly src: "544:22:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "sweepCollector";
                readonly nameLocation: "552:14:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151704;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "544:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151707;
                readonly nodeType: "VariableDeclaration";
                readonly src: "572:18:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "governance";
                readonly nameLocation: "580:10:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151706;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "572:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151709;
                readonly nodeType: "VariableDeclaration";
                readonly src: "596:14:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "pauser";
                readonly nameLocation: "604:6:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_address";
                    readonly typeString: "address";
                };
                readonly typeName: {
                    readonly id: 151708;
                    readonly name: "address";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "596:7:228";
                    readonly stateMutability: "nonpayable";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_address";
                        readonly typeString: "address";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151711;
                readonly nodeType: "ErrorDefinition";
                readonly src: "617:29:228";
                readonly nodes: readonly [];
                readonly errorSelector: "c4649d28";
                readonly name: "WhaleBalanceExceeded";
                readonly nameLocation: "623:20:228";
                readonly parameters: {
                    readonly id: 151710;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "643:2:228";
                };
            }, {
                readonly id: 151713;
                readonly nodeType: "ErrorDefinition";
                readonly src: "651:24:228";
                readonly nodes: readonly [];
                readonly errorSelector: "98d85a67";
                readonly name: "WhaleIsContract";
                readonly nameLocation: "657:15:228";
                readonly parameters: {
                    readonly id: 151712;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "672:2:228";
                };
            }, {
                readonly id: 151715;
                readonly nodeType: "VariableDeclaration";
                readonly src: "681:21:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "mainnetForkId";
                readonly nameLocation: "689:13:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 151714;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "681:7:228";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151717;
                readonly nodeType: "VariableDeclaration";
                readonly src: "708:20:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "goerliForkId";
                readonly nameLocation: "716:12:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 151716;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "708:7:228";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151719;
                readonly nodeType: "VariableDeclaration";
                readonly src: "735:16:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "__init__";
                readonly nameLocation: "743:8:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_uint256";
                    readonly typeString: "uint256";
                };
                readonly typeName: {
                    readonly id: 151718;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "735:7:228";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151725;
                readonly nodeType: "VariableDeclaration";
                readonly src: "789:56:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "MAINNET_RPC_URL";
                readonly nameLocation: "796:15:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_string_storage";
                    readonly typeString: "string";
                };
                readonly typeName: {
                    readonly id: 151720;
                    readonly name: "string";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "789:6:228";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_string_storage_ptr";
                        readonly typeString: "string";
                    };
                };
                readonly value: {
                    readonly arguments: readonly [{
                        readonly hexValue: "4d41494e4e45545f5250435f55524c";
                        readonly id: 151723;
                        readonly isConstant: false;
                        readonly isLValue: false;
                        readonly isPure: true;
                        readonly kind: "string";
                        readonly lValueRequested: false;
                        readonly nodeType: "Literal";
                        readonly src: "827:17:228";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f";
                            readonly typeString: "literal_string \"MAINNET_RPC_URL\"";
                        };
                        readonly value: "MAINNET_RPC_URL";
                    }];
                    readonly expression: {
                        readonly argumentTypes: readonly [{
                            readonly typeIdentifier: "t_stringliteral_e9247e87c7ce28f49f1da055e6c014066579f6788d13d999021b3f077553a64f";
                            readonly typeString: "literal_string \"MAINNET_RPC_URL\"";
                        }];
                        readonly expression: {
                            readonly id: 151721;
                            readonly name: "vm";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 29666;
                            readonly src: "814:2:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_Vm_$40778";
                                readonly typeString: "contract Vm";
                            };
                        };
                        readonly id: 151722;
                        readonly isConstant: false;
                        readonly isLValue: false;
                        readonly isPure: false;
                        readonly lValueRequested: false;
                        readonly memberLocation: "817:9:228";
                        readonly memberName: "envString";
                        readonly nodeType: "MemberAccess";
                        readonly referencedDeclaration: 39382;
                        readonly src: "814:12:228";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$";
                            readonly typeString: "function (string memory) view external returns (string memory)";
                        };
                    };
                    readonly id: 151724;
                    readonly isConstant: false;
                    readonly isLValue: false;
                    readonly isPure: false;
                    readonly kind: "functionCall";
                    readonly lValueRequested: false;
                    readonly nameLocations: readonly [];
                    readonly names: readonly [];
                    readonly nodeType: "FunctionCall";
                    readonly src: "814:31:228";
                    readonly tryCall: false;
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_string_memory_ptr";
                        readonly typeString: "string memory";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151731;
                readonly nodeType: "VariableDeclaration";
                readonly src: "851:54:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "GOERLI_RPC_URL";
                readonly nameLocation: "858:14:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_string_storage";
                    readonly typeString: "string";
                };
                readonly typeName: {
                    readonly id: 151726;
                    readonly name: "string";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "851:6:228";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_string_storage_ptr";
                        readonly typeString: "string";
                    };
                };
                readonly value: {
                    readonly arguments: readonly [{
                        readonly hexValue: "474f45524c495f5250435f55524c";
                        readonly id: 151729;
                        readonly isConstant: false;
                        readonly isLValue: false;
                        readonly isPure: true;
                        readonly kind: "string";
                        readonly lValueRequested: false;
                        readonly nodeType: "Literal";
                        readonly src: "888:16:228";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_stringliteral_59ee4a4e71ea94bb714df1943fcbf086b1f00337792a35b21ec2c79fc81bb061";
                            readonly typeString: "literal_string \"GOERLI_RPC_URL\"";
                        };
                        readonly value: "GOERLI_RPC_URL";
                    }];
                    readonly expression: {
                        readonly argumentTypes: readonly [{
                            readonly typeIdentifier: "t_stringliteral_59ee4a4e71ea94bb714df1943fcbf086b1f00337792a35b21ec2c79fc81bb061";
                            readonly typeString: "literal_string \"GOERLI_RPC_URL\"";
                        }];
                        readonly expression: {
                            readonly id: 151727;
                            readonly name: "vm";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 29666;
                            readonly src: "875:2:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_Vm_$40778";
                                readonly typeString: "contract Vm";
                            };
                        };
                        readonly id: 151728;
                        readonly isConstant: false;
                        readonly isLValue: false;
                        readonly isPure: false;
                        readonly lValueRequested: false;
                        readonly memberLocation: "878:9:228";
                        readonly memberName: "envString";
                        readonly nodeType: "MemberAccess";
                        readonly referencedDeclaration: 39382;
                        readonly src: "875:12:228";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$";
                            readonly typeString: "function (string memory) view external returns (string memory)";
                        };
                    };
                    readonly id: 151730;
                    readonly isConstant: false;
                    readonly isLValue: false;
                    readonly isPure: false;
                    readonly kind: "functionCall";
                    readonly lValueRequested: false;
                    readonly nameLocations: readonly [];
                    readonly names: readonly [];
                    readonly nodeType: "FunctionCall";
                    readonly src: "875:30:228";
                    readonly tryCall: false;
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_string_memory_ptr";
                        readonly typeString: "string memory";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151733;
                readonly nodeType: "VariableDeclaration";
                readonly src: "912:13:228";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly mutability: "mutable";
                readonly name: "isForked";
                readonly nameLocation: "917:8:228";
                readonly scope: 152051;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_bool";
                    readonly typeString: "bool";
                };
                readonly typeName: {
                    readonly id: 151732;
                    readonly name: "bool";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "912:4:228";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_bool";
                        readonly typeString: "bool";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 151808;
                readonly nodeType: "FunctionDefinition";
                readonly src: "932:526:228";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 151807;
                    readonly nodeType: "Block";
                    readonly src: "964:494:228";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 151740;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151736;
                                readonly name: "alice";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151689;
                                readonly src: "974:5:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "616c696365";
                                    readonly id: 151738;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "993:7:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501";
                                        readonly typeString: "literal_string \"alice\"";
                                    };
                                    readonly value: "alice";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501";
                                        readonly typeString: "literal_string \"alice\"";
                                    }];
                                    readonly id: 151737;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "982:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151739;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "982:19:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "974:27:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151741;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "974:27:228";
                    }, {
                        readonly expression: {
                            readonly id: 151746;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151742;
                                readonly name: "bob";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151691;
                                readonly src: "1011:3:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "626f62";
                                    readonly id: 151744;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "1028:5:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2";
                                        readonly typeString: "literal_string \"bob\"";
                                    };
                                    readonly value: "bob";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2";
                                        readonly typeString: "literal_string \"bob\"";
                                    }];
                                    readonly id: 151743;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "1017:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151745;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1017:17:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "1011:23:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151747;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1011:23:228";
                    }, {
                        readonly expression: {
                            readonly id: 151752;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151748;
                                readonly name: "celine";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151693;
                                readonly src: "1044:6:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "63656c696e65";
                                    readonly id: 151750;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "1064:8:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_7cb5fa358e5167becac9e7a099a7eac0e64049053c14356356e30097bb03bf4a";
                                        readonly typeString: "literal_string \"celine\"";
                                    };
                                    readonly value: "celine";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_7cb5fa358e5167becac9e7a099a7eac0e64049053c14356356e30097bb03bf4a";
                                        readonly typeString: "literal_string \"celine\"";
                                    }];
                                    readonly id: 151749;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "1053:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151751;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1053:20:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "1044:29:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151753;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1044:29:228";
                    }, {
                        readonly expression: {
                            readonly id: 151758;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151754;
                                readonly name: "dan";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151695;
                                readonly src: "1083:3:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "64616e";
                                    readonly id: 151756;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "1100:5:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_0d2095e5cac990209cb47ca08e0614adcffe0315af614f414ab60c6230bdc988";
                                        readonly typeString: "literal_string \"dan\"";
                                    };
                                    readonly value: "dan";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_0d2095e5cac990209cb47ca08e0614adcffe0315af614f414ab60c6230bdc988";
                                        readonly typeString: "literal_string \"dan\"";
                                    }];
                                    readonly id: 151755;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "1089:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151757;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1089:17:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "1083:23:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151759;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1083:23:228";
                    }, {
                        readonly expression: {
                            readonly id: 151764;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151760;
                                readonly name: "eve";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151697;
                                readonly src: "1116:3:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "657665";
                                    readonly id: 151762;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "1133:5:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_876be0999ed9b7fc26f1b270903ef7b0c35291f89407903270fea611c85f515c";
                                        readonly typeString: "literal_string \"eve\"";
                                    };
                                    readonly value: "eve";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_876be0999ed9b7fc26f1b270903ef7b0c35291f89407903270fea611c85f515c";
                                        readonly typeString: "literal_string \"eve\"";
                                    }];
                                    readonly id: 151761;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "1122:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151763;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1122:17:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "1116:23:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151765;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1116:23:228";
                    }, {
                        readonly expression: {
                            readonly id: 151770;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151766;
                                readonly name: "deployer";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151701;
                                readonly src: "1150:8:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "6465706c6f796572";
                                    readonly id: 151768;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "1172:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_dbe2b933bb7d57444cdba9c71b5ceb79b60dc455ad691d856e6e4025cf542caa";
                                        readonly typeString: "literal_string \"deployer\"";
                                    };
                                    readonly value: "deployer";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_dbe2b933bb7d57444cdba9c71b5ceb79b60dc455ad691d856e6e4025cf542caa";
                                        readonly typeString: "literal_string \"deployer\"";
                                    }];
                                    readonly id: 151767;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "1161:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151769;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1161:22:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "1150:33:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151771;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1150:33:228";
                    }, {
                        readonly expression: {
                            readonly id: 151776;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151772;
                                readonly name: "minter";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151699;
                                readonly src: "1193:6:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "6d696e746572";
                                    readonly id: 151774;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "1213:8:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_39eb9ec2059d897c44a17440c762c429de204f6fddd727156ca52b8da086a6f7";
                                        readonly typeString: "literal_string \"minter\"";
                                    };
                                    readonly value: "minter";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_39eb9ec2059d897c44a17440c762c429de204f6fddd727156ca52b8da086a6f7";
                                        readonly typeString: "literal_string \"minter\"";
                                    }];
                                    readonly id: 151773;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "1202:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151775;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1202:20:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "1193:29:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151777;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1193:29:228";
                    }, {
                        readonly expression: {
                            readonly id: 151782;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151778;
                                readonly name: "feeCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151703;
                                readonly src: "1232:12:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "666565436f6c6c6563746f72";
                                    readonly id: 151780;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "1258:14:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_c49f089e6bc9c60c0bf928898b16a59e9c9d8497f3d6a357b4da1a23bd2151ce";
                                        readonly typeString: "literal_string \"feeCollector\"";
                                    };
                                    readonly value: "feeCollector";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_c49f089e6bc9c60c0bf928898b16a59e9c9d8497f3d6a357b4da1a23bd2151ce";
                                        readonly typeString: "literal_string \"feeCollector\"";
                                    }];
                                    readonly id: 151779;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "1247:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151781;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1247:26:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "1232:41:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151783;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1232:41:228";
                    }, {
                        readonly expression: {
                            readonly id: 151788;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151784;
                                readonly name: "sweepCollector";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151705;
                                readonly src: "1283:14:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "7377656570436f6c6c6563746f72";
                                    readonly id: 151786;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "1311:16:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_a9acef1274d4e49478e4bdfa427181cc5211b72dc56d8c29d5afde234f26a4fa";
                                        readonly typeString: "literal_string \"sweepCollector\"";
                                    };
                                    readonly value: "sweepCollector";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_a9acef1274d4e49478e4bdfa427181cc5211b72dc56d8c29d5afde234f26a4fa";
                                        readonly typeString: "literal_string \"sweepCollector\"";
                                    }];
                                    readonly id: 151785;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "1300:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151787;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1300:28:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "1283:45:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151789;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1283:45:228";
                    }, {
                        readonly expression: {
                            readonly id: 151794;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151790;
                                readonly name: "governance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151707;
                                readonly src: "1338:10:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "676f7665726e616e6365";
                                    readonly id: 151792;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "1362:12:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a";
                                        readonly typeString: "literal_string \"governance\"";
                                    };
                                    readonly value: "governance";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a";
                                        readonly typeString: "literal_string \"governance\"";
                                    }];
                                    readonly id: 151791;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "1351:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151793;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1351:24:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "1338:37:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151795;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1338:37:228";
                    }, {
                        readonly expression: {
                            readonly id: 151800;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151796;
                                readonly name: "pauser";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151709;
                                readonly src: "1385:6:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly hexValue: "706175736572";
                                    readonly id: 151798;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly kind: "string";
                                    readonly lValueRequested: false;
                                    readonly nodeType: "Literal";
                                    readonly src: "1405:8:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_stringliteral_0cc58340b26c619cd4edc70f833d3f4d9d26f3ae7d5ef2965f81fe5495049a4f";
                                        readonly typeString: "literal_string \"pauser\"";
                                    };
                                    readonly value: "pauser";
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_stringliteral_0cc58340b26c619cd4edc70f833d3f4d9d26f3ae7d5ef2965f81fe5495049a4f";
                                        readonly typeString: "literal_string \"pauser\"";
                                    }];
                                    readonly id: 151797;
                                    readonly name: "createUser";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151906;
                                    readonly src: "1394:10:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$";
                                        readonly typeString: "function (string memory) returns (address)";
                                    };
                                };
                                readonly id: 151799;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1394:20:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "1385:29:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151801;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1385:29:228";
                    }, {
                        readonly expression: {
                            readonly id: 151805;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151802;
                                readonly name: "__init__";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151719;
                                readonly src: "1425:8:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly expression: {
                                    readonly id: 151803;
                                    readonly name: "block";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -4;
                                    readonly src: "1436:5:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_magic_block";
                                        readonly typeString: "block";
                                    };
                                };
                                readonly id: 151804;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "1442:9:228";
                                readonly memberName: "timestamp";
                                readonly nodeType: "MemberAccess";
                                readonly src: "1436:15:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "1425:26:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 151806;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1425:26:228";
                    }];
                };
                readonly functionSelector: "0a9254e4";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "setUp";
                readonly nameLocation: "941:5:228";
                readonly parameters: {
                    readonly id: 151734;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "946:2:228";
                };
                readonly returnParameters: {
                    readonly id: 151735;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "964:0:228";
                };
                readonly scope: 152051;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "public";
            }, {
                readonly id: 151837;
                readonly nodeType: "ModifierDefinition";
                readonly src: "1464:217:228";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 151836;
                    readonly nodeType: "Block";
                    readonly src: "1509:172:228";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 151817;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151812;
                                readonly name: "mainnetForkId";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151715;
                                readonly src: "1519:13:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly id: 151815;
                                    readonly name: "MAINNET_RPC_URL";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151725;
                                    readonly src: "1549:15:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_storage";
                                        readonly typeString: "string storage ref";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_string_storage";
                                        readonly typeString: "string storage ref";
                                    }];
                                    readonly expression: {
                                        readonly id: 151813;
                                        readonly name: "vm";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29666;
                                        readonly src: "1535:2:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_Vm_$40778";
                                            readonly typeString: "contract Vm";
                                        };
                                    };
                                    readonly id: 151814;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "1538:10:228";
                                    readonly memberName: "createFork";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 40646;
                                    readonly src: "1535:13:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$";
                                        readonly typeString: "function (string memory) external returns (uint256)";
                                    };
                                };
                                readonly id: 151816;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1535:30:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "1519:46:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 151818;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1519:46:228";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 151822;
                                readonly name: "mainnetForkId";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151715;
                                readonly src: "1589:13:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 151819;
                                    readonly name: "vm";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29666;
                                    readonly src: "1575:2:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_Vm_$40778";
                                        readonly typeString: "contract Vm";
                                    };
                                };
                                readonly id: 151821;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "1578:10:228";
                                readonly memberName: "selectFork";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 40685;
                                readonly src: "1575:13:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256) external";
                                };
                            };
                            readonly id: 151823;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1575:28:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 151824;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1575:28:228";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 151828;
                                readonly name: "blockNumber";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151810;
                                readonly src: "1625:11:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 151825;
                                    readonly name: "vm";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29666;
                                    readonly src: "1613:2:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_Vm_$40778";
                                        readonly typeString: "contract Vm";
                                    };
                                };
                                readonly id: 151827;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "1616:8:228";
                                readonly memberName: "rollFork";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 40696;
                                readonly src: "1613:11:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256) external";
                                };
                            };
                            readonly id: 151829;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1613:24:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 151830;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1613:24:228";
                    }, {
                        readonly expression: {
                            readonly id: 151833;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151831;
                                readonly name: "isForked";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151733;
                                readonly src: "1647:8:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly hexValue: "74727565";
                                readonly id: 151832;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "1658:4:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            };
                            readonly src: "1647:15:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 151834;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1647:15:228";
                    }, {
                        readonly id: 151835;
                        readonly nodeType: "PlaceholderStatement";
                        readonly src: "1673:1:228";
                    }];
                };
                readonly name: "__mainnet_fork";
                readonly nameLocation: "1473:14:228";
                readonly parameters: {
                    readonly id: 151811;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 151810;
                        readonly mutability: "mutable";
                        readonly name: "blockNumber";
                        readonly nameLocation: "1496:11:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151837;
                        readonly src: "1488:19:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 151809;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1488:7:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1487:21:228";
                };
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 151866;
                readonly nodeType: "ModifierDefinition";
                readonly src: "1687:213:228";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 151865;
                    readonly nodeType: "Block";
                    readonly src: "1731:169:228";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 151846;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151841;
                                readonly name: "goerliForkId";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151717;
                                readonly src: "1741:12:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly id: 151844;
                                    readonly name: "GOERLI_RPC_URL";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151731;
                                    readonly src: "1770:14:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_storage";
                                        readonly typeString: "string storage ref";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_string_storage";
                                        readonly typeString: "string storage ref";
                                    }];
                                    readonly expression: {
                                        readonly id: 151842;
                                        readonly name: "vm";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29666;
                                        readonly src: "1756:2:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_Vm_$40778";
                                            readonly typeString: "contract Vm";
                                        };
                                    };
                                    readonly id: 151843;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "1759:10:228";
                                    readonly memberName: "createFork";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 40646;
                                    readonly src: "1756:13:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$";
                                        readonly typeString: "function (string memory) external returns (uint256)";
                                    };
                                };
                                readonly id: 151845;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1756:29:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "1741:44:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly id: 151847;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1741:44:228";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 151851;
                                readonly name: "goerliForkId";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151717;
                                readonly src: "1809:12:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 151848;
                                    readonly name: "vm";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29666;
                                    readonly src: "1795:2:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_Vm_$40778";
                                        readonly typeString: "contract Vm";
                                    };
                                };
                                readonly id: 151850;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "1798:10:228";
                                readonly memberName: "selectFork";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 40685;
                                readonly src: "1795:13:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256) external";
                                };
                            };
                            readonly id: 151852;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1795:27:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 151853;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1795:27:228";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 151857;
                                readonly name: "blockNumber";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151839;
                                readonly src: "1844:11:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 151854;
                                    readonly name: "vm";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29666;
                                    readonly src: "1832:2:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_Vm_$40778";
                                        readonly typeString: "contract Vm";
                                    };
                                };
                                readonly id: 151856;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "1835:8:228";
                                readonly memberName: "rollFork";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 40696;
                                readonly src: "1832:11:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256) external";
                                };
                            };
                            readonly id: 151858;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1832:24:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 151859;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1832:24:228";
                    }, {
                        readonly expression: {
                            readonly id: 151862;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151860;
                                readonly name: "isForked";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151733;
                                readonly src: "1866:8:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly hexValue: "74727565";
                                readonly id: 151861;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "1877:4:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            };
                            readonly src: "1866:15:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 151863;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1866:15:228";
                    }, {
                        readonly id: 151864;
                        readonly nodeType: "PlaceholderStatement";
                        readonly src: "1892:1:228";
                    }];
                };
                readonly name: "__goerli_fork";
                readonly nameLocation: "1696:13:228";
                readonly parameters: {
                    readonly id: 151840;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 151839;
                        readonly mutability: "mutable";
                        readonly name: "blockNumber";
                        readonly nameLocation: "1718:11:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151866;
                        readonly src: "1710:19:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 151838;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1710:7:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1709:21:228";
                };
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 151906;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1928:218:228";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 151905;
                    readonly nodeType: "Block";
                    readonly src: "1999:147:228";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 151889;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 151873;
                                readonly name: "_user";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151871;
                                readonly src: "2009:5:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly arguments: readonly [{
                                            readonly arguments: readonly [{
                                                readonly arguments: readonly [{
                                                    readonly id: 151883;
                                                    readonly name: "name";
                                                    readonly nodeType: "Identifier";
                                                    readonly overloadedDeclarations: readonly [];
                                                    readonly referencedDeclaration: 151868;
                                                    readonly src: "2062:4:228";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_string_memory_ptr";
                                                        readonly typeString: "string memory";
                                                    };
                                                }];
                                                readonly expression: {
                                                    readonly argumentTypes: readonly [{
                                                        readonly typeIdentifier: "t_string_memory_ptr";
                                                        readonly typeString: "string memory";
                                                    }];
                                                    readonly expression: {
                                                        readonly id: 151881;
                                                        readonly name: "abi";
                                                        readonly nodeType: "Identifier";
                                                        readonly overloadedDeclarations: readonly [];
                                                        readonly referencedDeclaration: -1;
                                                        readonly src: "2051:3:228";
                                                        readonly typeDescriptions: {
                                                            readonly typeIdentifier: "t_magic_abi";
                                                            readonly typeString: "abi";
                                                        };
                                                    };
                                                    readonly id: 151882;
                                                    readonly isConstant: false;
                                                    readonly isLValue: false;
                                                    readonly isPure: true;
                                                    readonly lValueRequested: false;
                                                    readonly memberLocation: "2055:6:228";
                                                    readonly memberName: "encode";
                                                    readonly nodeType: "MemberAccess";
                                                    readonly src: "2051:10:228";
                                                    readonly typeDescriptions: {
                                                        readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                                        readonly typeString: "function () pure returns (bytes memory)";
                                                    };
                                                };
                                                readonly id: 151884;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: false;
                                                readonly kind: "functionCall";
                                                readonly lValueRequested: false;
                                                readonly nameLocations: readonly [];
                                                readonly names: readonly [];
                                                readonly nodeType: "FunctionCall";
                                                readonly src: "2051:16:228";
                                                readonly tryCall: false;
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                                    readonly typeString: "bytes memory";
                                                };
                                            }];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [{
                                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                                    readonly typeString: "bytes memory";
                                                }];
                                                readonly id: 151880;
                                                readonly name: "keccak256";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -8;
                                                readonly src: "2041:9:228";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                                    readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                                };
                                            };
                                            readonly id: 151885;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "2041:27:228";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bytes32";
                                                readonly typeString: "bytes32";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_bytes32";
                                                readonly typeString: "bytes32";
                                            }];
                                            readonly id: 151879;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "ElementaryTypeNameExpression";
                                            readonly src: "2033:7:228";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_uint256_$";
                                                readonly typeString: "type(uint256)";
                                            };
                                            readonly typeName: {
                                                readonly id: 151878;
                                                readonly name: "uint256";
                                                readonly nodeType: "ElementaryTypeName";
                                                readonly src: "2033:7:228";
                                                readonly typeDescriptions: {};
                                            };
                                        };
                                        readonly id: 151886;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "2033:36:228";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 151877;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "2025:7:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_uint160_$";
                                            readonly typeString: "type(uint160)";
                                        };
                                        readonly typeName: {
                                            readonly id: 151876;
                                            readonly name: "uint160";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "2025:7:228";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 151887;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2025:45:228";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint160";
                                        readonly typeString: "uint160";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint160";
                                        readonly typeString: "uint160";
                                    }];
                                    readonly id: 151875;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "2017:7:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 151874;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "2017:7:228";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 151888;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2017:54:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "2009:62:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly id: 151890;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2009:62:228";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 151894;
                                readonly name: "_user";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151871;
                                readonly src: "2090:5:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 151895;
                                readonly name: "name";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151868;
                                readonly src: "2097:4:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                }];
                                readonly expression: {
                                    readonly id: 151891;
                                    readonly name: "vm";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29666;
                                    readonly src: "2081:2:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_Vm_$40778";
                                        readonly typeString: "contract Vm";
                                    };
                                };
                                readonly id: 151893;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2084:5:228";
                                readonly memberName: "label";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 39648;
                                readonly src: "2081:8:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$";
                                    readonly typeString: "function (address,string memory) external";
                                };
                            };
                            readonly id: 151896;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2081:21:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 151897;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2081:21:228";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 151901;
                                readonly name: "_user";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151871;
                                readonly src: "2120:5:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly hexValue: "3130303030";
                                readonly id: 151902;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "2127:11:228";
                                readonly subdenomination: "ether";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_10000000000000000000000_by_1";
                                    readonly typeString: "int_const 10000000000000000000000";
                                };
                                readonly value: "10000";
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_rational_10000000000000000000000_by_1";
                                    readonly typeString: "int_const 10000000000000000000000";
                                }];
                                readonly expression: {
                                    readonly id: 151898;
                                    readonly name: "vm";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29666;
                                    readonly src: "2112:2:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_Vm_$40778";
                                        readonly typeString: "contract Vm";
                                    };
                                };
                                readonly id: 151900;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2115:4:228";
                                readonly memberName: "deal";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 40415;
                                readonly src: "2112:7:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$";
                                    readonly typeString: "function (address,uint256) external";
                                };
                            };
                            readonly id: 151903;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2112:27:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 151904;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2112:27:228";
                    }];
                };
                readonly functionSelector: "507ffba5";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "createUser";
                readonly nameLocation: "1937:10:228";
                readonly parameters: {
                    readonly id: 151869;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 151868;
                        readonly mutability: "mutable";
                        readonly name: "name";
                        readonly nameLocation: "1962:4:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151906;
                        readonly src: "1948:18:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 151867;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1948:6:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1947:20:228";
                };
                readonly returnParameters: {
                    readonly id: 151872;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 151871;
                        readonly mutability: "mutable";
                        readonly name: "_user";
                        readonly nameLocation: "1992:5:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151906;
                        readonly src: "1984:13:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 151870;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1984:7:228";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1983:15:228";
                };
                readonly scope: 152051;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 151929;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2152:198:228";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 151928;
                    readonly nodeType: "Block";
                    readonly src: "2271:79:228";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 151919;
                                readonly name: "whale";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151908;
                                readonly src: "2302:5:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 151920;
                                readonly name: "token";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151911;
                                readonly src: "2309:5:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                    readonly typeString: "contract IERC20";
                                };
                            }, {
                                readonly arguments: readonly [{
                                    readonly id: 151923;
                                    readonly name: "whale";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151908;
                                    readonly src: "2332:5:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    }];
                                    readonly expression: {
                                        readonly id: 151921;
                                        readonly name: "token";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 151911;
                                        readonly src: "2316:5:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                            readonly typeString: "contract IERC20";
                                        };
                                    };
                                    readonly id: 151922;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "2322:9:228";
                                    readonly memberName: "balanceOf";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 9665;
                                    readonly src: "2316:15:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_external_view$_t_address_$returns$_t_uint256_$";
                                        readonly typeString: "function (address) view external returns (uint256)";
                                    };
                                };
                                readonly id: 151924;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2316:22:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 151925;
                                readonly name: "to";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151913;
                                readonly src: "2340:2:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                    readonly typeString: "contract IERC20";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly id: 151918;
                                readonly name: "whaleTransfer";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [151929, 151985];
                                readonly referencedDeclaration: 151985;
                                readonly src: "2288:13:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$9666_$_t_uint256_$_t_address_$returns$_t_uint256_$";
                                    readonly typeString: "function (address,contract IERC20,uint256,address) returns (uint256)";
                                };
                            };
                            readonly id: 151926;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2288:55:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 151917;
                        readonly id: 151927;
                        readonly nodeType: "Return";
                        readonly src: "2281:62:228";
                    }];
                };
                readonly functionSelector: "10716760";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "whaleTransfer";
                readonly nameLocation: "2161:13:228";
                readonly parameters: {
                    readonly id: 151914;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 151908;
                        readonly mutability: "mutable";
                        readonly name: "whale";
                        readonly nameLocation: "2192:5:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151929;
                        readonly src: "2184:13:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 151907;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2184:7:228";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 151911;
                        readonly mutability: "mutable";
                        readonly name: "token";
                        readonly nameLocation: "2214:5:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151929;
                        readonly src: "2207:12:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IERC20_$9666";
                            readonly typeString: "contract IERC20";
                        };
                        readonly typeName: {
                            readonly id: 151910;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 151909;
                                readonly name: "IERC20";
                                readonly nameLocations: readonly ["2207:6:228"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 9666;
                                readonly src: "2207:6:228";
                            };
                            readonly referencedDeclaration: 9666;
                            readonly src: "2207:6:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                readonly typeString: "contract IERC20";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 151913;
                        readonly mutability: "mutable";
                        readonly name: "to";
                        readonly nameLocation: "2237:2:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151929;
                        readonly src: "2229:10:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 151912;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2229:7:228";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2174:71:228";
                };
                readonly returnParameters: {
                    readonly id: 151917;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 151916;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151929;
                        readonly src: "2262:7:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 151915;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2262:7:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2261:9:228";
                };
                readonly scope: 152051;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 151985;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2356:417:228";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 151984;
                    readonly nodeType: "Block";
                    readonly src: "2499:274:228";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [151944];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 151944;
                            readonly mutability: "mutable";
                            readonly name: "whaleBalance";
                            readonly nameLocation: "2517:12:228";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 151984;
                            readonly src: "2509:20:228";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 151943;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2509:7:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 151949;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 151947;
                                readonly name: "whale";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151931;
                                readonly src: "2548:5:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly expression: {
                                    readonly id: 151945;
                                    readonly name: "token";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151934;
                                    readonly src: "2532:5:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                        readonly typeString: "contract IERC20";
                                    };
                                };
                                readonly id: 151946;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2538:9:228";
                                readonly memberName: "balanceOf";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 9665;
                                readonly src: "2532:15:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_view$_t_address_$returns$_t_uint256_$";
                                    readonly typeString: "function (address) view external returns (uint256)";
                                };
                            };
                            readonly id: 151948;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2532:22:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "2509:45:228";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 151952;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 151950;
                                readonly name: "amount";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151936;
                                readonly src: "2568:6:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 151951;
                                readonly name: "whaleBalance";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151944;
                                readonly src: "2577:12:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "2568:21:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 151956;
                        readonly nodeType: "IfStatement";
                        readonly src: "2564:56:228";
                        readonly trueBody: {
                            readonly errorCall: {
                                readonly arguments: readonly [];
                                readonly expression: {
                                    readonly argumentTypes: readonly [];
                                    readonly id: 151953;
                                    readonly name: "WhaleBalanceExceeded";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151711;
                                    readonly src: "2598:20:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                        readonly typeString: "function () pure";
                                    };
                                };
                                readonly id: 151954;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2598:22:228";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly id: 151955;
                            readonly nodeType: "RevertStatement";
                            readonly src: "2591:29:228";
                        };
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [];
                            readonly expression: {
                                readonly argumentTypes: readonly [];
                                readonly expression: {
                                    readonly id: 151957;
                                    readonly name: "vm";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29666;
                                    readonly src: "2630:2:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_Vm_$40778";
                                        readonly typeString: "contract Vm";
                                    };
                                };
                                readonly id: 151959;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2633:9:228";
                                readonly memberName: "stopPrank";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 40398;
                                readonly src: "2630:12:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$__$returns$__$";
                                    readonly typeString: "function () external";
                                };
                            };
                            readonly id: 151960;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2630:14:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 151961;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2630:14:228";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 151965;
                                readonly name: "whale";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151931;
                                readonly src: "2668:5:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly expression: {
                                    readonly id: 151962;
                                    readonly name: "vm";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29666;
                                    readonly src: "2654:2:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_Vm_$40778";
                                        readonly typeString: "contract Vm";
                                    };
                                };
                                readonly id: 151964;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2657:10:228";
                                readonly memberName: "startPrank";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 40381;
                                readonly src: "2654:13:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$returns$__$";
                                    readonly typeString: "function (address) external";
                                };
                            };
                            readonly id: 151966;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2654:20:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 151967;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2654:20:228";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 151971;
                                readonly name: "whale";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151931;
                                readonly src: "2692:5:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly hexValue: "31";
                                readonly id: 151972;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "2699:7:228";
                                readonly subdenomination: "ether";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000000";
                                };
                                readonly value: "1";
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_rational_1000000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000000";
                                }];
                                readonly expression: {
                                    readonly id: 151968;
                                    readonly name: "vm";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29666;
                                    readonly src: "2684:2:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_Vm_$40778";
                                        readonly typeString: "contract Vm";
                                    };
                                };
                                readonly id: 151970;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2687:4:228";
                                readonly memberName: "deal";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 40415;
                                readonly src: "2684:7:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$";
                                    readonly typeString: "function (address,uint256) external";
                                };
                            };
                            readonly id: 151973;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2684:23:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 151974;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2684:23:228";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 151978;
                                readonly name: "to";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151938;
                                readonly src: "2732:2:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 151979;
                                readonly name: "amount";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151936;
                                readonly src: "2736:6:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 151975;
                                    readonly name: "token";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151934;
                                    readonly src: "2717:5:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                        readonly typeString: "contract IERC20";
                                    };
                                };
                                readonly id: 151977;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2723:8:228";
                                readonly memberName: "transfer";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 9611;
                                readonly src: "2717:14:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$";
                                    readonly typeString: "function (address,uint256) external returns (bool)";
                                };
                            };
                            readonly id: 151980;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2717:26:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 151981;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2717:26:228";
                    }, {
                        readonly expression: {
                            readonly id: 151982;
                            readonly name: "amount";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 151936;
                            readonly src: "2760:6:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 151942;
                        readonly id: 151983;
                        readonly nodeType: "Return";
                        readonly src: "2753:13:228";
                    }];
                };
                readonly functionSelector: "3e5e0d26";
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "whaleTransfer";
                readonly nameLocation: "2365:13:228";
                readonly parameters: {
                    readonly id: 151939;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 151931;
                        readonly mutability: "mutable";
                        readonly name: "whale";
                        readonly nameLocation: "2396:5:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151985;
                        readonly src: "2388:13:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 151930;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2388:7:228";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 151934;
                        readonly mutability: "mutable";
                        readonly name: "token";
                        readonly nameLocation: "2418:5:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151985;
                        readonly src: "2411:12:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IERC20_$9666";
                            readonly typeString: "contract IERC20";
                        };
                        readonly typeName: {
                            readonly id: 151933;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 151932;
                                readonly name: "IERC20";
                                readonly nameLocations: readonly ["2411:6:228"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 9666;
                                readonly src: "2411:6:228";
                            };
                            readonly referencedDeclaration: 9666;
                            readonly src: "2411:6:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                readonly typeString: "contract IERC20";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 151936;
                        readonly mutability: "mutable";
                        readonly name: "amount";
                        readonly nameLocation: "2441:6:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151985;
                        readonly src: "2433:14:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 151935;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2433:7:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 151938;
                        readonly mutability: "mutable";
                        readonly name: "to";
                        readonly nameLocation: "2465:2:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151985;
                        readonly src: "2457:10:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 151937;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2457:7:228";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2378:95:228";
                };
                readonly returnParameters: {
                    readonly id: 151942;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 151941;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 151985;
                        readonly src: "2490:7:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 151940;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2490:7:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2489:9:228";
                };
                readonly scope: 152051;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 152050;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2779:652:228";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 152049;
                    readonly nodeType: "Block";
                    readonly src: "2925:506:228";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [151999];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 151999;
                            readonly mutability: "mutable";
                            readonly name: "sourceBalance";
                            readonly nameLocation: "2943:13:228";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 152049;
                            readonly src: "2935:21:228";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 151998;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2935:7:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 152004;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 152002;
                                readonly name: "source";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 151992;
                                readonly src: "2975:6:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }];
                                readonly expression: {
                                    readonly id: 152000;
                                    readonly name: "token";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151990;
                                    readonly src: "2959:5:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                        readonly typeString: "contract IERC20";
                                    };
                                };
                                readonly id: 152001;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "2965:9:228";
                                readonly memberName: "balanceOf";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 9665;
                                readonly src: "2959:15:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_view$_t_address_$returns$_t_uint256_$";
                                    readonly typeString: "function (address) view external returns (uint256)";
                                };
                            };
                            readonly id: 152003;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "2959:23:228";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "2935:47:228";
                    }, {
                        readonly body: {
                            readonly id: 152047;
                            readonly nodeType: "Block";
                            readonly src: "3038:387:228";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 152017;
                                        readonly name: "source";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 151992;
                                        readonly src: "3134:6:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly id: 152018;
                                        readonly name: "token";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 151990;
                                        readonly src: "3158:5:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                            readonly typeString: "contract IERC20";
                                        };
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 152022;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 152019;
                                            readonly name: "sourceBalance";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 151999;
                                            readonly src: "3181:13:228";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "/";
                                        readonly rightExpression: {
                                            readonly expression: {
                                                readonly id: 152020;
                                                readonly name: "accounts";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: 151995;
                                                readonly src: "3197:8:228";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                                    readonly typeString: "address[] memory";
                                                };
                                            };
                                            readonly id: 152021;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: false;
                                            readonly lValueRequested: false;
                                            readonly memberLocation: "3206:6:228";
                                            readonly memberName: "length";
                                            readonly nodeType: "MemberAccess";
                                            readonly src: "3197:15:228";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly src: "3181:31:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly baseExpression: {
                                            readonly id: 152023;
                                            readonly name: "accounts";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 151995;
                                            readonly src: "3230:8:228";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                                readonly typeString: "address[] memory";
                                            };
                                        };
                                        readonly id: 152025;
                                        readonly indexExpression: {
                                            readonly id: 152024;
                                            readonly name: "i";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 152006;
                                            readonly src: "3239:1:228";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "IndexAccess";
                                        readonly src: "3230:11:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                            readonly typeString: "contract IERC20";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 152016;
                                        readonly name: "whaleTransfer";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [151929, 151985];
                                        readonly referencedDeclaration: 151985;
                                        readonly src: "3103:13:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$9666_$_t_uint256_$_t_address_$returns$_t_uint256_$";
                                            readonly typeString: "function (address,contract IERC20,uint256,address) returns (uint256)";
                                        };
                                    };
                                    readonly id: 152026;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3103:152:228";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly id: 152027;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3103:152:228";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly baseExpression: {
                                            readonly id: 152031;
                                            readonly name: "accounts";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 151995;
                                            readonly src: "3344:8:228";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                                readonly typeString: "address[] memory";
                                            };
                                        };
                                        readonly id: 152033;
                                        readonly indexExpression: {
                                            readonly id: 152032;
                                            readonly name: "i";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 152006;
                                            readonly src: "3353:1:228";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly isConstant: false;
                                        readonly isLValue: true;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "IndexAccess";
                                        readonly src: "3344:11:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly expression: {
                                            readonly id: 152028;
                                            readonly name: "vm";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 29666;
                                            readonly src: "3330:2:228";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_Vm_$40778";
                                                readonly typeString: "contract Vm";
                                            };
                                        };
                                        readonly id: 152030;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3333:10:228";
                                        readonly memberName: "startPrank";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 40381;
                                        readonly src: "3330:13:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$returns$__$";
                                            readonly typeString: "function (address) external";
                                        };
                                    };
                                    readonly id: 152034;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3330:26:228";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 152035;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3330:26:228";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 152039;
                                        readonly name: "hyperdrive";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 151987;
                                        readonly src: "3384:10:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }, {
                                        readonly expression: {
                                            readonly arguments: readonly [{
                                                readonly id: 152042;
                                                readonly isConstant: false;
                                                readonly isLValue: false;
                                                readonly isPure: true;
                                                readonly lValueRequested: false;
                                                readonly nodeType: "ElementaryTypeNameExpression";
                                                readonly src: "3401:7:228";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_type$_t_uint256_$";
                                                    readonly typeString: "type(uint256)";
                                                };
                                                readonly typeName: {
                                                    readonly id: 152041;
                                                    readonly name: "uint256";
                                                    readonly nodeType: "ElementaryTypeName";
                                                    readonly src: "3401:7:228";
                                                    readonly typeDescriptions: {};
                                                };
                                            }];
                                            readonly expression: {
                                                readonly argumentTypes: readonly [{
                                                    readonly typeIdentifier: "t_type$_t_uint256_$";
                                                    readonly typeString: "type(uint256)";
                                                }];
                                                readonly id: 152040;
                                                readonly name: "type";
                                                readonly nodeType: "Identifier";
                                                readonly overloadedDeclarations: readonly [];
                                                readonly referencedDeclaration: -27;
                                                readonly src: "3396:4:228";
                                                readonly typeDescriptions: {
                                                    readonly typeIdentifier: "t_function_metatype_pure$__$returns$__$";
                                                    readonly typeString: "function () pure";
                                                };
                                            };
                                            readonly id: 152043;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "functionCall";
                                            readonly lValueRequested: false;
                                            readonly nameLocations: readonly [];
                                            readonly names: readonly [];
                                            readonly nodeType: "FunctionCall";
                                            readonly src: "3396:13:228";
                                            readonly tryCall: false;
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_meta_type_t_uint256";
                                                readonly typeString: "type(uint256)";
                                            };
                                        };
                                        readonly id: 152044;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3410:3:228";
                                        readonly memberName: "max";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "3396:17:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly expression: {
                                            readonly id: 152036;
                                            readonly name: "token";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 151990;
                                            readonly src: "3370:5:228";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                                readonly typeString: "contract IERC20";
                                            };
                                        };
                                        readonly id: 152038;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3376:7:228";
                                        readonly memberName: "approve";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 9601;
                                        readonly src: "3370:13:228";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$";
                                            readonly typeString: "function (address,uint256) external returns (bool)";
                                        };
                                    };
                                    readonly id: 152045;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3370:44:228";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly id: 152046;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3370:44:228";
                            }];
                        };
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 152012;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 152009;
                                readonly name: "i";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 152006;
                                readonly src: "3012:1:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "<";
                            readonly rightExpression: {
                                readonly expression: {
                                    readonly id: 152010;
                                    readonly name: "accounts";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 151995;
                                    readonly src: "3016:8:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                        readonly typeString: "address[] memory";
                                    };
                                };
                                readonly id: 152011;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3025:6:228";
                                readonly memberName: "length";
                                readonly nodeType: "MemberAccess";
                                readonly src: "3016:15:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "3012:19:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 152048;
                        readonly initializationExpression: {
                            readonly assignments: readonly [152006];
                            readonly declarations: readonly [{
                                readonly constant: false;
                                readonly id: 152006;
                                readonly mutability: "mutable";
                                readonly name: "i";
                                readonly nameLocation: "3005:1:228";
                                readonly nodeType: "VariableDeclaration";
                                readonly scope: 152048;
                                readonly src: "2997:9:228";
                                readonly stateVariable: false;
                                readonly storageLocation: "default";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                                readonly typeName: {
                                    readonly id: 152005;
                                    readonly name: "uint256";
                                    readonly nodeType: "ElementaryTypeName";
                                    readonly src: "2997:7:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly visibility: "internal";
                            }];
                            readonly id: 152008;
                            readonly initialValue: {
                                readonly hexValue: "30";
                                readonly id: 152007;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "3009:1:228";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly nodeType: "VariableDeclarationStatement";
                            readonly src: "2997:13:228";
                        };
                        readonly loopExpression: {
                            readonly expression: {
                                readonly id: 152014;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "++";
                                readonly prefix: false;
                                readonly src: "3033:3:228";
                                readonly subExpression: {
                                    readonly id: 152013;
                                    readonly name: "i";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 152006;
                                    readonly src: "3033:1:228";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 152015;
                            readonly nodeType: "ExpressionStatement";
                            readonly src: "3033:3:228";
                        };
                        readonly nodeType: "ForStatement";
                        readonly src: "2992:433:228";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "fundAccounts";
                readonly nameLocation: "2788:12:228";
                readonly parameters: {
                    readonly id: 151996;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 151987;
                        readonly mutability: "mutable";
                        readonly name: "hyperdrive";
                        readonly nameLocation: "2818:10:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 152050;
                        readonly src: "2810:18:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 151986;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2810:7:228";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 151990;
                        readonly mutability: "mutable";
                        readonly name: "token";
                        readonly nameLocation: "2845:5:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 152050;
                        readonly src: "2838:12:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IERC20_$9666";
                            readonly typeString: "contract IERC20";
                        };
                        readonly typeName: {
                            readonly id: 151989;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 151988;
                                readonly name: "IERC20";
                                readonly nameLocations: readonly ["2838:6:228"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 9666;
                                readonly src: "2838:6:228";
                            };
                            readonly referencedDeclaration: 9666;
                            readonly src: "2838:6:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IERC20_$9666";
                                readonly typeString: "contract IERC20";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 151992;
                        readonly mutability: "mutable";
                        readonly name: "source";
                        readonly nameLocation: "2868:6:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 152050;
                        readonly src: "2860:14:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 151991;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2860:7:228";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 151995;
                        readonly mutability: "mutable";
                        readonly name: "accounts";
                        readonly nameLocation: "2901:8:228";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 152050;
                        readonly src: "2884:25:228";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 151993;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2884:7:228";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 151994;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2884:9:228";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2800:115:228";
                };
                readonly returnParameters: {
                    readonly id: 151997;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2925:0:228";
                };
                readonly scope: 152051;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "internal";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 151683;
                    readonly name: "Test";
                    readonly nameLocations: readonly ["329:4:228"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 39241;
                    readonly src: "329:4:228";
                };
                readonly id: 151684;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "329:4:228";
            }];
            readonly canonicalName: "BaseTest";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [152051, 39241, 39190, 34928, 34638, 33874, 31820, 31100, 29607, 29673, 29670];
            readonly name: "BaseTest";
            readonly nameLocation: "317:8:228";
            readonly scope: 152052;
            readonly usedErrors: readonly [151711, 151713];
            readonly usedEvents: readonly [27321, 27325, 27329, 27333, 27337, 27341, 27345, 27349, 27355, 27361, 27369, 27377, 27383, 27389, 27395, 27401, 29695, 29700, 29705, 29712, 29719, 29726];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 228;
};
//# sourceMappingURL=BaseTest.d.ts.map