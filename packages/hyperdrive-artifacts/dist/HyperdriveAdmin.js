export const HyperdriveAdmin = { "abi": [{ "type": "event", "name": "AddLiquidity", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "Approval", "inputs": [{ "name": "owner", "type": "address", "indexed": true, "internalType": "address" }, { "name": "spender", "type": "address", "indexed": true, "internalType": "address" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "ApprovalForAll", "inputs": [{ "name": "account", "type": "address", "indexed": true, "internalType": "address" }, { "name": "operator", "type": "address", "indexed": true, "internalType": "address" }, { "name": "approved", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "CloseLong", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CloseShort", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "basePayment", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CollectGovernanceFee", "inputs": [{ "name": "collector", "type": "address", "indexed": true, "internalType": "address" }, { "name": "fees", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "CreateCheckpoint", "inputs": [{ "name": "checkpointTime", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "vaultSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "maturedShorts", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "maturedLongs", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "FeeCollectorUpdated", "inputs": [{ "name": "newFeeCollector", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "GovernanceUpdated", "inputs": [{ "name": "newGovernance", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "Initialize", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "apr", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "OpenLong", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "OpenShort", "inputs": [{ "name": "trader", "type": "address", "indexed": true, "internalType": "address" }, { "name": "assetId", "type": "uint256", "indexed": true, "internalType": "uint256" }, { "name": "maturityTime", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "baseProceeds", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "bondAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "PauseStatusUpdated", "inputs": [{ "name": "isPaused", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "PauserUpdated", "inputs": [{ "name": "newPauser", "type": "address", "indexed": true, "internalType": "address" }, { "name": "status", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "RedeemWithdrawalShares", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "withdrawalShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }], "anonymous": false }, { "type": "event", "name": "RemoveLiquidity", "inputs": [{ "name": "provider", "type": "address", "indexed": true, "internalType": "address" }, { "name": "destination", "type": "address", "indexed": true, "internalType": "address" }, { "name": "lpAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "baseAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "vaultShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "asBase", "type": "bool", "indexed": false, "internalType": "bool" }, { "name": "withdrawalShareAmount", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "lpSharePrice", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "Sweep", "inputs": [{ "name": "collector", "type": "address", "indexed": true, "internalType": "address" }, { "name": "target", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "SweepCollectorUpdated", "inputs": [{ "name": "newSweepCollector", "type": "address", "indexed": true, "internalType": "address" }], "anonymous": false }, { "type": "event", "name": "TransferSingle", "inputs": [{ "name": "operator", "type": "address", "indexed": true, "internalType": "address" }, { "name": "from", "type": "address", "indexed": true, "internalType": "address" }, { "name": "to", "type": "address", "indexed": true, "internalType": "address" }, { "name": "id", "type": "uint256", "indexed": false, "internalType": "uint256" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] }], "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} }, "methodIdentifiers": {}, "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"basePayment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"CloseShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"CollectGovernanceFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"checkpointTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultSharePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedShorts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturedLongs\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"CreateCheckpoint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGovernance\",\"type\":\"address\"}],\"name\":\"GovernanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apr\",\"type\":\"uint256\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenLong\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseProceeds\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bondAmount\",\"type\":\"uint256\"}],\"name\":\"OpenShort\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"PauserUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"}],\"name\":\"RedeemWithdrawalShares\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalShareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpSharePrice\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"Sweep\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSweepCollector\",\"type\":\"address\"}],\"name\":\"SweepCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"HyperdriveAdmin\",\"version\":1},\"userdoc\":{\"events\":{\"AddLiquidity(address,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when an LP adds liquidity to the Hyperdrive pool.\"},\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when an account changes the allowance for another         account.\"},\"ApprovalForAll(address,address,bool)\":{\"notice\":\"Emitted when an account changes the approval for all of its         tokens.\"},\"CloseLong(address,address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when a long position is closed.\"},\"CloseShort(address,address,uint256,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when a short position is closed.\"},\"CollectGovernanceFee(address,uint256)\":{\"notice\":\"Emitted when governance fees are collected.\"},\"CreateCheckpoint(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a checkpoint is created.\"},\"FeeCollectorUpdated(address)\":{\"notice\":\"Emitted when the fee collector address is updated.\"},\"GovernanceUpdated(address)\":{\"notice\":\"Emitted when the governance address is updated.\"},\"Initialize(address,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when the Hyperdrive pool is initialized.\"},\"OpenLong(address,uint256,uint256,uint256,uint256,bool,uint256)\":{\"notice\":\"Emitted when a long position is opened.\"},\"OpenShort(address,uint256,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when a short position is opened.\"},\"PauseStatusUpdated(bool)\":{\"notice\":\"Emitted when the pause status is updated.\"},\"PauserUpdated(address,bool)\":{\"notice\":\"Emitted when a pauser is updated.\"},\"RedeemWithdrawalShares(address,address,uint256,uint256,uint256,bool)\":{\"notice\":\"Emitted when an LP redeems withdrawal shares.\"},\"RemoveLiquidity(address,address,uint256,uint256,uint256,bool,uint256,uint256)\":{\"notice\":\"Emitted when an LP removes liquidity from the Hyperdrive pool.\"},\"Sweep(address,address)\":{\"notice\":\"Emitted when tokens are swept.\"},\"SweepCollectorUpdated(address)\":{\"notice\":\"Emitted when the sweep collector address is updated.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are transferred from one account to another.\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"The Hyperdrive admin contract. This contract provides functions that         governance can use to pause the pool and update permissions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/internal/HyperdriveAdmin.sol\":\"HyperdriveAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf\",\"dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24\",\"dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c\",\"dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/internal/HyperdriveAdmin.sol\":{\"keccak256\":\"0x683548d598b303bc8bab561818a2f88c100f6d26fda478e89c02b46cf710726d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://054a605eeb41760fbe1922bb32f511c87e1ca4dd04f3fa64f40783060b371603\",\"dweb:/ipfs/QmezP1mjnbPCwdDCrh4GjL7RVzU61ohTrcW6A7yxLiKcQM\"]},\"contracts/src/internal/HyperdriveBase.sol\":{\"keccak256\":\"0x7feb8df22e6f91b1ee70f50f5ca16a7819601bcb88fc5a5fa9cf16c708cc52bb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://60ff7ff4faa45551099b025d03f2438477b5fd1f64f82b78c6ed26cbdafc64f6\",\"dweb:/ipfs/QmWtbftziGdSKAEvpRoaWRnTxMNwgUVs2nDN6nFugX1WYN\"]},\"contracts/src/internal/HyperdriveStorage.sol\":{\"keccak256\":\"0xf13ba4bcf41673bc04e4ae32a29c31b62514d66cfedee70b0d3bff574efc0e4a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e505639a656cf7c908e7c64cfd5cae6f4174a679de19d17a3f12f6e3fc4b2195\",\"dweb:/ipfs/QmNmcmz9nV9uDyeouo8yWAKMoMqEVx6JMTfZwCRa9QU83N\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131\",\"dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88\",\"dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/HyperdriveMath.sol\":{\"keccak256\":\"0xcf305dde8aa320d1e1b767734ce8edce456af537525d40e30d5345f09f6e34ab\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://056c9a563f1a9e0133e17463497ad19be517d35b770170122edea50ca9fbe002\",\"dweb:/ipfs/QmS6dkVRHzdbv7etumcCtNtm9GuXDCjqZxxhtYfP6keAAY\"]},\"contracts/src/libraries/LPMath.sol\":{\"keccak256\":\"0x5b3c0d159b1945a14227028d835e011bf740e007f664cba049ece1b6ab963067\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d8f4fef22462dabc799b2f8124440a7cc57076f7ceecb46219c69b09f50baf5f\",\"dweb:/ipfs/Qmcw9iC1RZt4Nh7dGH1yR7vUi6qZHJf6ReAvF2uLFHESqZ\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]},\"contracts/src/libraries/YieldSpaceMath.sol\":{\"keccak256\":\"0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c\",\"dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.8.20+commit.a1b79de6" }, "language": "Solidity", "output": { "abi": [{ "inputs": [], "type": "error", "name": "ReentrancyGuardReentrantCall" }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "AddLiquidity", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address", "indexed": true }, { "internalType": "address", "name": "spender", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }], "type": "event", "name": "Approval", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address", "indexed": true }, { "internalType": "address", "name": "operator", "type": "address", "indexed": true }, { "internalType": "bool", "name": "approved", "type": "bool", "indexed": false }], "type": "event", "name": "ApprovalForAll", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "CloseLong", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "basePayment", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "CloseShort", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "collector", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "fees", "type": "uint256", "indexed": false }], "type": "event", "name": "CollectGovernanceFee", "anonymous": false }, { "inputs": [{ "internalType": "uint256", "name": "checkpointTime", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "vaultSharePrice", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "maturedShorts", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "maturedLongs", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "CreateCheckpoint", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newFeeCollector", "type": "address", "indexed": true }], "type": "event", "name": "FeeCollectorUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newGovernance", "type": "address", "indexed": true }], "type": "event", "name": "GovernanceUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "apr", "type": "uint256", "indexed": false }], "type": "event", "name": "Initialize", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "OpenLong", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "trader", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "assetId", "type": "uint256", "indexed": true }, { "internalType": "uint256", "name": "maturityTime", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "baseProceeds", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "bondAmount", "type": "uint256", "indexed": false }], "type": "event", "name": "OpenShort", "anonymous": false }, { "inputs": [{ "internalType": "bool", "name": "isPaused", "type": "bool", "indexed": false }], "type": "event", "name": "PauseStatusUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newPauser", "type": "address", "indexed": true }, { "internalType": "bool", "name": "status", "type": "bool", "indexed": false }], "type": "event", "name": "PauserUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "withdrawalShareAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }], "type": "event", "name": "RedeemWithdrawalShares", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "provider", "type": "address", "indexed": true }, { "internalType": "address", "name": "destination", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "lpAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "baseAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "vaultShareAmount", "type": "uint256", "indexed": false }, { "internalType": "bool", "name": "asBase", "type": "bool", "indexed": false }, { "internalType": "uint256", "name": "withdrawalShareAmount", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "lpSharePrice", "type": "uint256", "indexed": false }], "type": "event", "name": "RemoveLiquidity", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "collector", "type": "address", "indexed": true }, { "internalType": "address", "name": "target", "type": "address", "indexed": true }], "type": "event", "name": "Sweep", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "newSweepCollector", "type": "address", "indexed": true }], "type": "event", "name": "SweepCollectorUpdated", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "operator", "type": "address", "indexed": true }, { "internalType": "address", "name": "from", "type": "address", "indexed": true }, { "internalType": "address", "name": "to", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "id", "type": "uint256", "indexed": false }, { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }], "type": "event", "name": "TransferSingle", "anonymous": false }], "devdoc": { "kind": "dev", "methods": {}, "version": 1 }, "userdoc": { "kind": "user", "methods": {}, "version": 1 } }, "settings": { "remappings": ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"], "optimizer": { "enabled": true, "runs": 200 }, "metadata": { "bytecodeHash": "ipfs" }, "compilationTarget": { "contracts/src/internal/HyperdriveAdmin.sol": "HyperdriveAdmin" }, "libraries": {} }, "sources": { "contracts/src/interfaces/IERC20.sol": { "keccak256": "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9", "urls": ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdrive.sol": { "keccak256": "0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952", "urls": ["bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf", "dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveCore.sol": { "keccak256": "0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e", "urls": ["bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24", "dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveEvents.sol": { "keccak256": "0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0", "urls": ["bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c", "dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveRead.sol": { "keccak256": "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55", "urls": ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiToken.sol": { "keccak256": "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f", "urls": ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenCore.sol": { "keccak256": "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501", "urls": ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenEvents.sol": { "keccak256": "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb", "urls": ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenMetadata.sol": { "keccak256": "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca", "urls": ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenRead.sol": { "keccak256": "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0", "urls": ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveAdmin.sol": { "keccak256": "0x683548d598b303bc8bab561818a2f88c100f6d26fda478e89c02b46cf710726d", "urls": ["bzz-raw://054a605eeb41760fbe1922bb32f511c87e1ca4dd04f3fa64f40783060b371603", "dweb:/ipfs/QmezP1mjnbPCwdDCrh4GjL7RVzU61ohTrcW6A7yxLiKcQM"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveBase.sol": { "keccak256": "0x7feb8df22e6f91b1ee70f50f5ca16a7819601bcb88fc5a5fa9cf16c708cc52bb", "urls": ["bzz-raw://60ff7ff4faa45551099b025d03f2438477b5fd1f64f82b78c6ed26cbdafc64f6", "dweb:/ipfs/QmWtbftziGdSKAEvpRoaWRnTxMNwgUVs2nDN6nFugX1WYN"], "license": "Apache-2.0" }, "contracts/src/internal/HyperdriveStorage.sol": { "keccak256": "0xf13ba4bcf41673bc04e4ae32a29c31b62514d66cfedee70b0d3bff574efc0e4a", "urls": ["bzz-raw://e505639a656cf7c908e7c64cfd5cae6f4174a679de19d17a3f12f6e3fc4b2195", "dweb:/ipfs/QmNmcmz9nV9uDyeouo8yWAKMoMqEVx6JMTfZwCRa9QU83N"], "license": "Apache-2.0" }, "contracts/src/libraries/AssetId.sol": { "keccak256": "0x3031a1ec376be333eebe0062c474a22d7f970cb02de62ab6823c6918c0a7f83b", "urls": ["bzz-raw://6c80cc2fd8b7908b6420ebb21cb99266c93e01d6cdd9d1a41f8847493849b131", "dweb:/ipfs/QmeMehWbF2RwQaf6c6yaj5KHjXboDRpzBCtvFnLW4BXBbc"], "license": "Apache-2.0" }, "contracts/src/libraries/Errors.sol": { "keccak256": "0x45f48f5b8caec5b751850b7266abd84c7400debfbad0f112847582bb052058b0", "urls": ["bzz-raw://46c85e0c750cdb752bec5d67a8a0bc8df071d934c568c880d08a5120a1a11d88", "dweb:/ipfs/Qmc2L1ePB1gqBwUiaAUeoG6hvoPtS2hdY6rhEXzX1SfB41"], "license": "Apache-2.0" }, "contracts/src/libraries/FixedPointMath.sol": { "keccak256": "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076", "urls": ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"], "license": "Apache-2.0" }, "contracts/src/libraries/HyperdriveMath.sol": { "keccak256": "0xcf305dde8aa320d1e1b767734ce8edce456af537525d40e30d5345f09f6e34ab", "urls": ["bzz-raw://056c9a563f1a9e0133e17463497ad19be517d35b770170122edea50ca9fbe002", "dweb:/ipfs/QmS6dkVRHzdbv7etumcCtNtm9GuXDCjqZxxhtYfP6keAAY"], "license": "Apache-2.0" }, "contracts/src/libraries/LPMath.sol": { "keccak256": "0x5b3c0d159b1945a14227028d835e011bf740e007f664cba049ece1b6ab963067", "urls": ["bzz-raw://d8f4fef22462dabc799b2f8124440a7cc57076f7ceecb46219c69b09f50baf5f", "dweb:/ipfs/Qmcw9iC1RZt4Nh7dGH1yR7vUi6qZHJf6ReAvF2uLFHESqZ"], "license": "Apache-2.0" }, "contracts/src/libraries/SafeCast.sol": { "keccak256": "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148", "urls": ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"], "license": "Apache-2.0" }, "contracts/src/libraries/YieldSpaceMath.sol": { "keccak256": "0x4a9c91313bed7cda6ef503af23c9f777008b5258e9cb2176eab6acc52be79891", "urls": ["bzz-raw://88da1f5502a12fe1024be90f6a6ea08556cc1f2660ab8cbeb5e07640abb7711c", "dweb:/ipfs/QmVQoG9TyrAsVYcgvgZfgA5pQk8V8wvS4BewGNP4B3Txyy"], "license": "Apache-2.0" }, "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": { "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7", "urls": ["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f", "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": { "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80", "urls": ["bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229", "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": { "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70", "urls": ["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c", "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": { "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2", "urls": ["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850", "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": { "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff", "urls": ["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d", "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": { "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386", "urls": ["bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0", "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/utils/Address.sol": { "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721", "urls": ["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245", "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/utils/Context.sol": { "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2", "urls": ["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12", "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"], "license": "MIT" }, "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": { "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236", "urls": ["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02", "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"], "license": "MIT" } }, "version": 1 }, "ast": { "absolutePath": "contracts/src/internal/HyperdriveAdmin.sol", "id": 13336, "exportedSymbols": { "ERC20": [71391], "HyperdriveAdmin": [13335], "HyperdriveBase": [14511], "IERC20": [10417], "IHyperdrive": [11143], "IHyperdriveEvents": [11666], "SafeERC20": [71821] }, "nodeType": "SourceUnit", "src": "39:6197:117", "nodes": [{ "id": 13010, "nodeType": "PragmaDirective", "src": "39:23:117", "nodes": [], "literals": ["solidity", "0.8", ".20"] }, { "id": 13012, "nodeType": "ImportDirective", "src": "64:59:117", "nodes": [], "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol", "file": "openzeppelin/token/ERC20/ERC20.sol", "nameLocation": "-1:-1:-1", "scope": 13336, "sourceUnit": 71392, "symbolAliases": [{ "foreign": { "id": 13011, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71391, "src": "73:5:117", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 13014, "nodeType": "ImportDirective", "src": "124:73:117", "nodes": [], "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol", "file": "openzeppelin/token/ERC20/utils/SafeERC20.sol", "nameLocation": "-1:-1:-1", "scope": 13336, "sourceUnit": 71822, "symbolAliases": [{ "foreign": { "id": 13013, "name": "SafeERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71821, "src": "133:9:117", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 13016, "nodeType": "ImportDirective", "src": "198:50:117", "nodes": [], "absolutePath": "contracts/src/interfaces/IERC20.sol", "file": "../interfaces/IERC20.sol", "nameLocation": "-1:-1:-1", "scope": 13336, "sourceUnit": 10418, "symbolAliases": [{ "foreign": { "id": 13015, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10417, "src": "207:6:117", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 13018, "nodeType": "ImportDirective", "src": "249:60:117", "nodes": [], "absolutePath": "contracts/src/interfaces/IHyperdrive.sol", "file": "../interfaces/IHyperdrive.sol", "nameLocation": "-1:-1:-1", "scope": 13336, "sourceUnit": 11144, "symbolAliases": [{ "foreign": { "id": 13017, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "258:11:117", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 13020, "nodeType": "ImportDirective", "src": "310:72:117", "nodes": [], "absolutePath": "contracts/src/interfaces/IHyperdriveEvents.sol", "file": "../interfaces/IHyperdriveEvents.sol", "nameLocation": "-1:-1:-1", "scope": 13336, "sourceUnit": 11667, "symbolAliases": [{ "foreign": { "id": 13019, "name": "IHyperdriveEvents", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11666, "src": "319:17:117", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 13022, "nodeType": "ImportDirective", "src": "383:54:117", "nodes": [], "absolutePath": "contracts/src/internal/HyperdriveBase.sol", "file": "./HyperdriveBase.sol", "nameLocation": "-1:-1:-1", "scope": 13336, "sourceUnit": 14512, "symbolAliases": [{ "foreign": { "id": 13021, "name": "HyperdriveBase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14511, "src": "392:14:117", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 13335, "nodeType": "ContractDefinition", "src": "861:5374:117", "nodes": [{ "id": 13031, "nodeType": "UsingForDirective", "src": "938:26:117", "nodes": [], "global": false, "libraryName": { "id": 13028, "name": "SafeERC20", "nameLocations": ["944:9:117"], "nodeType": "IdentifierPath", "referencedDeclaration": 71821, "src": "944:9:117" }, "typeName": { "id": 13030, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 13029, "name": "ERC20", "nameLocations": ["958:5:117"], "nodeType": "IdentifierPath", "referencedDeclaration": 71391, "src": "958:5:117" }, "referencedDeclaration": 71391, "src": "958:5:117", "typeDescriptions": { "typeIdentifier": "t_contract$_ERC20_$71391", "typeString": "contract ERC20" } } }, { "id": 13109, "nodeType": "FunctionDefinition", "src": "1317:1139:117", "nodes": [], "body": { "id": 13108, "nodeType": "Block", "src": "1450:1006:117", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 13043, "name": "_options", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13035, "src": "1528:8:117", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10990_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_struct$_Options_$10990_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" }], "id": 13042, "name": "_checkOptions", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13598, "src": "1514:13:117", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_struct$_Options_$10990_calldata_ptr_$returns$__$", "typeString": "function (struct IHyperdrive.Options calldata) pure" } }, "id": 13044, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1514:23:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13045, "nodeType": "ExpressionStatement", "src": "1514:23:117" }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 13049, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 13046, "name": "_options", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13035, "src": "1620:8:117", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10990_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" } }, "id": 13047, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1629:11:117", "memberName": "destination", "nodeType": "MemberAccess", "referencedDeclaration": 10983, "src": "1620:20:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13048, "name": "_feeCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18351, "src": "1644:13:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "1620:37:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13056, "nodeType": "IfStatement", "src": "1616:110:117", "trueBody": { "id": 13055, "nodeType": "Block", "src": "1659:67:117", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 13050, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "1680:11:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11143_$", "typeString": "type(contract IHyperdrive)" } }, "id": 13052, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1692:21:117", "memberName": "InvalidFeeDestination", "nodeType": "MemberAccess", "referencedDeclaration": 11032, "src": "1680:33:117", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 13053, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1680:35:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13054, "nodeType": "RevertStatement", "src": "1673:42:117" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 13071, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 13066, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 13061, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "1818:21:117", "subExpression": { "baseExpression": { "id": 13057, "name": "_pausers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18365, "src": "1819:8:117", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)" } }, "id": 13060, "indexExpression": { "expression": { "id": 13058, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1828:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13059, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1832:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "1828:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1819:20:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 13065, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 13062, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1855:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13063, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1859:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "1855:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13064, "name": "_feeCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18351, "src": "1869:13:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "1855:27:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "1818:64:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 13070, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 13067, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1898:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13068, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1902:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "1898:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13069, "name": "_governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18357, "src": "1912:11:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "1898:25:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "1818:105:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13078, "nodeType": "IfStatement", "src": "1801:191:117", "trueBody": { "id": 13077, "nodeType": "Block", "src": "1934:58:117", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 13072, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "1955:11:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11143_$", "typeString": "type(contract IHyperdrive)" } }, "id": 13074, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1967:12:117", "memberName": "Unauthorized", "nodeType": "MemberAccess", "referencedDeclaration": 11091, "src": "1955:24:117", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 13075, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1955:26:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13076, "nodeType": "RevertStatement", "src": "1948:33:117" }] } }, { "assignments": [13080], "declarations": [{ "constant": false, "id": 13080, "mutability": "mutable", "name": "vaultSharePrice", "nameLocation": "2080:15:117", "nodeType": "VariableDeclaration", "scope": 13108, "src": "2072:23:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 13079, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2072:7:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 13083, "initialValue": { "arguments": [], "expression": { "argumentTypes": [], "id": 13081, "name": "_pricePerVaultShare", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13530, "src": "2098:19:117", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)" } }, "id": 13082, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2098:21:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "2072:47:117" }, { "assignments": [13085], "declarations": [{ "constant": false, "id": 13085, "mutability": "mutable", "name": "governanceFeesAccrued", "nameLocation": "2137:21:117", "nodeType": "VariableDeclaration", "scope": 13108, "src": "2129:29:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 13084, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2129:7:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 13087, "initialValue": { "id": 13086, "name": "_governanceFeesAccrued", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18360, "src": "2161:22:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "2129:54:117" }, { "expression": { "id": 13089, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "delete", "prefix": true, "src": "2193:29:117", "subExpression": { "id": 13088, "name": "_governanceFeesAccrued", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18360, "src": "2200:22:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13090, "nodeType": "ExpressionStatement", "src": "2193:29:117" }, { "expression": { "id": 13097, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 13091, "name": "proceeds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13040, "src": "2232:8:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "arguments": [{ "id": 13093, "name": "governanceFeesAccrued", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13085, "src": "2253:21:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 13094, "name": "vaultSharePrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13080, "src": "2276:15:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 13095, "name": "_options", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13035, "src": "2293:8:117", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10990_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_struct$_Options_$10990_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" }], "id": 13092, "name": "_withdraw", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13519, "src": "2243:9:117", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Options_$10990_calldata_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,struct IHyperdrive.Options calldata) returns (uint256)" } }, "id": 13096, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2243:59:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "2232:70:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 13098, "nodeType": "ExpressionStatement", "src": "2232:70:117" }, { "eventCall": { "arguments": [{ "id": 13100, "name": "_feeCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18351, "src": "2351:13:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "arguments": [{ "id": 13102, "name": "proceeds", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13040, "src": "2403:8:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 13103, "name": "vaultSharePrice", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13080, "src": "2413:15:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 13104, "name": "_options", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13035, "src": "2430:8:117", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10990_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_struct$_Options_$10990_calldata_ptr", "typeString": "struct IHyperdrive.Options calldata" }], "id": 13101, "name": "_convertToBaseFromOption", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14458, "src": "2378:24:117", "typeDescriptions": { "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_struct$_Options_$10990_calldata_ptr_$returns$_t_uint256_$", "typeString": "function (uint256,uint256,struct IHyperdrive.Options calldata) pure returns (uint256)" } }, "id": 13105, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2378:61:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 13099, "name": "CollectGovernanceFee", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11631, "src": "2317:20:117", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)" } }, "id": 13106, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2317:132:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13107, "nodeType": "EmitStatement", "src": "2312:137:117" }] }, "documentation": { "id": 13032, "nodeType": "StructuredDocumentation", "src": "970:342:117", "text": "@dev This function collects the governance fees accrued by the pool.\n @param _options The options that configure how the fees are settled.\n @return proceeds The governance fees collected. The units of this\n         quantity are either base or vault shares, depending on the value\n         of `_options.asBase`." }, "implemented": true, "kind": "function", "modifiers": [{ "id": 13038, "kind": "modifierInvocation", "modifierName": { "id": 13037, "name": "nonReentrant", "nameLocations": ["1410:12:117"], "nodeType": "IdentifierPath", "referencedDeclaration": 72137, "src": "1410:12:117" }, "nodeType": "ModifierInvocation", "src": "1410:12:117" }], "name": "_collectGovernanceFee", "nameLocation": "1326:21:117", "parameters": { "id": 13036, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 13035, "mutability": "mutable", "name": "_options", "nameLocation": "1386:8:117", "nodeType": "VariableDeclaration", "scope": 13109, "src": "1357:37:117", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10990_calldata_ptr", "typeString": "struct IHyperdrive.Options" }, "typeName": { "id": 13034, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 13033, "name": "IHyperdrive.Options", "nameLocations": ["1357:11:117", "1369:7:117"], "nodeType": "IdentifierPath", "referencedDeclaration": 10990, "src": "1357:19:117" }, "referencedDeclaration": 10990, "src": "1357:19:117", "typeDescriptions": { "typeIdentifier": "t_struct$_Options_$10990_storage_ptr", "typeString": "struct IHyperdrive.Options" } }, "visibility": "internal" }], "src": "1347:53:117" }, "returnParameters": { "id": 13041, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 13040, "mutability": "mutable", "name": "proceeds", "nameLocation": "1440:8:117", "nodeType": "VariableDeclaration", "scope": 13109, "src": "1432:16:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 13039, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1432:7:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "1431:18:117" }, "scope": 13335, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "id": 13138, "nodeType": "FunctionDefinition", "src": "2605:350:117", "nodes": [], "body": { "id": 13137, "nodeType": "Block", "src": "2644:311:117", "nodes": [], "statements": [{ "condition": { "id": 13119, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "2729:21:117", "subExpression": { "baseExpression": { "id": 13115, "name": "_pausers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18365, "src": "2730:8:117", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)" } }, "id": 13118, "indexExpression": { "expression": { "id": 13116, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2739:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13117, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2743:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "2739:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "2730:20:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13126, "nodeType": "IfStatement", "src": "2725:85:117", "trueBody": { "id": 13125, "nodeType": "Block", "src": "2752:58:117", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 13120, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "2773:11:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11143_$", "typeString": "type(contract IHyperdrive)" } }, "id": 13122, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2785:12:117", "memberName": "Unauthorized", "nodeType": "MemberAccess", "referencedDeclaration": 11091, "src": "2773:24:117", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 13123, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2773:26:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13124, "nodeType": "RevertStatement", "src": "2766:33:117" }] } }, { "expression": { "id": 13131, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "expression": { "id": 13127, "name": "_marketState", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18338, "src": "2875:12:117", "typeDescriptions": { "typeIdentifier": "t_struct$_MarketState_$10829_storage", "typeString": "struct IHyperdrive.MarketState storage ref" } }, "id": 13129, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "2888:8:117", "memberName": "isPaused", "nodeType": "MemberAccess", "referencedDeclaration": 10822, "src": "2875:21:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 13130, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13112, "src": "2899:7:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "2875:31:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13132, "nodeType": "ExpressionStatement", "src": "2875:31:117" }, { "eventCall": { "arguments": [{ "id": 13134, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13112, "src": "2940:7:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 13133, "name": "PauseStatusUpdated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11658, "src": "2921:18:117", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$", "typeString": "function (bool)" } }, "id": 13135, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2921:27:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13136, "nodeType": "EmitStatement", "src": "2916:32:117" }] }, "documentation": { "id": 13110, "nodeType": "StructuredDocumentation", "src": "2462:138:117", "text": "@dev Allows an authorized address to pause this contract.\n @param _status True to pause all deposits and false to unpause them." }, "implemented": true, "kind": "function", "modifiers": [], "name": "_pause", "nameLocation": "2614:6:117", "parameters": { "id": 13113, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 13112, "mutability": "mutable", "name": "_status", "nameLocation": "2626:7:117", "nodeType": "VariableDeclaration", "scope": 13138, "src": "2621:12:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 13111, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2621:4:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "2620:14:117" }, "returnParameters": { "id": 13114, "nodeType": "ParameterList", "parameters": [], "src": "2644:0:117" }, "scope": 13335, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "id": 13164, "nodeType": "FunctionDefinition", "src": "3071:334:117", "nodes": [], "body": { "id": 13163, "nodeType": "Block", "src": "3120:285:117", "nodes": [], "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 13147, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 13144, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3183:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13145, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3187:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "3183:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13146, "name": "_governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18357, "src": "3197:11:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "3183:25:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13154, "nodeType": "IfStatement", "src": "3179:89:117", "trueBody": { "id": 13153, "nodeType": "Block", "src": "3210:58:117", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 13148, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "3231:11:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11143_$", "typeString": "type(contract IHyperdrive)" } }, "id": 13150, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3243:12:117", "memberName": "Unauthorized", "nodeType": "MemberAccess", "referencedDeclaration": 11091, "src": "3231:24:117", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 13151, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3231:26:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13152, "nodeType": "RevertStatement", "src": "3224:33:117" }] } }, { "expression": { "id": 13157, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 13155, "name": "_feeCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18351, "src": "3338:13:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 13156, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13141, "src": "3354:4:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "3338:20:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 13158, "nodeType": "ExpressionStatement", "src": "3338:20:117" }, { "eventCall": { "arguments": [{ "id": 13160, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13141, "src": "3393:4:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 13159, "name": "FeeCollectorUpdated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11636, "src": "3373:19:117", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)" } }, "id": 13161, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3373:25:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13162, "nodeType": "EmitStatement", "src": "3368:30:117" }] }, "documentation": { "id": 13139, "nodeType": "StructuredDocumentation", "src": "2961:105:117", "text": "@dev Allows governance to transfer the fee collector role.\n @param _who The new fee collector." }, "implemented": true, "kind": "function", "modifiers": [], "name": "_setFeeCollector", "nameLocation": "3080:16:117", "parameters": { "id": 13142, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 13141, "mutability": "mutable", "name": "_who", "nameLocation": "3105:4:117", "nodeType": "VariableDeclaration", "scope": 13164, "src": "3097:12:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 13140, "name": "address", "nodeType": "ElementaryTypeName", "src": "3097:7:117", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "3096:14:117" }, "returnParameters": { "id": 13143, "nodeType": "ParameterList", "parameters": [], "src": "3120:0:117" }, "scope": 13335, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "id": 13190, "nodeType": "FunctionDefinition", "src": "3523:345:117", "nodes": [], "body": { "id": 13189, "nodeType": "Block", "src": "3574:294:117", "nodes": [], "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 13173, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 13170, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3637:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13171, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3641:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "3637:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13172, "name": "_governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18357, "src": "3651:11:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "3637:25:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13180, "nodeType": "IfStatement", "src": "3633:89:117", "trueBody": { "id": 13179, "nodeType": "Block", "src": "3664:58:117", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 13174, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "3685:11:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11143_$", "typeString": "type(contract IHyperdrive)" } }, "id": 13176, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3697:12:117", "memberName": "Unauthorized", "nodeType": "MemberAccess", "referencedDeclaration": 11091, "src": "3685:24:117", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 13177, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3685:26:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13178, "nodeType": "RevertStatement", "src": "3678:33:117" }] } }, { "expression": { "id": 13183, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 13181, "name": "_sweepCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18354, "src": "3797:15:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 13182, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13167, "src": "3815:4:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "3797:22:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 13184, "nodeType": "ExpressionStatement", "src": "3797:22:117" }, { "eventCall": { "arguments": [{ "id": 13186, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13167, "src": "3856:4:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 13185, "name": "SweepCollectorUpdated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11641, "src": "3834:21:117", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)" } }, "id": 13187, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3834:27:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13188, "nodeType": "EmitStatement", "src": "3829:32:117" }] }, "documentation": { "id": 13165, "nodeType": "StructuredDocumentation", "src": "3411:107:117", "text": "@dev Allows governance to transfer the sweep collector role.\n @param _who The new fee collector." }, "implemented": true, "kind": "function", "modifiers": [], "name": "_setSweepCollector", "nameLocation": "3532:18:117", "parameters": { "id": 13168, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 13167, "mutability": "mutable", "name": "_who", "nameLocation": "3559:4:117", "nodeType": "VariableDeclaration", "scope": 13190, "src": "3551:12:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 13166, "name": "address", "nodeType": "ElementaryTypeName", "src": "3551:7:117", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "3550:14:117" }, "returnParameters": { "id": 13169, "nodeType": "ParameterList", "parameters": [], "src": "3574:0:117" }, "scope": 13335, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "id": 13216, "nodeType": "FunctionDefinition", "src": "3986:328:117", "nodes": [], "body": { "id": 13215, "nodeType": "Block", "src": "4033:281:117", "nodes": [], "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 13199, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 13196, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4096:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13197, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4100:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "4096:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13198, "name": "_governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18357, "src": "4110:11:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "4096:25:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13206, "nodeType": "IfStatement", "src": "4092:89:117", "trueBody": { "id": 13205, "nodeType": "Block", "src": "4123:58:117", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 13200, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "4144:11:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11143_$", "typeString": "type(contract IHyperdrive)" } }, "id": 13202, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4156:12:117", "memberName": "Unauthorized", "nodeType": "MemberAccess", "referencedDeclaration": 11091, "src": "4144:24:117", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 13203, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4144:26:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13204, "nodeType": "RevertStatement", "src": "4137:33:117" }] } }, { "expression": { "id": 13209, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "id": 13207, "name": "_governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18357, "src": "4251:11:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 13208, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13193, "src": "4265:4:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "4251:18:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "id": 13210, "nodeType": "ExpressionStatement", "src": "4251:18:117" }, { "eventCall": { "arguments": [{ "id": 13212, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13193, "src": "4302:4:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 13211, "name": "GovernanceUpdated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11646, "src": "4284:17:117", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)" } }, "id": 13213, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4284:23:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13214, "nodeType": "EmitStatement", "src": "4279:28:117" }] }, "documentation": { "id": 13191, "nodeType": "StructuredDocumentation", "src": "3874:107:117", "text": "@dev Allows governance to transfer the governance role.\n @param _who The new governance address." }, "implemented": true, "kind": "function", "modifiers": [], "name": "_setGovernance", "nameLocation": "3995:14:117", "parameters": { "id": 13194, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 13193, "mutability": "mutable", "name": "_who", "nameLocation": "4018:4:117", "nodeType": "VariableDeclaration", "scope": 13216, "src": "4010:12:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 13192, "name": "address", "nodeType": "ElementaryTypeName", "src": "4010:7:117", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "4009:14:117" }, "returnParameters": { "id": 13195, "nodeType": "ParameterList", "parameters": [], "src": "4033:0:117" }, "scope": 13335, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "id": 13247, "nodeType": "FunctionDefinition", "src": "4483:344:117", "nodes": [], "body": { "id": 13246, "nodeType": "Block", "src": "4540:287:117", "nodes": [], "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 13227, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 13224, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "4603:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13225, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4607:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "4603:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13226, "name": "_governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18357, "src": "4617:11:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "4603:25:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13234, "nodeType": "IfStatement", "src": "4599:89:117", "trueBody": { "id": 13233, "nodeType": "Block", "src": "4630:58:117", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 13228, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "4651:11:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11143_$", "typeString": "type(contract IHyperdrive)" } }, "id": 13230, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4663:12:117", "memberName": "Unauthorized", "nodeType": "MemberAccess", "referencedDeclaration": 11091, "src": "4651:24:117", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 13231, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4651:26:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13232, "nodeType": "RevertStatement", "src": "4644:33:117" }] } }, { "expression": { "id": 13239, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 13235, "name": "_pausers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18365, "src": "4753:8:117", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)" } }, "id": 13237, "indexExpression": { "id": 13236, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13219, "src": "4762:4:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4753:14:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "id": 13238, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13221, "src": "4770:7:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "4753:24:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13240, "nodeType": "ExpressionStatement", "src": "4753:24:117" }, { "eventCall": { "arguments": [{ "id": 13242, "name": "_who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13219, "src": "4806:4:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 13243, "name": "_status", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13221, "src": "4812:7:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_bool", "typeString": "bool" }], "id": 13241, "name": "PauserUpdated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11653, "src": "4792:13:117", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,bool)" } }, "id": 13244, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4792:28:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13245, "nodeType": "EmitStatement", "src": "4787:33:117" }] }, "documentation": { "id": 13217, "nodeType": "StructuredDocumentation", "src": "4320:158:117", "text": "@dev Allows governance to change the pauser status of an address.\n @param _who The address to change.\n @param _status The new pauser status." }, "implemented": true, "kind": "function", "modifiers": [], "name": "_setPauser", "nameLocation": "4492:10:117", "parameters": { "id": 13222, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 13219, "mutability": "mutable", "name": "_who", "nameLocation": "4511:4:117", "nodeType": "VariableDeclaration", "scope": 13247, "src": "4503:12:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 13218, "name": "address", "nodeType": "ElementaryTypeName", "src": "4503:7:117", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 13221, "mutability": "mutable", "name": "_status", "nameLocation": "4522:7:117", "nodeType": "VariableDeclaration", "scope": 13247, "src": "4517:12:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 13220, "name": "bool", "nodeType": "ElementaryTypeName", "src": "4517:4:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "4502:28:117" }, "returnParameters": { "id": 13223, "nodeType": "ParameterList", "parameters": [], "src": "4540:0:117" }, "scope": 13335, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }, { "id": 13334, "nodeType": "FunctionDefinition", "src": "5227:1006:117", "nodes": [], "body": { "id": 13333, "nodeType": "Block", "src": "5281:952:117", "nodes": [], "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 13270, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 13265, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 13260, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "5373:21:117", "subExpression": { "baseExpression": { "id": 13256, "name": "_pausers", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18365, "src": "5374:8:117", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)" } }, "id": 13259, "indexExpression": { "expression": { "id": 13257, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5383:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13258, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5387:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "5383:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "5374:20:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 13264, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 13261, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5410:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13262, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5414:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "5410:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13263, "name": "_sweepCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18354, "src": "5424:15:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "5410:29:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "5373:66:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 13269, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 13266, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5455:3:117", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 13267, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5459:6:117", "memberName": "sender", "nodeType": "MemberAccess", "src": "5455:10:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13268, "name": "_governance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18357, "src": "5469:11:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "5455:25:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "5373:107:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13277, "nodeType": "IfStatement", "src": "5356:193:117", "trueBody": { "id": 13276, "nodeType": "Block", "src": "5491:58:117", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 13271, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "5512:11:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11143_$", "typeString": "type(contract IHyperdrive)" } }, "id": 13273, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5524:12:117", "memberName": "Unauthorized", "nodeType": "MemberAccess", "referencedDeclaration": 11091, "src": "5512:24:117", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 13274, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5512:26:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13275, "nodeType": "RevertStatement", "src": "5505:33:117" }] } }, { "assignments": [13279], "declarations": [{ "constant": false, "id": 13279, "mutability": "mutable", "name": "baseBalance", "nameLocation": "5663:11:117", "nodeType": "VariableDeclaration", "scope": 13333, "src": "5655:19:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 13278, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5655:7:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 13282, "initialValue": { "arguments": [], "expression": { "argumentTypes": [], "id": 13280, "name": "_totalBase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13620, "src": "5677:10:117", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)" } }, "id": 13281, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5677:12:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "5655:34:117" }, { "assignments": [13284], "declarations": [{ "constant": false, "id": 13284, "mutability": "mutable", "name": "shareBalance", "nameLocation": "5707:12:117", "nodeType": "VariableDeclaration", "scope": 13333, "src": "5699:20:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 13283, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5699:7:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 13287, "initialValue": { "arguments": [], "expression": { "argumentTypes": [], "id": 13285, "name": "_totalShares", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13626, "src": "5722:12:117", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)" } }, "id": 13286, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5722:14:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "5699:37:117" }, { "assignments": [13289], "declarations": [{ "constant": false, "id": 13289, "mutability": "mutable", "name": "balance", "nameLocation": "5849:7:117", "nodeType": "VariableDeclaration", "scope": 13333, "src": "5841:15:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 13288, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5841:7:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 13297, "initialValue": { "arguments": [{ "arguments": [{ "id": 13294, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5885:4:117", "typeDescriptions": { "typeIdentifier": "t_contract$_HyperdriveAdmin_$13335", "typeString": "contract HyperdriveAdmin" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_HyperdriveAdmin_$13335", "typeString": "contract HyperdriveAdmin" }], "id": 13293, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5877:7:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 13292, "name": "address", "nodeType": "ElementaryTypeName", "src": "5877:7:117", "typeDescriptions": {} } }, "id": 13295, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5877:13:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "expression": { "id": 13290, "name": "_target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13251, "src": "5859:7:117", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10417", "typeString": "contract IERC20" } }, "id": 13291, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5867:9:117", "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 10416, "src": "5859:17:117", "typeDescriptions": { "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)" } }, "id": 13296, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5859:32:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "5841:50:117" }, { "expression": { "arguments": [{ "id": 13305, "name": "_sweepCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18354, "src": "5938:15:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 13306, "name": "balance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13289, "src": "5955:7:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "arguments": [{ "arguments": [{ "id": 13301, "name": "_target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13251, "src": "5915:7:117", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10417", "typeString": "contract IERC20" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_IERC20_$10417", "typeString": "contract IERC20" }], "id": 13300, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5907:7:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 13299, "name": "address", "nodeType": "ElementaryTypeName", "src": "5907:7:117", "typeDescriptions": {} } }, "id": 13302, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5907:16:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 13298, "name": "ERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 71391, "src": "5901:5:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_ERC20_$71391_$", "typeString": "type(contract ERC20)" } }, "id": 13303, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5901:23:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_contract$_ERC20_$71391", "typeString": "contract ERC20" } }, "id": 13304, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5925:12:117", "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 71581, "src": "5901:36:117", "typeDescriptions": { "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$71469_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$71469_$", "typeString": "function (contract IERC20,address,uint256)" } }, "id": 13307, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5901:62:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13308, "nodeType": "ExpressionStatement", "src": "5901:62:117" }, { "condition": { "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" }, "id": 13317, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 13312, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [], "expression": { "argumentTypes": [], "id": 13309, "name": "_totalBase", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13620, "src": "6051:10:117", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)" } }, "id": 13310, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6051:12:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13311, "name": "baseBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13279, "src": "6067:11:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "6051:27:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "nodeType": "BinaryOperation", "operator": "||", "rightExpression": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 13316, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "arguments": [], "expression": { "argumentTypes": [], "id": 13313, "name": "_totalShares", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13626, "src": "6082:12:117", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$", "typeString": "function () view returns (uint256)" } }, "id": 13314, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6082:14:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 13315, "name": "shareBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13284, "src": "6100:12:117", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "6082:30:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "src": "6051:61:117", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 13324, "nodeType": "IfStatement", "src": "6047:124:117", "trueBody": { "id": 13323, "nodeType": "Block", "src": "6114:57:117", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 13318, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "6135:11:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$11143_$", "typeString": "type(contract IHyperdrive)" } }, "id": 13320, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6147:11:117", "memberName": "SweepFailed", "nodeType": "MemberAccess", "referencedDeclaration": 11082, "src": "6135:23:117", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 13321, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6135:25:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13322, "nodeType": "RevertStatement", "src": "6128:32:117" }] } }, { "eventCall": { "arguments": [{ "id": 13326, "name": "_sweepCollector", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 18354, "src": "6192:15:117", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "arguments": [{ "id": 13329, "name": "_target", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 13251, "src": "6217:7:117", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10417", "typeString": "contract IERC20" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_IERC20_$10417", "typeString": "contract IERC20" }], "id": 13328, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "6209:7:117", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 13327, "name": "address", "nodeType": "ElementaryTypeName", "src": "6209:7:117", "typeDescriptions": {} } }, "id": 13330, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6209:16:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }], "id": 13325, "name": "Sweep", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11665, "src": "6186:5:117", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)" } }, "id": 13331, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6186:40:117", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 13332, "nodeType": "EmitStatement", "src": "6181:45:117" }] }, "documentation": { "id": 13248, "nodeType": "StructuredDocumentation", "src": "4833:389:117", "text": "@dev Transfers the contract's balance of a target token to the sweep\n      collector address.\n @dev WARN: It is unlikely but possible that there is a selector overlap\n      with 'transfer'. Any integrating contracts should be checked\n      for that, as it may result in an unexpected call from this address.\n @param _target The target token to sweep." }, "implemented": true, "kind": "function", "modifiers": [{ "id": 13254, "kind": "modifierInvocation", "modifierName": { "id": 13253, "name": "nonReentrant", "nameLocations": ["5268:12:117"], "nodeType": "IdentifierPath", "referencedDeclaration": 72137, "src": "5268:12:117" }, "nodeType": "ModifierInvocation", "src": "5268:12:117" }], "name": "_sweep", "nameLocation": "5236:6:117", "parameters": { "id": 13252, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 13251, "mutability": "mutable", "name": "_target", "nameLocation": "5250:7:117", "nodeType": "VariableDeclaration", "scope": 13334, "src": "5243:14:117", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10417", "typeString": "contract IERC20" }, "typeName": { "id": 13250, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 13249, "name": "IERC20", "nameLocations": ["5243:6:117"], "nodeType": "IdentifierPath", "referencedDeclaration": 10417, "src": "5243:6:117" }, "referencedDeclaration": 10417, "src": "5243:6:117", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20_$10417", "typeString": "contract IERC20" } }, "visibility": "internal" }], "src": "5242:16:117" }, "returnParameters": { "id": 13255, "nodeType": "ParameterList", "parameters": [], "src": "5281:0:117" }, "scope": 13335, "stateMutability": "nonpayable", "virtual": false, "visibility": "internal" }], "abstract": true, "baseContracts": [{ "baseName": { "id": 13024, "name": "IHyperdriveEvents", "nameLocations": ["898:17:117"], "nodeType": "IdentifierPath", "referencedDeclaration": 11666, "src": "898:17:117" }, "id": 13025, "nodeType": "InheritanceSpecifier", "src": "898:17:117" }, { "baseName": { "id": 13026, "name": "HyperdriveBase", "nameLocations": ["917:14:117"], "nodeType": "IdentifierPath", "referencedDeclaration": 14511, "src": "917:14:117" }, "id": 13027, "nodeType": "InheritanceSpecifier", "src": "917:14:117" }], "canonicalName": "HyperdriveAdmin", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 13023, "nodeType": "StructuredDocumentation", "src": "439:422:117", "text": "@author DELV\n @title HyperdriveAdmin\n @notice The Hyperdrive admin contract. This contract provides functions that\n         governance can use to pause the pool and update permissions.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance." }, "fullyImplemented": false, "linearizedBaseContracts": [13335, 14511, 18497, 72173, 11666, 12232], "name": "HyperdriveAdmin", "nameLocation": "879:15:117", "scope": 13336, "usedErrors": [72118], "usedEvents": [11486, 11501, 11520, 11535, 11552, 11571, 11590, 11611, 11624, 11631, 11636, 11641, 11646, 11653, 11658, 11665, 12213, 12222, 12231] }], "license": "Apache-2.0" }, "id": 117 };
