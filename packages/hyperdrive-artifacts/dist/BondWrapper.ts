export const BondWrapper = 
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IHyperdrive",
          "name": "_hyperdrive",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_mintPercent",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "__name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "__symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BondMatured",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BondNotMatured",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InputLengthMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientPrice",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "InvalidRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTimestamp",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintPercentTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutputLimit",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maturityTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "andBurn",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minOutput",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hyperdrive",
      "outputs": [
        {
          "internalType": "contract IHyperdrive",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maturityTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maturityTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "maturityTimes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "extraDatas",
          "type": "bytes[]"
        }
      ],
      "name": "sweepAndRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b5060405162001c7b38038062001c7b833981016040819052620000359162000230565b8181601260006200004784826200035e565b5060016200005683826200035e565b5060ff81166080524660a0526200006c620000b6565b60c0525050612710841090506200009657604051632506d5d760e11b815260040160405180910390fd5b50506001600160a01b0392831660e05291166101005261012052620004a8565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ea91906200042a565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b03811681146200016857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019357600080fd5b81516001600160401b0380821115620001b057620001b06200016b565b604051601f8301601f19908116603f01168101908282118183101715620001db57620001db6200016b565b81604052838152602092508683858801011115620001f857600080fd5b600091505b838210156200021c5785820183015181830184015290820190620001fd565b600093810190920192909252949350505050565b600080600080600060a086880312156200024957600080fd5b8551620002568162000152565b6020870151909550620002698162000152565b6040870151606088015191955093506001600160401b03808211156200028e57600080fd5b6200029c89838a0162000181565b93506080880151915080821115620002b357600080fd5b50620002c28882890162000181565b9150509295509295909350565b600181811c90821680620002e457607f821691505b6020821081036200030557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200035957600081815260208120601f850160051c81016020861015620003345750805b601f850160051c820191505b81811015620003555782815560010162000340565b5050505b505050565b81516001600160401b038111156200037a576200037a6200016b565b62000392816200038b8454620002cf565b846200030b565b602080601f831160018114620003ca5760008415620003b15750858301515b600019600386901b1c1916600185901b17855562000355565b600085815260208120601f198616915b82811015620003fb57888601518255948401946001909101908401620003da565b50858210156200041a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008083546200043a81620002cf565b600182811680156200045557600181146200046b576200049c565b60ff19841687528215158302870194506200049c565b8760005260208060002060005b85811015620004935781548a82015290840190820162000478565b50505082870194505b50929695505050505050565b60805160a05160c05160e051610100516101205161174b620005306000396000818161027d015281816105a50152610d7d015260008181610374015281816106620152610c16015260008181610141015281816104da01528181610894015281816109370152610d12015260006107ae01526000610779015260006101fc015261174b6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806380910858116100b8578063d6d681771161007c578063d6d68177146102e0578063db006a751461030b578063dd62ed3e1461031e578063e37c182c14610349578063e7d3fe6b1461035c578063fc0c546a1461036f57600080fd5b8063809108581461027857806395d89b411461029f578063a9059cbb146102a7578063d2ae9a0d146102ba578063d505accf146102cd57600080fd5b806323b872dd116100ff57806323b872dd146101e4578063313ce567146101f75780633644e5151461023057806370a08231146102385780637ecebe001461025857600080fd5b806304eb01481461013c57806306fdde0314610180578063095ea7b3146101955780630f28159e146101b857806318160ddd146101cd575b600080fd5b6101637f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610188610396565b60405161017791906110ab565b6101a86101a33660046110da565b610424565b6040519015158152602001610177565b6101cb6101c63660046111bb565b610491565b005b6101d660025481565b604051908152602001610177565b6101a86101f236600461123c565b610695565b61021e7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610177565b6101d6610775565b6101d6610246366004611278565b60036020526000908152604090205481565b6101d6610266366004611278565b60056020526000908152604090205481565b6101d67f000000000000000000000000000000000000000000000000000000000000000081565b6101886107d0565b6101a86102b53660046110da565b6107dd565b6101cb6102c8366004611293565b61083c565b6101cb6102db3660046112da565b6109bb565b6101d66102ee3660046110da565b600660209081526000928352604080842090915290825290205481565b6101cb61031936600461134d565b610bff565b6101d661032c366004611366565b600460209081526000928352604080842090915290825290205481565b6101cb610357366004611438565b610c40565b6101cb61036a3660046114d9565b610cb9565b6101637f000000000000000000000000000000000000000000000000000000000000000081565b600080546103a39061150e565b80601f01602080910402602001604051908101604052809291908181526020018280546103cf9061150e565b801561041c5780601f106103f15761010080835404028352916020019161041c565b820191906000526020600020905b8154815290600101906020018083116103ff57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061047f9086815260200190565b60405180910390a35060015b92915050565b600061049e600188610dfc565b905060004288111561055e576040805160608101825230815260016020820152808201859052905163ded0623160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ded0623191610514918c918c91600091600401611583565b6020604051808303816000875af1158015610533573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055791906115b2565b905061056b565b610568888461083c565b50855b336000908152600660209081526040808320858452909152812080548992906105959084906115e1565b90915550600090506127106105ca7f00000000000000000000000000000000000000000000000000000000000000008a6115f4565b6105d4919061160b565b9050808210156105f75760405163d548170360e01b815260040160405180910390fd5b600061060382846115e1565b90508780156106125750600082115b1561062e576106213383610e31565b61062b828261162d565b90505b8581101561064f5760405163c972651760e01b815260040160405180910390fd5b8015610689576106896001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168883610e9b565b50505050505050505050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146106f1576106cc83826115e1565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906107199084906115e1565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206116f6833981519152906107629087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146107ab576107a6610f13565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b600180546103a39061150e565b60006001600160a01b03831615806107fd57506001600160a01b03831630145b1561082b57604051630bc2c5df60e11b81526001600160a01b03841660048201526024015b60405180910390fd5b6108358383610fad565b9392505050565b4282111561085d5760405163915eceb160e01b815260040160405180910390fd5b600061086a600184610dfc565b604051631b2b776160e11b8152600481018290523060248201529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633656eec290604401602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff91906115b2565b905080156109b5576040805160608101825230815260016020820152808201859052905163ded0623160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163ded062319161097091889186918291600401611583565b6020604051808303816000875af115801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b391906115b2565b505b50505050565b42841015610a0b5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f455850495245440000000000000000006044820152606401610822565b60006001610a17610775565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610b23573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610b595750876001600160a01b0316816001600160a01b0316145b610b965760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610822565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b610c093382610e31565b610c3d6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610e9b565b50565b80518314610c615760405163aaad13f760e01b815260040160405180910390fd5b60005b83811015610caf57610ca7858583818110610c8157610c81611640565b90506020020135838381518110610c9a57610c9a611640565b602002602001015161083c565b600101610c64565b506109b582610bff565b428311610cd957604051630fe391af60e21b815260040160405180910390fd5b6000610ce6600185610dfc565b604051630e07895b60e11b815260048101829052336024820152306044820152606481018590529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c0f12b690608401600060405180830381600087803b158015610d5e57600080fd5b505af1158015610d72573d6000803e3d6000fd5b5050505060006127107f000000000000000000000000000000000000000000000000000000000000000085610da791906115f4565b610db1919061160b565b9050610dbd8382611013565b6001600160a01b038316600090815260066020908152604080832085845290915281208054869290610df090849061162d565b90915550505050505050565b60006001600160f81b03821115610e265760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b6001600160a01b03821660009081526003602052604081208054839290610e599084906115e1565b90915550506002805482900390556040518181526000906001600160a01b038416906000805160206116f6833981519152906020015b60405180910390a35050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806109b55760405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606401610822565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610f459190611656565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b33600090815260036020526040812080548391908390610fce9084906115e1565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206116f68339815191529061047f9086815260200190565b8060026000828254611025919061162d565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481526000805160206116f68339815191529101610e8f565b6000815180845260005b8181101561108b5760208185018101518683018201520161106f565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006108356020830184611065565b80356001600160a01b03811681146110d557600080fd5b919050565b600080604083850312156110ed57600080fd5b6110f6836110be565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561114357611143611104565b604052919050565b600082601f83011261115c57600080fd5b813567ffffffffffffffff81111561117657611176611104565b611189601f8201601f191660200161111a565b81815284602083860101111561119e57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060c087890312156111d457600080fd5b8635955060208701359450604087013580151581146111f257600080fd5b9350611200606088016110be565b92506080870135915060a087013567ffffffffffffffff81111561122357600080fd5b61122f89828a0161114b565b9150509295509295509295565b60008060006060848603121561125157600080fd5b61125a846110be565b9250611268602085016110be565b9150604084013590509250925092565b60006020828403121561128a57600080fd5b610835826110be565b600080604083850312156112a657600080fd5b82359150602083013567ffffffffffffffff8111156112c457600080fd5b6112d08582860161114b565b9150509250929050565b600080600080600080600060e0888a0312156112f557600080fd5b6112fe886110be565b965061130c602089016110be565b95506040880135945060608801359350608088013560ff8116811461133057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60006020828403121561135f57600080fd5b5035919050565b6000806040838503121561137957600080fd5b611382836110be565b9150611390602084016110be565b90509250929050565b600082601f8301126113aa57600080fd5b8135602067ffffffffffffffff808311156113c7576113c7611104565b8260051b6113d683820161111a565b93845285810183019383810190888611156113f057600080fd5b84880192505b8583101561142c5782358481111561140e5760008081fd5b61141c8a87838c010161114b565b83525091840191908401906113f6565b98975050505050505050565b6000806000806060858703121561144e57600080fd5b843567ffffffffffffffff8082111561146657600080fd5b818701915087601f83011261147a57600080fd5b81358181111561148957600080fd5b8860208260051b850101111561149e57600080fd5b602092830196509450908601359250604086013590808211156114c057600080fd5b506114cd87828801611399565b91505092959194509250565b6000806000606084860312156114ee57600080fd5b8335925060208401359150611505604085016110be565b90509250925092565b600181811c9082168061152257607f821691505b60208210810361154257634e487b7160e01b600052602260045260246000fd5b50919050565b60018060a01b038151168252602081015115156020830152600060408201516060604085015261157b6060850182611065565b949350505050565b8481528360208201528260408201526080606082015260006115a86080830184611548565b9695505050505050565b6000602082840312156115c457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561048b5761048b6115cb565b808202811582820484141761048b5761048b6115cb565b60008261162857634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561048b5761048b6115cb565b634e487b7160e01b600052603260045260246000fd5b600080835481600182811c91508083168061167257607f831692505b6020808410820361169157634e487b7160e01b86526022600452602486fd5b8180156116a557600181146116ba576116e7565b60ff19861689528415158502890196506116e7565b60008a81526020902060005b868110156116df5781548b8201529085019083016116c6565b505084890196505b50949897505050505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220fedeca0085291b9b5fe6c255012fb6275eb949cf95a443abb1107373191fbe5464736f6c63430008130033",
    "sourceMap": "670:8524:56:-:0;;;1612:427;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1784:6;1792:8;1802:2;2094:4:95;:12;1784:6:56;2094:4:95;:12;:::i;:::-;-1:-1:-1;2116:6:95;:16;2125:7;2116:6;:16;:::i;:::-;-1:-1:-1;2142:20:95;;;;;2192:13;2173:32;;2242:24;:22;:24::i;:::-;2215:51;;-1:-1:-1;;1836:6:56::1;1820:22:::0;::::1;::::0;-1:-1:-1;1816:92:56::1;;1865:32;;-1:-1:-1::0;;;1865:32:56::1;;;;;;;;;;;1816:92;-1:-1:-1::0;;;;;;;1948:24:56;;::::1;;::::0;1982:14;::::1;;::::0;2006:26:::1;::::0;670:8524;;5510:446:95;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;5790:25:161;;;;5831:18;;5824:34;;;;5833:14:95;5874:18:161;;;5867:34;5869:13:95;5917:18:161;;;5910:34;5912:4:95;5960:19:161;;;5953:61;5762:19;;5640:295:95;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;14:144:161:-;-1:-1:-1;;;;;102:31:161;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:127::-;224:10;219:3;215:20;212:1;205:31;255:4;252:1;245:15;279:4;276:1;269:15;295:840;349:5;402:3;395:4;387:6;383:17;379:27;369:55;;420:1;417;410:12;369:55;443:13;;-1:-1:-1;;;;;505:10:161;;;502:36;;;518:18;;:::i;:::-;593:2;587:9;561:2;647:13;;-1:-1:-1;;643:22:161;;;667:2;639:31;635:40;623:53;;;691:18;;;711:22;;;688:46;685:72;;;737:18;;:::i;:::-;777:10;773:2;766:22;812:2;804:6;797:18;834:4;824:14;;879:3;874:2;869;861:6;857:15;853:24;850:33;847:53;;;896:1;893;886:12;847:53;918:1;909:10;;928:133;942:2;939:1;936:9;928:133;;;1030:14;;;1026:23;;1020:30;999:14;;;995:23;;988:63;953:10;;;;928:133;;;1103:1;1081:15;;;1077:24;;;1070:35;;;;1085:6;295:840;-1:-1:-1;;;;295:840:161:o;1140:948::-;1301:6;1309;1317;1325;1333;1386:3;1374:9;1365:7;1361:23;1357:33;1354:53;;;1403:1;1400;1393:12;1354:53;1435:9;1429:16;1454:44;1492:5;1454:44;:::i;:::-;1567:2;1552:18;;1546:25;1517:5;;-1:-1:-1;1580:46:161;1546:25;1580:46;:::i;:::-;1692:2;1677:18;;1671:25;1740:2;1725:18;;1719:25;1645:7;;-1:-1:-1;1671:25:161;-1:-1:-1;;;;;;1793:14:161;;;1790:34;;;1820:1;1817;1810:12;1790:34;1843:61;1896:7;1887:6;1876:9;1872:22;1843:61;:::i;:::-;1833:71;;1950:3;1939:9;1935:19;1929:26;1913:42;;1980:2;1970:8;1967:16;1964:36;;;1996:1;1993;1986:12;1964:36;;2019:63;2074:7;2063:8;2052:9;2048:24;2019:63;:::i;:::-;2009:73;;;1140:948;;;;;;;;:::o;2093:380::-;2172:1;2168:12;;;;2215;;;2236:61;;2290:4;2282:6;2278:17;2268:27;;2236:61;2343:2;2335:6;2332:14;2312:18;2309:38;2306:161;;2389:10;2384:3;2380:20;2377:1;2370:31;2424:4;2421:1;2414:15;2452:4;2449:1;2442:15;2306:161;;2093:380;;;:::o;2604:545::-;2706:2;2701:3;2698:11;2695:448;;;2742:1;2767:5;2763:2;2756:17;2812:4;2808:2;2798:19;2882:2;2870:10;2866:19;2863:1;2859:27;2853:4;2849:38;2918:4;2906:10;2903:20;2900:47;;;-1:-1:-1;2941:4:161;2900:47;2996:2;2991:3;2987:12;2984:1;2980:20;2974:4;2970:31;2960:41;;3051:82;3069:2;3062:5;3059:13;3051:82;;;3114:17;;;3095:1;3084:13;3051:82;;;3055:3;;;2695:448;2604:545;;;:::o;3325:1352::-;3445:10;;-1:-1:-1;;;;;3467:30:161;;3464:56;;;3500:18;;:::i;:::-;3529:97;3619:6;3579:38;3611:4;3605:11;3579:38;:::i;:::-;3573:4;3529:97;:::i;:::-;3681:4;;3745:2;3734:14;;3762:1;3757:663;;;;4464:1;4481:6;4478:89;;;-1:-1:-1;4533:19:161;;;4527:26;4478:89;-1:-1:-1;;3282:1:161;3278:11;;;3274:24;3270:29;3260:40;3306:1;3302:11;;;3257:57;4580:81;;3727:944;;3757:663;2551:1;2544:14;;;2588:4;2575:18;;-1:-1:-1;;3793:20:161;;;3911:236;3925:7;3922:1;3919:14;3911:236;;;4014:19;;;4008:26;3993:42;;4106:27;;;;4074:1;4062:14;;;;3941:19;;3911:236;;;3915:3;4175:6;4166:7;4163:19;4160:201;;;4236:19;;;4230:26;-1:-1:-1;;4319:1:161;4315:14;;;4331:3;4311:24;4307:37;4303:42;4288:58;4273:74;;4160:201;-1:-1:-1;;;;;4407:1:161;4391:14;;;4387:22;4374:36;;-1:-1:-1;3325:1352:161:o;4682:844::-;4812:3;4841:1;4874:6;4868:13;4904:36;4930:9;4904:36;:::i;:::-;4959:1;4976:18;;;5003:133;;;;5150:1;5145:356;;;;4969:532;;5003:133;-1:-1:-1;;5036:24:161;;5024:37;;5109:14;;5102:22;5090:35;;5081:45;;;-1:-1:-1;5003:133:161;;5145:356;5176:6;5173:1;5166:17;5206:4;5251:2;5248:1;5238:16;5276:1;5290:165;5304:6;5301:1;5298:13;5290:165;;;5382:14;;5369:11;;;5362:35;5425:16;;;;5319:10;;5290:165;;;5294:3;;;5484:6;5479:3;5475:16;5468:23;;4969:532;-1:-1:-1;5517:3:161;;4682:844;-1:-1:-1;;;;;;4682:844:161:o;5531:489::-;670:8524:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "670:8524:56:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;788:39;;;;;;;;-1:-1:-1;;;;;198:32:161;;;180:51;;168:2;153:18;788:39:56;;;;;;;;1031:18:95;;;:::i;:::-;;;;;;;:::i;2461:211::-;;;;;;:::i;:::-;;:::i;:::-;;;1497:14:161;;1490:22;1472:41;;1460:2;1445:18;2461:211:95;1332:187:161;4489:2115:56;;;;;;:::i;:::-;;:::i;:::-;;1304:26:95;;;;;;;;;3384:25:161;;;3372:2;3357:18;1304:26:95;3238:177:161;3057:592:95;;;;;;:::i;:::-;;:::i;1083:31::-;;;;;;;;3925:4:161;3913:17;;;3895:36;;3883:2;3868:18;1083:31:95;3753:184:161;5327:177:95;;;:::i;1337:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1751:41;;;;;;:::i;:::-;;;;;;;;;;;;;;1032:36:56;;;;;1056:20:95;;;:::i;2258:379:56:-;;;;;;:::i;:::-;;:::i;6893:961::-;;;;;;:::i;:::-;;:::i;3838:1483:95:-;;;;;;:::i;:::-;;:::i;1185:91:56:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8034:277;;;;;;:::i;:::-;;:::i;1388:64:95:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;8670:522:56;;;;;;:::i;:::-;;:::i;2933:749::-;;;;;;:::i;:::-;;:::i;886:29::-;;;;;1031:18:95;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2561:10;2535:4;2551:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2551:30:95;;;;;;;;;;:39;;;2606:37;2535:4;;2551:30;;2606:37;;;;2584:6;3384:25:161;;3372:2;3357:18;;3238:177;2606:37:95;;;;;;;;-1:-1:-1;2661:4:95;2461:211;;;;;:::o;4489:2115:56:-;4725:15;4743:97;4778:26;4818:12;4743:21;:97::i;:::-;4725:115;;4851:22;4902:15;4887:12;:30;4883:688;;;5133:163;;;;;;;;5196:4;5133:163;;5231:4;5133:163;;;;;;;;;;5022:288;;-1:-1:-1;;;5022:288:56;;-1:-1:-1;;;;;5022:10:56;:20;;;;:288;;5060:12;;5090:6;;5114:1;;5022:288;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5005:305;;4883:688;;;5373:30;5379:12;5393:9;5373:5;:30::i;:::-;-1:-1:-1;5554:6:56;4883:688;5627:10;5618:20;;;;:8;:20;;;;;;;;:29;;;;;;;;:39;;5651:6;;5618:20;:39;;5651:6;;5618:39;:::i;:::-;;;;-1:-1:-1;5770:23:56;;-1:-1:-1;5821:6:56;5797:20;5806:11;5797:6;:20;:::i;:::-;5796:31;;;;:::i;:::-;5770:57;;5858:15;5841:14;:32;5837:101;;;5896:31;;-1:-1:-1;;;5896:31:56;;;;;;;;;;;5837:101;6029:17;6049:32;6066:15;6049:14;:32;:::i;:::-;6029:52;;6174:7;:30;;;;;6203:1;6185:15;:19;6174:30;6170:137;;;6220:34;6226:10;6238:15;6220:5;:34::i;:::-;6268:28;6281:15;6268:28;;:::i;:::-;;;6170:137;6391:9;6379;:21;6375:59;;;6409:25;;-1:-1:-1;;;6409:25:56;;;;;;;;;;;6375:59;6500:13;;6496:102;;6529:58;-1:-1:-1;;;;;6543:5:56;6529:34;6564:11;6577:9;6529:34;:58::i;:::-;4683:1921;;;;4489:2115;;;;;;:::o;3057:592:95:-;-1:-1:-1;;;;;3209:15:95;;3175:4;3209:15;;;:9;:15;;;;;;;;3225:10;3209:27;;;;;;;;-1:-1:-1;;3287:28:95;;3283:80;;3347:16;3357:6;3347:7;:16;:::i;:::-;-1:-1:-1;;;;;3317:15:95;;;;;;:9;:15;;;;;;;;3333:10;3317:27;;;;;;;:46;3283:80;-1:-1:-1;;;;;3374:15:95;;;;;;:9;:15;;;;;:25;;3393:6;;3374:15;:25;;3393:6;;3374:25;:::i;:::-;;;;-1:-1:-1;;;;;;;3545:13:95;;;;;;;:9;:13;;;;;;;:23;;;;;;3594:26;3545:13;;3594:26;;;-1:-1:-1;;;;;;;;;;;3594:26:95;;;3562:6;3384:25:161;;3372:2;3357:18;;3238:177;3594:26:95;;;;;;;;-1:-1:-1;3638:4:95;;3057:592;-1:-1:-1;;;;3057:592:95:o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5403:94;;5327:177;:::o;5410:87::-;-1:-1:-1;5446:24:95;;5327:177::o;1056:20::-;;;;;;;:::i;2258:379:56:-;2351:4;-1:-1:-1;;;;;2448:16:56;;;;:39;;-1:-1:-1;;;;;;2468:19:56;;2482:4;2468:19;2448:39;2444:109;;;2510:32;;-1:-1:-1;;;2510:32:56;;-1:-1:-1;;;;;198:32:161;;2510::56;;;180:51:161;153:18;;2510:32:56;;;;;;;;2444:109;2604:26;2619:2;2623:6;2604:14;:26::i;:::-;2597:33;2258:379;-1:-1:-1;;;2258:379:56:o;6893:961::-;7044:15;7029:12;:30;7025:96;;;7082:28;;-1:-1:-1;;;7082:28:56;;;;;;;;;;;7025:96;7177:15;7195:97;7230:26;7270:12;7195:21;:97::i;:::-;7320:44;;-1:-1:-1;;;7320:44:56;;;;;10865:25:161;;;7358:4:56;10906:18:161;;;10899:60;7177:115:56;;-1:-1:-1;7302:15:56;;-1:-1:-1;;;;;7320:10:56;:20;;;;10838:18:161;;7320:44:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7302:62;-1:-1:-1;7431:12:56;;7427:421;;7660:163;;;;;;;;7723:4;7660:163;;7758:4;7660:163;;;;;;;;;;7542:295;;-1:-1:-1;;;7542:295:56;;-1:-1:-1;;;;;7542:10:56;:20;;;;:295;;7580:12;;7610:7;;;;7542:295;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7427:421;6961:893;;6893:961;;:::o;3838:1483:95:-;4057:15;4045:8;:27;;4037:63;;;;-1:-1:-1;;;4037:63:95;;11650:2:161;4037:63:95;;;11632:21:161;11689:2;11669:18;;;11662:30;11728:25;11708:18;;;11701:53;11771:18;;4037:63:95;11448:347:161;4037:63:95;4265:24;4292:805;4428:18;:16;:18::i;:::-;-1:-1:-1;;;;;4873:13:95;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4511:449;;4555:165;4511:449;;;12087:25:161;12166:18;;;12159:43;;;;12238:15;;;12218:18;;;12211:43;12270:18;;;12263:34;;;12313:19;;;12306:35;;;;12357:19;;;;12350:35;;;4511:449:95;;;;;;;;;;12059:19:161;;;4511:449:95;;;4472:514;;;;;;;;-1:-1:-1;;;4350:658:95;;;12654:27:161;12697:11;;;12690:27;;;;12733:12;;;12726:28;;;;12770:12;;4350:658:95;;;-1:-1:-1;;4350:658:95;;;;;;;;;4319:707;;4350:658;4319:707;;;;4292:805;;;;;;;;;13020:25:161;13093:4;13081:17;;13061:18;;;13054:45;13115:18;;;13108:34;;;13158:18;;;13151:34;;;12992:19;;4292:805:95;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4292:805:95;;-1:-1:-1;;4292:805:95;;;-1:-1:-1;;;;;;;5120:30:95;;;;;;:59;;;5174:5;-1:-1:-1;;;;;5154:25:95;:16;-1:-1:-1;;;;;5154:25:95;;5120:59;5112:86;;;;-1:-1:-1;;;5112:86:95;;13398:2:161;5112:86:95;;;13380:21:161;13437:2;13417:18;;;13410:30;-1:-1:-1;;;13456:18:161;;;13449:44;13510:18;;5112:86:95;13196:338:161;5112:86:95;-1:-1:-1;;;;;5213:27:95;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5283:31;3384:25:161;;;5213:36:95;;5283:31;;;;;3357:18:161;5283:31:95;;;;;;;3838:1483;;;;;;;:::o;8034:277:56:-;8162:25;8168:10;8180:6;8162:5;:25::i;:::-;8250:54;-1:-1:-1;;;;;8264:5:56;8250:34;8285:10;8297:6;8250:34;:54::i;:::-;8034:277;:::o;8670:522::-;8848:17;;8824:41;;8820:112;;8888:33;;-1:-1:-1;;;8888:33:56;;;;;;;;;;;8820:112;8997:9;8992:170;9012:24;;;8992:170;;;9054:38;9060:13;;9074:1;9060:16;;;;;;;:::i;:::-;;;;;;;9078:10;9089:1;9078:13;;;;;;;;:::i;:::-;;;;;;;9054:5;:38::i;:::-;9134:3;;8992:170;;;;9171:14;9178:6;9171;:14::i;2933:749::-;3107:15;3091:12;:31;3087:69;;3131:25;;-1:-1:-1;;;3131:25:56;;;;;;;;;;;3087:69;3199:15;3217:97;3252:26;3292:12;3217:21;:97::i;:::-;3360:67;;-1:-1:-1;;;3360:67:56;;;;;13902:25:161;;;3393:10:56;13981:18:161;;;13974:43;3413:4:56;14033:18:161;;;14026:43;14085:18;;;14078:34;;;3199:115:56;;-1:-1:-1;3360:10:56;-1:-1:-1;;;;;3360:23:56;;;;13874:19:161;;3360:67:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3488:18;3534:6;3519:11;3510:6;:20;;;;:::i;:::-;3509:31;;;;:::i;:::-;3488:52;;3550:30;3556:11;3569:10;3550:5;:30::i;:::-;-1:-1:-1;;;;;3635:21:56;;;;;;:8;:21;;;;;;;;:30;;;;;;;;:40;;3669:6;;3635:21;:40;;3669:6;;3635:40;:::i;:::-;;;;-1:-1:-1;;;;;;;2933:749:56:o;1198:469:50:-;1309:10;-1:-1:-1;;;;;1401:10:50;:89;1384:179;;;1522:30;;-1:-1:-1;;;1522:30:50;;;;;;;;;;;1384:179;-1:-1:-1;1624:4:50;1620:18;;;;1617:34;;1198:469::o;6481:328:95:-;-1:-1:-1;;;;;6553:15:95;;;;;;:9;:15;;;;;:25;;6572:6;;6553:15;:25;;6572:6;;6553:25;:::i;:::-;;;;-1:-1:-1;;6721:11:95;:21;;;;;;;6768:34;;3384:25:161;;;-1:-1:-1;;;;;;;6768:34:95;;;-1:-1:-1;;;;;;;;;;;6768:34:95;3372:2:161;3357:18;6768:34:95;;;;;;;;6481:328;;:::o;2950:1499:99:-;3062:12;3232:4;3226:11;-1:-1:-1;;;3355:17:99;3348:93;3488:2;3484:1;3465:17;3461:25;3454:37;3568:6;3563:2;3544:17;3540:26;3533:42;4370:2;4367:1;4363:2;4344:17;4341:1;4334:5;4327;4322:51;3891:16;3884:24;3878:2;3860:16;3857:24;3853:1;3849;3843:8;3840:15;3836:46;3833:76;3633:754;3622:765;;;4415:7;4407:35;;;;-1:-1:-1;;;4407:35:99;;14325:2:161;4407:35:99;;;14307:21:161;14364:2;14344:18;;;14337:30;-1:-1:-1;;;14383:18:161;;;14376:45;14438:18;;4407:35:99;14123:339:161;5510:446:95;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;15993:25:161;;;;16034:18;;16027:34;;;;5833:14:95;16077:18:161;;;16070:34;5869:13:95;16120:18:161;;;16113:34;5912:4:95;16163:19:161;;;16156:61;15965:19;;5640:295:95;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;2678:373::-;2774:10;2748:4;2764:21;;;:9;:21;;;;;:31;;2789:6;;2764:21;2748:4;;2764:31;;2789:6;;2764:31;:::i;:::-;;;;-1:-1:-1;;;;;;;2941:13:95;;;;;;:9;:13;;;;;;;:23;;;;;;2990:32;2999:10;;-1:-1:-1;;;;;;;;;;;2990:32:95;;;2958:6;3384:25:161;;3372:2;3357:18;;3238:177;6150:325:95;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6387:13:95;;;;;;:9;:13;;;;;;;;:23;;;;;;6436:32;3384:25:161;;;-1:-1:-1;;;;;;;;;;;6436:32:95;3357:18:161;6436:32:95;3238:177:161;242:423;284:3;322:5;316:12;349:6;344:3;337:19;374:1;384:162;398:6;395:1;392:13;384:162;;;460:4;516:13;;;512:22;;506:29;488:11;;;484:20;;477:59;413:12;384:162;;;388:3;591:1;584:4;575:6;570:3;566:16;562:27;555:38;654:4;647:2;643:7;638:2;630:6;626:15;622:29;617:3;613:39;609:50;602:57;;;242:423;;;;:::o;670:220::-;819:2;808:9;801:21;782:4;839:45;880:2;869:9;865:18;857:6;839:45;:::i;895:173::-;963:20;;-1:-1:-1;;;;;1012:31:161;;1002:42;;992:70;;1058:1;1055;1048:12;992:70;895:173;;;:::o;1073:254::-;1141:6;1149;1202:2;1190:9;1181:7;1177:23;1173:32;1170:52;;;1218:1;1215;1208:12;1170:52;1241:29;1260:9;1241:29;:::i;:::-;1231:39;1317:2;1302:18;;;;1289:32;;-1:-1:-1;;;1073:254:161:o;1524:127::-;1585:10;1580:3;1576:20;1573:1;1566:31;1616:4;1613:1;1606:15;1640:4;1637:1;1630:15;1656:275;1727:2;1721:9;1792:2;1773:13;;-1:-1:-1;;1769:27:161;1757:40;;1827:18;1812:34;;1848:22;;;1809:62;1806:88;;;1874:18;;:::i;:::-;1910:2;1903:22;1656:275;;-1:-1:-1;1656:275:161:o;1936:530::-;1978:5;2031:3;2024:4;2016:6;2012:17;2008:27;1998:55;;2049:1;2046;2039:12;1998:55;2085:6;2072:20;2111:18;2107:2;2104:26;2101:52;;;2133:18;;:::i;:::-;2177:55;2220:2;2201:13;;-1:-1:-1;;2197:27:161;2226:4;2193:38;2177:55;:::i;:::-;2257:2;2248:7;2241:19;2303:3;2296:4;2291:2;2283:6;2279:15;2275:26;2272:35;2269:55;;;2320:1;2317;2310:12;2269:55;2385:2;2378:4;2370:6;2366:17;2359:4;2350:7;2346:18;2333:55;2433:1;2408:16;;;2426:4;2404:27;2397:38;;;;2412:7;1936:530;-1:-1:-1;;;1936:530:161:o;2471:762::-;2581:6;2589;2597;2605;2613;2621;2674:3;2662:9;2653:7;2649:23;2645:33;2642:53;;;2691:1;2688;2681:12;2642:53;2727:9;2714:23;2704:33;;2784:2;2773:9;2769:18;2756:32;2746:42;;2838:2;2827:9;2823:18;2810:32;2885:5;2878:13;2871:21;2864:5;2861:32;2851:60;;2907:1;2904;2897:12;2851:60;2930:5;-1:-1:-1;2954:38:161;2988:2;2973:18;;2954:38;:::i;:::-;2944:48;;3039:3;3028:9;3024:19;3011:33;3001:43;;3095:3;3084:9;3080:19;3067:33;3123:18;3115:6;3112:30;3109:50;;;3155:1;3152;3145:12;3109:50;3178:49;3219:7;3210:6;3199:9;3195:22;3178:49;:::i;:::-;3168:59;;;2471:762;;;;;;;;:::o;3420:328::-;3497:6;3505;3513;3566:2;3554:9;3545:7;3541:23;3537:32;3534:52;;;3582:1;3579;3572:12;3534:52;3605:29;3624:9;3605:29;:::i;:::-;3595:39;;3653:38;3687:2;3676:9;3672:18;3653:38;:::i;:::-;3643:48;;3738:2;3727:9;3723:18;3710:32;3700:42;;3420:328;;;;;:::o;4124:186::-;4183:6;4236:2;4224:9;4215:7;4211:23;4207:32;4204:52;;;4252:1;4249;4242:12;4204:52;4275:29;4294:9;4275:29;:::i;4315:388::-;4392:6;4400;4453:2;4441:9;4432:7;4428:23;4424:32;4421:52;;;4469:1;4466;4459:12;4421:52;4505:9;4492:23;4482:33;;4566:2;4555:9;4551:18;4538:32;4593:18;4585:6;4582:30;4579:50;;;4625:1;4622;4615:12;4579:50;4648:49;4689:7;4680:6;4669:9;4665:22;4648:49;:::i;:::-;4638:59;;;4315:388;;;;;:::o;4708:693::-;4819:6;4827;4835;4843;4851;4859;4867;4920:3;4908:9;4899:7;4895:23;4891:33;4888:53;;;4937:1;4934;4927:12;4888:53;4960:29;4979:9;4960:29;:::i;:::-;4950:39;;5008:38;5042:2;5031:9;5027:18;5008:38;:::i;:::-;4998:48;;5093:2;5082:9;5078:18;5065:32;5055:42;;5144:2;5133:9;5129:18;5116:32;5106:42;;5198:3;5187:9;5183:19;5170:33;5243:4;5236:5;5232:16;5225:5;5222:27;5212:55;;5263:1;5260;5253:12;5212:55;4708:693;;;;-1:-1:-1;4708:693:161;;;;5286:5;5338:3;5323:19;;5310:33;;-1:-1:-1;5390:3:161;5375:19;;;5362:33;;4708:693;-1:-1:-1;;4708:693:161:o;5406:180::-;5465:6;5518:2;5506:9;5497:7;5493:23;5489:32;5486:52;;;5534:1;5531;5524:12;5486:52;-1:-1:-1;5557:23:161;;5406:180;-1:-1:-1;5406:180:161:o;5591:260::-;5659:6;5667;5720:2;5708:9;5699:7;5695:23;5691:32;5688:52;;;5736:1;5733;5726:12;5688:52;5759:29;5778:9;5759:29;:::i;:::-;5749:39;;5807:38;5841:2;5830:9;5826:18;5807:38;:::i;:::-;5797:48;;5591:260;;;;;:::o;5856:941::-;5908:5;5961:3;5954:4;5946:6;5942:17;5938:27;5928:55;;5979:1;5976;5969:12;5928:55;6015:6;6002:20;6041:4;6064:18;6101:2;6097;6094:10;6091:36;;;6107:18;;:::i;:::-;6153:2;6150:1;6146:10;6176:28;6200:2;6196;6192:11;6176:28;:::i;:::-;6238:15;;;6308;;;6304:24;;;6269:12;;;;6340:15;;;6337:35;;;6368:1;6365;6358:12;6337:35;6404:2;6396:6;6392:15;6381:26;;6416:352;6432:6;6427:3;6424:15;6416:352;;;6518:3;6505:17;6554:2;6541:11;6538:19;6535:109;;;6598:1;6627:2;6623;6616:14;6535:109;6669:56;6721:3;6716:2;6702:11;6694:6;6690:24;6686:33;6669:56;:::i;:::-;6657:69;;-1:-1:-1;6449:12:161;;;;6746;;;;6416:352;;;6786:5;5856:941;-1:-1:-1;;;;;;;;5856:941:161:o;6802:922::-;6940:6;6948;6956;6964;7017:2;7005:9;6996:7;6992:23;6988:32;6985:52;;;7033:1;7030;7023:12;6985:52;7073:9;7060:23;7102:18;7143:2;7135:6;7132:14;7129:34;;;7159:1;7156;7149:12;7129:34;7197:6;7186:9;7182:22;7172:32;;7242:7;7235:4;7231:2;7227:13;7223:27;7213:55;;7264:1;7261;7254:12;7213:55;7304:2;7291:16;7330:2;7322:6;7319:14;7316:34;;;7346:1;7343;7336:12;7316:34;7401:7;7394:4;7384:6;7381:1;7377:14;7373:2;7369:23;7365:34;7362:47;7359:67;;;7422:1;7419;7412:12;7359:67;7453:4;7445:13;;;;-1:-1:-1;7477:6:161;-1:-1:-1;7515:20:161;;;7502:34;;-1:-1:-1;7589:2:161;7574:18;;7561:32;;7605:16;;;7602:36;;;7634:1;7631;7624:12;7602:36;;7657:61;7710:7;7699:8;7688:9;7684:24;7657:61;:::i;:::-;7647:71;;;6802:922;;;;;;;:::o;7729:322::-;7806:6;7814;7822;7875:2;7863:9;7854:7;7850:23;7846:32;7843:52;;;7891:1;7888;7881:12;7843:52;7927:9;7914:23;7904:33;;7984:2;7973:9;7969:18;7956:32;7946:42;;8007:38;8041:2;8030:9;8026:18;8007:38;:::i;:::-;7997:48;;7729:322;;;;;:::o;8279:380::-;8358:1;8354:12;;;;8401;;;8422:61;;8476:4;8468:6;8464:17;8454:27;;8422:61;8529:2;8521:6;8518:14;8498:18;8495:38;8492:161;;8575:10;8570:3;8566:20;8563:1;8556:31;8610:4;8607:1;8600:15;8638:4;8635:1;8628:15;8492:161;;8279:380;;;:::o;8664:349::-;8779:1;8775;8770:3;8766:11;8762:19;8754:5;8748:12;8744:38;8739:3;8732:51;8846:4;8839:5;8835:16;8829:23;8822:31;8815:39;8808:4;8803:3;8799:14;8792:63;8714:3;8901:4;8894:5;8890:16;8884:23;8939:4;8932;8927:3;8923:14;8916:28;8960:47;9001:4;8996:3;8992:14;8978:12;8960:47;:::i;:::-;8953:54;8664:349;-1:-1:-1;;;;8664:349:161:o;9018:481::-;9289:6;9278:9;9271:25;9332:6;9327:2;9316:9;9312:18;9305:34;9375:6;9370:2;9359:9;9355:18;9348:34;9418:3;9413:2;9402:9;9398:18;9391:31;9252:4;9439:54;9488:3;9477:9;9473:19;9465:6;9439:54;:::i;:::-;9431:62;9018:481;-1:-1:-1;;;;;;9018:481:161:o;9504:184::-;9574:6;9627:2;9615:9;9606:7;9602:23;9598:32;9595:52;;;9643:1;9640;9633:12;9595:52;-1:-1:-1;9666:16:161;;9504:184;-1:-1:-1;9504:184:161:o;9693:127::-;9754:10;9749:3;9745:20;9742:1;9735:31;9785:4;9782:1;9775:15;9809:4;9806:1;9799:15;9825:128;9892:9;;;9913:11;;;9910:37;;;9927:18;;:::i;9958:168::-;10031:9;;;10062;;10079:15;;;10073:22;;10059:37;10049:71;;10100:18;;:::i;10131:217::-;10171:1;10197;10187:132;;10241:10;10236:3;10232:20;10229:1;10222:31;10276:4;10273:1;10266:15;10304:4;10301:1;10294:15;10187:132;-1:-1:-1;10333:9:161;;10131:217::o;10353:125::-;10418:9;;;10439:10;;;10436:36;;;10452:18;;:::i;13539:127::-;13600:10;13595:3;13591:20;13588:1;13581:31;13631:4;13628:1;13621:15;13655:4;13652:1;13645:15;14596:1133;14726:3;14755:1;14788:6;14782:13;14818:3;14840:1;14868:9;14864:2;14860:18;14850:28;;14928:2;14917:9;14913:18;14950;14940:61;;14994:4;14986:6;14982:17;14972:27;;14940:61;15020:2;15068;15060:6;15057:14;15037:18;15034:38;15031:165;;-1:-1:-1;;;15095:33:161;;15151:4;15148:1;15141:15;15181:4;15102:3;15169:17;15031:165;15212:18;15239:133;;;;15386:1;15381:323;;;;15205:499;;15239:133;-1:-1:-1;;15272:24:161;;15260:37;;15345:14;;15338:22;15326:35;;15317:45;;;-1:-1:-1;15239:133:161;;15381:323;14543:1;14536:14;;;14580:4;14567:18;;15479:1;15493:165;15507:6;15504:1;15501:13;15493:165;;;15585:14;;15572:11;;;15565:35;15628:16;;;;15522:10;;15493:165;;;15497:3;;15687:6;15682:3;15678:16;15671:23;;15205:499;-1:-1:-1;15720:3:161;;14596:1133;-1:-1:-1;;;;;;;;14596:1133:161:o",
    "linkReferences": {},
    "immutableReferences": {
      "15127": [
        {
          "start": 321,
          "length": 32
        },
        {
          "start": 1242,
          "length": 32
        },
        {
          "start": 2196,
          "length": 32
        },
        {
          "start": 2359,
          "length": 32
        },
        {
          "start": 3346,
          "length": 32
        }
      ],
      "15131": [
        {
          "start": 884,
          "length": 32
        },
        {
          "start": 1634,
          "length": 32
        },
        {
          "start": 3094,
          "length": 32
        }
      ],
      "15134": [
        {
          "start": 637,
          "length": 32
        },
        {
          "start": 1445,
          "length": 32
        },
        {
          "start": 3453,
          "length": 32
        }
      ],
      "63327": [
        {
          "start": 508,
          "length": 32
        }
      ],
      "63341": [
        {
          "start": 1913,
          "length": 32
        }
      ],
      "63343": [
        {
          "start": 1966,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "close(uint256,uint256,bool,address,uint256,bytes)": "0f28159e",
    "decimals()": "313ce567",
    "deposits(address,uint256)": "d6d68177",
    "hyperdrive()": "04eb0148",
    "mint(uint256,uint256,address)": "e7d3fe6b",
    "mintPercent()": "80910858",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "redeem(uint256)": "db006a75",
    "sweep(uint256,bytes)": "d2ae9a0d",
    "sweepAndRedeem(uint256[],uint256,bytes[])": "e37c182c",
    "symbol()": "95d89b41",
    "token()": "fc0c546a",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IHyperdrive\",\"name\":\"_hyperdrive\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_mintPercent\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"__name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"__symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BondMatured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BondNotMatured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintPercentTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutputLimit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"andBurn\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minOutput\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hyperdrive\",\"outputs\":[{\"internalType\":\"contract IHyperdrive\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"maturityTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"extraDatas\",\"type\":\"bytes[]\"}],\"name\":\"sweepAndRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"close(uint256,uint256,bool,address,uint256,bytes)\":{\"params\":{\"amount\":\"The amount of bonds to redeem.\",\"andBurn\":\"If true it will burn the number of erc20 minted by this        deposited bond.\",\"destination\":\"The address which gets credited with this withdraw.\",\"extraData\":\"Extra data to pass to the yield source.\",\"maturityTime\":\"The bond's expiry time.\",\"minOutput\":\"The min amount the user expects transferred to them.\"}},\"constructor\":{\"params\":{\"__name\":\"The ERC20 name.\",\"__symbol\":\"The ERC20 symbol.\",\"_hyperdrive\":\"The hyperdrive contract.\",\"_mintPercent\":\"How many tokens will be minted per bond.\",\"_token\":\"The underlying token of the bonds.\"}},\"mint(uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount of bonds to mint.\",\"destination\":\"The address which gets credited with these funds.\",\"maturityTime\":\"The bond's expiry time.\"}},\"redeem(uint256)\":{\"params\":{\"amount\":\"The amount of erc20 wrapper to burn.\"}},\"sweep(uint256,bytes)\":{\"params\":{\"extraData\":\"Extra data to pass to the yield source.\",\"maturityTime\":\"The maturity time of the asset to sell.\"}},\"sweepAndRedeem(uint256[],uint256,bytes[])\":{\"params\":{\"amount\":\"The amount of erc20 wrapper to burn.\",\"extraDatas\":\"Extra data to pass to the yield source.\",\"maturityTimes\":\"Maturity times which the caller would like to         sweep before redeeming.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The amount of bonds to transfer.\",\"to\":\"The recipient of the bonds.\"},\"returns\":{\"_0\":\"True if the transfer succeeded.\"}}},\"title\":\"BondWrapper\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidRecipient(address)\":[{\"notice\":\"################### ### BondWrapper ### ###################\"}],\"InvalidTimestamp()\":[{\"notice\":\"############### ### AssetId ### ###############\"}]},\"kind\":\"user\",\"methods\":{\"close(uint256,uint256,bool,address,uint256,bytes)\":{\"notice\":\"Closes a user account by selling the bond and then transferring         the delta value of that sale vs the erc20 tokens minted by its         deposit. Optionally also burns the ERC20 wrapper from the user,         if enabled it will transfer both the delta of sale value and the         value of the burned token.\"},\"constructor\":{\"notice\":\"Constructs the contract and initializes the variables.\"},\"deposits(address,uint256)\":{\"notice\":\"Store the user deposits as a mapping from user address to asset         ID to amount.\"},\"hyperdrive()\":{\"notice\":\"The multitoken of the bond.\"},\"mint(uint256,uint256,address)\":{\"notice\":\"Transfers bonds from the user and then mints erc20 for the         mintable percent.\"},\"mintPercent()\":{\"notice\":\"The basis points (i.e. out of 10000) which will be minted for a         bond deposit.\"},\"redeem(uint256)\":{\"notice\":\"Burns a caller's erc20 and transfers the result from the         contract's token balance.\"},\"sweep(uint256,bytes)\":{\"notice\":\"Sells all assets from the contract if they are matured, has no         effect if the contract has no assets from a timestamp.\"},\"sweepAndRedeem(uint256[],uint256,bytes[])\":{\"notice\":\"Calls both force close and redeem to enable easy liquidation of         a user account.\"},\"token()\":{\"notice\":\"The underlying token from the bond.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers bonds from the user to the recipient.\"}},\"notice\":\"A token that wraps Hyperdrive long positions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/token/BondWrapper.sol\":\"BondWrapper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":aave-v3-core/=lib/aave-v3-core/\",\":create3-factory/=lib/yield-daddy/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\",\":yield-daddy/=lib/yield-daddy/\"]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0xfb57fe2ee4d8d1c6a8e2aa3b007da6f0e53d65388245b0b7d876234077ee95b4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e4303c41b9752b51c6eaa9b16aa11e5bffb34fc80c5c8761302539cd5922ae36\",\"dweb:/ipfs/QmZjVYBikfgPDX47hmbGJpG6kvm3Gyt6nKkFbZH6r8U4cL\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xf62872798e8bb605416caed4df67bc933e7df0ac28db4a14104a481584ad7787\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0d4650a2428a4b5eb302c1e2c596f4ae4358be4ea098694152e7223aa6a579d8\",\"dweb:/ipfs/QmYoopLx1zWyXKEt7bzCVSpQPHTbtDQRoc3yJ7kqThThYw\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x84c73d8c4b67da41635f57fce2f30b8f04fc826ff6fb54c605de23d376f3403d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e6d636dff5c24916ae35a76695d741de2f14ee46876ea67c5393618bb7f9cf85\",\"dweb:/ipfs/QmUwxh8JeAqSFA8Z2qabVx3YWRSz7PJ9V2TQgnfctAgqPF\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x402cde9d7823ea9762f43ce326703c64c441c5feb278bedcb9e1401d0a8b733b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e12e56585cf119a544a5382df36d725daf89a21660663d1e6dd9de839fc8ff17\",\"dweb:/ipfs/QmNSyGK8eagodGUUPniBptVyC9by2n9Ff3PUxF4FHNQYXc\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xcf3a4002275ea64e381f0a4aded3683e12960396ef79ba9dd153e2d1e395baad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9990491f7a5151fd696a45e6e5b0282a1dedf58521861dfb8c64db8cb60f5b6\",\"dweb:/ipfs/QmaywmqqQhz7DeYqZdoeykagr5h4ZhQRv6GasHqvdWqzSy\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0xdb7f24663cff7307a468ef5e4c6f3e4d01ec0475157b3bbb3405890c3e9ab87d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7f631a9a395fba5b07c3d9308fccac18d5aa59d890efe23442ed2a4da9871ae8\",\"dweb:/ipfs/QmV2a4wiAPfWzSST3faYt58i2tqEyoqCLAJV8aNCdJyxVE\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0x476240ea4328bae9ab820b6f0f40afb11c74ee52d26bdbef69e4ece28dc10bdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://843f73cb21eaec4e26952fd6cbde5e6815e3a28c438df9e026e249200d25076f\",\"dweb:/ipfs/QmXzE7gsRKMaRGQfTDodA1RXxNxUuBj8RT7grTYjZUdbe6\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0x9b92d81f2f038fcd4bb5d069ab2b754efc153234c451d4ee4caa6d74aaca16b4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8686fddc99564c6b6524ea68a6b7ff081a9988fc795fc13197bb59ddaa2041c6\",\"dweb:/ipfs/QmarJYJAgoH6Z4H1BmdPoRgqLubRu5S6NDXBNV2fDApPuW\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0xcf8493b00dd39c50754a63f66dc612f3cd466cbac8c7ea5ed0c5ea68aa99267a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1a1986d6bc80e465dde116a70d3a30027b3e75969117a9b3517c6866c2e5e73a\",\"dweb:/ipfs/QmSASHifHWyKBycGAm1pUs9dw26Uf6A61V9nkEQnFj9mya\"]},\"contracts/src/token/BondWrapper.sol\":{\"keccak256\":\"0xac9d00154512ca190e3b6ffcfbdb6fee165303353d99d1de5659eff28b7e47d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c988af0edd13f09b42c1e134909cd3016c9e57d253da4333bb9e5bdf9417e2c5\",\"dweb:/ipfs/QmVKf7zJjQMWd5g4snthQ3fQeRSZdEUvGukyYoWzmAVDrq\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IHyperdrive",
              "name": "_hyperdrive",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_mintPercent",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "__name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "__symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BondMatured"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BondNotMatured"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InputLengthMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientPrice"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTimestamp"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintPercentTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutputLimit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maturityTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "andBurn",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "destination",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minOutput",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "close"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deposits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hyperdrive",
          "outputs": [
            {
              "internalType": "contract IHyperdrive",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maturityTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "destination",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mintPercent",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maturityTime",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sweep"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "maturityTimes",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes[]",
              "name": "extraDatas",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sweepAndRedeem"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "close(uint256,uint256,bool,address,uint256,bytes)": {
            "params": {
              "amount": "The amount of bonds to redeem.",
              "andBurn": "If true it will burn the number of erc20 minted by this        deposited bond.",
              "destination": "The address which gets credited with this withdraw.",
              "extraData": "Extra data to pass to the yield source.",
              "maturityTime": "The bond's expiry time.",
              "minOutput": "The min amount the user expects transferred to them."
            }
          },
          "constructor": {
            "params": {
              "__name": "The ERC20 name.",
              "__symbol": "The ERC20 symbol.",
              "_hyperdrive": "The hyperdrive contract.",
              "_mintPercent": "How many tokens will be minted per bond.",
              "_token": "The underlying token of the bonds."
            }
          },
          "mint(uint256,uint256,address)": {
            "params": {
              "amount": "The amount of bonds to mint.",
              "destination": "The address which gets credited with these funds.",
              "maturityTime": "The bond's expiry time."
            }
          },
          "redeem(uint256)": {
            "params": {
              "amount": "The amount of erc20 wrapper to burn."
            }
          },
          "sweep(uint256,bytes)": {
            "params": {
              "extraData": "Extra data to pass to the yield source.",
              "maturityTime": "The maturity time of the asset to sell."
            }
          },
          "sweepAndRedeem(uint256[],uint256,bytes[])": {
            "params": {
              "amount": "The amount of erc20 wrapper to burn.",
              "extraDatas": "Extra data to pass to the yield source.",
              "maturityTimes": "Maturity times which the caller would like to         sweep before redeeming."
            }
          },
          "transfer(address,uint256)": {
            "params": {
              "amount": "The amount of bonds to transfer.",
              "to": "The recipient of the bonds."
            },
            "returns": {
              "_0": "True if the transfer succeeded."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "close(uint256,uint256,bool,address,uint256,bytes)": {
            "notice": "Closes a user account by selling the bond and then transferring         the delta value of that sale vs the erc20 tokens minted by its         deposit. Optionally also burns the ERC20 wrapper from the user,         if enabled it will transfer both the delta of sale value and the         value of the burned token."
          },
          "constructor": {
            "notice": "Constructs the contract and initializes the variables."
          },
          "deposits(address,uint256)": {
            "notice": "Store the user deposits as a mapping from user address to asset         ID to amount."
          },
          "hyperdrive()": {
            "notice": "The multitoken of the bond."
          },
          "mint(uint256,uint256,address)": {
            "notice": "Transfers bonds from the user and then mints erc20 for the         mintable percent."
          },
          "mintPercent()": {
            "notice": "The basis points (i.e. out of 10000) which will be minted for a         bond deposit."
          },
          "redeem(uint256)": {
            "notice": "Burns a caller's erc20 and transfers the result from the         contract's token balance."
          },
          "sweep(uint256,bytes)": {
            "notice": "Sells all assets from the contract if they are matured, has no         effect if the contract has no assets from a timestamp."
          },
          "sweepAndRedeem(uint256[],uint256,bytes[])": {
            "notice": "Calls both force close and redeem to enable easy liquidation of         a user account."
          },
          "token()": {
            "notice": "The underlying token from the bond."
          },
          "transfer(address,uint256)": {
            "notice": "Transfers bonds from the user to the recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "aave-v3-core/=lib/aave-v3-core/",
        "create3-factory/=lib/yield-daddy/lib/create3-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "solmate/=lib/solmate/src/",
        "yield-daddy/=lib/yield-daddy/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/token/BondWrapper.sol": "BondWrapper"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/interfaces/IERC20.sol": {
        "keccak256": "0xfb57fe2ee4d8d1c6a8e2aa3b007da6f0e53d65388245b0b7d876234077ee95b4",
        "urls": [
          "bzz-raw://e4303c41b9752b51c6eaa9b16aa11e5bffb34fc80c5c8761302539cd5922ae36",
          "dweb:/ipfs/QmZjVYBikfgPDX47hmbGJpG6kvm3Gyt6nKkFbZH6r8U4cL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdrive.sol": {
        "keccak256": "0xf62872798e8bb605416caed4df67bc933e7df0ac28db4a14104a481584ad7787",
        "urls": [
          "bzz-raw://0d4650a2428a4b5eb302c1e2c596f4ae4358be4ea098694152e7223aa6a579d8",
          "dweb:/ipfs/QmYoopLx1zWyXKEt7bzCVSpQPHTbtDQRoc3yJ7kqThThYw"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveCore.sol": {
        "keccak256": "0x84c73d8c4b67da41635f57fce2f30b8f04fc826ff6fb54c605de23d376f3403d",
        "urls": [
          "bzz-raw://e6d636dff5c24916ae35a76695d741de2f14ee46876ea67c5393618bb7f9cf85",
          "dweb:/ipfs/QmUwxh8JeAqSFA8Z2qabVx3YWRSz7PJ9V2TQgnfctAgqPF"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveRead.sol": {
        "keccak256": "0x402cde9d7823ea9762f43ce326703c64c441c5feb278bedcb9e1401d0a8b733b",
        "urls": [
          "bzz-raw://e12e56585cf119a544a5382df36d725daf89a21660663d1e6dd9de839fc8ff17",
          "dweb:/ipfs/QmNSyGK8eagodGUUPniBptVyC9by2n9Ff3PUxF4FHNQYXc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiToken.sol": {
        "keccak256": "0xcf3a4002275ea64e381f0a4aded3683e12960396ef79ba9dd153e2d1e395baad",
        "urls": [
          "bzz-raw://c9990491f7a5151fd696a45e6e5b0282a1dedf58521861dfb8c64db8cb60f5b6",
          "dweb:/ipfs/QmaywmqqQhz7DeYqZdoeykagr5h4ZhQRv6GasHqvdWqzSy"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenCore.sol": {
        "keccak256": "0xdb7f24663cff7307a468ef5e4c6f3e4d01ec0475157b3bbb3405890c3e9ab87d",
        "urls": [
          "bzz-raw://7f631a9a395fba5b07c3d9308fccac18d5aa59d890efe23442ed2a4da9871ae8",
          "dweb:/ipfs/QmV2a4wiAPfWzSST3faYt58i2tqEyoqCLAJV8aNCdJyxVE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenMetadata.sol": {
        "keccak256": "0x476240ea4328bae9ab820b6f0f40afb11c74ee52d26bdbef69e4ece28dc10bdb",
        "urls": [
          "bzz-raw://843f73cb21eaec4e26952fd6cbde5e6815e3a28c438df9e026e249200d25076f",
          "dweb:/ipfs/QmXzE7gsRKMaRGQfTDodA1RXxNxUuBj8RT7grTYjZUdbe6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenRead.sol": {
        "keccak256": "0x9b92d81f2f038fcd4bb5d069ab2b754efc153234c451d4ee4caa6d74aaca16b4",
        "urls": [
          "bzz-raw://8686fddc99564c6b6524ea68a6b7ff081a9988fc795fc13197bb59ddaa2041c6",
          "dweb:/ipfs/QmarJYJAgoH6Z4H1BmdPoRgqLubRu5S6NDXBNV2fDApPuW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/AssetId.sol": {
        "keccak256": "0xcf8493b00dd39c50754a63f66dc612f3cd466cbac8c7ea5ed0c5ea68aa99267a",
        "urls": [
          "bzz-raw://1a1986d6bc80e465dde116a70d3a30027b3e75969117a9b3517c6866c2e5e73a",
          "dweb:/ipfs/QmSASHifHWyKBycGAm1pUs9dw26Uf6A61V9nkEQnFj9mya"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/BondWrapper.sol": {
        "keccak256": "0xac9d00154512ca190e3b6ffcfbdb6fee165303353d99d1de5659eff28b7e47d9",
        "urls": [
          "bzz-raw://c988af0edd13f09b42c1e134909cd3016c9e57d253da4333bb9e5bdf9417e2c5",
          "dweb:/ipfs/QmVKf7zJjQMWd5g4snthQ3fQeRSZdEUvGukyYoWzmAVDrq"
        ],
        "license": "Apache-2.0"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a",
        "urls": [
          "bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4",
          "dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/token/BondWrapper.sol",
    "id": 15572,
    "exportedSymbols": {
      "AssetId": [
        10382
      ],
      "BondWrapper": [
        15571
      ],
      "ERC20": [
        63690
      ],
      "IERC20": [
        3872
      ],
      "IHyperdrive": [
        4675
      ],
      "SafeTransferLib": [
        63999
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9156:56",
    "nodes": [
      {
        "id": 15106,
        "nodeType": "PragmaDirective",
        "src": "39:23:56",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 15108,
        "nodeType": "ImportDirective",
        "src": "64:49:56",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15572,
        "sourceUnit": 63691,
        "symbolAliases": [
          {
            "foreign": {
              "id": 15107,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63690,
              "src": "73:5:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 15110,
        "nodeType": "ImportDirective",
        "src": "114:68:56",
        "nodes": [],
        "absolutePath": "lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15572,
        "sourceUnit": 64000,
        "symbolAliases": [
          {
            "foreign": {
              "id": 15109,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63999,
              "src": "123:15:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 15112,
        "nodeType": "ImportDirective",
        "src": "183:50:56",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15572,
        "sourceUnit": 3873,
        "symbolAliases": [
          {
            "foreign": {
              "id": 15111,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3872,
              "src": "192:6:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 15114,
        "nodeType": "ImportDirective",
        "src": "234:60:56",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IHyperdrive.sol",
        "file": "../interfaces/IHyperdrive.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15572,
        "sourceUnit": 4676,
        "symbolAliases": [
          {
            "foreign": {
              "id": 15113,
              "name": "IHyperdrive",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4675,
              "src": "243:11:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 15116,
        "nodeType": "ImportDirective",
        "src": "295:51:56",
        "nodes": [],
        "absolutePath": "contracts/src/libraries/AssetId.sol",
        "file": "../libraries/AssetId.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 15572,
        "sourceUnit": 10383,
        "symbolAliases": [
          {
            "foreign": {
              "id": 15115,
              "name": "AssetId",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10382,
              "src": "304:7:56",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 15571,
        "nodeType": "ContractDefinition",
        "src": "670:8524:56",
        "nodes": [
          {
            "id": 15123,
            "nodeType": "UsingForDirective",
            "src": "706:32:56",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 15120,
              "name": "SafeTransferLib",
              "nameLocations": [
                "712:15:56"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63999,
              "src": "712:15:56"
            },
            "typeName": {
              "id": 15122,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15121,
                "name": "ERC20",
                "nameLocations": [
                  "732:5:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 63690,
                "src": "732:5:56"
              },
              "referencedDeclaration": 63690,
              "src": "732:5:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$63690",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 15127,
            "nodeType": "VariableDeclaration",
            "src": "788:39:56",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 15124,
              "nodeType": "StructuredDocumentation",
              "src": "744:39:56",
              "text": "@notice The multitoken of the bond."
            },
            "functionSelector": "04eb0148",
            "mutability": "immutable",
            "name": "hyperdrive",
            "nameLocation": "817:10:56",
            "scope": 15571,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IHyperdrive_$4675",
              "typeString": "contract IHyperdrive"
            },
            "typeName": {
              "id": 15126,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15125,
                "name": "IHyperdrive",
                "nameLocations": [
                  "788:11:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4675,
                "src": "788:11:56"
              },
              "referencedDeclaration": 4675,
              "src": "788:11:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IHyperdrive_$4675",
                "typeString": "contract IHyperdrive"
              }
            },
            "visibility": "public"
          },
          {
            "id": 15131,
            "nodeType": "VariableDeclaration",
            "src": "886:29:56",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 15128,
              "nodeType": "StructuredDocumentation",
              "src": "834:47:56",
              "text": "@notice The underlying token from the bond."
            },
            "functionSelector": "fc0c546a",
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "910:5:56",
            "scope": 15571,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3872",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 15130,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15129,
                "name": "IERC20",
                "nameLocations": [
                  "886:6:56"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3872,
                "src": "886:6:56"
              },
              "referencedDeclaration": 3872,
              "src": "886:6:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3872",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 15134,
            "nodeType": "VariableDeclaration",
            "src": "1032:36:56",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 15132,
              "nodeType": "StructuredDocumentation",
              "src": "922:105:56",
              "text": "@notice The basis points (i.e. out of 10000) which will be minted for a\n         bond deposit."
            },
            "functionSelector": "80910858",
            "mutability": "immutable",
            "name": "mintPercent",
            "nameLocation": "1057:11:56",
            "scope": 15571,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15133,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1032:7:56",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 15141,
            "nodeType": "VariableDeclaration",
            "src": "1185:91:56",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 15135,
              "nodeType": "StructuredDocumentation",
              "src": "1075:105:56",
              "text": "@notice Store the user deposits as a mapping from user address to asset\n         ID to amount."
            },
            "functionSelector": "d6d68177",
            "mutability": "mutable",
            "name": "deposits",
            "nameLocation": "1268:8:56",
            "scope": 15571,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 15140,
              "keyName": "user",
              "keyNameLocation": "1201:4:56",
              "keyType": {
                "id": 15136,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1193:7:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1185:67:56",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 15139,
                "keyName": "assetId",
                "keyNameLocation": "1225:7:56",
                "keyType": {
                  "id": 15137,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1217:7:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1209:42:56",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueName": "amount",
                "valueNameLocation": "1244:6:56",
                "valueType": {
                  "id": 15138,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1236:7:56",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 15185,
            "nodeType": "FunctionDefinition",
            "src": "1612:427:56",
            "nodes": [],
            "body": {
              "id": 15184,
              "nodeType": "Block",
              "src": "1806:233:56",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15162,
                      "name": "_mintPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15150,
                      "src": "1820:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31305f303030",
                      "id": 15163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1836:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "src": "1820:22:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15171,
                  "nodeType": "IfStatement",
                  "src": "1816:92:56",
                  "trueBody": {
                    "id": 15170,
                    "nodeType": "Block",
                    "src": "1844:64:56",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 15165,
                              "name": "IHyperdrive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4675,
                              "src": "1865:11:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$4675_$",
                                "typeString": "type(contract IHyperdrive)"
                              }
                            },
                            "id": 15167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1877:18:56",
                            "memberName": "MintPercentTooHigh",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4643,
                            "src": "1865:30:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 15168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1865:32:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15169,
                        "nodeType": "RevertStatement",
                        "src": "1858:39:56"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 15174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15172,
                      "name": "hyperdrive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15127,
                      "src": "1948:10:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHyperdrive_$4675",
                        "typeString": "contract IHyperdrive"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15173,
                      "name": "_hyperdrive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15145,
                      "src": "1961:11:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHyperdrive_$4675",
                        "typeString": "contract IHyperdrive"
                      }
                    },
                    "src": "1948:24:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHyperdrive_$4675",
                      "typeString": "contract IHyperdrive"
                    }
                  },
                  "id": 15175,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:24:56"
                },
                {
                  "expression": {
                    "id": 15178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15176,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15131,
                      "src": "1982:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3872",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15177,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15148,
                      "src": "1990:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3872",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1982:14:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3872",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 15179,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:14:56"
                },
                {
                  "expression": {
                    "id": 15182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15180,
                      "name": "mintPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15134,
                      "src": "2006:11:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15181,
                      "name": "_mintPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15150,
                      "src": "2020:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2006:26:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15183,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:26:56"
                }
              ]
            },
            "documentation": {
              "id": 15142,
              "nodeType": "StructuredDocumentation",
              "src": "1283:324:56",
              "text": "@notice Constructs the contract and initializes the variables.\n @param _hyperdrive The hyperdrive contract.\n @param _token The underlying token of the bonds.\n @param _mintPercent How many tokens will be minted per bond.\n @param __name The ERC20 name.\n @param __symbol The ERC20 symbol."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15157,
                    "name": "__name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15152,
                    "src": "1784:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 15158,
                    "name": "__symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15154,
                    "src": "1792:8:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "hexValue": "3138",
                    "id": 15159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1802:2:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 15160,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 15156,
                  "name": "ERC20",
                  "nameLocations": [
                    "1778:5:56"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63690,
                  "src": "1778:5:56"
                },
                "nodeType": "ModifierInvocation",
                "src": "1778:27:56"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 15155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15145,
                  "mutability": "mutable",
                  "name": "_hyperdrive",
                  "nameLocation": "1645:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15185,
                  "src": "1633:23:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHyperdrive_$4675",
                    "typeString": "contract IHyperdrive"
                  },
                  "typeName": {
                    "id": 15144,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15143,
                      "name": "IHyperdrive",
                      "nameLocations": [
                        "1633:11:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4675,
                      "src": "1633:11:56"
                    },
                    "referencedDeclaration": 4675,
                    "src": "1633:11:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHyperdrive_$4675",
                      "typeString": "contract IHyperdrive"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15148,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1673:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15185,
                  "src": "1666:13:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3872",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 15147,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15146,
                      "name": "IERC20",
                      "nameLocations": [
                        "1666:6:56"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3872,
                      "src": "1666:6:56"
                    },
                    "referencedDeclaration": 3872,
                    "src": "1666:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3872",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15150,
                  "mutability": "mutable",
                  "name": "_mintPercent",
                  "nameLocation": "1697:12:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15185,
                  "src": "1689:20:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15152,
                  "mutability": "mutable",
                  "name": "__name",
                  "nameLocation": "1733:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15185,
                  "src": "1719:20:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15154,
                  "mutability": "mutable",
                  "name": "__symbol",
                  "nameLocation": "1763:8:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15185,
                  "src": "1749:22:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1749:6:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1623:154:56"
            },
            "returnParameters": {
              "id": 15161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1806:0:56"
            },
            "scope": 15571,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 15224,
            "nodeType": "FunctionDefinition",
            "src": "2258:379:56",
            "nodes": [],
            "body": {
              "id": 15223,
              "nodeType": "Block",
              "src": "2357:280:56",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 15208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 15201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 15196,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15188,
                        "src": "2448:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 15199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2462:1:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 15198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2454:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15197,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2454:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2454:10:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2448:16:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 15207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 15202,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15188,
                        "src": "2468:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 15205,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2482:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondWrapper_$15571",
                              "typeString": "contract BondWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondWrapper_$15571",
                              "typeString": "contract BondWrapper"
                            }
                          ],
                          "id": 15204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2474:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15203,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2474:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2474:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2468:19:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2448:39:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15216,
                  "nodeType": "IfStatement",
                  "src": "2444:109:56",
                  "trueBody": {
                    "id": 15215,
                    "nodeType": "Block",
                    "src": "2489:64:56",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 15212,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15188,
                              "src": "2539:2:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 15209,
                              "name": "IHyperdrive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4675,
                              "src": "2510:11:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$4675_$",
                                "typeString": "type(contract IHyperdrive)"
                              }
                            },
                            "id": 15211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2522:16:56",
                            "memberName": "InvalidRecipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4631,
                            "src": "2510:28:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 15213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2510:32:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15214,
                        "nodeType": "RevertStatement",
                        "src": "2503:39:56"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15219,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15188,
                        "src": "2619:2:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15220,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15190,
                        "src": "2623:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15217,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2604:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_BondWrapper_$15571_$",
                          "typeString": "type(contract super BondWrapper)"
                        }
                      },
                      "id": 15218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2610:8:56",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63440,
                      "src": "2604:14:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 15221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2604:26:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 15195,
                  "id": 15222,
                  "nodeType": "Return",
                  "src": "2597:33:56"
                }
              ]
            },
            "baseFunctions": [
              63440
            ],
            "documentation": {
              "id": 15186,
              "nodeType": "StructuredDocumentation",
              "src": "2045:208:56",
              "text": "@notice Transfers bonds from the user to the recipient.\n @param to The recipient of the bonds.\n @param amount The amount of bonds to transfer.\n @return True if the transfer succeeded."
            },
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2267:8:56",
            "overrides": {
              "id": 15192,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2333:8:56"
            },
            "parameters": {
              "id": 15191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15188,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2293:2:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15224,
                  "src": "2285:10:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15190,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2313:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15224,
                  "src": "2305:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2275:50:56"
            },
            "returnParameters": {
              "id": 15195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15224,
                  "src": "2351:4:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15193,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2351:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2350:6:56"
            },
            "scope": 15571,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 15290,
            "nodeType": "FunctionDefinition",
            "src": "2933:749:56",
            "nodes": [],
            "body": {
              "id": 15289,
              "nodeType": "Block",
              "src": "3045:637:56",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15234,
                      "name": "maturityTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15227,
                      "src": "3091:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 15235,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3107:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 15236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3113:9:56",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3107:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3091:31:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15243,
                  "nodeType": "IfStatement",
                  "src": "3087:69:56",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 15238,
                          "name": "IHyperdrive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4675,
                          "src": "3131:11:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$4675_$",
                            "typeString": "type(contract IHyperdrive)"
                          }
                        },
                        "id": 15240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3143:11:56",
                        "memberName": "BondMatured",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4635,
                        "src": "3131:23:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 15241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3131:25:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 15242,
                    "nodeType": "RevertStatement",
                    "src": "3124:32:56"
                  }
                },
                {
                  "assignments": [
                    15245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15245,
                      "mutability": "mutable",
                      "name": "assetId",
                      "nameLocation": "3207:7:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 15289,
                      "src": "3199:15:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15244,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3199:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15253,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 15248,
                            "name": "AssetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10382,
                            "src": "3252:7:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AssetId_$10382_$",
                              "typeString": "type(library AssetId)"
                            }
                          },
                          "id": 15249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3260:13:56",
                          "memberName": "AssetIdPrefix",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10088,
                          "src": "3252:21:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AssetIdPrefix_$10088_$",
                            "typeString": "type(enum AssetId.AssetIdPrefix)"
                          }
                        },
                        "id": 15250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3274:4:56",
                        "memberName": "Long",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10085,
                        "src": "3252:26:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$10088",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        }
                      },
                      {
                        "id": 15251,
                        "name": "maturityTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15227,
                        "src": "3292:12:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$10088",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15246,
                        "name": "AssetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10382,
                        "src": "3217:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AssetId_$10382_$",
                          "typeString": "type(library AssetId)"
                        }
                      },
                      "id": 15247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3225:13:56",
                      "memberName": "encodeAssetId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10111,
                      "src": "3217:21:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_AssetIdPrefix_$10088_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum AssetId.AssetIdPrefix,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 15252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3217:97:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3199:115:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15257,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15245,
                        "src": "3384:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 15258,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3393:3:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3397:6:56",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3393:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 15262,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3413:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondWrapper_$15571",
                              "typeString": "contract BondWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondWrapper_$15571",
                              "typeString": "contract BondWrapper"
                            }
                          ],
                          "id": 15261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3405:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15260,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3405:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3405:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15264,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15229,
                        "src": "3420:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15254,
                        "name": "hyperdrive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15127,
                        "src": "3360:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHyperdrive_$4675",
                          "typeString": "contract IHyperdrive"
                        }
                      },
                      "id": 15256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3371:12:56",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5134,
                      "src": "3360:23:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256) external"
                      }
                    },
                    "id": 15265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3360:67:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15266,
                  "nodeType": "ExpressionStatement",
                  "src": "3360:67:56"
                },
                {
                  "assignments": [
                    15268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15268,
                      "mutability": "mutable",
                      "name": "mintAmount",
                      "nameLocation": "3496:10:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 15289,
                      "src": "3488:18:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15267,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3488:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15275,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 15269,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15229,
                            "src": "3510:6:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 15270,
                            "name": "mintPercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15134,
                            "src": "3519:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3510:20:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 15272,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3509:22:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31305f303030",
                      "id": 15273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3534:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "src": "3509:31:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3488:52:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15277,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15231,
                        "src": "3556:11:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15278,
                        "name": "mintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15268,
                        "src": "3569:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15276,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63661,
                      "src": "3550:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3550:30:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15280,
                  "nodeType": "ExpressionStatement",
                  "src": "3550:30:56"
                },
                {
                  "expression": {
                    "id": 15287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 15281,
                          "name": "deposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15141,
                          "src": "3635:8:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 15284,
                        "indexExpression": {
                          "id": 15282,
                          "name": "destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15231,
                          "src": "3644:11:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3635:21:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 15285,
                      "indexExpression": {
                        "id": 15283,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15245,
                        "src": "3657:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3635:30:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 15286,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15229,
                      "src": "3669:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3635:40:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15288,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:40:56"
                }
              ]
            },
            "documentation": {
              "id": 15225,
              "nodeType": "StructuredDocumentation",
              "src": "2643:285:56",
              "text": "@notice Transfers bonds from the user and then mints erc20 for the\n         mintable percent.\n @param  maturityTime The bond's expiry time.\n @param amount The amount of bonds to mint.\n @param destination The address which gets credited with these funds."
            },
            "functionSelector": "e7d3fe6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2942:4:56",
            "parameters": {
              "id": 15232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15227,
                  "mutability": "mutable",
                  "name": "maturityTime",
                  "nameLocation": "2964:12:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15290,
                  "src": "2956:20:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2956:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15229,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2994:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15290,
                  "src": "2986:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2986:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15231,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "3018:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15290,
                  "src": "3010:19:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3010:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2946:89:56"
            },
            "returnParameters": {
              "id": 15233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3045:0:56"
            },
            "scope": 15571,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 15430,
            "nodeType": "FunctionDefinition",
            "src": "4489:2115:56",
            "nodes": [],
            "body": {
              "id": 15429,
              "nodeType": "Block",
              "src": "4683:1921:56",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    15307
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15307,
                      "mutability": "mutable",
                      "name": "assetId",
                      "nameLocation": "4733:7:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 15429,
                      "src": "4725:15:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4725:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15315,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 15310,
                            "name": "AssetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10382,
                            "src": "4778:7:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AssetId_$10382_$",
                              "typeString": "type(library AssetId)"
                            }
                          },
                          "id": 15311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4786:13:56",
                          "memberName": "AssetIdPrefix",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10088,
                          "src": "4778:21:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AssetIdPrefix_$10088_$",
                            "typeString": "type(enum AssetId.AssetIdPrefix)"
                          }
                        },
                        "id": 15312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4800:4:56",
                        "memberName": "Long",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10085,
                        "src": "4778:26:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$10088",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        }
                      },
                      {
                        "id": 15313,
                        "name": "maturityTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15293,
                        "src": "4818:12:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$10088",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15308,
                        "name": "AssetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10382,
                        "src": "4743:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AssetId_$10382_$",
                          "typeString": "type(library AssetId)"
                        }
                      },
                      "id": 15309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4751:13:56",
                      "memberName": "encodeAssetId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10111,
                      "src": "4743:21:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_AssetIdPrefix_$10088_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum AssetId.AssetIdPrefix,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 15314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4743:97:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4725:115:56"
                },
                {
                  "assignments": [
                    15317
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15317,
                      "mutability": "mutable",
                      "name": "receivedAmount",
                      "nameLocation": "4859:14:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 15429,
                      "src": "4851:22:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15316,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4851:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15318,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4851:22:56"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15319,
                      "name": "maturityTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15293,
                      "src": "4887:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 15320,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4902:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 15321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4908:9:56",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4902:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4887:30:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 15351,
                    "nodeType": "Block",
                    "src": "5327:244:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 15343,
                              "name": "maturityTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15293,
                              "src": "5379:12:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 15344,
                              "name": "extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15303,
                              "src": "5393:9:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 15342,
                            "name": "sweep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15493,
                            "src": "5373:5:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,bytes memory)"
                            }
                          },
                          "id": 15345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5373:30:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15346,
                        "nodeType": "ExpressionStatement",
                        "src": "5373:30:56"
                      },
                      {
                        "expression": {
                          "id": 15349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15347,
                            "name": "receivedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15317,
                            "src": "5537:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 15348,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15295,
                            "src": "5554:6:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5537:23:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15350,
                        "nodeType": "ExpressionStatement",
                        "src": "5537:23:56"
                      }
                    ]
                  },
                  "id": 15352,
                  "nodeType": "IfStatement",
                  "src": "4883:688:56",
                  "trueBody": {
                    "id": 15341,
                    "nodeType": "Block",
                    "src": "4919:402:56",
                    "statements": [
                      {
                        "expression": {
                          "id": 15339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15323,
                            "name": "receivedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15317,
                            "src": "5005:14:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 15326,
                                "name": "maturityTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15293,
                                "src": "5060:12:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 15327,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15295,
                                "src": "5090:6:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 15328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5114:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 15333,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "5196:4:56",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BondWrapper_$15571",
                                          "typeString": "contract BondWrapper"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BondWrapper_$15571",
                                          "typeString": "contract BondWrapper"
                                        }
                                      ],
                                      "id": 15332,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5188:7:56",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 15331,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5188:7:56",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 15334,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5188:13:56",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 15335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5231:4:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "id": 15336,
                                    "name": "extraData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15303,
                                    "src": "5268:9:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 15329,
                                    "name": "IHyperdrive",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4675,
                                    "src": "5133:11:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$4675_$",
                                      "typeString": "type(contract IHyperdrive)"
                                    }
                                  },
                                  "id": 15330,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5145:7:56",
                                  "memberName": "Options",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4512,
                                  "src": "5133:19:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_Options_$4512_storage_ptr_$",
                                    "typeString": "type(struct IHyperdrive.Options storage pointer)"
                                  }
                                },
                                "id": 15337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "nameLocations": [
                                  "5175:11:56",
                                  "5223:6:56",
                                  "5257:9:56"
                                ],
                                "names": [
                                  "destination",
                                  "asBase",
                                  "extraData"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "5133:163:56",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Options_$4512_memory_ptr",
                                  "typeString": "struct IHyperdrive.Options memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Options_$4512_memory_ptr",
                                  "typeString": "struct IHyperdrive.Options memory"
                                }
                              ],
                              "expression": {
                                "id": 15324,
                                "name": "hyperdrive",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15127,
                                "src": "5022:10:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHyperdrive_$4675",
                                  "typeString": "contract IHyperdrive"
                                }
                              },
                              "id": 15325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5033:9:56",
                              "memberName": "closeLong",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4714,
                              "src": "5022:20:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Options_$4512_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256,struct IHyperdrive.Options memory) external returns (uint256)"
                              }
                            },
                            "id": 15338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5022:288:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5005:305:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15340,
                        "nodeType": "ExpressionStatement",
                        "src": "5005:305:56"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 15360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 15353,
                          "name": "deposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15141,
                          "src": "5618:8:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 15357,
                        "indexExpression": {
                          "expression": {
                            "id": 15354,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5627:3:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 15355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5631:6:56",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5627:10:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5618:20:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 15358,
                      "indexExpression": {
                        "id": 15356,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15307,
                        "src": "5639:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5618:29:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 15359,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15295,
                      "src": "5651:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5618:39:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15361,
                  "nodeType": "ExpressionStatement",
                  "src": "5618:39:56"
                },
                {
                  "assignments": [
                    15363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15363,
                      "mutability": "mutable",
                      "name": "mintedFromBonds",
                      "nameLocation": "5778:15:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 15429,
                      "src": "5770:23:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15362,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5770:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15370,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 15366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 15364,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15295,
                            "src": "5797:6:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 15365,
                            "name": "mintPercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15134,
                            "src": "5806:11:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5797:20:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 15367,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5796:22:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31305f303030",
                      "id": 15368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5821:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "src": "5796:31:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5770:57:56"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15371,
                      "name": "receivedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15317,
                      "src": "5841:14:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 15372,
                      "name": "mintedFromBonds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15363,
                      "src": "5858:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5841:32:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15380,
                  "nodeType": "IfStatement",
                  "src": "5837:101:56",
                  "trueBody": {
                    "id": 15379,
                    "nodeType": "Block",
                    "src": "5875:63:56",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 15374,
                              "name": "IHyperdrive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4675,
                              "src": "5896:11:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$4675_$",
                                "typeString": "type(contract IHyperdrive)"
                              }
                            },
                            "id": 15376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5908:17:56",
                            "memberName": "InsufficientPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4639,
                            "src": "5896:29:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 15377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5896:31:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15378,
                        "nodeType": "RevertStatement",
                        "src": "5889:38:56"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    15382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15382,
                      "mutability": "mutable",
                      "name": "userFunds",
                      "nameLocation": "6037:9:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 15429,
                      "src": "6029:17:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15381,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6029:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15386,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15383,
                      "name": "receivedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15317,
                      "src": "6049:14:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 15384,
                      "name": "mintedFromBonds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15363,
                      "src": "6066:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6049:32:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6029:52:56"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 15391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15387,
                      "name": "andBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15297,
                      "src": "6174:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 15390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 15388,
                        "name": "mintedFromBonds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15363,
                        "src": "6185:15:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 15389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6203:1:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6185:19:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6174:30:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15403,
                  "nodeType": "IfStatement",
                  "src": "6170:137:56",
                  "trueBody": {
                    "id": 15402,
                    "nodeType": "Block",
                    "src": "6206:101:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 15393,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6226:3:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6230:6:56",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6226:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15395,
                              "name": "mintedFromBonds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15363,
                              "src": "6238:15:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 15392,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63689,
                            "src": "6220:5:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 15396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6220:34:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15397,
                        "nodeType": "ExpressionStatement",
                        "src": "6220:34:56"
                      },
                      {
                        "expression": {
                          "id": 15400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 15398,
                            "name": "userFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15382,
                            "src": "6268:9:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 15399,
                            "name": "mintedFromBonds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15363,
                            "src": "6281:15:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6268:28:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15401,
                        "nodeType": "ExpressionStatement",
                        "src": "6268:28:56"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15404,
                      "name": "userFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "6379:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 15405,
                      "name": "minOutput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15301,
                      "src": "6391:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6379:21:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15412,
                  "nodeType": "IfStatement",
                  "src": "6375:59:56",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 15407,
                          "name": "IHyperdrive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4675,
                          "src": "6409:11:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$4675_$",
                            "typeString": "type(contract IHyperdrive)"
                          }
                        },
                        "id": 15409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6421:11:56",
                        "memberName": "OutputLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4553,
                        "src": "6409:23:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 15410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6409:25:56",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 15411,
                    "nodeType": "RevertStatement",
                    "src": "6402:32:56"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15413,
                      "name": "userFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15382,
                      "src": "6500:9:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6512:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6500:13:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15428,
                  "nodeType": "IfStatement",
                  "src": "6496:102:56",
                  "trueBody": {
                    "id": 15427,
                    "nodeType": "Block",
                    "src": "6515:83:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 15423,
                              "name": "destination",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15299,
                              "src": "6564:11:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15424,
                              "name": "userFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15382,
                              "src": "6577:9:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 15419,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15131,
                                      "src": "6543:5:56",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$3872",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$3872",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 15418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6535:7:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 15417,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6535:7:56",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 15420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6535:14:56",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15416,
                                "name": "ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63690,
                                "src": "6529:5:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20_$63690_$",
                                  "typeString": "type(contract ERC20)"
                                }
                              },
                              "id": 15421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6529:21:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$63690",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 15422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6551:12:56",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 63978,
                            "src": "6529:34:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$63690_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$63690_$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 15425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6529:58:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15426,
                        "nodeType": "ExpressionStatement",
                        "src": "6529:58:56"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 15291,
              "nodeType": "StructuredDocumentation",
              "src": "3688:796:56",
              "text": "@notice Closes a user account by selling the bond and then transferring\n         the delta value of that sale vs the erc20 tokens minted by its\n         deposit. Optionally also burns the ERC20 wrapper from the user,\n         if enabled it will transfer both the delta of sale value and the\n         value of the burned token.\n @param  maturityTime The bond's expiry time.\n @param amount The amount of bonds to redeem.\n @param andBurn If true it will burn the number of erc20 minted by this\n        deposited bond.\n @param destination The address which gets credited with this withdraw.\n @param minOutput The min amount the user expects transferred to them.\n @param extraData Extra data to pass to the yield source."
            },
            "functionSelector": "0f28159e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "close",
            "nameLocation": "4498:5:56",
            "parameters": {
              "id": 15304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15293,
                  "mutability": "mutable",
                  "name": "maturityTime",
                  "nameLocation": "4521:12:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15430,
                  "src": "4513:20:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4513:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15295,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4551:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15430,
                  "src": "4543:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4543:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15297,
                  "mutability": "mutable",
                  "name": "andBurn",
                  "nameLocation": "4572:7:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15430,
                  "src": "4567:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15296,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4567:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15299,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "4597:11:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15430,
                  "src": "4589:19:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4589:7:56",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15301,
                  "mutability": "mutable",
                  "name": "minOutput",
                  "nameLocation": "4626:9:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15430,
                  "src": "4618:17:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4618:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15303,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "4658:9:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15430,
                  "src": "4645:22:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15302,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4645:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4503:170:56"
            },
            "returnParameters": {
              "id": 15305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4683:0:56"
            },
            "scope": 15571,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 15493,
            "nodeType": "FunctionDefinition",
            "src": "6893:961:56",
            "nodes": [],
            "body": {
              "id": 15492,
              "nodeType": "Block",
              "src": "6961:893:56",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15438,
                      "name": "maturityTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15433,
                      "src": "7029:12:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 15439,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7044:5:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 15440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7050:9:56",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7044:15:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7029:30:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15448,
                  "nodeType": "IfStatement",
                  "src": "7025:96:56",
                  "trueBody": {
                    "id": 15447,
                    "nodeType": "Block",
                    "src": "7061:60:56",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 15442,
                              "name": "IHyperdrive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4675,
                              "src": "7082:11:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$4675_$",
                                "typeString": "type(contract IHyperdrive)"
                              }
                            },
                            "id": 15444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7094:14:56",
                            "memberName": "BondNotMatured",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4637,
                            "src": "7082:26:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 15445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7082:28:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15446,
                        "nodeType": "RevertStatement",
                        "src": "7075:35:56"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    15450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15450,
                      "mutability": "mutable",
                      "name": "assetId",
                      "nameLocation": "7185:7:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 15492,
                      "src": "7177:15:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15449,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7177:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15458,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 15453,
                            "name": "AssetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10382,
                            "src": "7230:7:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AssetId_$10382_$",
                              "typeString": "type(library AssetId)"
                            }
                          },
                          "id": 15454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7238:13:56",
                          "memberName": "AssetIdPrefix",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10088,
                          "src": "7230:21:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AssetIdPrefix_$10088_$",
                            "typeString": "type(enum AssetId.AssetIdPrefix)"
                          }
                        },
                        "id": 15455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7252:4:56",
                        "memberName": "Long",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10085,
                        "src": "7230:26:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$10088",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        }
                      },
                      {
                        "id": 15456,
                        "name": "maturityTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15433,
                        "src": "7270:12:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$10088",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15451,
                        "name": "AssetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10382,
                        "src": "7195:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AssetId_$10382_$",
                          "typeString": "type(library AssetId)"
                        }
                      },
                      "id": 15452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7203:13:56",
                      "memberName": "encodeAssetId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10111,
                      "src": "7195:21:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_AssetIdPrefix_$10088_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum AssetId.AssetIdPrefix,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 15457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7195:97:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7177:115:56"
                },
                {
                  "assignments": [
                    15460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15460,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "7310:7:56",
                      "nodeType": "VariableDeclaration",
                      "scope": 15492,
                      "src": "7302:15:56",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15459,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7302:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15469,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15463,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15450,
                        "src": "7341:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 15466,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7358:4:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondWrapper_$15571",
                              "typeString": "contract BondWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondWrapper_$15571",
                              "typeString": "contract BondWrapper"
                            }
                          ],
                          "id": 15465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7350:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7350:7:56",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7350:13:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 15461,
                        "name": "hyperdrive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15127,
                        "src": "7320:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHyperdrive_$4675",
                          "typeString": "contract IHyperdrive"
                        }
                      },
                      "id": 15462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7331:9:56",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5270,
                      "src": "7320:20:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view external returns (uint256)"
                      }
                    },
                    "id": 15468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7320:44:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7302:62:56"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15470,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15460,
                      "src": "7431:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7442:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7431:12:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15491,
                  "nodeType": "IfStatement",
                  "src": "7427:421:56",
                  "trueBody": {
                    "id": 15490,
                    "nodeType": "Block",
                    "src": "7445:403:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 15476,
                              "name": "maturityTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15433,
                              "src": "7580:12:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 15477,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15460,
                              "src": "7610:7:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 15478,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15460,
                              "src": "7635:7:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 15483,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "7723:4:56",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BondWrapper_$15571",
                                        "typeString": "contract BondWrapper"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BondWrapper_$15571",
                                        "typeString": "contract BondWrapper"
                                      }
                                    ],
                                    "id": 15482,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7715:7:56",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 15481,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7715:7:56",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 15484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7715:13:56",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "74727565",
                                  "id": 15485,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7758:4:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 15486,
                                  "name": "extraData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15435,
                                  "src": "7795:9:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 15479,
                                  "name": "IHyperdrive",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4675,
                                  "src": "7660:11:56",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$4675_$",
                                    "typeString": "type(contract IHyperdrive)"
                                  }
                                },
                                "id": 15480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7672:7:56",
                                "memberName": "Options",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4512,
                                "src": "7660:19:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Options_$4512_storage_ptr_$",
                                  "typeString": "type(struct IHyperdrive.Options storage pointer)"
                                }
                              },
                              "id": 15487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "7702:11:56",
                                "7750:6:56",
                                "7784:9:56"
                              ],
                              "names": [
                                "destination",
                                "asBase",
                                "extraData"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "7660:163:56",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Options_$4512_memory_ptr",
                                "typeString": "struct IHyperdrive.Options memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Options_$4512_memory_ptr",
                                "typeString": "struct IHyperdrive.Options memory"
                              }
                            ],
                            "expression": {
                              "id": 15473,
                              "name": "hyperdrive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15127,
                              "src": "7542:10:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IHyperdrive_$4675",
                                "typeString": "contract IHyperdrive"
                              }
                            },
                            "id": 15475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7553:9:56",
                            "memberName": "closeLong",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4714,
                            "src": "7542:20:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_struct$_Options_$4512_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,struct IHyperdrive.Options memory) external returns (uint256)"
                            }
                          },
                          "id": 15488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7542:295:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15489,
                        "nodeType": "ExpressionStatement",
                        "src": "7542:295:56"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 15431,
              "nodeType": "StructuredDocumentation",
              "src": "6610:278:56",
              "text": "@notice Sells all assets from the contract if they are matured, has no\n         effect if the contract has no assets from a timestamp.\n @param maturityTime The maturity time of the asset to sell.\n @param extraData Extra data to pass to the yield source."
            },
            "functionSelector": "d2ae9a0d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sweep",
            "nameLocation": "6902:5:56",
            "parameters": {
              "id": 15436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15433,
                  "mutability": "mutable",
                  "name": "maturityTime",
                  "nameLocation": "6916:12:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15493,
                  "src": "6908:20:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6908:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15435,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "6943:9:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15493,
                  "src": "6930:22:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15434,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6930:5:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6907:46:56"
            },
            "returnParameters": {
              "id": 15437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6961:0:56"
            },
            "scope": 15571,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 15518,
            "nodeType": "FunctionDefinition",
            "src": "8034:277:56",
            "nodes": [],
            "body": {
              "id": 15517,
              "nodeType": "Block",
              "src": "8073:238:56",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15500,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8168:3:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8172:6:56",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8168:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15502,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15496,
                        "src": "8180:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15499,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63689,
                      "src": "8162:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8162:25:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15504,
                  "nodeType": "ExpressionStatement",
                  "src": "8162:25:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15512,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8285:3:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8289:6:56",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8285:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15514,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15496,
                        "src": "8297:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 15508,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15131,
                                "src": "8264:5:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$3872",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$3872",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 15507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8256:7:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 15506,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8256:7:56",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 15509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8256:14:56",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 15505,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63690,
                          "src": "8250:5:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$63690_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 15510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8250:21:56",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$63690",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 15511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8272:12:56",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63978,
                      "src": "8250:34:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$63690_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_ERC20_$63690_$",
                        "typeString": "function (contract ERC20,address,uint256)"
                      }
                    },
                    "id": 15515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8250:54:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15516,
                  "nodeType": "ExpressionStatement",
                  "src": "8250:54:56"
                }
              ]
            },
            "documentation": {
              "id": 15494,
              "nodeType": "StructuredDocumentation",
              "src": "7860:169:56",
              "text": "@notice Burns a caller's erc20 and transfers the result from the\n         contract's token balance.\n @param amount The amount of erc20 wrapper to burn."
            },
            "functionSelector": "db006a75",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "8043:6:56",
            "parameters": {
              "id": 15497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15496,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8058:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15518,
                  "src": "8050:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8050:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8049:16:56"
            },
            "returnParameters": {
              "id": 15498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8073:0:56"
            },
            "scope": 15571,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 15570,
            "nodeType": "FunctionDefinition",
            "src": "8670:522:56",
            "nodes": [],
            "body": {
              "id": 15569,
              "nodeType": "Block",
              "src": "8810:382:56",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15530,
                        "name": "maturityTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15522,
                        "src": "8824:13:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 15531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8838:6:56",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8824:20:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 15532,
                        "name": "extraDatas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15527,
                        "src": "8848:10:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 15533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8859:6:56",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8848:17:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8824:41:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15541,
                  "nodeType": "IfStatement",
                  "src": "8820:112:56",
                  "trueBody": {
                    "id": 15540,
                    "nodeType": "Block",
                    "src": "8867:65:56",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 15535,
                              "name": "IHyperdrive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4675,
                              "src": "8888:11:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$4675_$",
                                "typeString": "type(contract IHyperdrive)"
                              }
                            },
                            "id": 15537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8900:19:56",
                            "memberName": "InputLengthMismatch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4641,
                            "src": "8888:31:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 15538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8888:33:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15539,
                        "nodeType": "RevertStatement",
                        "src": "8881:40:56"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 15563,
                    "nodeType": "Block",
                    "src": "9040:122:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 15551,
                                "name": "maturityTimes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15522,
                                "src": "9060:13:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 15553,
                              "indexExpression": {
                                "id": 15552,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15543,
                                "src": "9074:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9060:16:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 15554,
                                "name": "extraDatas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15527,
                                "src": "9078:10:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "bytes memory[] memory"
                                }
                              },
                              "id": 15556,
                              "indexExpression": {
                                "id": 15555,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15543,
                                "src": "9089:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9078:13:56",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 15550,
                            "name": "sweep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15493,
                            "src": "9054:5:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,bytes memory)"
                            }
                          },
                          "id": 15557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9054:38:56",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15558,
                        "nodeType": "ExpressionStatement",
                        "src": "9054:38:56"
                      },
                      {
                        "id": 15562,
                        "nodeType": "UncheckedBlock",
                        "src": "9106:46:56",
                        "statements": [
                          {
                            "expression": {
                              "id": 15560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9134:3:56",
                              "subExpression": {
                                "id": 15559,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15543,
                                "src": "9136:1:56",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 15561,
                            "nodeType": "ExpressionStatement",
                            "src": "9134:3:56"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15546,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15543,
                      "src": "9012:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 15547,
                        "name": "maturityTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15522,
                        "src": "9016:13:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 15548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9030:6:56",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9016:20:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9012:24:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15564,
                  "initializationExpression": {
                    "assignments": [
                      15543
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 15543,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9005:1:56",
                        "nodeType": "VariableDeclaration",
                        "scope": 15564,
                        "src": "8997:9:56",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15542,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8997:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 15545,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 15544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9009:1:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8997:13:56"
                  },
                  "nodeType": "ForStatement",
                  "src": "8992:170:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15566,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15524,
                        "src": "9178:6:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15565,
                      "name": "redeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15518,
                      "src": "9171:6:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9171:14:56",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15568,
                  "nodeType": "ExpressionStatement",
                  "src": "9171:14:56"
                }
              ]
            },
            "documentation": {
              "id": 15519,
              "nodeType": "StructuredDocumentation",
              "src": "8317:348:56",
              "text": "@notice Calls both force close and redeem to enable easy liquidation of\n         a user account.\n @param  maturityTimes Maturity times which the caller would like to\n         sweep before redeeming.\n @param amount The amount of erc20 wrapper to burn.\n @param extraDatas Extra data to pass to the yield source."
            },
            "functionSelector": "e37c182c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sweepAndRedeem",
            "nameLocation": "8679:14:56",
            "parameters": {
              "id": 15528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15522,
                  "mutability": "mutable",
                  "name": "maturityTimes",
                  "nameLocation": "8722:13:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15570,
                  "src": "8703:32:56",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15520,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8703:7:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15521,
                    "nodeType": "ArrayTypeName",
                    "src": "8703:9:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15524,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8753:6:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15570,
                  "src": "8745:14:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8745:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15527,
                  "mutability": "mutable",
                  "name": "extraDatas",
                  "nameLocation": "8784:10:56",
                  "nodeType": "VariableDeclaration",
                  "scope": 15570,
                  "src": "8769:25:56",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15525,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "8769:5:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 15526,
                    "nodeType": "ArrayTypeName",
                    "src": "8769:7:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8693:107:56"
            },
            "returnParameters": {
              "id": 15529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8810:0:56"
            },
            "scope": 15571,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15118,
              "name": "ERC20",
              "nameLocations": [
                "694:5:56"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63690,
              "src": "694:5:56"
            },
            "id": 15119,
            "nodeType": "InheritanceSpecifier",
            "src": "694:5:56"
          }
        ],
        "canonicalName": "BondWrapper",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15117,
          "nodeType": "StructuredDocumentation",
          "src": "348:322:56",
          "text": "@author DELV\n @title BondWrapper\n @notice A token that wraps Hyperdrive long positions.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          15571,
          63690
        ],
        "name": "BondWrapper",
        "nameLocation": "679:11:56",
        "scope": 15572,
        "usedErrors": [
          4553,
          4631,
          4635,
          4637,
          4639,
          4641,
          4643,
          4646
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 56
} as const;
