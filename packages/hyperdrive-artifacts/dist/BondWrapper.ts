{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IHyperdrive",
          "name": "_hyperdrive",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_mintPercent",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BondMatured",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BondNotMatured",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTimestamp",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintPercentTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OutputLimit",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maturityTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "andBurn",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minOutput",
          "type": "uint256"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "assetId",
          "type": "uint256"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hyperdrive",
      "outputs": [
        {
          "internalType": "contract IHyperdrive",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maturityTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maturityTime",
          "type": "uint256"
        }
      ],
      "name": "sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "maturityTimes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sweepAndRedeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b5060405162001c2838038062001c28833981016040819052620000359162000267565b81816012600062000047848262000395565b50600162000056838262000395565b5060ff81166080524660a0526200006c620000ed565b60c0525050612710841090506200009657604051632506d5d760e11b815260040160405180910390fd5b505060036020526000197f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff81905530600090815260409020556001600160a01b0392831660e05291166101005261012052620004df565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405162000121919062000461565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b03811681146200019f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ca57600080fd5b81516001600160401b0380821115620001e757620001e7620001a2565b604051601f8301601f19908116603f01168101908282118183101715620002125762000212620001a2565b816040528381526020925086838588010111156200022f57600080fd5b600091505b8382101562000253578582018301518183018401529082019062000234565b600093810190920192909252949350505050565b600080600080600060a086880312156200028057600080fd5b85516200028d8162000189565b6020870151909550620002a08162000189565b6040870151606088015191955093506001600160401b0380821115620002c557600080fd5b620002d389838a01620001b8565b93506080880151915080821115620002ea57600080fd5b50620002f988828901620001b8565b9150509295509295909350565b600181811c908216806200031b57607f821691505b6020821081036200033c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200039057600081815260208120601f850160051c810160208610156200036b5750805b601f850160051c820191505b818110156200038c5782815560010162000377565b5050505b505050565b81516001600160401b03811115620003b157620003b1620001a2565b620003c981620003c2845462000306565b8462000342565b602080601f831160018114620004015760008415620003e85750858301515b600019600386901b1c1916600185901b1785556200038c565b600085815260208120601f198616915b82811015620004325788860151825594840194600190910190840162000411565b5085821015620004515787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620004718162000306565b600182811680156200048c5760018114620004a257620004d3565b60ff1984168752821515830287019450620004d3565b8760005260208060002060005b85811015620004ca5781548a820152908401908201620004af565b50505082870194505b50929695505050505050565b60805160a05160c05160e05161010051610120516116c1620005676000396000818161027d015281816106d80152610d2c015260008181610374015281816107830152610c000152600081816101410152818161061601528181610880015281816109240152610cc1015260006105aa01526000610575015260006101e701526116c16000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806380910858116100b8578063d6d681771161007c578063d6d68177146102e0578063db006a751461030b578063dd62ed3e1461031e578063dec16f0314610349578063e7d3fe6b1461035c578063fc0c546a1461036f57600080fd5b8063809108581461027857806395d89b411461029f578063a9059cbb146102a7578063aa60e733146102ba578063d505accf146102cd57600080fd5b8063313ce567116100ff578063313ce567146101e25780633644e5151461021b57806351d61b6e1461022357806370a08231146102385780637ecebe001461025857600080fd5b806304eb01481461013c57806306fdde0314610180578063095ea7b31461019557806318160ddd146101b857806323b872dd146101cf575b600080fd5b6101637f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610188610396565b6040516101779190611211565b6101a86101a3366004611260565b610424565b6040519015158152602001610177565b6101c160025481565b604051908152602001610177565b6101a86101dd36600461128a565b610491565b6102097f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610177565b6101c1610571565b6102366102313660046112d4565b6105cc565b005b6101c1610246366004611324565b60036020526000908152604090205481565b6101c1610266366004611324565b60056020526000908152604090205481565b6101c17f000000000000000000000000000000000000000000000000000000000000000081565b6101886107b5565b6101a86102b5366004611260565b6107c2565b6102366102c8366004611346565b610828565b6102366102db36600461135f565b6109a0565b6101c16102ee366004611260565b600660209081526000928352604080842090915290825290205481565b610236610319366004611346565b610be9565b6101c161032c3660046113d2565b600460209081526000928352604080842090915290825290205481565b610236610357366004611405565b610c2a565b61023661036a366004611480565b610c68565b6101637f000000000000000000000000000000000000000000000000000000000000000081565b600080546103a3906114b5565b80601f01602080910402602001604051908101604052809291908181526020018280546103cf906114b5565b801561041c5780601f106103f15761010080835404028352916020019161041c565b820191906000526020600020905b8154815290600101906020018083116103ff57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061047f9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146104ed576104c88382611505565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b03851660009081526003602052604081208054859290610515908490611505565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061166c8339815191529061055e9087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146105a7576105a2610dab565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b60006105d9600187610e45565b90506000428711156106925760405163fa3fcea760e01b8152600481018890526024810187905260006044820152306064820152600160848201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063fa3fcea79060a4016020604051808303816000875af1158015610667573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068b9190611518565b905061069e565b61069b87610828565b50845b336000908152600660209081526040808320858452909152812080548892906106c8908490611505565b90915550600090506127106106fd7f000000000000000000000000000000000000000000000000000000000000000089611531565b6107079190611548565b90508082101561072a5760405163d548170360e01b815260040160405180910390fd5b60006107368284611505565b90508615610755576107483383610e7a565b610752828261156a565b90505b848110156107765760405163c972651760e01b815260040160405180910390fd5b6107aa6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168783610ee4565b505050505050505050565b600180546103a3906114b5565b336000908152600360205260408120805483919083906107e3908490611505565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061166c8339815191529061047f9086815260200190565b428111156108495760405163915eceb160e01b815260040160405180910390fd5b6000610856600183610e45565b604051631b2b776160e11b8152600481018290523060248201529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633656eec290604401602060405180830381865afa1580156108c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108eb9190611518565b9050801561099b5760405163fa3fcea760e01b8152600481018490526024810182905260448101829052306064820152600160848201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063fa3fcea79060a4016020604051808303816000875af1158015610975573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109999190611518565b505b505050565b428410156109f55760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b60006001610a01610571565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610b0d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610b435750876001600160a01b0316816001600160a01b0316145b610b805760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016109ec565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b610bf33382610e7a565b610c276001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610ee4565b50565b60005b82811015610c5e57610c56848483818110610c4a57610c4a61157d565b90506020020135610828565b600101610c2d565b5061099b81610be9565b428311610c8857604051630fe391af60e21b815260040160405180910390fd5b6000610c95600185610e45565b604051630e07895b60e11b815260048101829052336024820152306044820152606481018590529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c0f12b690608401600060405180830381600087803b158015610d0d57600080fd5b505af1158015610d21573d6000803e3d6000fd5b5050505060006127107f000000000000000000000000000000000000000000000000000000000000000085610d569190611531565b610d609190611548565b9050610d6c8382610f36565b6001600160a01b038316600090815260066020908152604080832085845290915281208054869290610d9f90849061156a565b90915550505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610ddd9190611593565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60006001600160f81b03821115610e6f5760405163b7d0949760e01b815260040160405180910390fd5b5060f89190911b1790565b6001600160a01b03821660009081526003602052604081208054839290610ea2908490611505565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061166c833981519152906020015b60405180910390a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261099b908490610f88565b8060026000828254610f48919061156a565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061166c8339815191529101610ed8565b6000610fdd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661105d9092919063ffffffff16565b9050805160001480610ffe575080806020019051810190610ffe9190611632565b61099b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109ec565b606061106c8484600085611074565b949350505050565b6060824710156110d55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109ec565b600080866001600160a01b031685876040516110f1919061164f565b60006040518083038185875af1925050503d806000811461112e576040519150601f19603f3d011682016040523d82523d6000602084013e611133565b606091505b50915091506111448783838761114f565b979650505050505050565b606083156111be5782516000036111b7576001600160a01b0385163b6111b75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109ec565b508161106c565b61106c83838151156111d35781518083602001fd5b8060405162461bcd60e51b81526004016109ec9190611211565b60005b838110156112085781810151838201526020016111f0565b50506000910152565b60208152600082518060208401526112308160408501602087016111ed565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461125b57600080fd5b919050565b6000806040838503121561127357600080fd5b61127c83611244565b946020939093013593505050565b60008060006060848603121561129f57600080fd5b6112a884611244565b92506112b660208501611244565b9150604084013590509250925092565b8015158114610c2757600080fd5b600080600080600060a086880312156112ec57600080fd5b85359450602086013593506040860135611305816112c6565b925061131360608701611244565b949793965091946080013592915050565b60006020828403121561133657600080fd5b61133f82611244565b9392505050565b60006020828403121561135857600080fd5b5035919050565b600080600080600080600060e0888a03121561137a57600080fd5b61138388611244565b965061139160208901611244565b95506040880135945060608801359350608088013560ff811681146113b557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156113e557600080fd5b6113ee83611244565b91506113fc60208401611244565b90509250929050565b60008060006040848603121561141a57600080fd5b833567ffffffffffffffff8082111561143257600080fd5b818601915086601f83011261144657600080fd5b81358181111561145557600080fd5b8760208260051b850101111561146a57600080fd5b6020928301989097509590910135949350505050565b60008060006060848603121561149557600080fd5b83359250602084013591506114ac60408501611244565b90509250925092565b600181811c908216806114c957607f821691505b6020821081036114e957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561048b5761048b6114ef565b60006020828403121561152a57600080fd5b5051919050565b808202811582820484141761048b5761048b6114ef565b60008261156557634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561048b5761048b6114ef565b634e487b7160e01b600052603260045260246000fd5b600080835481600182811c9150808316806115af57607f831692505b602080841082036115ce57634e487b7160e01b86526022600452602486fd5b8180156115e257600181146115f757611624565b60ff1986168952841515850289019650611624565b60008a81526020902060005b8681101561161c5781548b820152908501908301611603565b505084890196505b509498975050505050505050565b60006020828403121561164457600080fd5b815161133f816112c6565b600082516116618184602087016111ed565b919091019291505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220950a39d3103be8cf424cd98e60e6f93d8940fdbc57ac3f5a32a9a60a5b684e5e64736f6c63430008130033",
    "sourceMap": "695:7416:36:-:0;;;1554:993;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1724:5;1731:7;1740:2;2094:4:94;:12;1724:5:36;2094:4:94;:12;:::i;:::-;-1:-1:-1;2116:6:94;:16;2125:7;2116:6;:16;:::i;:::-;-1:-1:-1;2142:20:94;;;;;2192:13;2173:32;;2242:24;:22;:24::i;:::-;2215:51;;-1:-1:-1;;1774:6:36::1;1758:22:::0;::::1;::::0;-1:-1:-1;1754:92:36::1;;1803:32;;-1:-1:-1::0;;;1803:32:36::1;;;;;;;;;;;1754:92;-1:-1:-1::0;;2320:9:36::1;:21;::::0;-1:-1:-1;;2320:21:36;:41;;;2389:4:::1;2320:21;2371:24:::0;;;2320:21;2371:24;;:44;-1:-1:-1;;;;;2456:24:36;;::::1;;::::0;2490:14;::::1;;::::0;2514:26:::1;::::0;695:7416;;5510:446:94;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;5790:25:165;;;;5831:18;;5824:34;;;;5833:14:94;5874:18:165;;;5867:34;5869:13:94;5917:18:165;;;5910:34;5912:4:94;5960:19:165;;;5953:61;5762:19;;5640:295:94;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;14:144:165:-;-1:-1:-1;;;;;102:31:165;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:127::-;224:10;219:3;215:20;212:1;205:31;255:4;252:1;245:15;279:4;276:1;269:15;295:840;349:5;402:3;395:4;387:6;383:17;379:27;369:55;;420:1;417;410:12;369:55;443:13;;-1:-1:-1;;;;;505:10:165;;;502:36;;;518:18;;:::i;:::-;593:2;587:9;561:2;647:13;;-1:-1:-1;;643:22:165;;;667:2;639:31;635:40;623:53;;;691:18;;;711:22;;;688:46;685:72;;;737:18;;:::i;:::-;777:10;773:2;766:22;812:2;804:6;797:18;834:4;824:14;;879:3;874:2;869;861:6;857:15;853:24;850:33;847:53;;;896:1;893;886:12;847:53;918:1;909:10;;928:133;942:2;939:1;936:9;928:133;;;1030:14;;;1026:23;;1020:30;999:14;;;995:23;;988:63;953:10;;;;928:133;;;1103:1;1081:15;;;1077:24;;;1070:35;;;;1085:6;295:840;-1:-1:-1;;;;295:840:165:o;1140:948::-;1301:6;1309;1317;1325;1333;1386:3;1374:9;1365:7;1361:23;1357:33;1354:53;;;1403:1;1400;1393:12;1354:53;1435:9;1429:16;1454:44;1492:5;1454:44;:::i;:::-;1567:2;1552:18;;1546:25;1517:5;;-1:-1:-1;1580:46:165;1546:25;1580:46;:::i;:::-;1692:2;1677:18;;1671:25;1740:2;1725:18;;1719:25;1645:7;;-1:-1:-1;1671:25:165;-1:-1:-1;;;;;;1793:14:165;;;1790:34;;;1820:1;1817;1810:12;1790:34;1843:61;1896:7;1887:6;1876:9;1872:22;1843:61;:::i;:::-;1833:71;;1950:3;1939:9;1935:19;1929:26;1913:42;;1980:2;1970:8;1967:16;1964:36;;;1996:1;1993;1986:12;1964:36;;2019:63;2074:7;2063:8;2052:9;2048:24;2019:63;:::i;:::-;2009:73;;;1140:948;;;;;;;;:::o;2093:380::-;2172:1;2168:12;;;;2215;;;2236:61;;2290:4;2282:6;2278:17;2268:27;;2236:61;2343:2;2335:6;2332:14;2312:18;2309:38;2306:161;;2389:10;2384:3;2380:20;2377:1;2370:31;2424:4;2421:1;2414:15;2452:4;2449:1;2442:15;2306:161;;2093:380;;;:::o;2604:545::-;2706:2;2701:3;2698:11;2695:448;;;2742:1;2767:5;2763:2;2756:17;2812:4;2808:2;2798:19;2882:2;2870:10;2866:19;2863:1;2859:27;2853:4;2849:38;2918:4;2906:10;2903:20;2900:47;;;-1:-1:-1;2941:4:165;2900:47;2996:2;2991:3;2987:12;2984:1;2980:20;2974:4;2970:31;2960:41;;3051:82;3069:2;3062:5;3059:13;3051:82;;;3114:17;;;3095:1;3084:13;3051:82;;;3055:3;;;2695:448;2604:545;;;:::o;3325:1352::-;3445:10;;-1:-1:-1;;;;;3467:30:165;;3464:56;;;3500:18;;:::i;:::-;3529:97;3619:6;3579:38;3611:4;3605:11;3579:38;:::i;:::-;3573:4;3529:97;:::i;:::-;3681:4;;3745:2;3734:14;;3762:1;3757:663;;;;4464:1;4481:6;4478:89;;;-1:-1:-1;4533:19:165;;;4527:26;4478:89;-1:-1:-1;;3282:1:165;3278:11;;;3274:24;3270:29;3260:40;3306:1;3302:11;;;3257:57;4580:81;;3727:944;;3757:663;2551:1;2544:14;;;2588:4;2575:18;;-1:-1:-1;;3793:20:165;;;3911:236;3925:7;3922:1;3919:14;3911:236;;;4014:19;;;4008:26;3993:42;;4106:27;;;;4074:1;4062:14;;;;3941:19;;3911:236;;;3915:3;4175:6;4166:7;4163:19;4160:201;;;4236:19;;;4230:26;-1:-1:-1;;4319:1:165;4315:14;;;4331:3;4311:24;4307:37;4303:42;4288:58;4273:74;;4160:201;-1:-1:-1;;;;;4407:1:165;4391:14;;;4387:22;4374:36;;-1:-1:-1;3325:1352:165:o;4682:844::-;4812:3;4841:1;4874:6;4868:13;4904:36;4930:9;4904:36;:::i;:::-;4959:1;4976:18;;;5003:133;;;;5150:1;5145:356;;;;4969:532;;5003:133;-1:-1:-1;;5036:24:165;;5024:37;;5109:14;;5102:22;5090:35;;5081:45;;;-1:-1:-1;5003:133:165;;5145:356;5176:6;5173:1;5166:17;5206:4;5251:2;5248:1;5238:16;5276:1;5290:165;5304:6;5301:1;5298:13;5290:165;;;5382:14;;5369:11;;;5362:35;5425:16;;;;5319:10;;5290:165;;;5294:3;;;5484:6;5479:3;5475:16;5468:23;;4969:532;-1:-1:-1;5517:3:165;;4682:844;-1:-1:-1;;;;;;4682:844:165:o;5531:489::-;695:7416:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "695:7416:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;798:39;;;;;;;;-1:-1:-1;;;;;198:32:165;;;180:51;;168:2;153:18;798:39:36;;;;;;;;1031:18:94;;;:::i;:::-;;;;;;;:::i;2461:211::-;;;;;;:::i;:::-;;:::i;:::-;;;1500:14:165;;1493:22;1475:41;;1463:2;1448:18;2461:211:94;1335:187:165;1304:26:94;;;;;;;;;1673:25:165;;;1661:2;1646:18;1304:26:94;1527:177:165;3057:592:94;;;;;;:::i;:::-;;:::i;1083:31::-;;;;;;;;2214:4:165;2202:17;;;2184:36;;2172:2;2157:18;1083:31:94;2042:184:165;5327:177:94;;;:::i;4277:1803:36:-;;;;;;:::i;:::-;;:::i;:::-;;1337:44:94;;;;;;:::i;:::-;;;;;;;;;;;;;;1751:41;;;;;;:::i;:::-;;;;;;;;;;;;;;1002:36:36;;;;;1056:20:94;;;:::i;2678:373::-;;;;;;:::i;:::-;;:::i;6302:776:36:-;;;;;;:::i;:::-;;:::i;3838:1483:94:-;;;;;;:::i;:::-;;:::i;1129:91:36:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;7242:259;;;;;;:::i;:::-;;:::i;1388:64:94:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;7760:349:36;;;;;;:::i;:::-;;:::i;2824:746::-;;;;;;:::i;:::-;;:::i;885:29::-;;;;;1031:18:94;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2561:10;2535:4;2551:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2551:30:94;;;;;;;;;;:39;;;2606:37;2535:4;;2551:30;;2606:37;;;;2584:6;1673:25:165;;1661:2;1646:18;;1527:177;2606:37:94;;;;;;;;-1:-1:-1;2661:4:94;2461:211;;;;;:::o;3057:592::-;-1:-1:-1;;;;;3209:15:94;;3175:4;3209:15;;;:9;:15;;;;;;;;3225:10;3209:27;;;;;;;;-1:-1:-1;;3287:28:94;;3283:80;;3347:16;3357:6;3347:7;:16;:::i;:::-;-1:-1:-1;;;;;3317:15:94;;;;;;:9;:15;;;;;;;;3333:10;3317:27;;;;;;;:46;3283:80;-1:-1:-1;;;;;3374:15:94;;;;;;:9;:15;;;;;:25;;3393:6;;3374:15;:25;;3393:6;;3374:25;:::i;:::-;;;;-1:-1:-1;;;;;;;3545:13:94;;;;;;;:9;:13;;;;;;;:23;;;;;;3594:26;3545:13;;3594:26;;;-1:-1:-1;;;;;;;;;;;3594:26:94;;;3562:6;1673:25:165;;1661:2;1646:18;;1527:177;3594:26:94;;;;;;;;-1:-1:-1;3638:4:94;;3057:592;-1:-1:-1;;;;3057:592:94:o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5403:94;;5327:177;:::o;5410:87::-;-1:-1:-1;5446:24:94;;5327:177::o;4277:1803:36:-;4480:15;4498:97;4533:26;4573:12;4498:21;:97::i;:::-;4480:115;;4606:22;4657:15;4642:12;:30;4638:530;;;4776:160;;-1:-1:-1;;;4776:160:36;;;;;6556:25:165;;;6597:18;;;6590:34;;;4868:1:36;6640:18:165;;;6633:34;4895:4:36;6683:18:165;;;6676:60;4918:4:36;6752:19:165;;;6745:51;4776:10:36;-1:-1:-1;;;;;4776:20:36;;;;6528:19:165;;4776:160:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4759:177;;4638:530;;;4998:19;5004:12;4998:5;:19::i;:::-;-1:-1:-1;5151:6:36;4638:530;5222:10;5213:20;;;;:8;:20;;;;;;;;:29;;;;;;;;:39;;5246:6;;5213:20;:39;;5246:6;;5213:39;:::i;:::-;;;;-1:-1:-1;5363:23:36;;-1:-1:-1;5414:6:36;5390:20;5399:11;5390:6;:20;:::i;:::-;5389:31;;;;:::i;:::-;5363:57;;5452:15;5435:14;:32;5431:88;;;5488:31;;-1:-1:-1;;;5488:31:36;;;;;;;;;;;5431:88;5590:17;5610:32;5627:15;5610:14;:32;:::i;:::-;5590:52;;5732:7;5728:114;;;5755:34;5761:10;5773:15;5755:5;:34::i;:::-;5803:28;5816:15;5803:28;;:::i;:::-;;;5728:114;5926:9;5914;:21;5910:59;;;5944:25;;-1:-1:-1;;;5944:25:36;;;;;;;;;;;5910:59;6031:42;-1:-1:-1;;;;;6031:5:36;:18;6050:11;6063:9;6031:18;:42::i;:::-;4439:1641;;;;4277:1803;;;;;:::o;1056:20:94:-;;;;;;;:::i;2678:373::-;2774:10;2748:4;2764:21;;;:9;:21;;;;;:31;;2789:6;;2764:21;2748:4;;2764:31;;2789:6;;2764:31;:::i;:::-;;;;-1:-1:-1;;;;;;;2941:13:94;;;;;;:9;:13;;;;;;;:23;;;;;;2990:32;2999:10;;-1:-1:-1;;;;;;;;;;;2990:32:94;;;2958:6;1673:25:165;;1661:2;1646:18;;1527:177;6302:776:36;6423:15;6408:12;:30;6404:71;;;6447:28;;-1:-1:-1;;;6447:28:36;;;;;;;;;;;6404:71;6530:15;6548:97;6583:26;6623:12;6548:21;:97::i;:::-;6673:44;;-1:-1:-1;;;6673:44:36;;;;;7695:25:165;;;6711:4:36;7736:18:165;;;7729:60;6530:115:36;;-1:-1:-1;6655:15:36;;-1:-1:-1;;;;;6673:10:36;:20;;;;7668:18:165;;6673:44:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6655:62;-1:-1:-1;6783:12:36;;6779:293;;6894:167;;-1:-1:-1;;;6894:167:36;;;;;6556:25:165;;;6597:18;;;6590:34;;;6640:18;;;6633:34;;;7020:4:36;6683:18:165;;;6676:60;7043:4:36;6752:19:165;;;6745:51;6894:10:36;-1:-1:-1;;;;;6894:20:36;;;;6528:19:165;;6894:167:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6779:293;6346:732;;6302:776;:::o;3838:1483:94:-;4057:15;4045:8;:27;;4037:63;;;;-1:-1:-1;;;4037:63:94;;8506:2:165;4037:63:94;;;8488:21:165;8545:2;8525:18;;;8518:30;8584:25;8564:18;;;8557:53;8627:18;;4037:63:94;;;;;;;;;4265:24;4292:805;4428:18;:16;:18::i;:::-;-1:-1:-1;;;;;4873:13:94;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4511:449;;4555:165;4511:449;;;8943:25:165;9022:18;;;9015:43;;;;9094:15;;;9074:18;;;9067:43;9126:18;;;9119:34;;;9169:19;;;9162:35;;;;9213:19;;;;9206:35;;;4511:449:94;;;;;;;;;;8915:19:165;;;4511:449:94;;;4472:514;;;;;;;;-1:-1:-1;;;4350:658:94;;;9510:27:165;9553:11;;;9546:27;;;;9589:12;;;9582:28;;;;9626:12;;4350:658:94;;;-1:-1:-1;;4350:658:94;;;;;;;;;4319:707;;4350:658;4319:707;;;;4292:805;;;;;;;;;9876:25:165;9949:4;9937:17;;9917:18;;;9910:45;9971:18;;;9964:34;;;10014:18;;;10007:34;;;9848:19;;4292:805:94;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4292:805:94;;-1:-1:-1;;4292:805:94;;;-1:-1:-1;;;;;;;5120:30:94;;;;;;:59;;;5174:5;-1:-1:-1;;;;;5154:25:94;:16;-1:-1:-1;;;;;5154:25:94;;5120:59;5112:86;;;;-1:-1:-1;;;5112:86:94;;10254:2:165;5112:86:94;;;10236:21:165;10293:2;10273:18;;;10266:30;-1:-1:-1;;;10312:18:165;;;10305:44;10366:18;;5112:86:94;10052:338:165;5112:86:94;-1:-1:-1;;;;;5213:27:94;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5283:31;1673:25:165;;;5213:36:94;;5283:31;;;;;1646:18:165;5283:31:94;;;;;;;3838:1483;;;;;;;:::o;7242:259:36:-;7369:25;7375:10;7387:6;7369:5;:25::i;:::-;7456:38;-1:-1:-1;;;;;7456:5:36;:18;7475:10;7487:6;7456:18;:38::i;:::-;7242:259;:::o;7760:349::-;7929:9;7924:155;7944:24;;;7924:155;;;7986:23;7992:13;;8006:1;7992:16;;;;;;;:::i;:::-;;;;;;;7986:5;:23::i;:::-;8051:3;;7924:155;;;;8088:14;8095:6;8088;:14::i;2824:746::-;2997:15;2981:12;:31;2977:69;;3021:25;;-1:-1:-1;;;3021:25:36;;;;;;;;;;;2977:69;3088:15;3106:97;3141:26;3181:12;3106:21;:97::i;:::-;3248:67;;-1:-1:-1;;;3248:67:36;;;;;10758:25:165;;;3281:10:36;10837:18:165;;;10830:43;3301:4:36;10889:18:165;;;10882:43;10941:18;;;10934:34;;;3088:115:36;;-1:-1:-1;3248:10:36;-1:-1:-1;;;;;3248:23:36;;;;10730:19:165;;3248:67:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3376:18;3422:6;3407:11;3398:6;:20;;;;:::i;:::-;3397:31;;;;:::i;:::-;3376:52;;3438:30;3444:11;3457:10;3438:5;:30::i;:::-;-1:-1:-1;;;;;3523:21:36;;;;;;:8;:21;;;;;;;;:30;;;;;;;;:40;;3557:6;;3523:21;:40;;3557:6;;3523:40;:::i;:::-;;;;-1:-1:-1;;;;;;;2824:746:36:o;5510:446:94:-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;12505:25:165;;;;12546:18;;12539:34;;;;5833:14:94;12589:18:165;;;12582:34;5869:13:94;12632:18:165;;;12625:34;5912:4:94;12675:19:165;;;12668:61;12477:19;;5640:295:94;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;1198:469:31:-;1309:10;-1:-1:-1;;;;;1401:10:31;:89;1384:179;;;1522:30;;-1:-1:-1;;;1522:30:31;;;;;;;;;;;1384:179;-1:-1:-1;1624:4:31;1620:18;;;;1617:34;;1198:469::o;6481:328:94:-;-1:-1:-1;;;;;6553:15:94;;;;;;:9;:15;;;;;:25;;6572:6;;6553:15;:25;;6572:6;;6553:25;:::i;:::-;;;;-1:-1:-1;;6721:11:94;:21;;;;;;;6768:34;;1673:25:165;;;-1:-1:-1;;;;;;;6768:34:94;;;-1:-1:-1;;;;;;;;;;;6768:34:94;1661:2:165;1646:18;6768:34:94;;;;;;;;6481:328;;:::o;941:175:82:-;1050:58;;;-1:-1:-1;;;;;12932:32:165;;1050:58:82;;;12914:51:165;12981:18;;;;12974:34;;;1050:58:82;;;;;;;;;;12887:18:165;;;;1050:58:82;;;;;;;;-1:-1:-1;;;;;1050:58:82;-1:-1:-1;;;1050:58:82;;;1023:86;;1043:5;;1023:19;:86::i;6150:325:94:-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6387:13:94;;;;;;:9;:13;;;;;;;;:23;;;;;;6436:32;1673:25:165;;;-1:-1:-1;;;;;;;;;;;6436:32:94;1646:18:165;6436:32:94;1527:177:165;5173:642:82;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;-1:-1:-1;;;;;5618:27:82;;;:69;;;;;:::i;:::-;5592:95;;5705:10;:17;5726:1;5705:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5697:111;;;;-1:-1:-1;;;5697:111:82;;13471:2:165;5697:111:82;;;13453:21:165;13510:2;13490:18;;;13483:30;13549:34;13529:18;;;13522:62;-1:-1:-1;;;13600:18:165;;;13593:40;13650:19;;5697:111:82;13269:406:165;4108:223:83;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:83:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:83;;13882:2:165;5354:81:83;;;13864:21:165;13921:2;13901:18;;;13894:30;13960:34;13940:18;;;13933:62;-1:-1:-1;;;14011:18:165;;;14004:36;14057:19;;5354:81:83;13680:402:165;5354:81:83;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:83;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:83:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:83;;;8113:60;;;;-1:-1:-1;;;8113:60:83;;14581:2:165;8113:60:83;;;14563:21:165;14620:2;14600:18;;;14593:30;14659:31;14639:18;;;14632:59;14708:18;;8113:60:83;14379:353:165;8113:60:83;-1:-1:-1;8208:10:83;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:83;;;;;;;;:::i;242:250:165:-;327:1;337:113;351:6;348:1;345:13;337:113;;;427:11;;;421:18;408:11;;;401:39;373:2;366:10;337:113;;;-1:-1:-1;;484:1:165;466:16;;459:27;242:250::o;497:396::-;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;737:79;809:6;804:2;793:9;789:18;784:2;776:6;772:15;737:79;:::i;:::-;877:2;856:15;-1:-1:-1;;852:29:165;837:45;;;;884:2;833:54;;497:396;-1:-1:-1;;497:396:165:o;898:173::-;966:20;;-1:-1:-1;;;;;1015:31:165;;1005:42;;995:70;;1061:1;1058;1051:12;995:70;898:173;;;:::o;1076:254::-;1144:6;1152;1205:2;1193:9;1184:7;1180:23;1176:32;1173:52;;;1221:1;1218;1211:12;1173:52;1244:29;1263:9;1244:29;:::i;:::-;1234:39;1320:2;1305:18;;;;1292:32;;-1:-1:-1;;;1076:254:165:o;1709:328::-;1786:6;1794;1802;1855:2;1843:9;1834:7;1830:23;1826:32;1823:52;;;1871:1;1868;1861:12;1823:52;1894:29;1913:9;1894:29;:::i;:::-;1884:39;;1942:38;1976:2;1965:9;1961:18;1942:38;:::i;:::-;1932:48;;2027:2;2016:9;2012:18;1999:32;1989:42;;1709:328;;;;;:::o;2413:118::-;2499:5;2492:13;2485:21;2478:5;2475:32;2465:60;;2521:1;2518;2511:12;2536:521;2628:6;2636;2644;2652;2660;2713:3;2701:9;2692:7;2688:23;2684:33;2681:53;;;2730:1;2727;2720:12;2681:53;2766:9;2753:23;2743:33;;2823:2;2812:9;2808:18;2795:32;2785:42;;2877:2;2866:9;2862:18;2849:32;2890:28;2912:5;2890:28;:::i;:::-;2937:5;-1:-1:-1;2961:38:165;2995:2;2980:18;;2961:38;:::i;:::-;2536:521;;;;-1:-1:-1;2536:521:165;;3046:3;3031:19;3018:33;;2536:521;-1:-1:-1;;2536:521:165:o;3062:186::-;3121:6;3174:2;3162:9;3153:7;3149:23;3145:32;3142:52;;;3190:1;3187;3180:12;3142:52;3213:29;3232:9;3213:29;:::i;:::-;3203:39;3062:186;-1:-1:-1;;;3062:186:165:o;3253:180::-;3312:6;3365:2;3353:9;3344:7;3340:23;3336:32;3333:52;;;3381:1;3378;3371:12;3333:52;-1:-1:-1;3404:23:165;;3253:180;-1:-1:-1;3253:180:165:o;3438:693::-;3549:6;3557;3565;3573;3581;3589;3597;3650:3;3638:9;3629:7;3625:23;3621:33;3618:53;;;3667:1;3664;3657:12;3618:53;3690:29;3709:9;3690:29;:::i;:::-;3680:39;;3738:38;3772:2;3761:9;3757:18;3738:38;:::i;:::-;3728:48;;3823:2;3812:9;3808:18;3795:32;3785:42;;3874:2;3863:9;3859:18;3846:32;3836:42;;3928:3;3917:9;3913:19;3900:33;3973:4;3966:5;3962:16;3955:5;3952:27;3942:55;;3993:1;3990;3983:12;3942:55;3438:693;;;;-1:-1:-1;3438:693:165;;;;4016:5;4068:3;4053:19;;4040:33;;-1:-1:-1;4120:3:165;4105:19;;;4092:33;;3438:693;-1:-1:-1;;3438:693:165:o;4136:260::-;4204:6;4212;4265:2;4253:9;4244:7;4240:23;4236:32;4233:52;;;4281:1;4278;4271:12;4233:52;4304:29;4323:9;4304:29;:::i;:::-;4294:39;;4352:38;4386:2;4375:9;4371:18;4352:38;:::i;:::-;4342:48;;4136:260;;;;;:::o;4401:689::-;4496:6;4504;4512;4565:2;4553:9;4544:7;4540:23;4536:32;4533:52;;;4581:1;4578;4571:12;4533:52;4621:9;4608:23;4650:18;4691:2;4683:6;4680:14;4677:34;;;4707:1;4704;4697:12;4677:34;4745:6;4734:9;4730:22;4720:32;;4790:7;4783:4;4779:2;4775:13;4771:27;4761:55;;4812:1;4809;4802:12;4761:55;4852:2;4839:16;4878:2;4870:6;4867:14;4864:34;;;4894:1;4891;4884:12;4864:34;4949:7;4942:4;4932:6;4929:1;4925:14;4921:2;4917:23;4913:34;4910:47;4907:67;;;4970:1;4967;4960:12;4907:67;5001:4;4993:13;;;;5025:6;;-1:-1:-1;5063:20:165;;;;5050:34;;4401:689;-1:-1:-1;;;;4401:689:165:o;5095:322::-;5172:6;5180;5188;5241:2;5229:9;5220:7;5216:23;5212:32;5209:52;;;5257:1;5254;5247:12;5209:52;5293:9;5280:23;5270:33;;5350:2;5339:9;5335:18;5322:32;5312:42;;5373:38;5407:2;5396:9;5392:18;5373:38;:::i;:::-;5363:48;;5095:322;;;;;:::o;5645:380::-;5724:1;5720:12;;;;5767;;;5788:61;;5842:4;5834:6;5830:17;5820:27;;5788:61;5895:2;5887:6;5884:14;5864:18;5861:38;5858:161;;5941:10;5936:3;5932:20;5929:1;5922:31;5976:4;5973:1;5966:15;6004:4;6001:1;5994:15;5858:161;;5645:380;;;:::o;6030:127::-;6091:10;6086:3;6082:20;6079:1;6072:31;6122:4;6119:1;6112:15;6146:4;6143:1;6136:15;6162:128;6229:9;;;6250:11;;;6247:37;;;6264:18;;:::i;6807:184::-;6877:6;6930:2;6918:9;6909:7;6905:23;6901:32;6898:52;;;6946:1;6943;6936:12;6898:52;-1:-1:-1;6969:16:165;;6807:184;-1:-1:-1;6807:184:165:o;6996:168::-;7069:9;;;7100;;7117:15;;;7111:22;;7097:37;7087:71;;7138:18;;:::i;7169:217::-;7209:1;7235;7225:132;;7279:10;7274:3;7270:20;7267:1;7260:31;7314:4;7311:1;7304:15;7342:4;7339:1;7332:15;7225:132;-1:-1:-1;7371:9:165;;7169:217::o;7391:125::-;7456:9;;;7477:10;;;7474:36;;;7490:18;;:::i;10395:127::-;10456:10;10451:3;10447:20;10444:1;10437:31;10487:4;10484:1;10477:15;10511:4;10508:1;10501:15;11108:1133;11238:3;11267:1;11300:6;11294:13;11330:3;11352:1;11380:9;11376:2;11372:18;11362:28;;11440:2;11429:9;11425:18;11462;11452:61;;11506:4;11498:6;11494:17;11484:27;;11452:61;11532:2;11580;11572:6;11569:14;11549:18;11546:38;11543:165;;-1:-1:-1;;;11607:33:165;;11663:4;11660:1;11653:15;11693:4;11614:3;11681:17;11543:165;11724:18;11751:133;;;;11898:1;11893:323;;;;11717:499;;11751:133;-1:-1:-1;;11784:24:165;;11772:37;;11857:14;;11850:22;11838:35;;11829:45;;;-1:-1:-1;11751:133:165;;11893:323;11055:1;11048:14;;;11092:4;11079:18;;11991:1;12005:165;12019:6;12016:1;12013:13;12005:165;;;12097:14;;12084:11;;;12077:35;12140:16;;;;12034:10;;12005:165;;;12009:3;;12199:6;12194:3;12190:16;12183:23;;11717:499;-1:-1:-1;12232:3:165;;11108:1133;-1:-1:-1;;;;;;;;11108:1133:165:o;13019:245::-;13086:6;13139:2;13127:9;13118:7;13114:23;13110:32;13107:52;;;13155:1;13152;13145:12;13107:52;13187:9;13181:16;13206:28;13228:5;13206:28;:::i;14087:287::-;14216:3;14254:6;14248:13;14270:66;14329:6;14324:3;14317:4;14309:6;14305:17;14270:66;:::i;:::-;14352:16;;;;;14087:287;-1:-1:-1;;14087:287:165:o",
    "linkReferences": {},
    "immutableReferences": {
      "11341": [
        {
          "start": 321,
          "length": 32
        },
        {
          "start": 1558,
          "length": 32
        },
        {
          "start": 2176,
          "length": 32
        },
        {
          "start": 2340,
          "length": 32
        },
        {
          "start": 3265,
          "length": 32
        }
      ],
      "11344": [
        {
          "start": 884,
          "length": 32
        },
        {
          "start": 1923,
          "length": 32
        },
        {
          "start": 3072,
          "length": 32
        }
      ],
      "11346": [
        {
          "start": 637,
          "length": 32
        },
        {
          "start": 1752,
          "length": 32
        },
        {
          "start": 3372,
          "length": 32
        }
      ],
      "62887": [
        {
          "start": 487,
          "length": 32
        }
      ],
      "62901": [
        {
          "start": 1397,
          "length": 32
        }
      ],
      "62903": [
        {
          "start": 1450,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "close(uint256,uint256,bool,address,uint256)": "51d61b6e",
    "decimals()": "313ce567",
    "deposits(address,uint256)": "d6d68177",
    "hyperdrive()": "04eb0148",
    "mint(uint256,uint256,address)": "e7d3fe6b",
    "mintPercent()": "80910858",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "redeem(uint256)": "db006a75",
    "sweep(uint256)": "aa60e733",
    "sweepAndRedeem(uint256[],uint256)": "dec16f03",
    "symbol()": "95d89b41",
    "token()": "fc0c546a",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IHyperdrive\",\"name\":\"_hyperdrive\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_mintPercent\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BondMatured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BondNotMatured\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimestamp\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintPercentTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OutputLimit\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"andBurn\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minOutput\",\"type\":\"uint256\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hyperdrive\",\"outputs\":[{\"internalType\":\"contract IHyperdrive\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maturityTime\",\"type\":\"uint256\"}],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"maturityTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sweepAndRedeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"kind\":\"dev\",\"methods\":{\"close(uint256,uint256,bool,address,uint256)\":{\"params\":{\"amount\":\"The amount of bonds to redeem\",\"andBurn\":\"If true it will burn the number of erc20 minted by this deposited bond\",\"destination\":\"The address which gets credited with this withdraw\",\"maturityTime\":\"The bond's expiry time\",\"minOutput\":\"The min amount the user expects transferred to them.\"}},\"constructor\":{\"params\":{\"_hyperdrive\":\"The hyperdrive contract.\",\"_mintPercent\":\"How many tokens will be minted per bond.\",\"_token\":\"The underlying token of the bonds.\",\"name_\":\"The ERC20 name.\",\"symbol_\":\"The ERC20 symbol.\"}},\"mint(uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount of bonds to mint\",\"destination\":\"The address which gets credited with these funds\",\"maturityTime\":\"The bond's expiry time\"}},\"redeem(uint256)\":{\"params\":{\"amount\":\"The amount of erc20 wrapper to burn.\"}},\"sweep(uint256)\":{\"params\":{\"maturityTime\":\"The maturity time of the asset to sell\"}},\"sweepAndRedeem(uint256[],uint256)\":{\"params\":{\"amount\":\"The amount of erc20 wrapper to burn.\",\"maturityTimes\":\"Maturity times which the caller would like to sweep before redeeming\"}}},\"title\":\"BondWrapper\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidTimestamp()\":[{\"notice\":\"############### ### AssetId ### ###############\"}]},\"kind\":\"user\",\"methods\":{\"close(uint256,uint256,bool,address,uint256)\":{\"notice\":\"Closes a user account by selling the bond and then transferring the delta value of that         sale vs the erc20 tokens minted by its deposit. Optionally also burns the ERC20 wrapper         from the user, if enabled it will transfer both the delta of sale value and the value of         the burned token.\"},\"constructor\":{\"notice\":\"Constructs the contract and initializes the variables.\"},\"mint(uint256,uint256,address)\":{\"notice\":\"Transfers bonds from the user and then mints erc20 for the mintable percent.\"},\"redeem(uint256)\":{\"notice\":\"Burns a caller's erc20 and transfers the result from the contract's token balance.\"},\"sweep(uint256)\":{\"notice\":\"Sells all assets from the contract if they are matured, has no affect if         the contract has no assets from a timestamp\"},\"sweepAndRedeem(uint256[],uint256)\":{\"notice\":\"Calls both force close and redeem to enable easy liquidation of a user account\"}},\"notice\":\"A token that wraps Hyperdrive long positions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/token/BondWrapper.sol\":\"BondWrapper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/=lib/aave-v3-core/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":create3-factory/=lib/yield-daddy/lib/create3-factory/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":yield-daddy/=lib/yield-daddy/\",\"lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672\",\"dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x3336dbc3128174594baa25c95f3be485aa61a77a06afbb75e2708987247a5bb5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e189558d4f78633d90ecdb3ff8d775109394a98cb18d19507642cb56c43dc1e\",\"dweb:/ipfs/QmZMVsor78To4nbXwLDBaZKD8m68PT53C9mxvR8iUkM5i5\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993\",\"dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt\"]},\"contracts/src/interfaces/IHyperdriveWrite.sol\":{\"keccak256\":\"0xe2ba8031ab98a81026010af00de9935b79ade6701dc486fd1c02d67f4eb81bf8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2e6acf863128f355e6ad26130037797a08321054ac8e202274debf6730162467\",\"dweb:/ipfs/Qmbf6882o3a7mci1j4w2XJtUDfsJvECGF6Yz3PG8q4LQgk\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0\",\"dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87\",\"dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939\",\"dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x\"]},\"contracts/src/interfaces/IMultiTokenWrite.sol\":{\"keccak256\":\"0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a\",\"dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe\"]},\"contracts/src/libraries/AssetId.sol\":{\"keccak256\":\"0x82515c6d8fc8dbc940b0e40de0bfa584ade8a5a0f24ef14e352deced1e89a384\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fa01b52b6e05d6c304ee938ab7181cacd6cfede09c5f6eca8f6d86b31e0fe806\",\"dweb:/ipfs/QmNVyKLPJnP71ADgTwvS9D2ME2xsPVwjD32yCnNdmvLmpT\"]},\"contracts/src/token/BondWrapper.sol\":{\"keccak256\":\"0x4d35c52113f62b3d2bf307348c2f96735ecc05d554ef9a726ea90afa3a00b39a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://de6715829f0650f8ab334d4bfd22b5257c3f6721cd05264c1475974f43cf6f5e\",\"dweb:/ipfs/QmTrLEoqkoswgD1RF6wiKUUJKYGmrkJjshePEm2enUS2Zc\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IHyperdrive",
              "name": "_hyperdrive",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_mintPercent",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BondMatured"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BondNotMatured"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientPrice"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTimestamp"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintPercentTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OutputLimit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maturityTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "andBurn",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "destination",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minOutput",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "close"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deposits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hyperdrive",
          "outputs": [
            {
              "internalType": "contract IHyperdrive",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maturityTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "destination",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mintPercent",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maturityTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sweep"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "maturityTimes",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sweepAndRedeem"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "close(uint256,uint256,bool,address,uint256)": {
            "params": {
              "amount": "The amount of bonds to redeem",
              "andBurn": "If true it will burn the number of erc20 minted by this deposited bond",
              "destination": "The address which gets credited with this withdraw",
              "maturityTime": "The bond's expiry time",
              "minOutput": "The min amount the user expects transferred to them."
            }
          },
          "constructor": {
            "params": {
              "_hyperdrive": "The hyperdrive contract.",
              "_mintPercent": "How many tokens will be minted per bond.",
              "_token": "The underlying token of the bonds.",
              "name_": "The ERC20 name.",
              "symbol_": "The ERC20 symbol."
            }
          },
          "mint(uint256,uint256,address)": {
            "params": {
              "amount": "The amount of bonds to mint",
              "destination": "The address which gets credited with these funds",
              "maturityTime": "The bond's expiry time"
            }
          },
          "redeem(uint256)": {
            "params": {
              "amount": "The amount of erc20 wrapper to burn."
            }
          },
          "sweep(uint256)": {
            "params": {
              "maturityTime": "The maturity time of the asset to sell"
            }
          },
          "sweepAndRedeem(uint256[],uint256)": {
            "params": {
              "amount": "The amount of erc20 wrapper to burn.",
              "maturityTimes": "Maturity times which the caller would like to sweep before redeeming"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "close(uint256,uint256,bool,address,uint256)": {
            "notice": "Closes a user account by selling the bond and then transferring the delta value of that         sale vs the erc20 tokens minted by its deposit. Optionally also burns the ERC20 wrapper         from the user, if enabled it will transfer both the delta of sale value and the value of         the burned token."
          },
          "constructor": {
            "notice": "Constructs the contract and initializes the variables."
          },
          "mint(uint256,uint256,address)": {
            "notice": "Transfers bonds from the user and then mints erc20 for the mintable percent."
          },
          "redeem(uint256)": {
            "notice": "Burns a caller's erc20 and transfers the result from the contract's token balance."
          },
          "sweep(uint256)": {
            "notice": "Sells all assets from the contract if they are matured, has no affect if         the contract has no assets from a timestamp"
          },
          "sweepAndRedeem(uint256[],uint256)": {
            "notice": "Calls both force close and redeem to enable easy liquidation of a user account"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=lib/aave-v3-core/contracts/",
        "aave-v3-core/=lib/aave-v3-core/",
        "create3-factory/=lib/yield-daddy/lib/create3-factory/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "solmate/=lib/solmate/src/",
        "yield-daddy/=lib/yield-daddy/",
        "lib/openzeppelin-contracts:openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/token/BondWrapper.sol": "BondWrapper"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/interfaces/IERC20.sol": {
        "keccak256": "0x4642a027efffb3aa6cdc85e31796fb3b1bc4fff4316e6390874e6f4add37b86c",
        "urls": [
          "bzz-raw://3720a6c1c427dcfcbdeeec15cbdb682115e44e0a9136af7e0ad9e5af2ea40672",
          "dweb:/ipfs/QmP4bmaHw8MfX9MQLhhgnVQ9U9BTQAR3e5cCCE9RcoeX7w"
        ],
        "license": "MIT"
      },
      "contracts/src/interfaces/IHyperdrive.sol": {
        "keccak256": "0x3336dbc3128174594baa25c95f3be485aa61a77a06afbb75e2708987247a5bb5",
        "urls": [
          "bzz-raw://2e189558d4f78633d90ecdb3ff8d775109394a98cb18d19507642cb56c43dc1e",
          "dweb:/ipfs/QmZMVsor78To4nbXwLDBaZKD8m68PT53C9mxvR8iUkM5i5"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveRead.sol": {
        "keccak256": "0x837939af4a9224c5f4ea564e9b33a5612442b7d7d50b7f8bb32be6bb3ce239b3",
        "urls": [
          "bzz-raw://3bfebedcb31d2edf86a69f0dfbcc5aa7b96edc2d8197b4a4681a200cb6ffe993",
          "dweb:/ipfs/Qmeq4oAGxKv3mvRRWkqYBjfdozPkhi3MqBRFNnNkmAwCtt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IHyperdriveWrite.sol": {
        "keccak256": "0xe2ba8031ab98a81026010af00de9935b79ade6701dc486fd1c02d67f4eb81bf8",
        "urls": [
          "bzz-raw://2e6acf863128f355e6ad26130037797a08321054ac8e202274debf6730162467",
          "dweb:/ipfs/Qmbf6882o3a7mci1j4w2XJtUDfsJvECGF6Yz3PG8q4LQgk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiToken.sol": {
        "keccak256": "0xe3d64871148bdae5a714107b8b1a55f39cd4ede601436d2777a165d20d768a1a",
        "urls": [
          "bzz-raw://9ebc0bfda35e9b7299c43f0efff38012b8074fcca867b781c0cedeede10cf3d0",
          "dweb:/ipfs/QmbHRLezFhWavHakK5G26DB4ud5PueU6fNvZf3L3TwXnPb"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenMetadata.sol": {
        "keccak256": "0xcdc60ba02194150741a78cb0c52c306f5f577c5c814c63e98a13d46c02d2d9cc",
        "urls": [
          "bzz-raw://8f5866cb2c8c4342dba88c0e4d78296fef0e170b18b3613c796c29dc31a5ca87",
          "dweb:/ipfs/QmZcoDTYhhYSB5ds3cNPJpdZTxrz6cF8M2vNVeuAcT8gw6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenRead.sol": {
        "keccak256": "0x2e55fa961123a8bb7284c8388af9bd1302a7153441ffe641804ea79021bdca05",
        "urls": [
          "bzz-raw://c7dc03bbab02976609dec59c201e5b57a2998d1c626cef58d7a9fa7c2b06b939",
          "dweb:/ipfs/QmSifWr9cVWaUEmyKpGFcgpKCYdoBYgWtQBLgemtwo4a7x"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IMultiTokenWrite.sol": {
        "keccak256": "0xa5ba8812e06fb6d38e1872603c8b80321cfd2f96cecbe7b67b92cb33e93b3fc8",
        "urls": [
          "bzz-raw://73afa34919c7d457e925b4be83abb1b1ed2ed731a382ebffad95a3005c04bd5a",
          "dweb:/ipfs/QmauMxmgtYTS7RJQw1mS7Pwe5FUMDPHE2N1MBhFUjk6HPe"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/AssetId.sol": {
        "keccak256": "0x82515c6d8fc8dbc940b0e40de0bfa584ade8a5a0f24ef14e352deced1e89a384",
        "urls": [
          "bzz-raw://fa01b52b6e05d6c304ee938ab7181cacd6cfede09c5f6eca8f6d86b31e0fe806",
          "dweb:/ipfs/QmNVyKLPJnP71ADgTwvS9D2ME2xsPVwjD32yCnNdmvLmpT"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/token/BondWrapper.sol": {
        "keccak256": "0x4d35c52113f62b3d2bf307348c2f96735ecc05d554ef9a726ea90afa3a00b39a",
        "urls": [
          "bzz-raw://de6715829f0650f8ab334d4bfd22b5257c3f6721cd05264c1475974f43cf6f5e",
          "dweb:/ipfs/QmTrLEoqkoswgD1RF6wiKUUJKYGmrkJjshePEm2enUS2Zc"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/token/BondWrapper.sol",
    "id": 11720,
    "exportedSymbols": {
      "AssetId": [
        7731
      ],
      "BondWrapper": [
        11719
      ],
      "ERC20": [
        63250
      ],
      "IERC20": [
        6461
      ],
      "IHyperdrive": [
        7103
      ],
      "SafeERC20": [
        59663
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:8073:36",
    "nodes": [
      {
        "id": 11321,
        "nodeType": "PragmaDirective",
        "src": "39:23:36",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 11323,
        "nodeType": "ImportDirective",
        "src": "64:93:36",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11720,
        "sourceUnit": 59664,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11322,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 59663,
              "src": "73:9:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11325,
        "nodeType": "ImportDirective",
        "src": "158:49:36",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11720,
        "sourceUnit": 63251,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11324,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63250,
              "src": "167:5:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11327,
        "nodeType": "ImportDirective",
        "src": "208:50:36",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11720,
        "sourceUnit": 6462,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11326,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6461,
              "src": "217:6:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11329,
        "nodeType": "ImportDirective",
        "src": "259:60:36",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IHyperdrive.sol",
        "file": "../interfaces/IHyperdrive.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11720,
        "sourceUnit": 7104,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11328,
              "name": "IHyperdrive",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7103,
              "src": "268:11:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11331,
        "nodeType": "ImportDirective",
        "src": "320:51:36",
        "nodes": [],
        "absolutePath": "contracts/src/libraries/AssetId.sol",
        "file": "../libraries/AssetId.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11720,
        "sourceUnit": 7732,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11330,
              "name": "AssetId",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7731,
              "src": "329:7:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 11719,
        "nodeType": "ContractDefinition",
        "src": "695:7416:36",
        "nodes": [
          {
            "id": 11338,
            "nodeType": "UsingForDirective",
            "src": "731:27:36",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 11335,
              "name": "SafeERC20",
              "nameLocations": [
                "737:9:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59663,
              "src": "737:9:36"
            },
            "typeName": {
              "id": 11337,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11336,
                "name": "IERC20",
                "nameLocations": [
                  "751:6:36"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6461,
                "src": "751:6:36"
              },
              "referencedDeclaration": 6461,
              "src": "751:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6461",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 11341,
            "nodeType": "VariableDeclaration",
            "src": "798:39:36",
            "nodes": [],
            "constant": false,
            "functionSelector": "04eb0148",
            "mutability": "immutable",
            "name": "hyperdrive",
            "nameLocation": "827:10:36",
            "scope": 11719,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IHyperdrive_$7103",
              "typeString": "contract IHyperdrive"
            },
            "typeName": {
              "id": 11340,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11339,
                "name": "IHyperdrive",
                "nameLocations": [
                  "798:11:36"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7103,
                "src": "798:11:36"
              },
              "referencedDeclaration": 7103,
              "src": "798:11:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IHyperdrive_$7103",
                "typeString": "contract IHyperdrive"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11344,
            "nodeType": "VariableDeclaration",
            "src": "885:29:36",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "909:5:36",
            "scope": 11719,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$6461",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 11343,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11342,
                "name": "IERC20",
                "nameLocations": [
                  "885:6:36"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6461,
                "src": "885:6:36"
              },
              "referencedDeclaration": 6461,
              "src": "885:6:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$6461",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11346,
            "nodeType": "VariableDeclaration",
            "src": "1002:36:36",
            "nodes": [],
            "constant": false,
            "functionSelector": "80910858",
            "mutability": "immutable",
            "name": "mintPercent",
            "nameLocation": "1027:11:36",
            "scope": 11719,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11345,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1002:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 11352,
            "nodeType": "VariableDeclaration",
            "src": "1129:91:36",
            "nodes": [],
            "constant": false,
            "functionSelector": "d6d68177",
            "mutability": "mutable",
            "name": "deposits",
            "nameLocation": "1212:8:36",
            "scope": 11719,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 11351,
              "keyName": "user",
              "keyNameLocation": "1145:4:36",
              "keyType": {
                "id": 11347,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1137:7:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1129:67:36",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(uint256 => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 11350,
                "keyName": "assetId",
                "keyNameLocation": "1169:7:36",
                "keyType": {
                  "id": 11348,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1161:7:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1153:42:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueName": "amount",
                "valueNameLocation": "1188:6:36",
                "valueType": {
                  "id": 11349,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1180:7:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 11422,
            "nodeType": "FunctionDefinition",
            "src": "1554:993:36",
            "nodes": [],
            "body": {
              "id": 11421,
              "nodeType": "Block",
              "src": "1744:803:36",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11373,
                      "name": "_mintPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11361,
                      "src": "1758:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31305f303030",
                      "id": 11374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1774:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "src": "1758:22:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11382,
                  "nodeType": "IfStatement",
                  "src": "1754:92:36",
                  "trueBody": {
                    "id": 11381,
                    "nodeType": "Block",
                    "src": "1782:64:36",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 11376,
                              "name": "IHyperdrive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7103,
                              "src": "1803:11:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$7103_$",
                                "typeString": "type(contract IHyperdrive)"
                              }
                            },
                            "id": 11378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1815:18:36",
                            "memberName": "MintPercentTooHigh",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7082,
                            "src": "1803:30:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 11379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1803:32:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11380,
                        "nodeType": "RevertStatement",
                        "src": "1796:39:36"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 11394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11383,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62893,
                        "src": "2320:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11388,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 11386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2338:1:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 11385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2330:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11384,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2330:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2330:10:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2320:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 11391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2349:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 11390,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2349:7:36",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 11389,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "2344:4:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 11392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2344:13:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 11393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2358:3:36",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "2344:17:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2320:41:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11395,
                  "nodeType": "ExpressionStatement",
                  "src": "2320:41:36"
                },
                {
                  "expression": {
                    "id": 11407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11396,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62893,
                        "src": "2371:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11401,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 11399,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2389:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondWrapper_$11719",
                              "typeString": "contract BondWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondWrapper_$11719",
                              "typeString": "contract BondWrapper"
                            }
                          ],
                          "id": 11398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2381:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11397,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2381:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2381:13:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2371:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 11404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2403:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 11403,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2403:7:36",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 11402,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "2398:4:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 11405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2398:13:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 11406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2412:3:36",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "2398:17:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2371:44:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11408,
                  "nodeType": "ExpressionStatement",
                  "src": "2371:44:36"
                },
                {
                  "expression": {
                    "id": 11411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11409,
                      "name": "hyperdrive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11341,
                      "src": "2456:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHyperdrive_$7103",
                        "typeString": "contract IHyperdrive"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11410,
                      "name": "_hyperdrive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11356,
                      "src": "2469:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IHyperdrive_$7103",
                        "typeString": "contract IHyperdrive"
                      }
                    },
                    "src": "2456:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHyperdrive_$7103",
                      "typeString": "contract IHyperdrive"
                    }
                  },
                  "id": 11412,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:24:36"
                },
                {
                  "expression": {
                    "id": 11415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11413,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11344,
                      "src": "2490:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6461",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11414,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11359,
                      "src": "2498:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$6461",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2490:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6461",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 11416,
                  "nodeType": "ExpressionStatement",
                  "src": "2490:14:36"
                },
                {
                  "expression": {
                    "id": 11419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11417,
                      "name": "mintPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11346,
                      "src": "2514:11:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11418,
                      "name": "_mintPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11361,
                      "src": "2528:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2514:26:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11420,
                  "nodeType": "ExpressionStatement",
                  "src": "2514:26:36"
                }
              ]
            },
            "documentation": {
              "id": 11353,
              "nodeType": "StructuredDocumentation",
              "src": "1227:322:36",
              "text": "@notice Constructs the contract and initializes the variables.\n @param _hyperdrive The hyperdrive contract.\n @param _token The underlying token of the bonds.\n @param _mintPercent How many tokens will be minted per bond.\n @param name_ The ERC20 name.\n @param symbol_ The ERC20 symbol."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11368,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11363,
                    "src": "1724:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 11369,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11365,
                    "src": "1731:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "hexValue": "3138",
                    "id": 11370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1740:2:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 11371,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11367,
                  "name": "ERC20",
                  "nameLocations": [
                    "1718:5:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 63250,
                  "src": "1718:5:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "1718:25:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 11366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11356,
                  "mutability": "mutable",
                  "name": "_hyperdrive",
                  "nameLocation": "1587:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11422,
                  "src": "1575:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHyperdrive_$7103",
                    "typeString": "contract IHyperdrive"
                  },
                  "typeName": {
                    "id": 11355,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11354,
                      "name": "IHyperdrive",
                      "nameLocations": [
                        "1575:11:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7103,
                      "src": "1575:11:36"
                    },
                    "referencedDeclaration": 7103,
                    "src": "1575:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHyperdrive_$7103",
                      "typeString": "contract IHyperdrive"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11359,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1615:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11422,
                  "src": "1608:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$6461",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11358,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11357,
                      "name": "IERC20",
                      "nameLocations": [
                        "1608:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6461,
                      "src": "1608:6:36"
                    },
                    "referencedDeclaration": 6461,
                    "src": "1608:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$6461",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11361,
                  "mutability": "mutable",
                  "name": "_mintPercent",
                  "nameLocation": "1639:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11422,
                  "src": "1631:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11363,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1675:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11422,
                  "src": "1661:19:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11362,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11365,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1704:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11422,
                  "src": "1690:21:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11364,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1565:152:36"
            },
            "returnParameters": {
              "id": 11372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1744:0:36"
            },
            "scope": 11719,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11488,
            "nodeType": "FunctionDefinition",
            "src": "2824:746:36",
            "nodes": [],
            "body": {
              "id": 11487,
              "nodeType": "Block",
              "src": "2936:634:36",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11432,
                      "name": "maturityTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11425,
                      "src": "2981:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 11433,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2997:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 11434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3003:9:36",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2997:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2981:31:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11441,
                  "nodeType": "IfStatement",
                  "src": "2977:69:36",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 11436,
                          "name": "IHyperdrive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7103,
                          "src": "3021:11:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$7103_$",
                            "typeString": "type(contract IHyperdrive)"
                          }
                        },
                        "id": 11438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3033:11:36",
                        "memberName": "BondMatured",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7076,
                        "src": "3021:23:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 11439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3021:25:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 11440,
                    "nodeType": "RevertStatement",
                    "src": "3014:32:36"
                  }
                },
                {
                  "assignments": [
                    11443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11443,
                      "mutability": "mutable",
                      "name": "assetId",
                      "nameLocation": "3096:7:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11487,
                      "src": "3088:15:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11442,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3088:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11451,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 11446,
                            "name": "AssetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7731,
                            "src": "3141:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AssetId_$7731_$",
                              "typeString": "type(library AssetId)"
                            }
                          },
                          "id": 11447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3149:13:36",
                          "memberName": "AssetIdPrefix",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7694,
                          "src": "3141:21:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AssetIdPrefix_$7694_$",
                            "typeString": "type(enum AssetId.AssetIdPrefix)"
                          }
                        },
                        "id": 11448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3163:4:36",
                        "memberName": "Long",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7691,
                        "src": "3141:26:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$7694",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        }
                      },
                      {
                        "id": 11449,
                        "name": "maturityTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11425,
                        "src": "3181:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$7694",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11444,
                        "name": "AssetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "3106:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AssetId_$7731_$",
                          "typeString": "type(library AssetId)"
                        }
                      },
                      "id": 11445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3114:13:36",
                      "memberName": "encodeAssetId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7717,
                      "src": "3106:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_AssetIdPrefix_$7694_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum AssetId.AssetIdPrefix,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3106:97:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3088:115:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11455,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11443,
                        "src": "3272:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 11456,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3281:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3285:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3281:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11460,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3301:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondWrapper_$11719",
                              "typeString": "contract BondWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondWrapper_$11719",
                              "typeString": "contract BondWrapper"
                            }
                          ],
                          "id": 11459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3293:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11458,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3293:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3293:13:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11462,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11427,
                        "src": "3308:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11452,
                        "name": "hyperdrive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11341,
                        "src": "3248:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHyperdrive_$7103",
                          "typeString": "contract IHyperdrive"
                        }
                      },
                      "id": 11454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3259:12:36",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7586,
                      "src": "3248:23:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,address,uint256) external"
                      }
                    },
                    "id": 11463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3248:67:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11464,
                  "nodeType": "ExpressionStatement",
                  "src": "3248:67:36"
                },
                {
                  "assignments": [
                    11466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11466,
                      "mutability": "mutable",
                      "name": "mintAmount",
                      "nameLocation": "3384:10:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11487,
                      "src": "3376:18:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11465,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3376:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11473,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11467,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11427,
                            "src": "3398:6:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 11468,
                            "name": "mintPercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11346,
                            "src": "3407:11:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3398:20:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 11470,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3397:22:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31305f303030",
                      "id": 11471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3422:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "src": "3397:31:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3376:52:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11475,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11429,
                        "src": "3444:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11476,
                        "name": "mintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11466,
                        "src": "3457:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11474,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63221,
                      "src": "3438:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3438:30:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11478,
                  "nodeType": "ExpressionStatement",
                  "src": "3438:30:36"
                },
                {
                  "expression": {
                    "id": 11485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11479,
                          "name": "deposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "3523:8:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 11482,
                        "indexExpression": {
                          "id": 11480,
                          "name": "destination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11429,
                          "src": "3532:11:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3523:21:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 11483,
                      "indexExpression": {
                        "id": 11481,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11443,
                        "src": "3545:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3523:30:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 11484,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11427,
                      "src": "3557:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3523:40:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11486,
                  "nodeType": "ExpressionStatement",
                  "src": "3523:40:36"
                }
              ]
            },
            "documentation": {
              "id": 11423,
              "nodeType": "StructuredDocumentation",
              "src": "2553:266:36",
              "text": "@notice Transfers bonds from the user and then mints erc20 for the mintable percent.\n @param  maturityTime The bond's expiry time\n @param amount The amount of bonds to mint\n @param destination The address which gets credited with these funds"
            },
            "functionSelector": "e7d3fe6b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2833:4:36",
            "parameters": {
              "id": 11430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11425,
                  "mutability": "mutable",
                  "name": "maturityTime",
                  "nameLocation": "2855:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11488,
                  "src": "2847:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2847:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11427,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2885:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11488,
                  "src": "2877:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2877:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11429,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "2909:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11488,
                  "src": "2901:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2901:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2837:89:36"
            },
            "returnParameters": {
              "id": 11431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2936:0:36"
            },
            "scope": 11719,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11607,
            "nodeType": "FunctionDefinition",
            "src": "4277:1803:36",
            "nodes": [],
            "body": {
              "id": 11606,
              "nodeType": "Block",
              "src": "4439:1641:36",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11503
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11503,
                      "mutability": "mutable",
                      "name": "assetId",
                      "nameLocation": "4488:7:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11606,
                      "src": "4480:15:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11502,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4480:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11511,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 11506,
                            "name": "AssetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7731,
                            "src": "4533:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AssetId_$7731_$",
                              "typeString": "type(library AssetId)"
                            }
                          },
                          "id": 11507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4541:13:36",
                          "memberName": "AssetIdPrefix",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7694,
                          "src": "4533:21:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AssetIdPrefix_$7694_$",
                            "typeString": "type(enum AssetId.AssetIdPrefix)"
                          }
                        },
                        "id": 11508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4555:4:36",
                        "memberName": "Long",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7691,
                        "src": "4533:26:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$7694",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        }
                      },
                      {
                        "id": 11509,
                        "name": "maturityTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11491,
                        "src": "4573:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$7694",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11504,
                        "name": "AssetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "4498:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AssetId_$7731_$",
                          "typeString": "type(library AssetId)"
                        }
                      },
                      "id": 11505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4506:13:36",
                      "memberName": "encodeAssetId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7717,
                      "src": "4498:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_AssetIdPrefix_$7694_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum AssetId.AssetIdPrefix,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4498:97:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4480:115:36"
                },
                {
                  "assignments": [
                    11513
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11513,
                      "mutability": "mutable",
                      "name": "receivedAmount",
                      "nameLocation": "4614:14:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11606,
                      "src": "4606:22:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11512,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4606:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11514,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4606:22:36"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11515,
                      "name": "maturityTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11491,
                      "src": "4642:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 11516,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4657:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 11517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4663:9:36",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4657:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4642:30:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 11542,
                    "nodeType": "Block",
                    "src": "4953:215:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11535,
                              "name": "maturityTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11491,
                              "src": "5004:12:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11534,
                            "name": "sweep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11663,
                            "src": "4998:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 11536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4998:19:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11537,
                        "nodeType": "ExpressionStatement",
                        "src": "4998:19:36"
                      },
                      {
                        "expression": {
                          "id": 11540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11538,
                            "name": "receivedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11513,
                            "src": "5134:14:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 11539,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11493,
                            "src": "5151:6:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5134:23:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11541,
                        "nodeType": "ExpressionStatement",
                        "src": "5134:23:36"
                      }
                    ]
                  },
                  "id": 11543,
                  "nodeType": "IfStatement",
                  "src": "4638:530:36",
                  "trueBody": {
                    "id": 11533,
                    "nodeType": "Block",
                    "src": "4674:273:36",
                    "statements": [
                      {
                        "expression": {
                          "id": 11531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11519,
                            "name": "receivedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11513,
                            "src": "4759:14:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 11522,
                                "name": "maturityTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11491,
                                "src": "4814:12:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 11523,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11493,
                                "src": "4844:6:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 11524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4868:1:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 11527,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "4895:4:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BondWrapper_$11719",
                                      "typeString": "contract BondWrapper"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_BondWrapper_$11719",
                                      "typeString": "contract BondWrapper"
                                    }
                                  ],
                                  "id": 11526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4887:7:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 11525,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4887:7:36",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 11528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4887:13:36",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 11529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4918:4:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "expression": {
                                "id": 11520,
                                "name": "hyperdrive",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11341,
                                "src": "4776:10:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IHyperdrive_$7103",
                                  "typeString": "contract IHyperdrive"
                                }
                              },
                              "id": 11521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4787:9:36",
                              "memberName": "closeLong",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 7300,
                              "src": "4776:20:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_bool_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256,address,bool) external returns (uint256)"
                              }
                            },
                            "id": 11530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4776:160:36",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4759:177:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11532,
                        "nodeType": "ExpressionStatement",
                        "src": "4759:177:36"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 11551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11544,
                          "name": "deposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11352,
                          "src": "5213:8:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 11548,
                        "indexExpression": {
                          "expression": {
                            "id": 11545,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5222:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5226:6:36",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5222:10:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5213:20:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 11549,
                      "indexExpression": {
                        "id": 11547,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11503,
                        "src": "5234:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5213:29:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 11550,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11493,
                      "src": "5246:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5213:39:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11552,
                  "nodeType": "ExpressionStatement",
                  "src": "5213:39:36"
                },
                {
                  "assignments": [
                    11554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11554,
                      "mutability": "mutable",
                      "name": "mintedFromBonds",
                      "nameLocation": "5371:15:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11606,
                      "src": "5363:23:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11553,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5363:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11561,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11555,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11493,
                            "src": "5390:6:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 11556,
                            "name": "mintPercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11346,
                            "src": "5399:11:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5390:20:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 11558,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5389:22:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31305f303030",
                      "id": 11559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5414:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10_000"
                    },
                    "src": "5389:31:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5363:57:36"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11562,
                      "name": "receivedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11513,
                      "src": "5435:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11563,
                      "name": "mintedFromBonds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11554,
                      "src": "5452:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5435:32:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11570,
                  "nodeType": "IfStatement",
                  "src": "5431:88:36",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 11565,
                          "name": "IHyperdrive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7103,
                          "src": "5488:11:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$7103_$",
                            "typeString": "type(contract IHyperdrive)"
                          }
                        },
                        "id": 11567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5500:17:36",
                        "memberName": "InsufficientPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7080,
                        "src": "5488:29:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 11568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5488:31:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 11569,
                    "nodeType": "RevertStatement",
                    "src": "5481:38:36"
                  }
                },
                {
                  "assignments": [
                    11572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11572,
                      "mutability": "mutable",
                      "name": "userFunds",
                      "nameLocation": "5598:9:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11606,
                      "src": "5590:17:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11571,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5590:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11576,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11573,
                      "name": "receivedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11513,
                      "src": "5610:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 11574,
                      "name": "mintedFromBonds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11554,
                      "src": "5627:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5610:32:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5590:52:36"
                },
                {
                  "condition": {
                    "id": 11577,
                    "name": "andBurn",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11495,
                    "src": "5732:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11589,
                  "nodeType": "IfStatement",
                  "src": "5728:114:36",
                  "trueBody": {
                    "id": 11588,
                    "nodeType": "Block",
                    "src": "5741:101:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 11579,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5761:3:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5765:6:36",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5761:10:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11581,
                              "name": "mintedFromBonds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11554,
                              "src": "5773:15:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11578,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63249,
                            "src": "5755:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 11582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5755:34:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11583,
                        "nodeType": "ExpressionStatement",
                        "src": "5755:34:36"
                      },
                      {
                        "expression": {
                          "id": 11586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11584,
                            "name": "userFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11572,
                            "src": "5803:9:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 11585,
                            "name": "mintedFromBonds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11554,
                            "src": "5816:15:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5803:28:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11587,
                        "nodeType": "ExpressionStatement",
                        "src": "5803:28:36"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11590,
                      "name": "userFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11572,
                      "src": "5914:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11591,
                      "name": "minOutput",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11499,
                      "src": "5926:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5914:21:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11598,
                  "nodeType": "IfStatement",
                  "src": "5910:59:36",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 11593,
                          "name": "IHyperdrive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7103,
                          "src": "5944:11:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$7103_$",
                            "typeString": "type(contract IHyperdrive)"
                          }
                        },
                        "id": 11595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5956:11:36",
                        "memberName": "OutputLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7010,
                        "src": "5944:23:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 11596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5944:25:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 11597,
                    "nodeType": "RevertStatement",
                    "src": "5937:32:36"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11602,
                        "name": "destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11497,
                        "src": "6050:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11603,
                        "name": "userFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11572,
                        "src": "6063:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11599,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11344,
                        "src": "6031:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6461",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6037:12:36",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59320,
                      "src": "6031:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$58980_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$58980_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6031:42:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11605,
                  "nodeType": "ExpressionStatement",
                  "src": "6031:42:36"
                }
              ]
            },
            "documentation": {
              "id": 11489,
              "nodeType": "StructuredDocumentation",
              "src": "3576:696:36",
              "text": "@notice Closes a user account by selling the bond and then transferring the delta value of that\n         sale vs the erc20 tokens minted by its deposit. Optionally also burns the ERC20 wrapper\n         from the user, if enabled it will transfer both the delta of sale value and the value of\n         the burned token.\n @param  maturityTime The bond's expiry time\n @param amount The amount of bonds to redeem\n @param andBurn If true it will burn the number of erc20 minted by this deposited bond\n @param destination The address which gets credited with this withdraw\n @param minOutput The min amount the user expects transferred to them."
            },
            "functionSelector": "51d61b6e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "close",
            "nameLocation": "4286:5:36",
            "parameters": {
              "id": 11500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11491,
                  "mutability": "mutable",
                  "name": "maturityTime",
                  "nameLocation": "4309:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11607,
                  "src": "4301:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4301:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11493,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4339:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11607,
                  "src": "4331:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4331:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11495,
                  "mutability": "mutable",
                  "name": "andBurn",
                  "nameLocation": "4360:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11607,
                  "src": "4355:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11494,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4355:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11497,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "4385:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11607,
                  "src": "4377:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11499,
                  "mutability": "mutable",
                  "name": "minOutput",
                  "nameLocation": "4414:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11607,
                  "src": "4406:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4406:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4291:138:36"
            },
            "returnParameters": {
              "id": 11501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4439:0:36"
            },
            "scope": 11719,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11663,
            "nodeType": "FunctionDefinition",
            "src": "6302:776:36",
            "nodes": [],
            "body": {
              "id": 11662,
              "nodeType": "Block",
              "src": "6346:732:36",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11613,
                      "name": "maturityTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11610,
                      "src": "6408:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 11614,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6423:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 11615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6429:9:36",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6423:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6408:30:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11622,
                  "nodeType": "IfStatement",
                  "src": "6404:71:36",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 11617,
                          "name": "IHyperdrive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7103,
                          "src": "6447:11:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$7103_$",
                            "typeString": "type(contract IHyperdrive)"
                          }
                        },
                        "id": 11619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6459:14:36",
                        "memberName": "BondNotMatured",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7078,
                        "src": "6447:26:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 11620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6447:28:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 11621,
                    "nodeType": "RevertStatement",
                    "src": "6440:35:36"
                  }
                },
                {
                  "assignments": [
                    11624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11624,
                      "mutability": "mutable",
                      "name": "assetId",
                      "nameLocation": "6538:7:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11662,
                      "src": "6530:15:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11623,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6530:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11632,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 11627,
                            "name": "AssetId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7731,
                            "src": "6583:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AssetId_$7731_$",
                              "typeString": "type(library AssetId)"
                            }
                          },
                          "id": 11628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6591:13:36",
                          "memberName": "AssetIdPrefix",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7694,
                          "src": "6583:21:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AssetIdPrefix_$7694_$",
                            "typeString": "type(enum AssetId.AssetIdPrefix)"
                          }
                        },
                        "id": 11629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6605:4:36",
                        "memberName": "Long",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7691,
                        "src": "6583:26:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$7694",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        }
                      },
                      {
                        "id": 11630,
                        "name": "maturityTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11610,
                        "src": "6623:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AssetIdPrefix_$7694",
                          "typeString": "enum AssetId.AssetIdPrefix"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11625,
                        "name": "AssetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7731,
                        "src": "6548:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AssetId_$7731_$",
                          "typeString": "type(library AssetId)"
                        }
                      },
                      "id": 11626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6556:13:36",
                      "memberName": "encodeAssetId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7717,
                      "src": "6548:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_AssetIdPrefix_$7694_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum AssetId.AssetIdPrefix,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 11631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6548:97:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6530:115:36"
                },
                {
                  "assignments": [
                    11634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11634,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "6663:7:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11662,
                      "src": "6655:15:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11633,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6655:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11643,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11637,
                        "name": "assetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11624,
                        "src": "6694:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11640,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6711:4:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BondWrapper_$11719",
                              "typeString": "contract BondWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BondWrapper_$11719",
                              "typeString": "contract BondWrapper"
                            }
                          ],
                          "id": 11639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6703:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11638,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6703:7:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6703:13:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11635,
                        "name": "hyperdrive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11341,
                        "src": "6673:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHyperdrive_$7103",
                          "typeString": "contract IHyperdrive"
                        }
                      },
                      "id": 11636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6684:9:36",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7537,
                      "src": "6673:20:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address) view external returns (uint256)"
                      }
                    },
                    "id": 11642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6673:44:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6655:62:36"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11644,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11634,
                      "src": "6783:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6794:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6783:12:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11661,
                  "nodeType": "IfStatement",
                  "src": "6779:293:36",
                  "trueBody": {
                    "id": 11660,
                    "nodeType": "Block",
                    "src": "6797:275:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11650,
                              "name": "maturityTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11610,
                              "src": "6932:12:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 11651,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11634,
                              "src": "6962:7:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 11652,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11634,
                              "src": "6987:7:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 11655,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7020:4:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BondWrapper_$11719",
                                    "typeString": "contract BondWrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BondWrapper_$11719",
                                    "typeString": "contract BondWrapper"
                                  }
                                ],
                                "id": 11654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7012:7:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 11653,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7012:7:36",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 11656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7012:13:36",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 11657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7043:4:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 11647,
                              "name": "hyperdrive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11341,
                              "src": "6894:10:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IHyperdrive_$7103",
                                "typeString": "contract IHyperdrive"
                              }
                            },
                            "id": 11649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6905:9:36",
                            "memberName": "closeLong",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7300,
                            "src": "6894:20:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_bool_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,address,bool) external returns (uint256)"
                            }
                          },
                          "id": 11658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6894:167:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11659,
                        "nodeType": "ExpressionStatement",
                        "src": "6894:167:36"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 11608,
              "nodeType": "StructuredDocumentation",
              "src": "6086:211:36",
              "text": "@notice Sells all assets from the contract if they are matured, has no affect if\n         the contract has no assets from a timestamp\n @param maturityTime The maturity time of the asset to sell"
            },
            "functionSelector": "aa60e733",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sweep",
            "nameLocation": "6311:5:36",
            "parameters": {
              "id": 11611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11610,
                  "mutability": "mutable",
                  "name": "maturityTime",
                  "nameLocation": "6325:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11663,
                  "src": "6317:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6317:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6316:22:36"
            },
            "returnParameters": {
              "id": 11612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6346:0:36"
            },
            "scope": 11719,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11684,
            "nodeType": "FunctionDefinition",
            "src": "7242:259:36",
            "nodes": [],
            "body": {
              "id": 11683,
              "nodeType": "Block",
              "src": "7281:220:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11670,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7375:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7379:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7375:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11672,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11666,
                        "src": "7387:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11669,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63249,
                      "src": "7369:5:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7369:25:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11674,
                  "nodeType": "ExpressionStatement",
                  "src": "7369:25:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11678,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7475:3:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7479:6:36",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7475:10:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11680,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11666,
                        "src": "7487:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 11675,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11344,
                        "src": "7456:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$6461",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7462:12:36",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59320,
                      "src": "7456:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$58980_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$58980_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 11681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7456:38:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11682,
                  "nodeType": "ExpressionStatement",
                  "src": "7456:38:36"
                }
              ]
            },
            "documentation": {
              "id": 11664,
              "nodeType": "StructuredDocumentation",
              "src": "7084:153:36",
              "text": "@notice Burns a caller's erc20 and transfers the result from the contract's token balance.\n @param amount The amount of erc20 wrapper to burn."
            },
            "functionSelector": "db006a75",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "7251:6:36",
            "parameters": {
              "id": 11667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11666,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7266:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11684,
                  "src": "7258:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11665,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7258:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7257:16:36"
            },
            "returnParameters": {
              "id": 11668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7281:0:36"
            },
            "scope": 11719,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 11718,
            "nodeType": "FunctionDefinition",
            "src": "7760:349:36",
            "nodes": [],
            "body": {
              "id": 11717,
              "nodeType": "Block",
              "src": "7865:244:36",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 11711,
                    "nodeType": "Block",
                    "src": "7972:107:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 11702,
                                "name": "maturityTimes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11688,
                                "src": "7992:13:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 11704,
                              "indexExpression": {
                                "id": 11703,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11694,
                                "src": "8006:1:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7992:16:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11701,
                            "name": "sweep",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11663,
                            "src": "7986:5:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 11705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7986:23:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11706,
                        "nodeType": "ExpressionStatement",
                        "src": "7986:23:36"
                      },
                      {
                        "id": 11710,
                        "nodeType": "UncheckedBlock",
                        "src": "8023:46:36",
                        "statements": [
                          {
                            "expression": {
                              "id": 11708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8051:3:36",
                              "subExpression": {
                                "id": 11707,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11694,
                                "src": "8053:1:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 11709,
                            "nodeType": "ExpressionStatement",
                            "src": "8051:3:36"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11697,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11694,
                      "src": "7944:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 11698,
                        "name": "maturityTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11688,
                        "src": "7948:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 11699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7962:6:36",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7948:20:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7944:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11712,
                  "initializationExpression": {
                    "assignments": [
                      11694
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11694,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7937:1:36",
                        "nodeType": "VariableDeclaration",
                        "scope": 11712,
                        "src": "7929:9:36",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11693,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7929:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11696,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7941:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7929:13:36"
                  },
                  "nodeType": "ForStatement",
                  "src": "7924:155:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11714,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11690,
                        "src": "8095:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11713,
                      "name": "redeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11684,
                      "src": "8088:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 11715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8088:14:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11716,
                  "nodeType": "ExpressionStatement",
                  "src": "8088:14:36"
                }
              ]
            },
            "documentation": {
              "id": 11685,
              "nodeType": "StructuredDocumentation",
              "src": "7507:248:36",
              "text": "@notice Calls both force close and redeem to enable easy liquidation of a user account\n @param  maturityTimes Maturity times which the caller would like to sweep before redeeming\n @param amount The amount of erc20 wrapper to burn."
            },
            "functionSelector": "dec16f03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sweepAndRedeem",
            "nameLocation": "7769:14:36",
            "parameters": {
              "id": 11691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11688,
                  "mutability": "mutable",
                  "name": "maturityTimes",
                  "nameLocation": "7812:13:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11718,
                  "src": "7793:32:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11686,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7793:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11687,
                    "nodeType": "ArrayTypeName",
                    "src": "7793:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11690,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7843:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11718,
                  "src": "7835:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7835:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7783:72:36"
            },
            "returnParameters": {
              "id": 11692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7865:0:36"
            },
            "scope": 11719,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11333,
              "name": "ERC20",
              "nameLocations": [
                "719:5:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63250,
              "src": "719:5:36"
            },
            "id": 11334,
            "nodeType": "InheritanceSpecifier",
            "src": "719:5:36"
          }
        ],
        "canonicalName": "BondWrapper",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11332,
          "nodeType": "StructuredDocumentation",
          "src": "373:322:36",
          "text": "@author DELV\n @title BondWrapper\n @notice A token that wraps Hyperdrive long positions.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          11719,
          63250
        ],
        "name": "BondWrapper",
        "nameLocation": "704:11:36",
        "scope": 11720,
        "usedErrors": [
          7010,
          7076,
          7078,
          7080,
          7082,
          7085
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 36
}