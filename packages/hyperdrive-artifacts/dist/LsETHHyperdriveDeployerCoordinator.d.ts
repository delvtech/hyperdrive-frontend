export declare const LsETHHyperdriveDeployerCoordinator: {
    readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_coreDeployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target0Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target1Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target2Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target3Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target4Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "contract IRiverV1";
            readonly name: "_river";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }];
        readonly name: "AddressEmptyCode";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "AddressInsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "FailedInnerCall";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "HyperdriveAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "HyperdriveIsNotDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncompleteDeployment";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidBaseToken";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCheckpointDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidFeeAmounts";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumShareReserves";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumTransactionAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidPositionDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidTargetIndex";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidVaultSharesToken";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedConfig";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedExtraData";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotPayable";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotPayable";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "SafeERC20FailedOperation";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TargetAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsupportedToken";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "coreDeployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "vaultSharesToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sweepCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "contract IERC20";
                readonly name: "vaultSharesToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sweepCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_targetIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deployTarget";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_deployer";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }];
        readonly name: "deployments";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "configHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "extraDataHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "initialSharePrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "hyperdrive";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target0";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target1";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target2";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target3";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target4";
                readonly type: "address";
            }];
            readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_lp";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_contribution";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_apr";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "destination";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "asBase";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraData";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IHyperdrive.Options";
            readonly name: "_options";
            readonly type: "tuple";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "lpShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target0Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target1Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target2Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target3Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target4Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "";
        readonly sourceMap: "1000:4745:16:-:0;;;1641:504;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3753:28:0;;;;;3791:34;;;;;3835;;;;;3879;;;;;3923;;;;3967;;;;2124:14:16::1;;::::0;1000:4745;;14:131:234;-1:-1:-1;;;;;89:31:234;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1077::-;292:6;300;308;316;324;332;340;393:3;381:9;372:7;368:23;364:33;361:53;;;410:1;407;400:12;361:53;442:9;436:16;461:31;486:5;461:31;:::i;:::-;561:2;546:18;;540:25;511:5;;-1:-1:-1;574:33:234;540:25;574:33;:::i;:::-;678:2;663:18;;657:25;626:7;;-1:-1:-1;691:33:234;657:25;691:33;:::i;:::-;795:2;780:18;;774:25;743:7;;-1:-1:-1;808:33:234;774:25;808:33;:::i;:::-;912:3;897:19;;891:26;860:7;;-1:-1:-1;926:33:234;891:26;926:33;:::i;:::-;1030:3;1015:19;;1009:26;978:7;;-1:-1:-1;1044:33:234;1009:26;1044:33;:::i;:::-;1148:3;1133:19;;1127:26;1096:7;;-1:-1:-1;1162:33:234;1127:26;1162:33;:::i;:::-;1214:7;1204:17;;;150:1077;;;;;;;;;;:::o;:::-;1000:4745:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "";
        readonly sourceMap: "1000:4745:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8078:6337:0;;;;;;;;;;-1:-1:-1;8078:6337:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4455:32:234;;;4437:51;;4425:2;4410:18;8078:6337:0;;;;;;;;15126:1363;;;;;;:::i;:::-;;:::i;:::-;;;6001:25:234;;;5989:2;5974:18;15126:1363:0;5855:177:234;4439:3006:0;;;;;;;;;;-1:-1:-1;4439:3006:0;;;;;:::i;:::-;;:::i;16695:189::-;;;;;;;;;;-1:-1:-1;16695:189:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3007:40::-;;;;;;;;;;;;;;;2626;;;;;;;;;;;;;;;2880;;;;;;;;;;;;;;;2499;;;;;;;;;;;;;;;2753;;;;;;;;;;;;;;;2375:37;;;;;;;;;;;;;;;8078:6337;8300:14;8571:12;8587:1;8571:17;8567:2042;;8781:10;8830:1;8768:24;;;;;;;;;;;:39;;;;;;;;:50;:64;8747:196;;8872:56;;-1:-1:-1;;;8872:56:0;;;;;;;;;;;8747:196;9077:31;9094:13;9077:16;:31::i;:::-;9226:25;9254:99;9298:13;9329:10;9254:26;:99::i;:::-;9226:127;;9367:19;9410:13;9399:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;9389:36;;;;;;9367:58;;9439:21;9473:10;9463:21;;;;;;9439:45;;9615:37;9655:60;9688:13;9655:15;:60::i;:::-;9615:100;;9762:17;9729:7;:30;;:50;;;;;9873:15;-1:-1:-1;;;;;9847:49:0;;9914:7;9939:10;10128;10140:13;10155:5;10117:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10107:55;;;;;;9847:329;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10241:10;10228:12;:24;;;;;;;;;;;:39;;;;;;;;:64;;;10306:70;;;:86;;;;-1:-1:-1;10406:74:0;;;:94;;;;10514:47;;:56;;-1:-1:-1;;;;;;10514:56:0;-1:-1:-1;;;;;10514:56:0;;;;;:39;-1:-1:-1;10585:13:0;;8567:2042;10788:10;10754:18;10775:24;;;;;;;;;;;:39;;;;;;;;:50;;10835:117;;10886:55;;-1:-1:-1;;;10886:55:0;;;;;;;;;;;10835:117;11074:10;11055:13;11044:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;11034:36;;;;;;:50;11030:137;;11107:49;;-1:-1:-1;;;11107:49:0;;;;;;;;;;;11030:137;11320:10;11307:12;:24;;;;;;;;;;;:39;;;;;;;;:53;;;11270:21;;;;;;;;;:90;11253:202;;11392:52;;-1:-1:-1;;;11392:52:0;;;;;;;;;;;11253:202;11731:31;11748:13;11731:16;:31::i;:::-;11881:36;11920:30;11936:13;11920:15;:30::i;:::-;12005:10;11992:12;:24;;;;;;;;;;;:39;;;;;;;;:70;;;11960:29;;;:102;11881:69;-1:-1:-1;12342:1:0;12326:17;;;12322:2063;;12376:10;12422:1;12363:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12363:47:0;:61;12359:161;;12451:54;;-1:-1:-1;;;12451:54:0;;;;;;;;;;;12359:161;12568:15;-1:-1:-1;;;;;12542:49:0;;12609:6;12633:10;12682;12694:13;12709:5;12671:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12661:55;;;;;;12542:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12757:10;12744:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;12744:56:0;-1:-1:-1;;;;;12744:56:0;;;;;;-1:-1:-1;12322:2063:0;;;12821:12;12837:1;12821:17;12817:1568;;12871:10;12917:1;12858:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12858:47:0;:61;12854:161;;12946:54;;-1:-1:-1;;;12946:54:0;;;;;;;;;;;12854:161;13063:15;-1:-1:-1;;;;;13037:49:0;;13104:6;13128:10;13177;13189:13;13204:5;13166:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13156:55;;;;;;13037:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13252:10;13239:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13239:56:0;-1:-1:-1;;;;;13239:56:0;;;;;;-1:-1:-1;12817:1568:0;;;13316:12;13332:1;13316:17;13312:1073;;13366:10;13412:1;13353:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;13353:47:0;:61;13349:161;;13441:54;;-1:-1:-1;;;13441:54:0;;;;;;;;;;;13349:161;13558:15;-1:-1:-1;;;;;13532:49:0;;13599:6;13623:10;13672;13684:13;13699:5;13661:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13651:55;;;;;;13532:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13747:10;13734:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13734:56:0;-1:-1:-1;;;;;13734:56:0;;;;;;-1:-1:-1;13312:1073:0;;;13811:12;13827:1;13811:17;13807:578;;13861:10;13907:1;13848:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;13848:47:0;:61;13844:161;;13936:54;;-1:-1:-1;;;13936:54:0;;;;;;;;;;;13844:161;14053:15;-1:-1:-1;;;;;14027:49:0;;14094:6;14118:10;14167;14179:13;14194:5;14156:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14146:55;;;;;;14027:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14242:10;14229:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;14229:56:0;-1:-1:-1;;;;;14229:56:0;;;;;;-1:-1:-1;13807:578:0;;;14323:51;;-1:-1:-1;;;14323:51:0;;;;;;;;;;;13807:578;14395:13;;8078:6337;;;;;;;;:::o;15126:1363::-;15328:16;15406:20;:18;:20::i;:::-;15561:10;15498:22;15548:24;;;;;;;;;;;:39;;;;;;;;:50;;;-1:-1:-1;;;;;15548:50:0;;15618:127;;15678:56;;-1:-1:-1;;;15678:56:0;;;;;;;;;;;15618:127;15825:13;15841:118;15873:10;15897:3;15914:13;15941:8;15841:18;:118::i;:::-;15825:134;;16019:10;-1:-1:-1;;;;;16019:21:0;;16049:5;16070:13;16097:4;16115:8;16019:114;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16008:125;-1:-1:-1;16194:14:0;16211:17;16223:5;16211:9;:17;:::i;:::-;16194:34;-1:-1:-1;16242:10:0;;16238:219;;16287:45;;16269:12;;16295:10;;16320:6;;16269:12;16287:45;16269:12;16287:45;16320:6;16295:10;16287:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16268:64;;;16351:7;16346:101;;16385:47;;-1:-1:-1;;;16385:47:0;;;;;;;;;;;16346:101;16254:203;16238:219;16467:15;;;15126:1363;;;;;;;:::o;4439:3006::-;4768:10;4625:7;4755:24;;;;;;;;;;;:39;;;;;;;;4724:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4724:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4808:35;4804:131;;4866:58;;-1:-1:-1;;;4866:58:0;;;;;;;;;;;4804:131;5084:21;;5080:128;;5142:55;;-1:-1:-1;;;5142:55:0;;;;;;;;;;;5080:128;5297:18;;;;-1:-1:-1;;;;;5297:32:0;;;:80;;-1:-1:-1;5345:18:0;;;;-1:-1:-1;;;;;5345:32:0;;5297:80;:128;;;-1:-1:-1;5393:18:0;;;;-1:-1:-1;;;;;5393:32:0;;5297:128;:176;;;-1:-1:-1;5441:18:0;;;;-1:-1:-1;;;;;5441:32:0;;5297:176;:224;;;-1:-1:-1;5489:18:0;;;;-1:-1:-1;;;;;5489:32:0;;5297:224;5280:337;;;5553:53;;-1:-1:-1;;;5553:53:0;;;;;;;;;;;5280:337;5739:21;;5709:25;;;;5720:13;;5709:25;;;:::i;:::-;;;;;;;;;;;;;5699:36;;;;;;:61;5695:148;;5783:49;;-1:-1:-1;;;5783:49:0;;;;;;;;;;;5695:148;5958:10;:24;;;5943:10;5933:21;;;;;;:49;5929:139;;6005:52;;-1:-1:-1;;;6005:52:0;;;;;;;;;;;5929:139;6344:31;6361:13;6344:16;:31::i;:::-;6494:36;6533:30;6549:13;6533:15;:30::i;:::-;6494:69;;6605:10;:28;;;6573:6;:29;;:60;;;;;6723:20;6746:13;6723:36;;6799:12;6814:5;6799:20;;6859:18;6904:12;-1:-1:-1;;;;;6880:44:0;;6938:6;6958:10;6982;:18;;;7014:10;:18;;;7046:10;:18;;;7078:10;:18;;;7110:10;:18;;;7295:10;7307:12;7321:4;7284:42;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7274:53;;;;;;6880:457;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7360:10;7347:12;:24;;;;;;;;;;;:39;;;;;;;;;;:50;;:63;;-1:-1:-1;;;;;;7347:63:0;-1:-1:-1;;;;;7347:63:0;;;;;-1:-1:-1;7347:63:0;;4439:3006;-1:-1:-1;;;;;;;;4439:3006:0:o;16695:189::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16839:23:0;;;:12;:23;;;;;;;;;;;:38;;;;;;;;;16832:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16695:189;;;;;:::o;3915:1365:16:-;4078:37;4101:13;4078:22;:37::i;:::-;4208:23;;-1:-1:-1;;;;;4200:39:16;129:42:120;4200:39:16;4196:126;;4262:49;;-1:-1:-1;;;4262:49:16;;;;;;;;;;;4196:126;4465:5;-1:-1:-1;;;;;4414:57:16;4422:13;:30;;;-1:-1:-1;;;;;4414:57:16;;4410:151;;4494:56;;-1:-1:-1;;;4494:56:16;;;;;;;;;;;4410:151;4823:13;:34;;;4861:4;4823:42;4819:140;;4888:60;;-1:-1:-1;;;4888:60:16;;;;;;;;;;;4819:140;5113:13;:38;;;5155:4;5113:46;5109:165;;5182:81;;-1:-1:-1;;;5182:81:16;;;;;;;;;;;5109:165;3915:1365;:::o;5428:315::-;5698:38;;-1:-1:-1;;;5698:38:16;;193:4:122;5698:38:16;;;6001:25:234;5619:7:16;;5698:5;-1:-1:-1;;;;;5698:33:16;;;;5974:18:234;;5698:38:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5691:45;5428:315;-1:-1:-1;;;5428:315:16:o;20004:1056:0:-;20117:37;;:::i;:::-;20253:23;;-1:-1:-1;;;;;20233:43:0;;;;;20313:30;;;;;20286:57;;:24;;;:57;20377:27;;;;;20353:51;;:21;;;:51;20439:28;;;;;20414:22;;;:53;20508:34;;;;20477:28;;;;:65;;;;20587:51;;;20552:32;;;;:86;;;;20675:30;;;20648:24;;;;:57;;;;20744:32;;;20715:26;;;;:61;;;;20808:25;;;20786:19;;;;:47;;;;20864:24;;;20843:45;;:18;;;;:45;;;;20921:26;;;20898:49;;:20;;;;:49;;;;20982:28;;;20957:53;:22;;;;:53;;;;21035:18;;;;21020:12;;;:33;20233:7;20004:1056::o;3613:144:16:-;3680:9;:13;3676:75;;3716:24;;-1:-1:-1;;;3716:24:16;;;;;;;;;;;3676:75;3613:144::o;2775:731::-;2966:7;3034:8;:15;;;3030:83;;;3072:30;;-1:-1:-1;;;3072:30:16;;;;;;;;;;;3030:83;3212:119;-1:-1:-1;;;;;3226:5:16;3212:38;3264:3;3289:4;3308:13;3212:38;:119::i;:::-;3341:71;-1:-1:-1;;;;;3355:5:16;3341:34;3384:11;3398:13;3341:34;:71::i;:::-;-1:-1:-1;3498:1:16;2775:731;;;;;;:::o;18103:1191:0:-;18404:3;18367:13;:34;;;:40;18363:138;;;18430:60;;-1:-1:-1;;;18430:60:0;;;;;;;;;;;18363:138;18515:13;:32;;;18551:1;18515:37;18511:133;;18575:58;;-1:-1:-1;;;18575:58:0;;;;;;;;;;;18511:133;18703:13;:32;;;18670:13;:30;;;:65;:163;;;;18784:13;:32;;;18751:13;:30;;;:65;;;;:::i;:::-;:82;;18670:163;18653:279;;;18865:56;;-1:-1:-1;;;18865:56:0;;;;;;;;;;;18653:279;19010:18;;;;:24;193:4:122;-1:-1:-1;19010:30:0;:75;;;193:4:122;19056:13:0;:18;;;:23;;;:29;19010:75;:128;;;;193:4:122;19101:13:0;:18;;;:31;;;:37;19010:128;:185;;;;193:4:122;19154:13:0;:18;;;:35;;;:41;19010:185;18993:295;;;19227:50;;-1:-1:-1;;;19227:50:0;;;;;;;;;;;1702:188:166;1829:53;;-1:-1:-1;;;;;15372:15:234;;;1829:53:166;;;15354:34:234;15424:15;;;15404:18;;;15397:43;15456:18;;;15449:34;;;1802:81:166;;1822:5;;1844:18;;;;;15289::234;;1829:53:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:53:166;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;3296:380::-;3411:47;;;-1:-1:-1;;;;;15686:32:234;;3411:47:166;;;15668:51:234;15735:18;;;;15728:34;;;3411:47:166;;;;;;;;;;15641:18:234;;;;3411:47:166;;;;;;;;-1:-1:-1;;;;;3411:47:166;-1:-1:-1;;;3411:47:166;;;3474:44;3426:13;3411:47;3474:23;:44::i;:::-;3469:201;;3561:43;;-1:-1:-1;;;;;15686:32:234;;;3561:43:166;;;15668:51:234;3601:1:166;15735:18:234;;;15728:34;3534:71:166;;3554:5;;3576:13;;;;;15641:18:234;;3561:43:166;15494:274:234;3534:71:166;3619:40;3639:5;3646:12;4059:629;4478:23;4504:33;-1:-1:-1;;;;;4504:27:166;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:166;;-1:-1:-1;;;;;4455:32:234;;4631:40:166;;;4437:51:234;4410:18;;4631:40:166;;;;;;;;4547:135;4129:559;4059:629;;:::o;5189:578::-;5272:4;5574:12;5588:23;5623:5;-1:-1:-1;;;;;5615:19:166;5635:4;5615:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:67;;;;5657:7;:69;;;;-1:-1:-1;5669:17:166;;:22;;:56;;;5706:10;5695:30;;;;;;;;;;;;:::i;:::-;5657:103;;;;-1:-1:-1;;;;;;;;;;5730:26:166;;:30;;;5189:578::o;2705:151:167:-;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;-1:-1:-1;;;;;3462:11:167;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:167:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:167;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:167;;-1:-1:-1;;;;;4455:32:234;;5121:24:167;;;4437:51:234;4410:18;;5121:24:167;4291:203:234;5041:119:167;-1:-1:-1;5180:10:167;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:167;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:234:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:255;218:2;212:9;260:6;248:19;;297:18;282:34;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:2;373:22;146:255;:::o;406:246::-;473:2;467:9;515:2;503:15;;548:18;533:34;;569:22;;;530:62;527:88;;;595:18;;:::i;657:139::-;-1:-1:-1;;;;;740:31:234;;730:42;;720:70;;786:1;783;776:12;801:150;877:20;;906:39;877:20;906:39;:::i;:::-;801:150;;;:::o;956:601::-;1007:5;1055:4;1043:9;1038:3;1034:19;1030:30;1027:50;;;1073:1;1070;1063:12;1027:50;1106:2;1100:9;1148:4;1140:6;1136:17;1219:6;1207:10;1204:22;1183:18;1171:10;1168:34;1165:62;1162:88;;;1230:18;;:::i;:::-;1270:10;1266:2;1259:22;;1299:6;1290:15;;1342:9;1329:23;1321:6;1314:39;1414:2;1403:9;1399:18;1386:32;1381:2;1373:6;1369:15;1362:57;1480:2;1469:9;1465:18;1452:32;1447:2;1439:6;1435:15;1428:57;1546:2;1535:9;1531:18;1518:32;1513:2;1505:6;1501:15;1494:57;;956:601;;;;:::o;1562:1225::-;1625:5;1673:6;1661:9;1656:3;1652:19;1648:32;1645:52;;;1693:1;1690;1683:12;1645:52;1715:22;;:::i;:::-;1706:31;;1760:37;1787:9;1760:37;:::i;:::-;1753:5;1746:52;1830:46;1872:2;1861:9;1857:18;1830:46;:::i;:::-;1825:2;1818:5;1814:14;1807:70;1909:46;1951:2;1940:9;1936:18;1909:46;:::i;:::-;1904:2;1897:5;1893:14;1886:70;2016:2;2005:9;2001:18;1988:32;1983:2;1976:5;1972:14;1965:56;2082:3;2071:9;2067:19;2054:33;2048:3;2041:5;2037:15;2030:58;2149:3;2138:9;2134:19;2121:33;2115:3;2108:5;2104:15;2097:58;2216:3;2205:9;2201:19;2188:33;2182:3;2175:5;2171:15;2164:58;2283:3;2272:9;2268:19;2255:33;2249:3;2242:5;2238:15;2231:58;2308:3;2371:2;2360:9;2356:18;2343:32;2338:2;2331:5;2327:14;2320:56;;2395:3;2430:46;2472:2;2461:9;2457:18;2430:46;:::i;:::-;2414:14;;;2407:70;2496:3;2531:46;2558:18;;;2531:46;:::i;:::-;2515:14;;;2508:70;2597:3;2632:46;2659:18;;;2632:46;:::i;:::-;2616:14;;;2609:70;2698:3;2733:47;2776:3;2756:18;;;2733:47;:::i;:::-;2717:14;;;2710:71;2721:5;1562:1225;-1:-1:-1;;1562:1225:234:o;2792:718::-;2834:5;2887:3;2880:4;2872:6;2868:17;2864:27;2854:55;;2905:1;2902;2895:12;2854:55;2941:6;2928:20;2967:18;3004:2;3000;2997:10;2994:36;;;3010:18;;:::i;:::-;3085:2;3079:9;3053:2;3139:13;;-1:-1:-1;;3135:22:234;;;3159:2;3131:31;3127:40;3115:53;;;3183:18;;;3203:22;;;3180:46;3177:72;;;3229:18;;:::i;:::-;3269:10;3265:2;3258:22;3304:2;3296:6;3289:18;3350:3;3343:4;3338:2;3330:6;3326:15;3322:26;3319:35;3316:55;;;3367:1;3364;3357:12;3316:55;3431:2;3424:4;3416:6;3412:17;3405:4;3397:6;3393:17;3380:54;3478:1;3471:4;3466:2;3458:6;3454:15;3450:26;3443:37;3498:6;3489:15;;;;;;2792:718;;;;:::o;3515:662::-;3654:6;3662;3670;3678;3686;3739:3;3727:9;3718:7;3714:23;3710:33;3707:53;;;3756:1;3753;3746:12;3707:53;3792:9;3779:23;3769:33;;3821:63;3876:7;3871:2;3860:9;3856:18;3821:63;:::i;:::-;3811:73;;3935:3;3924:9;3920:19;3907:33;3963:18;3955:6;3952:30;3949:50;;;3995:1;3992;3985:12;3949:50;4018:49;4059:7;4050:6;4039:9;4035:22;4018:49;:::i;:::-;3515:662;;;;-1:-1:-1;4008:59:234;;4114:3;4099:19;;4086:33;;-1:-1:-1;4166:3:234;4151:19;4138:33;;3515:662;-1:-1:-1;;;3515:662:234:o;4499:118::-;4585:5;4578:13;4571:21;4564:5;4561:32;4551:60;;4607:1;4604;4597:12;4622:1228;4743:6;4751;4759;4767;4775;4828:3;4816:9;4807:7;4803:23;4799:33;4796:53;;;4845:1;4842;4835:12;4796:53;4881:9;4868:23;4858:33;;4941:2;4930:9;4926:18;4913:32;4954:39;4987:5;4954:39;:::i;:::-;5012:5;-1:-1:-1;5064:2:234;5049:18;;5036:32;;-1:-1:-1;5115:2:234;5100:18;;5087:32;;-1:-1:-1;5170:3:234;5155:19;;5142:33;5194:18;5224:14;;;5221:34;;;5251:1;5248;5241:12;5221:34;5274:22;;;;5330:2;5312:16;;;5308:25;5305:45;;;5346:1;5343;5336:12;5305:45;5374:17;;:::i;:::-;5428:2;5415:16;5440:41;5473:7;5440:41;:::i;:::-;5490:24;;5559:2;5551:11;;5538:25;5572:30;5538:25;5572:30;:::i;:::-;5631:2;5618:16;;5611:33;5690:2;5682:11;;5669:25;5706:16;;;5703:36;;;5735:1;5732;5725:12;5703:36;5773:44;5809:7;5798:8;5794:2;5790:17;5773:44;:::i;:::-;5768:2;5759:7;5755:16;5748:70;;5837:7;5827:17;;;;;4622:1228;;;;;;;;:::o;6037:593::-;6167:6;6175;6183;6191;6244:3;6232:9;6223:7;6219:23;6215:33;6212:53;;;6261:1;6258;6251:12;6212:53;6297:9;6284:23;6274:33;;6326:63;6381:7;6376:2;6365:9;6361:18;6326:63;:::i;:::-;6316:73;;6440:3;6429:9;6425:19;6412:33;6468:18;6460:6;6457:30;6454:50;;;6500:1;6497;6490:12;6454:50;6523:49;6564:7;6555:6;6544:9;6540:22;6523:49;:::i;:::-;6037:593;;;;-1:-1:-1;6513:59:234;;6619:3;6604:19;6591:33;;-1:-1:-1;;;6037:593:234:o;6635:323::-;6703:6;6711;6764:2;6752:9;6743:7;6739:23;6735:32;6732:52;;;6780:1;6777;6770:12;6732:52;6819:9;6806:23;6838:39;6871:5;6838:39;:::i;:::-;6896:5;6948:2;6933:18;;;;6920:32;;-1:-1:-1;;;6635:323:234:o;6963:1087::-;7180:13;;7162:32;;7250:4;7238:17;;;7232:24;7210:20;;;7203:54;7313:4;7301:17;;;7295:24;7273:20;;;7266:54;7367:4;7355:17;;;7349:24;-1:-1:-1;;;;;7449:21:234;;;7427:20;;;7420:51;;;;7531:4;7519:17;;;7513:24;7509:33;;7487:20;;;7480:63;7400:3;7580:17;;;7574:24;4248:31;;7642:20;;;4236:44;7712:4;7700:17;;;7694:24;4248:31;;7762:20;;;4236:44;7832:4;7820:17;;;7814:24;4248:31;;7882:20;;;4236:44;7922:6;7965:15;;;7959:22;4248:31;;;8025:18;;;4236:44;7149:3;7134:19;;;7990:54;;;6963:1087;;;;:::o;8317:1470::-;8553:13;;-1:-1:-1;;;;;4248:31:234;4236:44;;8521:3;8506:19;;8625:4;8617:6;8613:17;8607:24;8640:54;8688:4;8677:9;8673:20;8659:12;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;8640:54;;8743:4;8735:6;8731:17;8725:24;8758:56;8808:4;8797:9;8793:20;8777:14;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;8758:56;;8870:4;8862:6;8858:17;8852:24;8845:4;8834:9;8830:20;8823:54;8933:4;8925:6;8921:17;8915:24;8908:4;8897:9;8893:20;8886:54;8996:4;8988:6;8984:17;8978:24;8971:4;8960:9;8956:20;8949:54;9059:4;9051:6;9047:17;9041:24;9034:4;9023:9;9019:20;9012:54;9122:4;9114:6;9110:17;9104:24;9097:4;9086:9;9082:20;9075:54;9148:6;9208:2;9200:6;9196:15;9190:22;9185:2;9174:9;9170:18;9163:50;;9232:6;9287:2;9279:6;9275:15;9269:22;9300:54;9350:2;9339:9;9335:18;9319:14;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;9300:54;-1:-1:-1;;9373:6:234;9416:15;;;9410:22;-1:-1:-1;;;;;4248:31:234;;9476:18;;;4236:44;-1:-1:-1;;9514:6:234;9557:15;;;9551:22;-1:-1:-1;;;;;4248:31:234;;9617:18;;;4236:44;-1:-1:-1;;9655:6:234;9698:15;;;9692:22;8125:12;;9762:18;;;8113:25;8187:4;8176:16;;8170:23;8154:14;;;8147:47;8243:4;8232:16;;8226:23;8210:14;;;8203:47;8299:4;8288:16;;8282:23;8266:14;;;8259:47;9723:58;8055:257;9792:345;-1:-1:-1;;;;;10012:32:234;;;;9994:51;;10076:2;10061:18;;10054:34;;;;10119:2;10104:18;;10097:34;9982:2;9967:18;;9792:345::o;10142:1303::-;10225:12;;-1:-1:-1;;;;;4248:31:234;4236:44;;10289:4;10282:5;10278:16;10272:23;10304:48;10346:4;10341:3;10337:14;10323:12;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;10304:48;;10400:4;10393:5;10389:16;10383:23;10415:50;10459:4;10454:3;10450:14;10434;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;10415:50;;10514:4;10507:5;10503:16;10497:23;10490:4;10485:3;10481:14;10474:47;10570:4;10563:5;10559:16;10553:23;10546:4;10541:3;10537:14;10530:47;10626:4;10619:5;10615:16;10609:23;10602:4;10597:3;10593:14;10586:47;10682:4;10675:5;10671:16;10665:23;10658:4;10653:3;10649:14;10642:47;10738:4;10731:5;10727:16;10721:23;10714:4;10709:3;10705:14;10698:47;10764:6;10817:2;10810:5;10806:14;10800:21;10795:2;10790:3;10786:12;10779:43;;10841:6;10894:2;10887:5;10883:14;10877:21;10872:2;10867:3;10863:12;10856:43;;10918:6;10972:2;10965:5;10961:14;10955:21;10985:48;11029:2;11024:3;11020:12;11004:14;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;10985:48;-1:-1:-1;;11052:6:234;11095:14;;;11089:21;-1:-1:-1;;;;;4248:31:234;;11154:12;;;4236:44;-1:-1:-1;;11186:6:234;11229:14;;;11223:21;-1:-1:-1;;;;;4248:31:234;;11288:12;;;4236:44;-1:-1:-1;;11320:6:234;11363:14;;;11357:21;8125:12;;11426;;;8113:25;8187:4;8176:16;;8170:23;8154:14;;;8147:47;8243:4;8232:16;;8226:23;8210:14;;;8203:47;8299:4;8288:16;;8282:23;8266:14;;;8259:47;11387:52;8055:257;11450:250;11535:1;11545:113;11559:6;11556:1;11553:13;11545:113;;;11635:11;;;11629:18;11616:11;;;11609:39;11581:2;11574:10;11545:113;;;-1:-1:-1;;11692:1:234;11674:16;;11667:27;11450:250::o;11705:270::-;11746:3;11784:5;11778:12;11811:6;11806:3;11799:19;11827:76;11896:6;11889:4;11884:3;11880:14;11873:4;11866:5;11862:16;11827:76;:::i;:::-;11957:2;11936:15;-1:-1:-1;;11932:29:234;11923:39;;;;11964:4;11919:50;;11705:270;-1:-1:-1;;11705:270:234:o;11980:463::-;12204:4;12233:3;12245:47;12282:9;12274:6;12245:47;:::i;:::-;12329:2;12323:3;12312:9;12308:19;12301:31;12349:44;12389:2;12378:9;12374:18;12366:6;12349:44;:::i;:::-;12341:52;;;12430:6;12424:3;12413:9;12409:19;12402:35;11980:463;;;;;;:::o;12448:259::-;12518:6;12571:2;12559:9;12550:7;12546:23;12542:32;12539:52;;;12587:1;12584;12577:12;12539:52;12619:9;12613:16;12638:39;12671:5;12638:39;:::i;12712:643::-;12949:6;12938:9;12931:25;12992:6;12987:2;12976:9;12972:18;12965:34;13035:2;13030;13019:9;13015:18;13008:30;13110:1;13106;13101:3;13097:11;13093:19;13084:6;13078:13;13074:39;13069:2;13058:9;13054:18;13047:67;13183:2;13175:6;13171:15;13165:22;13158:30;13151:38;13145:3;13134:9;13130:19;13123:67;12912:4;13237:2;13229:6;13225:15;13219:22;13278:2;13272:3;13261:9;13257:19;13250:31;13298:51;13344:3;13333:9;13329:19;13315:12;13298:51;:::i;13360:184::-;13430:6;13483:2;13471:9;13462:7;13458:23;13454:32;13451:52;;;13499:1;13496;13489:12;13451:52;-1:-1:-1;13522:16:234;;13360:184;-1:-1:-1;13360:184:234:o;13549:225::-;13616:9;;;13637:11;;;13634:134;;;13690:10;13685:3;13681:20;13678:1;13671:31;13725:4;13722:1;13715:15;13753:4;13750:1;13743:15;13989:906;14353:4;14382:3;14394:47;14431:9;14423:6;14394:47;:::i;:::-;14478:2;14472:3;14461:9;14457:19;14450:31;14498:44;14538:2;14527:9;14523:18;14515:6;14498:44;:::i;:::-;-1:-1:-1;;;;;14617:15:234;;;14611:3;14596:19;;14589:44;14670:15;;;14664:3;14649:19;;14642:44;-1:-1:-1;;14723:15:234;;;14717:3;14702:19;;14695:44;14776:15;;;14770:3;14755:19;;14748:44;14829:15;;;14823:3;14808:19;;14801:44;14876:3;14861:19;14854:35;;;;14490:52;13989:906;-1:-1:-1;;13989:906:234:o;14900:209::-;14932:1;14958;14948:132;;15002:10;14997:3;14993:20;14990:1;14983:31;15037:4;15034:1;15027:15;15065:4;15062:1;15055:15;14948:132;-1:-1:-1;15094:9:234;;14900:209::o;16060:245::-;16127:6;16180:2;16168:9;16159:7;16155:23;16151:32;16148:52;;;16196:1;16193;16186:12;16148:52;16228:9;16222:16;16247:28;16269:5;16247:28;:::i;16310:287::-;16439:3;16477:6;16471:13;16493:66;16552:6;16547:3;16540:4;16532:6;16528:17;16493:66;:::i;:::-;16575:16;;;;;16310:287;-1:-1:-1;;16310:287:234:o";
        readonly linkReferences: {};
        readonly immutableReferences: {
            readonly "2387": readonly [{
                readonly start: 4081;
                readonly length: 32;
            }, {
                readonly start: 4286;
                readonly length: 32;
            }, {
                readonly start: 4669;
                readonly length: 32;
            }, {
                readonly start: 4722;
                readonly length: 32;
            }];
            readonly "45": readonly [{
                readonly start: 599;
                readonly length: 32;
            }, {
                readonly start: 3494;
                readonly length: 32;
            }];
            readonly "48": readonly [{
                readonly start: 495;
                readonly length: 32;
            }, {
                readonly start: 801;
                readonly length: 32;
            }];
            readonly "51": readonly [{
                readonly start: 391;
                readonly length: 32;
            }, {
                readonly start: 1391;
                readonly length: 32;
            }];
            readonly "54": readonly [{
                readonly start: 547;
                readonly length: 32;
            }, {
                readonly start: 1713;
                readonly length: 32;
            }];
            readonly "57": readonly [{
                readonly start: 443;
                readonly length: 32;
            }, {
                readonly start: 2035;
                readonly length: 32;
            }];
            readonly "60": readonly [{
                readonly start: 339;
                readonly length: 32;
            }, {
                readonly start: 2357;
                readonly length: 32;
            }];
        };
    };
    readonly methodIdentifiers: {
        readonly "coreDeployer()": "c83e1f51";
        readonly "deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": "1ae6f515";
        readonly "deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": "0b3c4f86";
        readonly "deployments(address,bytes32)": "20503b3f";
        readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": "16abfc70";
        readonly "target0Deployer()": "ab71905f";
        readonly "target1Deployer()": "a085fa30";
        readonly "target2Deployer()": "b6cb1118";
        readonly "target3Deployer()": "aa8cd6c4";
        readonly "target4Deployer()": "966ecd1c";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coreDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target0Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target1Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target2Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target3Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target4Deployer\",\"type\":\"address\"},{\"internalType\":\"contract IRiverV1\",\"name\":\"_river\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveIsNotDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBaseToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumTransactionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTargetIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultSharesToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"coreDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"vaultSharesToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"vaultSharesToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"}],\"name\":\"deployments\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"configHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"extraDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hyperdrive\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target4\",\"type\":\"address\"}],\"internalType\":\"struct HyperdriveDeployerCoordinator.Deployment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpShares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target0Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target1Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target2Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target3Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target4Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_coreDeployer\":\"The core deployer.\",\"_river\":\"The LsETH contract.\",\"_target0Deployer\":\"The target0 deployer.\",\"_target1Deployer\":\"The target1 deployer.\",\"_target2Deployer\":\"The target2 deployer.\",\"_target3Deployer\":\"The target3 deployer.\",\"_target4Deployer\":\"The target4 deployer.\"}},\"deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy Hyperdrive.\"},\"returns\":{\"_0\":\"The address of the newly deployed Hyperdrive instance.\"}},\"deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"details\":\"As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.\",\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy the target.\",\"_targetIndex\":\"The index of the target to deploy.\"},\"returns\":{\"target\":\"The address of the newly deployed target instance.\"}},\"deployments(address,bytes32)\":{\"params\":{\"_deployer\":\"The deployer.\",\"_deploymentId\":\"The deployment ID.\"},\"returns\":{\"_0\":\"The deployment.\"}},\"initialize(bytes32,address,uint256,uint256,(address,bool,bytes))\":{\"details\":\"This function utilizes several helper functions that provide      flexibility to implementations.\",\"params\":{\"_apr\":\"The target APR.\",\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_deploymentId\":\"The ID of the deployment.\",\"_lp\":\"The LP that is initializing the pool.\",\"_options\":\"The options that configure how the initialization is        settled.\"},\"returns\":{\"lpShares\":\"The initial number of LP shares created.\"}}},\"stateVariables\":{\"river\":{\"details\":\"The LsETH contract.\"}},\"title\":\"LsETHHyperdriveDeployerCoordinator\",\"version\":1},\"userdoc\":{\"errors\":{\"DeploymentAlreadyExists()\":[{\"notice\":\"Thrown when a user attempts to deploy target0 the deployment has         already been created.\"}],\"DeploymentDoesNotExist()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract that requires         the deployment to be created and the deployment doesn't exist.\"}],\"HyperdriveAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a hyperdrive contract         after it has already been deployed.\"}],\"HyperdriveIsNotDeployed()\":[{\"notice\":\"Thrown when a user attempts to initialize a hyperdrive contract         before is has been deployed.\"}],\"IncompleteDeployment()\":[{\"notice\":\"Thrown when a user attempts to deploy a Hyperdrive entrypoint         without first deploying the required targets.\"}],\"InsufficientValue()\":[{\"notice\":\"Thrown when a deployer provides an insufficient amount of base         to initialize a payable Hyperdrive instance.\"}],\"InvalidBaseToken()\":[{\"notice\":\"Thrown when the base token isn't valid. Each instance will have         different criteria for what constitutes a valid base token.\"}],\"InvalidCheckpointDuration()\":[{\"notice\":\"Thrown when the checkpoint duration specified is zero.\"}],\"InvalidFeeAmounts()\":[{\"notice\":\"Thrown when the curve fee, flat fee, governance LP fee, or         governance zombie fee is greater than 100%.\"}],\"InvalidMinimumShareReserves()\":[{\"notice\":\"Thrown when the minimum share reserves is too small. The         absolute smallest allowable minimum share reserves is 1e3;         however, yield sources may require a larger minimum share         reserves.\"}],\"InvalidMinimumTransactionAmount()\":[{\"notice\":\"Thrown when the minimum transaction amount is too small.\"}],\"InvalidPositionDuration()\":[{\"notice\":\"Thrown when the position duration is smaller than the checkpoint         duration or is not a multiple of the checkpoint duration.\"}],\"InvalidTargetIndex()\":[{\"notice\":\"Thrown when a user attempts to deploy a target using a target         index that is outside of the accepted range.\"}],\"InvalidVaultSharesToken()\":[{\"notice\":\"Thrown when the vault shares token isn't valid. Each instance         will have different criteria for what constitutes a valid base         token.\"}],\"MismatchedConfig()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with a config that doesn't match the deployment's         config hash.\"}],\"MismatchedExtraData()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with extra data that doesn't match the deployment's         extra data hash.\"}],\"NotPayable()\":[{\"notice\":\"Thrown when ether is sent to an instance that doesn't accept         ether as a deposit asset.\"},{\"notice\":\"Thrown when ether is sent to an instance that doesn't accept         ether as a deposit asset.\"}],\"TargetAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a target contract after         it has already been deployed.\"}],\"TransferFailed()\":[{\"notice\":\"Thrown when an ether transfer fails.\"}],\"UnsupportedToken()\":[{\"notice\":\"Thrown when an unsupported option is passed to a function or         a user attempts to sweep an invalid token. The options and sweep         targets that are supported vary between instances.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates the deployer coordinator.\"},\"coreDeployer()\":{\"notice\":\"The contract used to deploy new instances of Hyperdrive.\"},\"deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"},\"deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"notice\":\"Deploys a Hyperdrive target instance with the given parameters.\"},\"deployments(address,bytes32)\":{\"notice\":\"Gets the deployment specified by the deployer and deployment ID.\"},\"initialize(bytes32,address,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Initializes a pool that was deployed by this coordinator.\"},\"target0Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget0.\"},\"target1Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget1.\"},\"target2Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget2.\"},\"target3Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget3.\"},\"target4Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget4.\"}},\"notice\":\"The deployer coordinator for the LsETHHyperdrive implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/lseth/LsETHHyperdriveDeployerCoordinator.sol\":\"LsETHHyperdriveDeployerCoordinator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/HyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xf6c8e82f88f58a7f694384882ab7c2218bd07a672e80f137eb50c56aa8d849da\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41b150e78a9b8d5c7dd3b6ad14dd124e5fb84486d8bb7c2732d107f386545214\",\"dweb:/ipfs/QmNT6KEz9LdUJCaV9pvF2YmccHeJPqq5LQAy6Y2wZhfqzR\"]},\"contracts/src/deployers/lseth/LsETHHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xfee03681870d3243a6f52473cb8ce4b6cfea95eaefd656ab65ca929c7f77cc9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b78620499471059434021a9f6eb175b313e6f8646348165c4d51608d4262200b\",\"dweb:/ipfs/QmVut7ZfVPREAc88i9DaFPTLizS2ZtuLB4D8SZfoLpLQvk\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xc293b4229674624983294b673d6fefce53ed8f6f3d9c6bbcb34da25f42ef2c71\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://084f43e7c42615faabfb6ae9100a8cea6bf9846eb1c433dc08fe634c59cadcaf\",\"dweb:/ipfs/QmXW3GgcbQQg5xnfAC6RT2KBL9ii8s1jwbDtZywWXFydpm\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24\",\"dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b\",\"dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU\"]},\"contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0x2eb8c9cd2fb58f1c6b1054c5d5e325b78386855bbcfd0a86b595aa98bd05df28\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cd2aa557854a35ada0b5d334c981739eecbc82580aa35693277749b8cadbe4f4\",\"dweb:/ipfs/QmcRWJuLSrA44XmFC1bMAGCKUfPmVUnUv7YE8fNC4gy91v\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://338a9f960049c37d13b6e23e5bc2c9e6005366aa99c95168f57f170ef2a4bcfa\",\"dweb:/ipfs/QmaeAwacrvMgJGqrKDSXZkYNYRJ5FvirYFpY3xjbCbJTF9\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0xfbe341a751b577daa735f836ae9e213b23fffecfb1b7512e4faf3d7807f5b045\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://78ba0c247e48f642f44c30d7771bd752a5fe8bd4a6c10f849f1ad66804149c86\",\"dweb:/ipfs/QmXtSLfErEvA8wqMzXDdqNU9TRMVVgoMibmFSDRJCypi6j\"]},\"contracts/src/interfaces/IHyperdriveTargetDeployer.sol\":{\"keccak256\":\"0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed\",\"dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/interfaces/IRiverV1.sol\":{\"keccak256\":\"0xc2f6a1eb3bee83413bddd417044c687f2375eab216de4f6bbeee6c00afc79814\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07e3bfeecba789bde03e9d7dda046fc5932f19ce19d272a6c79e2486cb5bee65\",\"dweb:/ipfs/QmNtefA3d9X7EWDzjVvmrSeaEQWeENDFPdWBSGjF3TL3Nd\"]},\"contracts/src/interfaces/ISharesManagerV1.sol\":{\"keccak256\":\"0xca5ddd1dff26fc16fbf35e7154c5dee64098f6a0e3e44f9335c62b14d3705a98\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://577579582e9762b9244a47ce465a3de3a848fdf1b8a5b0ad07a5b803d8ef02e4\",\"dweb:/ipfs/QmSkPXPtxhcGB6DfVNYY6ZxdNHnkUupxBmDAgPtooKXzqA\"]},\"contracts/src/libraries/Constants.sol\":{\"keccak256\":\"0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418\",\"dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_coreDeployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target0Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target1Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target2Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target3Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target4Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "contract IRiverV1";
                    readonly name: "_river";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "target";
                    readonly type: "address";
                }];
                readonly type: "error";
                readonly name: "AddressEmptyCode";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "account";
                    readonly type: "address";
                }];
                readonly type: "error";
                readonly name: "AddressInsufficientBalance";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentAlreadyExists";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentDoesNotExist";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "FailedInnerCall";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveIsNotDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "IncompleteDeployment";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InsufficientValue";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidBaseToken";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFeeAmounts";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumShareReserves";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumTransactionAmount";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidTargetIndex";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidVaultSharesToken";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedConfig";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedExtraData";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "NotPayable";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "NotPayable";
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "token";
                    readonly type: "address";
                }];
                readonly type: "error";
                readonly name: "SafeERC20FailedOperation";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TargetAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TransferFailed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "UnsupportedToken";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "coreDeployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "contract IERC20";
                        readonly name: "vaultSharesToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deploy";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "contract IERC20";
                        readonly name: "vaultSharesToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_targetIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deployTarget";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "target";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "deployments";
                readonly outputs: readonly [{
                    readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "configHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "extraDataHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initialSharePrice";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "hyperdrive";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target0";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target1";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target2";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target3";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target4";
                        readonly type: "address";
                    }];
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "address";
                    readonly name: "_lp";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_contribution";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_apr";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "struct IHyperdrive.Options";
                    readonly name: "_options";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "destination";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bool";
                        readonly name: "asBase";
                        readonly type: "bool";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "extraData";
                        readonly type: "bytes";
                    }];
                }];
                readonly stateMutability: "payable";
                readonly type: "function";
                readonly name: "initialize";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "lpShares";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target0Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target1Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target2Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target3Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target4Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly constructor: {
                        readonly params: {
                            readonly _coreDeployer: "The core deployer.";
                            readonly _river: "The LsETH contract.";
                            readonly _target0Deployer: "The target0 deployer.";
                            readonly _target1Deployer: "The target1 deployer.";
                            readonly _target2Deployer: "The target2 deployer.";
                            readonly _target3Deployer: "The target3 deployer.";
                            readonly _target4Deployer: "The target4 deployer.";
                        };
                    };
                    readonly "deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy Hyperdrive.";
                        };
                        readonly returns: {
                            readonly _0: "The address of the newly deployed Hyperdrive instance.";
                        };
                    };
                    readonly "deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly details: "As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.";
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy the target.";
                            readonly _targetIndex: "The index of the target to deploy.";
                        };
                        readonly returns: {
                            readonly target: "The address of the newly deployed target instance.";
                        };
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly params: {
                            readonly _deployer: "The deployer.";
                            readonly _deploymentId: "The deployment ID.";
                        };
                        readonly returns: {
                            readonly _0: "The deployment.";
                        };
                    };
                    readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": {
                        readonly details: "This function utilizes several helper functions that provide      flexibility to implementations.";
                        readonly params: {
                            readonly _apr: "The target APR.";
                            readonly _contribution: "The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _lp: "The LP that is initializing the pool.";
                            readonly _options: "The options that configure how the initialization is        settled.";
                        };
                        readonly returns: {
                            readonly lpShares: "The initial number of LP shares created.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly constructor: {
                        readonly notice: "Instantiates the deployer coordinator.";
                    };
                    readonly "coreDeployer()": {
                        readonly notice: "The contract used to deploy new instances of Hyperdrive.";
                    };
                    readonly "deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the given parameters.";
                    };
                    readonly "deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive target instance with the given parameters.";
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly notice: "Gets the deployment specified by the deployer and deployment ID.";
                    };
                    readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": {
                        readonly notice: "Initializes a pool that was deployed by this coordinator.";
                    };
                    readonly "target0Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget0.";
                    };
                    readonly "target1Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget1.";
                    };
                    readonly "target2Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget2.";
                    };
                    readonly "target3Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget3.";
                    };
                    readonly "target4Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget4.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/deployers/lseth/LsETHHyperdriveDeployerCoordinator.sol": "LsETHHyperdriveDeployerCoordinator";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/deployers/HyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xf6c8e82f88f58a7f694384882ab7c2218bd07a672e80f137eb50c56aa8d849da";
                readonly urls: readonly ["bzz-raw://41b150e78a9b8d5c7dd3b6ad14dd124e5fb84486d8bb7c2732d107f386545214", "dweb:/ipfs/QmNT6KEz9LdUJCaV9pvF2YmccHeJPqq5LQAy6Y2wZhfqzR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/deployers/lseth/LsETHHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xfee03681870d3243a6f52473cb8ce4b6cfea95eaefd656ab65ca929c7f77cc9e";
                readonly urls: readonly ["bzz-raw://b78620499471059434021a9f6eb175b313e6f8646348165c4d51608d4262200b", "dweb:/ipfs/QmVut7ZfVPREAc88i9DaFPTLizS2ZtuLB4D8SZfoLpLQvk"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0xc293b4229674624983294b673d6fefce53ed8f6f3d9c6bbcb34da25f42ef2c71";
                readonly urls: readonly ["bzz-raw://084f43e7c42615faabfb6ae9100a8cea6bf9846eb1c433dc08fe634c59cadcaf", "dweb:/ipfs/QmXW3GgcbQQg5xnfAC6RT2KBL9ii8s1jwbDtZywWXFydpm"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e";
                readonly urls: readonly ["bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24", "dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761";
                readonly urls: readonly ["bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b", "dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0x2eb8c9cd2fb58f1c6b1054c5d5e325b78386855bbcfd0a86b595aa98bd05df28";
                readonly urls: readonly ["bzz-raw://cd2aa557854a35ada0b5d334c981739eecbc82580aa35693277749b8cadbe4f4", "dweb:/ipfs/QmcRWJuLSrA44XmFC1bMAGCKUfPmVUnUv7YE8fNC4gy91v"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784";
                readonly urls: readonly ["bzz-raw://338a9f960049c37d13b6e23e5bc2c9e6005366aa99c95168f57f170ef2a4bcfa", "dweb:/ipfs/QmaeAwacrvMgJGqrKDSXZkYNYRJ5FvirYFpY3xjbCbJTF9"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0xfbe341a751b577daa735f836ae9e213b23fffecfb1b7512e4faf3d7807f5b045";
                readonly urls: readonly ["bzz-raw://78ba0c247e48f642f44c30d7771bd752a5fe8bd4a6c10f849f1ad66804149c86", "dweb:/ipfs/QmXtSLfErEvA8wqMzXDdqNU9TRMVVgoMibmFSDRJCypi6j"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveTargetDeployer.sol": {
                readonly keccak256: "0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205";
                readonly urls: readonly ["bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed", "dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501";
                readonly urls: readonly ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca";
                readonly urls: readonly ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0";
                readonly urls: readonly ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IRiverV1.sol": {
                readonly keccak256: "0xc2f6a1eb3bee83413bddd417044c687f2375eab216de4f6bbeee6c00afc79814";
                readonly urls: readonly ["bzz-raw://07e3bfeecba789bde03e9d7dda046fc5932f19ce19d272a6c79e2486cb5bee65", "dweb:/ipfs/QmNtefA3d9X7EWDzjVvmrSeaEQWeENDFPdWBSGjF3TL3Nd"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/ISharesManagerV1.sol": {
                readonly keccak256: "0xca5ddd1dff26fc16fbf35e7154c5dee64098f6a0e3e44f9335c62b14d3705a98";
                readonly urls: readonly ["bzz-raw://577579582e9762b9244a47ce465a3de3a848fdf1b8a5b0ad07a5b803d8ef02e4", "dweb:/ipfs/QmSkPXPtxhcGB6DfVNYY6ZxdNHnkUupxBmDAgPtooKXzqA"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/Constants.sol": {
                readonly keccak256: "0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d";
                readonly urls: readonly ["bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418", "dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076";
                readonly urls: readonly ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/SafeCast.sol": {
                readonly keccak256: "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148";
                readonly urls: readonly ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"];
                readonly license: "Apache-2.0";
            };
            readonly "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                readonly keccak256: "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7";
                readonly urls: readonly ["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f", "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
                readonly keccak256: "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80";
                readonly urls: readonly ["bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229", "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                readonly keccak256: "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70";
                readonly urls: readonly ["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c", "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                readonly keccak256: "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2";
                readonly urls: readonly ["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850", "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
                readonly keccak256: "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff";
                readonly urls: readonly ["bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d", "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                readonly keccak256: "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386";
                readonly urls: readonly ["bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0", "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                readonly keccak256: "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721";
                readonly urls: readonly ["bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245", "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"];
                readonly license: "MIT";
            };
            readonly "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                readonly keccak256: "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2";
                readonly urls: readonly ["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12", "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"];
                readonly license: "MIT";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/deployers/lseth/LsETHHyperdriveDeployerCoordinator.sol";
        readonly id: 2582;
        readonly exportedSymbols: {
            readonly ERC20: readonly [70783];
            readonly ETH: readonly [18174];
            readonly FixedPointMath: readonly [18968];
            readonly HyperdriveDeployerCoordinator: readonly [1090];
            readonly IHyperdrive: readonly [10506];
            readonly IHyperdriveDeployerCoordinator: readonly [10834];
            readonly IRiverV1: readonly [11834];
            readonly LsETHHyperdriveDeployerCoordinator: readonly [2581];
            readonly ONE: readonly [18202];
            readonly SafeERC20: readonly [71213];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:5707:16";
        readonly nodes: readonly [{
            readonly id: 2356;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:16";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 2358;
            readonly nodeType: "ImportDirective";
            readonly src: "64:59:16";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol";
            readonly file: "openzeppelin/token/ERC20/ERC20.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 2582;
            readonly sourceUnit: 70784;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 2357;
                    readonly name: "ERC20";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 70783;
                    readonly src: "73:5:16";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 2360;
            readonly nodeType: "ImportDirective";
            readonly src: "124:73:16";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol";
            readonly file: "openzeppelin/token/ERC20/utils/SafeERC20.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 2582;
            readonly sourceUnit: 71214;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 2359;
                    readonly name: "SafeERC20";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 71213;
                    readonly src: "133:9:16";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 2362;
            readonly nodeType: "ImportDirective";
            readonly src: "198:63:16";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 2582;
            readonly sourceUnit: 10507;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 2361;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 10506;
                    readonly src: "207:11:16";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 2364;
            readonly nodeType: "ImportDirective";
            readonly src: "262:101:16";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly file: "../../interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 2582;
            readonly sourceUnit: 10835;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 2363;
                    readonly name: "IHyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 10834;
                    readonly src: "271:30:16";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 2366;
            readonly nodeType: "ImportDirective";
            readonly src: "364:57:16";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IRiverV1.sol";
            readonly file: "../../interfaces/IRiverV1.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 2582;
            readonly sourceUnit: 11835;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 2365;
                    readonly name: "IRiverV1";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11834;
                    readonly src: "373:8:16";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 2368;
            readonly nodeType: "ImportDirective";
            readonly src: "422:52:16";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/Constants.sol";
            readonly file: "../../libraries/Constants.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 2582;
            readonly sourceUnit: 18175;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 2367;
                    readonly name: "ETH";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 18174;
                    readonly src: "431:3:16";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 2371;
            readonly nodeType: "ImportDirective";
            readonly src: "475:73:16";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/FixedPointMath.sol";
            readonly file: "../../libraries/FixedPointMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 2582;
            readonly sourceUnit: 18969;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 2369;
                    readonly name: "FixedPointMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 18968;
                    readonly src: "484:14:16";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }, {
                readonly foreign: {
                    readonly id: 2370;
                    readonly name: "ONE";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 18202;
                    readonly src: "500:3:16";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 2373;
            readonly nodeType: "ImportDirective";
            readonly src: "549:85:16";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/deployers/HyperdriveDeployerCoordinator.sol";
            readonly file: "../HyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 2582;
            readonly sourceUnit: 1091;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 2372;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 1090;
                    readonly src: "558:29:16";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 2581;
            readonly nodeType: "ContractDefinition";
            readonly src: "1000:4745:16";
            readonly nodes: readonly [{
                readonly id: 2380;
                readonly nodeType: "UsingForDirective";
                readonly src: "1083:26:16";
                readonly nodes: readonly [];
                readonly global: false;
                readonly libraryName: {
                    readonly id: 2377;
                    readonly name: "SafeERC20";
                    readonly nameLocations: readonly ["1089:9:16"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 71213;
                    readonly src: "1089:9:16";
                };
                readonly typeName: {
                    readonly id: 2379;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 2378;
                        readonly name: "ERC20";
                        readonly nameLocations: readonly ["1103:5:16"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 70783;
                        readonly src: "1103:5:16";
                    };
                    readonly referencedDeclaration: 70783;
                    readonly src: "1103:5:16";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_ERC20_$70783";
                        readonly typeString: "contract ERC20";
                    };
                };
            }, {
                readonly id: 2383;
                readonly nodeType: "UsingForDirective";
                readonly src: "1114:33:16";
                readonly nodes: readonly [];
                readonly global: false;
                readonly libraryName: {
                    readonly id: 2381;
                    readonly name: "FixedPointMath";
                    readonly nameLocations: readonly ["1120:14:16"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 18968;
                    readonly src: "1120:14:16";
                };
                readonly typeName: {
                    readonly id: 2382;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "1139:7:16";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
            }, {
                readonly id: 2387;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1186:33:16";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 2384;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1153:28:16";
                    readonly text: "@dev The LsETH contract.";
                };
                readonly mutability: "immutable";
                readonly name: "river";
                readonly nameLocation: "1214:5:16";
                readonly scope: 2581;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                    readonly typeString: "contract IRiverV1";
                };
                readonly typeName: {
                    readonly id: 2386;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 2385;
                        readonly name: "IRiverV1";
                        readonly nameLocations: readonly ["1186:8:16"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 11834;
                        readonly src: "1186:8:16";
                    };
                    readonly referencedDeclaration: 11834;
                    readonly src: "1186:8:16";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                        readonly typeString: "contract IRiverV1";
                    };
                };
                readonly visibility: "internal";
            }, {
                readonly id: 2419;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1641:504:16";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 2418;
                    readonly nodeType: "Block";
                    readonly src: "2114:31:16";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 2416;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 2414;
                                readonly name: "river";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 2387;
                                readonly src: "2124:5:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                    readonly typeString: "contract IRiverV1";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 2415;
                                readonly name: "_river";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 2403;
                                readonly src: "2132:6:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                    readonly typeString: "contract IRiverV1";
                                };
                            };
                            readonly src: "2124:14:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                readonly typeString: "contract IRiverV1";
                            };
                        };
                        readonly id: 2417;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2124:14:16";
                    }];
                };
                readonly documentation: {
                    readonly id: 2388;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1226:410:16";
                    readonly text: "@notice Instantiates the deployer coordinator.\n @param _coreDeployer The core deployer.\n @param _target0Deployer The target0 deployer.\n @param _target1Deployer The target1 deployer.\n @param _target2Deployer The target2 deployer.\n @param _target3Deployer The target3 deployer.\n @param _target4Deployer The target4 deployer.\n @param _river The LsETH contract.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [{
                    readonly arguments: readonly [{
                        readonly id: 2406;
                        readonly name: "_coreDeployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 2390;
                        readonly src: "1936:13:16";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 2407;
                        readonly name: "_target0Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 2392;
                        readonly src: "1963:16:16";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 2408;
                        readonly name: "_target1Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 2394;
                        readonly src: "1993:16:16";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 2409;
                        readonly name: "_target2Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 2396;
                        readonly src: "2023:16:16";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 2410;
                        readonly name: "_target3Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 2398;
                        readonly src: "2053:16:16";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 2411;
                        readonly name: "_target4Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 2400;
                        readonly src: "2083:16:16";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }];
                    readonly id: 2412;
                    readonly kind: "baseConstructorSpecifier";
                    readonly modifierName: {
                        readonly id: 2405;
                        readonly name: "HyperdriveDeployerCoordinator";
                        readonly nameLocations: readonly ["1893:29:16"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 1090;
                        readonly src: "1893:29:16";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "1893:216:16";
                }];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 2404;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 2390;
                        readonly mutability: "mutable";
                        readonly name: "_coreDeployer";
                        readonly nameLocation: "1670:13:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2419;
                        readonly src: "1662:21:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 2389;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1662:7:16";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 2392;
                        readonly mutability: "mutable";
                        readonly name: "_target0Deployer";
                        readonly nameLocation: "1701:16:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2419;
                        readonly src: "1693:24:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 2391;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1693:7:16";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 2394;
                        readonly mutability: "mutable";
                        readonly name: "_target1Deployer";
                        readonly nameLocation: "1735:16:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2419;
                        readonly src: "1727:24:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 2393;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1727:7:16";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 2396;
                        readonly mutability: "mutable";
                        readonly name: "_target2Deployer";
                        readonly nameLocation: "1769:16:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2419;
                        readonly src: "1761:24:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 2395;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1761:7:16";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 2398;
                        readonly mutability: "mutable";
                        readonly name: "_target3Deployer";
                        readonly nameLocation: "1803:16:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2419;
                        readonly src: "1795:24:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 2397;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1795:7:16";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 2400;
                        readonly mutability: "mutable";
                        readonly name: "_target4Deployer";
                        readonly nameLocation: "1837:16:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2419;
                        readonly src: "1829:24:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 2399;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1829:7:16";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 2403;
                        readonly mutability: "mutable";
                        readonly name: "_river";
                        readonly nameLocation: "1872:6:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2419;
                        readonly src: "1863:15:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                            readonly typeString: "contract IRiverV1";
                        };
                        readonly typeName: {
                            readonly id: 2402;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 2401;
                                readonly name: "IRiverV1";
                                readonly nameLocations: readonly ["1863:8:16"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 11834;
                                readonly src: "1863:8:16";
                            };
                            readonly referencedDeclaration: 11834;
                            readonly src: "1863:8:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                readonly typeString: "contract IRiverV1";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1652:232:16";
                };
                readonly returnParameters: {
                    readonly id: 2413;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2114:0:16";
                };
                readonly scope: 2581;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 2477;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2775:731:16";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 2476;
                    readonly nodeType: "Block";
                    readonly src: "2975:531:16";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly expression: {
                                readonly id: 2436;
                                readonly name: "_options";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 2430;
                                readonly src: "3034:8:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Options_$10356_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.Options memory";
                                };
                            };
                            readonly id: 2437;
                            readonly isConstant: false;
                            readonly isLValue: true;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly memberLocation: "3043:6:16";
                            readonly memberName: "asBase";
                            readonly nodeType: "MemberAccess";
                            readonly referencedDeclaration: 10352;
                            readonly src: "3034:15:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 2444;
                        readonly nodeType: "IfStatement";
                        readonly src: "3030:83:16";
                        readonly trueBody: {
                            readonly id: 2443;
                            readonly nodeType: "Block";
                            readonly src: "3051:62:16";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 2438;
                                            readonly name: "IHyperdrive";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 10506;
                                            readonly src: "3072:11:16";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdrive_$10506_$";
                                                readonly typeString: "type(contract IHyperdrive)";
                                            };
                                        };
                                        readonly id: 2440;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3084:16:16";
                                        readonly memberName: "UnsupportedToken";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10472;
                                        readonly src: "3072:28:16";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 2441;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3072:30:16";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 2442;
                                readonly nodeType: "RevertStatement";
                                readonly src: "3065:37:16";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 2452;
                                readonly name: "_lp";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 2425;
                                readonly src: "3264:3:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly arguments: readonly [{
                                    readonly id: 2455;
                                    readonly name: "this";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -28;
                                    readonly src: "3289:4:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_LsETHHyperdriveDeployerCoordinator_$2581";
                                        readonly typeString: "contract LsETHHyperdriveDeployerCoordinator";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_LsETHHyperdriveDeployerCoordinator_$2581";
                                        readonly typeString: "contract LsETHHyperdriveDeployerCoordinator";
                                    }];
                                    readonly id: 2454;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "3281:7:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 2453;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3281:7:16";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 2456;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3281:13:16";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 2457;
                                readonly name: "_contribution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 2427;
                                readonly src: "3308:13:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly arguments: readonly [{
                                            readonly id: 2448;
                                            readonly name: "river";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 2387;
                                            readonly src: "3226:5:16";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                                readonly typeString: "contract IRiverV1";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                                readonly typeString: "contract IRiverV1";
                                            }];
                                            readonly id: 2447;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "ElementaryTypeNameExpression";
                                            readonly src: "3218:7:16";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_address_$";
                                                readonly typeString: "type(address)";
                                            };
                                            readonly typeName: {
                                                readonly id: 2446;
                                                readonly name: "address";
                                                readonly nodeType: "ElementaryTypeName";
                                                readonly src: "3218:7:16";
                                                readonly typeDescriptions: {};
                                            };
                                        };
                                        readonly id: 2449;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "3218:14:16";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 2445;
                                        readonly name: "ERC20";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 70783;
                                        readonly src: "3212:5:16";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_contract$_ERC20_$70783_$";
                                            readonly typeString: "type(contract ERC20)";
                                        };
                                    };
                                    readonly id: 2450;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3212:21:16";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_ERC20_$70783";
                                        readonly typeString: "contract ERC20";
                                    };
                                };
                                readonly id: 2451;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3234:16:16";
                                readonly memberName: "safeTransferFrom";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 71000;
                                readonly src: "3212:38:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_contract$_IERC20_$70861_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$70861_$";
                                    readonly typeString: "function (contract IERC20,address,address,uint256)";
                                };
                            };
                            readonly id: 2458;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3212:119:16";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 2459;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "3212:119:16";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly id: 2469;
                                    readonly name: "_hyperdrive";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 2423;
                                    readonly src: "3384:11:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$10506";
                                        readonly typeString: "contract IHyperdrive";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$10506";
                                        readonly typeString: "contract IHyperdrive";
                                    }];
                                    readonly id: 2468;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "3376:7:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 2467;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3376:7:16";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 2470;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3376:20:16";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 2471;
                                readonly name: "_contribution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 2427;
                                readonly src: "3398:13:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly arguments: readonly [{
                                            readonly id: 2463;
                                            readonly name: "river";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 2387;
                                            readonly src: "3355:5:16";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                                readonly typeString: "contract IRiverV1";
                                            };
                                        }];
                                        readonly expression: {
                                            readonly argumentTypes: readonly [{
                                                readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                                readonly typeString: "contract IRiverV1";
                                            }];
                                            readonly id: 2462;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly lValueRequested: false;
                                            readonly nodeType: "ElementaryTypeNameExpression";
                                            readonly src: "3347:7:16";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_address_$";
                                                readonly typeString: "type(address)";
                                            };
                                            readonly typeName: {
                                                readonly id: 2461;
                                                readonly name: "address";
                                                readonly nodeType: "ElementaryTypeName";
                                                readonly src: "3347:7:16";
                                                readonly typeDescriptions: {};
                                            };
                                        };
                                        readonly id: 2464;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly kind: "typeConversion";
                                        readonly lValueRequested: false;
                                        readonly nameLocations: readonly [];
                                        readonly names: readonly [];
                                        readonly nodeType: "FunctionCall";
                                        readonly src: "3347:14:16";
                                        readonly tryCall: false;
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 2460;
                                        readonly name: "ERC20";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 70783;
                                        readonly src: "3341:5:16";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_contract$_ERC20_$70783_$";
                                            readonly typeString: "type(contract ERC20)";
                                        };
                                    };
                                    readonly id: 2465;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3341:21:16";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_ERC20_$70783";
                                        readonly typeString: "contract ERC20";
                                    };
                                };
                                readonly id: 2466;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3363:12:16";
                                readonly memberName: "forceApprove";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 71121;
                                readonly src: "3341:34:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_contract$_IERC20_$70861_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$70861_$";
                                    readonly typeString: "function (contract IERC20,address,uint256)";
                                };
                            };
                            readonly id: 2472;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3341:71:16";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 2473;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "3341:71:16";
                    }, {
                        readonly expression: {
                            readonly hexValue: "30";
                            readonly id: 2474;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: true;
                            readonly kind: "number";
                            readonly lValueRequested: false;
                            readonly nodeType: "Literal";
                            readonly src: "3498:1:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_rational_0_by_1";
                                readonly typeString: "int_const 0";
                            };
                            readonly value: "0";
                        };
                        readonly functionReturnParameters: 2435;
                        readonly id: 2475;
                        readonly nodeType: "Return";
                        readonly src: "3491:8:16";
                    }];
                };
                readonly baseFunctions: readonly [892];
                readonly documentation: {
                    readonly id: 2420;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2151:619:16";
                    readonly text: "@dev Prepares the coordinator for initialization by drawing funds from\n      the LP, if necessary.\n @param _hyperdrive The Hyperdrive instance that is being initialized.\n @param _lp The LP that is initializing the pool.\n @param _contribution The amount of capital to supply. The units of this\n        quantity are either base or vault shares, depending on the value\n        of `_options.asBase`.\n @param _options The options that configure how the initialization is\n        settled.\n @return The value that should be sent in the initialize transaction.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_prepareInitialize";
                readonly nameLocation: "2784:18:16";
                readonly overrides: {
                    readonly id: 2432;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "2948:8:16";
                };
                readonly parameters: {
                    readonly id: 2431;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 2423;
                        readonly mutability: "mutable";
                        readonly name: "_hyperdrive";
                        readonly nameLocation: "2824:11:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2477;
                        readonly src: "2812:23:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IHyperdrive_$10506";
                            readonly typeString: "contract IHyperdrive";
                        };
                        readonly typeName: {
                            readonly id: 2422;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 2421;
                                readonly name: "IHyperdrive";
                                readonly nameLocations: readonly ["2812:11:16"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10506;
                                readonly src: "2812:11:16";
                            };
                            readonly referencedDeclaration: 10506;
                            readonly src: "2812:11:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$10506";
                                readonly typeString: "contract IHyperdrive";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 2425;
                        readonly mutability: "mutable";
                        readonly name: "_lp";
                        readonly nameLocation: "2853:3:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2477;
                        readonly src: "2845:11:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 2424;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2845:7:16";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 2427;
                        readonly mutability: "mutable";
                        readonly name: "_contribution";
                        readonly nameLocation: "2874:13:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2477;
                        readonly src: "2866:21:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 2426;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2866:7:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 2430;
                        readonly mutability: "mutable";
                        readonly name: "_options";
                        readonly nameLocation: "2924:8:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2477;
                        readonly src: "2897:35:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Options_$10356_memory_ptr";
                            readonly typeString: "struct IHyperdrive.Options";
                        };
                        readonly typeName: {
                            readonly id: 2429;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 2428;
                                readonly name: "IHyperdrive.Options";
                                readonly nameLocations: readonly ["2897:11:16", "2909:7:16"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10356;
                                readonly src: "2897:19:16";
                            };
                            readonly referencedDeclaration: 10356;
                            readonly src: "2897:19:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Options_$10356_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Options";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2802:136:16";
                };
                readonly returnParameters: {
                    readonly id: 2435;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 2434;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2477;
                        readonly src: "2966:7:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 2433;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2966:7:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2965:9:16";
                };
                readonly scope: 2581;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 2494;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3613:144:16";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 2493;
                    readonly nodeType: "Block";
                    readonly src: "3666:91:16";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 2485;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 2482;
                                    readonly name: "msg";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -15;
                                    readonly src: "3680:3:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_magic_message";
                                        readonly typeString: "msg";
                                    };
                                };
                                readonly id: 2483;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3684:5:16";
                                readonly memberName: "value";
                                readonly nodeType: "MemberAccess";
                                readonly src: "3680:9:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 2484;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "3692:1:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "3680:13:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 2492;
                        readonly nodeType: "IfStatement";
                        readonly src: "3676:75:16";
                        readonly trueBody: {
                            readonly id: 2491;
                            readonly nodeType: "Block";
                            readonly src: "3695:56:16";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 2486;
                                            readonly name: "IHyperdrive";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 10506;
                                            readonly src: "3716:11:16";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdrive_$10506_$";
                                                readonly typeString: "type(contract IHyperdrive)";
                                            };
                                        };
                                        readonly id: 2488;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3728:10:16";
                                        readonly memberName: "NotPayable";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10425;
                                        readonly src: "3716:22:16";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 2489;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3716:24:16";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 2490;
                                readonly nodeType: "RevertStatement";
                                readonly src: "3709:31:16";
                            }];
                        };
                    }];
                };
                readonly baseFunctions: readonly [896];
                readonly documentation: {
                    readonly id: 2478;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3512:96:16";
                    readonly text: "@dev We override the message value check since this integration is\n      not payable.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkMessageValue";
                readonly nameLocation: "3622:18:16";
                readonly overrides: {
                    readonly id: 2480;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "3657:8:16";
                };
                readonly parameters: {
                    readonly id: 2479;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3640:2:16";
                };
                readonly returnParameters: {
                    readonly id: 2481;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3666:0:16";
                };
                readonly scope: 2581;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 2562;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3915:1365:16";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 2561;
                    readonly nodeType: "Block";
                    readonly src: "4029:1251:16";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 2505;
                                readonly name: "_deployConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 2498;
                                readonly src: "4101:13:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10254_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10254_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }];
                                readonly expression: {
                                    readonly id: 2502;
                                    readonly name: "super";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -25;
                                    readonly src: "4078:5:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_super$_LsETHHyperdriveDeployerCoordinator_$2581_$";
                                        readonly typeString: "type(contract super LsETHHyperdriveDeployerCoordinator)";
                                    };
                                };
                                readonly id: 2504;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4084:16:16";
                                readonly memberName: "_checkPoolConfig";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 976;
                                readonly src: "4078:22:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$10254_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory) view";
                                };
                            };
                            readonly id: 2506;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "4078:37:16";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 2507;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "4078:37:16";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly id: 2514;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly expression: {
                                        readonly id: 2510;
                                        readonly name: "_deployConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 2498;
                                        readonly src: "4208:13:16";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10254_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                        };
                                    };
                                    readonly id: 2511;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "4222:9:16";
                                    readonly memberName: "baseToken";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10215;
                                    readonly src: "4208:23:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC20_$9810";
                                        readonly typeString: "contract IERC20";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IERC20_$9810";
                                        readonly typeString: "contract IERC20";
                                    }];
                                    readonly id: 2509;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "4200:7:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 2508;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "4200:7:16";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 2512;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "4200:32:16";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 2513;
                                readonly name: "ETH";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 18174;
                                readonly src: "4236:3:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "4200:39:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 2521;
                        readonly nodeType: "IfStatement";
                        readonly src: "4196:126:16";
                        readonly trueBody: {
                            readonly id: 2520;
                            readonly nodeType: "Block";
                            readonly src: "4241:81:16";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 2515;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 10834;
                                            readonly src: "4262:30:16";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10834_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 2517;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "4293:16:16";
                                        readonly memberName: "InvalidBaseToken";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10748;
                                        readonly src: "4262:47:16";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 2518;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4262:49:16";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 2519;
                                readonly nodeType: "RevertStatement";
                                readonly src: "4255:56:16";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                            readonly id: 2531;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly expression: {
                                        readonly id: 2524;
                                        readonly name: "_deployConfig";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 2498;
                                        readonly src: "4422:13:16";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10254_memory_ptr";
                                            readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                        };
                                    };
                                    readonly id: 2525;
                                    readonly isConstant: false;
                                    readonly isLValue: true;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly memberLocation: "4436:16:16";
                                    readonly memberName: "vaultSharesToken";
                                    readonly nodeType: "MemberAccess";
                                    readonly referencedDeclaration: 10219;
                                    readonly src: "4422:30:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC20_$9810";
                                        readonly typeString: "contract IERC20";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IERC20_$9810";
                                        readonly typeString: "contract IERC20";
                                    }];
                                    readonly id: 2523;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "4414:7:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 2522;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "4414:7:16";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 2526;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "4414:39:16";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly id: 2529;
                                    readonly name: "river";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 2387;
                                    readonly src: "4465:5:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                        readonly typeString: "contract IRiverV1";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                        readonly typeString: "contract IRiverV1";
                                    }];
                                    readonly id: 2528;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "4457:7:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 2527;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "4457:7:16";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 2530;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "4457:14:16";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly src: "4414:57:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 2538;
                        readonly nodeType: "IfStatement";
                        readonly src: "4410:151:16";
                        readonly trueBody: {
                            readonly id: 2537;
                            readonly nodeType: "Block";
                            readonly src: "4473:88:16";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 2532;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 10834;
                                            readonly src: "4494:30:16";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10834_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 2534;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "4525:23:16";
                                        readonly memberName: "InvalidVaultSharesToken";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10751;
                                        readonly src: "4494:54:16";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 2535;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4494:56:16";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 2536;
                                readonly nodeType: "RevertStatement";
                                readonly src: "4487:63:16";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 2542;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 2539;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 2498;
                                    readonly src: "4823:13:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10254_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 2540;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4837:20:16";
                                readonly memberName: "minimumShareReserves";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10228;
                                readonly src: "4823:34:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly hexValue: "31653135";
                                readonly id: 2541;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "4861:4:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000";
                                };
                                readonly value: "1e15";
                            };
                            readonly src: "4823:42:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 2549;
                        readonly nodeType: "IfStatement";
                        readonly src: "4819:140:16";
                        readonly trueBody: {
                            readonly id: 2548;
                            readonly nodeType: "Block";
                            readonly src: "4867:92:16";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 2543;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 10834;
                                            readonly src: "4888:30:16";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10834_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 2545;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "4919:27:16";
                                        readonly memberName: "InvalidMinimumShareReserves";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10760;
                                        readonly src: "4888:58:16";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 2546;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4888:60:16";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 2547;
                                readonly nodeType: "RevertStatement";
                                readonly src: "4881:67:16";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 2553;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 2550;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 2498;
                                    readonly src: "5113:13:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10254_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 2551;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5127:24:16";
                                readonly memberName: "minimumTransactionAmount";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10231;
                                readonly src: "5113:38:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly hexValue: "31653135";
                                readonly id: 2552;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "5155:4:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000";
                                };
                                readonly value: "1e15";
                            };
                            readonly src: "5113:46:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 2560;
                        readonly nodeType: "IfStatement";
                        readonly src: "5109:165:16";
                        readonly trueBody: {
                            readonly id: 2559;
                            readonly nodeType: "Block";
                            readonly src: "5161:113:16";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 2554;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 10834;
                                            readonly src: "5182:30:16";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10834_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 2556;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "5230:31:16";
                                        readonly memberName: "InvalidMinimumTransactionAmount";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10763;
                                        readonly src: "5182:79:16";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 2557;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5182:81:16";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 2558;
                                readonly nodeType: "RevertStatement";
                                readonly src: "5175:88:16";
                            }];
                        };
                    }];
                };
                readonly baseFunctions: readonly [976];
                readonly documentation: {
                    readonly id: 2495;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3763:147:16";
                    readonly text: "@notice Checks the pool configuration to ensure that it is valid.\n @param _deployConfig The deploy configuration of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkPoolConfig";
                readonly nameLocation: "3924:16:16";
                readonly overrides: {
                    readonly id: 2500;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "4020:8:16";
                };
                readonly parameters: {
                    readonly id: 2499;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 2498;
                        readonly mutability: "mutable";
                        readonly name: "_deployConfig";
                        readonly nameLocation: "3986:13:16";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2562;
                        readonly src: "3950:49:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10254_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 2497;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 2496;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["3950:11:16", "3962:16:16"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10254;
                                readonly src: "3950:28:16";
                            };
                            readonly referencedDeclaration: 10254;
                            readonly src: "3950:28:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10254_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3940:65:16";
                };
                readonly returnParameters: {
                    readonly id: 2501;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "4029:0:16";
                };
                readonly scope: 2581;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 2580;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5428:315:16";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 2579;
                    readonly nodeType: "Block";
                    readonly src: "5628:115:16";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 2576;
                                readonly name: "ONE";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 18202;
                                readonly src: "5732:3:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 2574;
                                    readonly name: "river";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 2387;
                                    readonly src: "5698:5:16";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IRiverV1_$11834";
                                        readonly typeString: "contract IRiverV1";
                                    };
                                };
                                readonly id: 2575;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5704:27:16";
                                readonly memberName: "underlyingBalanceFromShares";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 12283;
                                readonly src: "5698:33:16";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_view$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256) view external returns (uint256)";
                                };
                            };
                            readonly id: 2577;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5698:38:16";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 2573;
                        readonly id: 2578;
                        readonly nodeType: "Return";
                        readonly src: "5691:45:16";
                    }];
                };
                readonly baseFunctions: readonly [987];
                readonly documentation: {
                    readonly id: 2563;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "5286:137:16";
                    readonly text: "@dev Gets the initial vault share price of the Hyperdrive pool.\n @return The initial vault share price of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_getInitialVaultSharePrice";
                readonly nameLocation: "5437:26:16";
                readonly overrides: {
                    readonly id: 2570;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "5601:8:16";
                };
                readonly parameters: {
                    readonly id: 2569;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 2566;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2580;
                        readonly src: "5473:35:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10254_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 2565;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 2564;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["5473:11:16", "5485:16:16"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10254;
                                readonly src: "5473:28:16";
                            };
                            readonly referencedDeclaration: 10254;
                            readonly src: "5473:28:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10254_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 2568;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2580;
                        readonly src: "5547:12:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 2567;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5547:5:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "5463:123:16";
                };
                readonly returnParameters: {
                    readonly id: 2573;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 2572;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 2580;
                        readonly src: "5619:7:16";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 2571;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5619:7:16";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "5618:9:16";
                };
                readonly scope: 2581;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 2375;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nameLocations: readonly ["1047:29:16"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 1090;
                    readonly src: "1047:29:16";
                };
                readonly id: 2376;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "1047:29:16";
            }];
            readonly canonicalName: "LsETHHyperdriveDeployerCoordinator";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 2374;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "636:364:16";
                readonly text: "@author DELV\n @title LsETHHyperdriveDeployerCoordinator\n @notice The deployer coordinator for the LsETHHyperdrive implementation.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [2581, 1090, 10834];
            readonly name: "LsETHHyperdriveDeployerCoordinator";
            readonly nameLocation: "1009:34:16";
            readonly scope: 2582;
            readonly usedErrors: readonly [10425, 10472, 10730, 10733, 10736, 10739, 10742, 10745, 10748, 10751, 10754, 10757, 10760, 10763, 10766, 10769, 10772, 10775, 10778, 10781, 10784, 70940, 71221, 71226, 71229];
            readonly usedEvents: readonly [];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 16;
};
//# sourceMappingURL=LsETHHyperdriveDeployerCoordinator.d.ts.map