export const RETHHyperdriveDeployerCoordinator = {
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_factory",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_coreDeployer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_target0Deployer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_target1Deployer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_target2Deployer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_target3Deployer",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_target4Deployer",
                    "type": "address"
                },
                {
                    "internalType": "contract IRocketTokenRETH",
                    "name": "_rocketTokenReth",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "AddressEmptyCode",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "AddressInsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "DeploymentAlreadyExists",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "DeploymentDoesNotExist",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FailedInnerCall",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "HyperdriveAlreadyDeployed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "HyperdriveIsNotDeployed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "IncompleteDeployment",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InsufficientValue",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidBaseToken",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidCheckpointDuration",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidFeeAmounts",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidMinimumShareReserves",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidMinimumTransactionAmount",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidPositionDuration",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidTargetIndex",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidVaultSharesToken",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MismatchedConfig",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MismatchedExtraData",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotPayable",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotPayable",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                }
            ],
            "name": "SafeERC20FailedOperation",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "SenderIsNotFactory",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "TargetAlreadyDeployed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "TransferFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "UnsupportedToken",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "coreDeployer",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "_deploymentId",
                    "type": "bytes32"
                },
                {
                    "components": [
                        {
                            "internalType": "contract IERC20",
                            "name": "baseToken",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "vaultSharesToken",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "linkerFactory",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "linkerCodeHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "minimumShareReserves",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "minimumTransactionAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "positionDuration",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "checkpointDuration",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "timeStretch",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "governance",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "feeCollector",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "sweepCollector",
                            "type": "address"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "curve",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "flat",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "governanceLP",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "governanceZombie",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct IHyperdrive.Fees",
                            "name": "fees",
                            "type": "tuple"
                        }
                    ],
                    "internalType": "struct IHyperdrive.PoolDeployConfig",
                    "name": "_deployConfig",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes",
                    "name": "_extraData",
                    "type": "bytes"
                },
                {
                    "internalType": "bytes32",
                    "name": "_salt",
                    "type": "bytes32"
                }
            ],
            "name": "deploy",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "_deploymentId",
                    "type": "bytes32"
                },
                {
                    "components": [
                        {
                            "internalType": "contract IERC20",
                            "name": "baseToken",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IERC20",
                            "name": "vaultSharesToken",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "linkerFactory",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "linkerCodeHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "minimumShareReserves",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "minimumTransactionAmount",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "positionDuration",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "checkpointDuration",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "timeStretch",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "governance",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "feeCollector",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "sweepCollector",
                            "type": "address"
                        },
                        {
                            "components": [
                                {
                                    "internalType": "uint256",
                                    "name": "curve",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "flat",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "governanceLP",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "governanceZombie",
                                    "type": "uint256"
                                }
                            ],
                            "internalType": "struct IHyperdrive.Fees",
                            "name": "fees",
                            "type": "tuple"
                        }
                    ],
                    "internalType": "struct IHyperdrive.PoolDeployConfig",
                    "name": "_deployConfig",
                    "type": "tuple"
                },
                {
                    "internalType": "bytes",
                    "name": "_extraData",
                    "type": "bytes"
                },
                {
                    "internalType": "uint256",
                    "name": "_targetIndex",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "_salt",
                    "type": "bytes32"
                }
            ],
            "name": "deployTarget",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "_deploymentId",
                    "type": "bytes32"
                }
            ],
            "name": "deployments",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "bytes32",
                            "name": "configHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "extraDataHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "initialSharePrice",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "hyperdrive",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "target0",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "target1",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "target2",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "target3",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "target4",
                            "type": "address"
                        }
                    ],
                    "internalType": "struct HyperdriveDeployerCoordinator.Deployment",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "factory",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "_deploymentId",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "_lp",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_contribution",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_apr",
                    "type": "uint256"
                },
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "destination",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "asBase",
                            "type": "bool"
                        },
                        {
                            "internalType": "bytes",
                            "name": "extraData",
                            "type": "bytes"
                        }
                    ],
                    "internalType": "struct IHyperdrive.Options",
                    "name": "_options",
                    "type": "tuple"
                }
            ],
            "name": "initialize",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "lpShares",
                    "type": "uint256"
                }
            ],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "target0Deployer",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "target1Deployer",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "target2Deployer",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "target3Deployer",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "target4Deployer",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "1014:5110:23:-:0;;;1779:590;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3938:18:0;;;;;3966:28;;;;;4004:34;;;;;4048;;;;;4092;;;;4136;;;;4180;;;;2328::23::1;;::::0;1014:5110;;14:131:234;-1:-1:-1;;;;;89:31:234;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1220::-;309:6;317;325;333;341;349;357;365;418:3;406:9;397:7;393:23;389:33;386:53;;;435:1;432;425:12;386:53;467:9;461:16;486:31;511:5;486:31;:::i;:::-;586:2;571:18;;565:25;536:5;;-1:-1:-1;599:33:234;565:25;599:33;:::i;:::-;703:2;688:18;;682:25;651:7;;-1:-1:-1;716:33:234;682:25;716:33;:::i;:::-;820:2;805:18;;799:25;768:7;;-1:-1:-1;833:33:234;799:25;833:33;:::i;:::-;937:3;922:19;;916:26;885:7;;-1:-1:-1;951:33:234;916:26;951:33;:::i;:::-;1055:3;1040:19;;1034:26;1003:7;;-1:-1:-1;1069:33:234;1034:26;1069:33;:::i;:::-;1173:3;1158:19;;1152:26;1121:7;;-1:-1:-1;1187:33:234;1152:26;1187:33;:::i;:::-;1291:3;1276:19;;1270:26;1239:7;;-1:-1:-1;1305:33:234;1270:26;1305:33;:::i;:::-;1357:7;1347:17;;;150:1220;;;;;;;;;;;:::o;:::-;1014:5110:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x60806040526004361061009c5760003560e01c8063a085fa3011610064578063a085fa3014610251578063aa8cd6c414610285578063ab71905f146102b9578063b6cb1118146102ed578063c45a015514610321578063c83e1f511461035557600080fd5b80630b3c4f86146100a157806316abfc70146100de5780631ae6f515146100ff578063374040171461011f578063966ecd1c1461021d575b600080fd5b3480156100ad57600080fd5b506100c16100bc3660046119d3565b610389565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16100ec366004611a4f565b610a9d565b6040519081526020016100d5565b34801561010b57600080fd5b506100c161011a366004611b14565b610c39565b34801561012b57600080fd5b5061021061013a366004611b77565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915250600090815260208181526040918290208251610120810184528154815260018201549281019290925260028101549282019290925260038201546001600160a01b0390811660608301526004830154811660808301526005830154811660a08301526006830154811660c08301526007830154811660e083015260089092015490911661010082015290565b6040516100d59190611b90565b34801561022957600080fd5b506100c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561025d57600080fd5b506100c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561029157600080fd5b506100c17f000000000000000000000000000000000000000000000000000000000000000081565b3480156102c557600080fd5b506100c17f000000000000000000000000000000000000000000000000000000000000000081565b3480156102f957600080fd5b506100c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561032d57600080fd5b506100c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561036157600080fd5b506100c17f000000000000000000000000000000000000000000000000000000000000000081565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103d457604051634084351160e01b815260040160405180910390fd5b6000868152602081905260408120908490036105695780541561040a57604051633be1b34d60e11b815260040160405180910390fd5b61041386610f8f565b600061041f8787611085565b90506000876040516020016104349190611c0d565b60405160208183030381529060405280519060200120905060008780519060200120905060006104638a611121565b9050838160800181815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663195d4bfc828b8e8b6040516020016104bc929190918252602082015260400190565b604051602081830303815290604052805190602001206040518463ffffffff1660e01b81526004016104f093929190611e6c565b6020604051808303816000875af115801561050f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105339190611ea0565b9285555060018401556002830191909155600490910180546001600160a01b0319166001600160a01b0383161790559050610a94565b600087815260208190526040902054806105965760405163398b1c0960e21b815260040160405180910390fd5b80876040516020016105a89190611c0d565b60405160208183030381529060405280519060200120146105dc5760405163332ee11f60e01b815260040160405180910390fd5b6001820154865160208801201461060657604051631a3272d160e31b815260040160405180910390fd5b61060f87610f8f565b600061061a88611121565b600284015460808201529050600186900361073b5760058301546001600160a01b03161561065a5760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663195d4bfc8289338d8a6040516020016106a093929190611ebd565b604051602081830303815290604052805190602001206040518463ffffffff1660e01b81526004016106d493929190611e6c565b6020604051808303816000875af11580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190611ea0565b6005840180546001600160a01b0319166001600160a01b0383161790559350610a90565b8560020361084f5760068301546001600160a01b03161561076e5760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663195d4bfc8289338d8a6040516020016107b493929190611ebd565b604051602081830303815290604052805190602001206040518463ffffffff1660e01b81526004016107e893929190611e6c565b6020604051808303816000875af1158015610807573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082b9190611ea0565b6006840180546001600160a01b0319166001600160a01b0383161790559350610a90565b856003036109635760078301546001600160a01b0316156108825760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663195d4bfc8289338d8a6040516020016108c893929190611ebd565b604051602081830303815290604052805190602001206040518463ffffffff1660e01b81526004016108fc93929190611e6c565b6020604051808303816000875af115801561091b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093f9190611ea0565b6007840180546001600160a01b0319166001600160a01b0383161790559350610a90565b85600403610a775760088301546001600160a01b0316156109965760405162e896af60e31b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663195d4bfc8289338d8a6040516020016109dc93929190611ebd565b604051602081830303815290604052805190602001206040518463ffffffff1660e01b8152600401610a1093929190611e6c565b6020604051808303816000875af1158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a539190611ea0565b6008840180546001600160a01b0319166001600160a01b0383161790559350610a90565b604051631d9f815960e11b815260040160405180910390fd5b5050505b95945050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ae857604051634084351160e01b815260040160405180910390fd5b610af06111d3565b6000868152602081905260409020600301546001600160a01b031680610b295760405163952b05cb60e01b815260040160405180910390fd5b6000610b37828888876111f4565b9050816001600160a01b03166377d05ff4828888886040518563ffffffff1660e01b8152600401610b6a93929190611ede565b60206040518083038185885af1158015610b88573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610bad9190611f2e565b92506000610bbb8234611f47565b90508015610a9057604051600090339083908381818185875af1925050503d8060008114610c05576040519150601f19603f3d011682016040523d82523d6000602084013e610c0a565b606091505b5050905080610c2c576040516312171d8360e31b815260040160405180910390fd5b5050505095945050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c8457604051634084351160e01b815260040160405180910390fd5b600085815260208181526040918290208251610120810184528154815260018201549281019290925260028101549282019290925260038201546001600160a01b03908116606083018190526004840154821660808401526005840154821660a08401526006840154821660c08401526007840154821660e0840152600890930154166101008201529015610d2c57604051632c95caeb60e01b815260040160405180910390fd5b8051610d4b5760405163398b1c0960e21b815260040160405180910390fd5b60808101516001600160a01b03161580610d70575060a08101516001600160a01b0316155b80610d86575060c08101516001600160a01b0316155b80610d9c575060e08101516001600160a01b0316155b80610db357506101008101516001600160a01b0316155b15610dd15760405163e97cc2bf60e01b815260040160405180910390fd5b8051604051610de4908790602001611c0d565b6040516020818303038152906040528051906020012014610e185760405163332ee11f60e01b815260040160405180910390fd5b8060200151848051906020012014610e4357604051631a3272d160e31b815260040160405180910390fd5b610e4c85610f8f565b6000610e5786611121565b905081604001518160800181815250506000879050600085905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ed871fd7858a88608001518960a001518a60c001518b60e001518c61010001518b8b604051602001610eda929190918252602082015260400190565b604051602081830303815290604052805190602001206040518963ffffffff1660e01b8152600401610f13989796959493929190611f68565b6020604051808303816000875af1158015610f32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f569190611ea0565b60009a8b5260208b90526040909a2060030180546001600160a01b0319166001600160a01b038c16179055509798975050505050505050565b610f988161128d565b80516001600160a01b031673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14610fd657604051630722152560e11b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681602001516001600160a01b03161461102c5760405163073f739d60e51b815260040160405180910390fd5b806080015166038d7ea4c6800014611057576040516349db44f560e01b815260040160405180910390fd5b8060a0015166038d7ea4c6800014611082576040516318c9522360e11b815260040160405180910390fd5b50565b604051638b32fa2360e01b8152670de0b6b3a764000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638b32fa2390602401602060405180830381865afa1580156110f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111189190611f2e565b90505b92915050565b6111296116b1565b81516001600160a01b03908116825260208084015182169083015260408084015182169083015260608084015190830152608083015160a08084019190915283015160c08084019190915283015160e08084019190915283015161010080840191909152830151610120808401919091528301518116610140808401919091528301518116610160808401919091528301511661018080830191909152909101516101a082015290565b34156111f257604051631574f9f360e01b815260040160405180910390fd5b565b60008160200151156112195760405163350b944160e11b815260040160405180910390fd5b61124e6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001685308661139f565b6112826001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016868561140c565b506000949350505050565b6103e8816080015110156112b4576040516349db44f560e01b815260040160405180910390fd5b8060e001516000036112d957604051635428734d60e01b815260040160405180910390fd5b8060e001518160c00151108061130157508060e001518160c001516112fe9190611fcf565b15155b1561131f5760405163253fffcf60e11b815260040160405180910390fd5b61018081015151670de0b6b3a7640000108061134b5750670de0b6b3a764000081610180015160200151115b806113665750670de0b6b3a764000081610180015160400151115b806113815750670de0b6b3a764000081610180015160600151115b15611082576040516322f72cc360e11b815260040160405180910390fd5b6040516001600160a01b0384811660248301528381166044830152606482018390526114069186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611498565b50505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261145d8482611505565b611406576040516001600160a01b0384811660248301526000604483015261149291869182169063095ea7b3906064016113d4565b61140684825b60006114ad6001600160a01b038416836115a8565b905080516000141580156114d25750808060200190518101906114d09190611ff1565b155b1561150057604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b505050565b6000806000846001600160a01b031684604051611522919061200e565b6000604051808303816000865af19150503d806000811461155f576040519150601f19603f3d011682016040523d82523d6000602084013e611564565b606091505b509150915081801561158e57508051158061158e57508080602001905181019061158e9190611ff1565b8015610a945750505050506001600160a01b03163b151590565b60606111188383600084600080856001600160a01b031684866040516115ce919061200e565b60006040518083038185875af1925050503d806000811461160b576040519150601f19603f3d011682016040523d82523d6000602084013e611610565b606091505b509150915061162086838361162c565b925050505b9392505050565b6060826116415761163c82611688565b611625565b815115801561165857506001600160a01b0384163b155b1561168157604051639996b31560e01b81526001600160a01b03851660048201526024016114f7565b5080611625565b8051156116985780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b604051806101c0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000801916815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200161177c6040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b634e487b7160e01b600052604160045260246000fd5b6040516101a0810167ffffffffffffffff811182821017156117bb576117bb611781565b60405290565b6040516060810167ffffffffffffffff811182821017156117bb576117bb611781565b6001600160a01b038116811461108257600080fd5b8035611804816117e4565b919050565b60006080828403121561181b57600080fd5b6040516080810181811067ffffffffffffffff8211171561183e5761183e611781565b8060405250809150823581526020830135602082015260408301356040820152606083013560608201525092915050565b6000610200828403121561188257600080fd5b61188a611797565b9050611895826117f9565b81526118a3602083016117f9565b60208201526118b4604083016117f9565b6040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015260e082013560e08201526101008083013581830152506101206119058184016117f9565b908201526101406119178382016117f9565b908201526101606119298382016117f9565b9082015261018061193c84848301611809565b9082015292915050565b600082601f83011261195757600080fd5b813567ffffffffffffffff8082111561197257611972611781565b604051601f8301601f19908116603f0116810190828211818310171561199a5761199a611781565b816040528381528660208588010111156119b357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600061028086880312156119ec57600080fd5b853594506119fd876020880161186f565b935061022086013567ffffffffffffffff811115611a1a57600080fd5b611a2688828901611946565b95989497509495610240810135955061026001359392505050565b801515811461108257600080fd5b600080600080600060a08688031215611a6757600080fd5b853594506020860135611a79816117e4565b93506040860135925060608601359150608086013567ffffffffffffffff80821115611aa457600080fd5b908701906060828a031215611ab857600080fd5b611ac06117c1565b8235611acb816117e4565b81526020830135611adb81611a41565b6020820152604083013582811115611af257600080fd5b611afe8b828601611946565b6040830152508093505050509295509295909350565b6000806000806102608587031215611b2b57600080fd5b84359350611b3c866020870161186f565b925061022085013567ffffffffffffffff811115611b5957600080fd5b611b6587828801611946565b94979396509394610240013593505050565b600060208284031215611b8957600080fd5b5035919050565b8151815260208083015190820152604080830151908201526060808301516001600160a01b039081169183019190915260808084015182169083015260a08084015182169083015260c08084015182169083015260e08084015182169083015261010080840151918216818401526101208301915b505092915050565b81516001600160a01b0316815261020081016020830151611c3960208401826001600160a01b03169052565b506040830151611c5460408401826001600160a01b03169052565b50606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151611cae828501826001600160a01b03169052565b5050610140838101516001600160a01b038116848301525050610160838101516001600160a01b0381168483015250506101808381015180518483015260208101516101a085015260408101516101c085015260608101516101e0850152611c05565b80516001600160a01b031682526020810151611d3860208401826001600160a01b03169052565b506040810151611d5360408401826001600160a01b03169052565b50606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151818401525061012080820151818401525061014080820151611db9828501826001600160a01b03169052565b5050610160818101516001600160a01b038116848301525050610180818101516001600160a01b0381168483015250506101a08181015180518483015260208101516101c085015260408101516101e08501526060810151610200850152611406565b60005b83811015611e37578181015183820152602001611e1f565b50506000910152565b60008151808452611e58816020860160208601611e1c565b601f01601f19169290920160200192915050565b6000610260611e7b8387611d11565b80610220840152611e8e81840186611e40565b91505082610240830152949350505050565b600060208284031215611eb257600080fd5b8151611625816117e4565b6001600160a01b039390931683526020830191909152604082015260600190565b8381528260208201526060604082015260018060a01b03825116606082015260208201511515608082015260006040830151606060a0840152611f2460c0840182611e40565b9695505050505050565b600060208284031215611f4057600080fd5b5051919050565b8181038181111561111b57634e487b7160e01b600052601160045260246000fd5b6000610300611f77838c611d11565b80610220840152611f8a8184018b611e40565b6001600160a01b03998a1661024085015297891661026084015250509386166102808501529185166102a08401529093166102c08201526102e0019190915292915050565b600082611fec57634e487b7160e01b600052601260045260246000fd5b500690565b60006020828403121561200357600080fd5b815161162581611a41565b60008251612020818460208701611e1c565b919091019291505056fea2646970667358221220a4a93b906649c8059be1db9d350cc5231bc356c851067a88b9f35377aa675c0264736f6c63430008140033",
        "sourceMap": "1014:5110:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8649:5837:0;;;;;;;;;;-1:-1:-1;8649:5837:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4455:32:234;;;4437:51;;4425:2;4410:18;8649:5837:0;;;;;;;;15263:1363;;;;;;:::i;:::-;;:::i;:::-;;;6001:25:234;;;5989:2;5974:18;15263:1363:0;5855:177:234;4979:2971:0;;;;;;;;;;-1:-1:-1;4979:2971:0;;;;;:::i;:::-;;:::i;16780:151::-;;;;;;;;;;-1:-1:-1;16780:151:0;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16897:12:0;:27;;;;;;;;;;;;16890:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16890:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16780:151;;;;;;;;:::i;3118:40::-;;;;;;;;;;;;;;;2737;;;;;;;;;;;;;;;2991;;;;;;;;;;;;;;;2610;;;;;;;;;;;;;;;2864;;;;;;;;;;;;;;;2374:32;;;;;;;;;;;;;;;2486:37;;;;;;;;;;;;;;;8649:5837;8883:14;4359:10;-1:-1:-1;;;;;4373:7:0;4359:21;;4355:110;;4403:51;;-1:-1:-1;;;4403:51:0;;;;;;;;;;;4355:110;9150:29:::1;9182:27:::0;;;::::1;::::0;;;;;;;9223:17;;;9219:1810:::1;;9403:21:::0;;:35;9399:137:::1;;9465:56;;-1:-1:-1::0;;;9465:56:0::1;;;;;;;;;;;9399:137;9670:31;9687:13;9670:16;:31::i;:::-;9819:25;9847:99;9891:13;9922:10;9847:26;:99::i;:::-;9819:127;;9960:19;10003:13;9992:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;9982:36;;;;;;9960:58;;10032:21;10066:10;10056:21;;;;;;10032:45;;10208:37;10248:60;10281:13;10248:15;:60::i;:::-;10208:100;;10355:17;10322:7;:30;;:50;;;::::0;::::1;10466:15;-1:-1:-1::0;;;;;10440:49:0::1;;10507:7;10532:10;10710:13;10725:5;10699:32;;;;;;;;9823:25:234::0;;;9879:2;9864:18;;9857:34;9811:2;9796:18;;9649:248;10699:32:0::1;;;;;;;;;;;;;10689:43;;;;;;10440:306;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10798:35:::0;;;-1:-1:-1;10847:24:0::1;::::0;::::1;:40:::0;10901:28:::1;::::0;::::1;:48:::0;;;;10963:18:::1;::::0;;::::1;:27:::0;;-1:-1:-1;;;;;;10963:27:0::1;-1:-1:-1::0;;;;;10963:27:0;::::1;;::::0;;10798:35;-1:-1:-1;11005:13:0::1;;9219:1810;11174:18;11195:27:::0;;;::::1;::::0;;;;;;:38;;11243:117:::1;;11294:55;;-1:-1:-1::0;;;11294:55:0::1;;;;;;;;;;;11243:117;11482:10;11463:13;11452:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;11442:36;;;;;;:50;11438:137;;11515:49;;-1:-1:-1::0;;;11515:49:0::1;;;;;;;;;;;11438:137;11690:24;::::0;::::1;::::0;11665:21;;::::1;::::0;::::1;::::0;:49:::1;11661:139;;11737:52;;-1:-1:-1::0;;;11737:52:0::1;;;;;;;;;;;11661:139;12076:31;12093:13;12076:16;:31::i;:::-;12226:36;12265:30;12281:13;12265:15;:30::i;:::-;12337:28;::::0;::::1;::::0;12305:29:::1;::::0;::::1;:60:::0;12226:69;-1:-1:-1;12645:1:0::1;12629:17:::0;;;12625:1831:::1;;12666:18;::::0;::::1;::::0;-1:-1:-1;;;;;12666:18:0::1;:32:::0;12662:132:::1;;12725:54;;-1:-1:-1::0;;;12725:54:0::1;;;;;;;;;;;12662:132;12842:15;-1:-1:-1::0;;;;;12816:49:0::1;;12883:6;12907:10;12956;12968:13;12983:5;12945:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12935:55;;;;;;12816:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13018:18;::::0;::::1;:27:::0;;-1:-1:-1;;;;;;13018:27:0::1;-1:-1:-1::0;;;;;13018:27:0;::::1;;::::0;;;-1:-1:-1;12625:1831:0::1;;;13066:12;13082:1;13066:17:::0;13062:1394:::1;;13103:18;::::0;::::1;::::0;-1:-1:-1;;;;;13103:18:0::1;:32:::0;13099:132:::1;;13162:54;;-1:-1:-1::0;;;13162:54:0::1;;;;;;;;;;;13099:132;13279:15;-1:-1:-1::0;;;;;13253:49:0::1;;13320:6;13344:10;13393;13405:13;13420:5;13382:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13372:55;;;;;;13253:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13455:18;::::0;::::1;:27:::0;;-1:-1:-1;;;;;;13455:27:0::1;-1:-1:-1::0;;;;;13455:27:0;::::1;;::::0;;;-1:-1:-1;13062:1394:0::1;;;13503:12;13519:1;13503:17:::0;13499:957:::1;;13540:18;::::0;::::1;::::0;-1:-1:-1;;;;;13540:18:0::1;:32:::0;13536:132:::1;;13599:54;;-1:-1:-1::0;;;13599:54:0::1;;;;;;;;;;;13536:132;13716:15;-1:-1:-1::0;;;;;13690:49:0::1;;13757:6;13781:10;13830;13842:13;13857:5;13819:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13809:55;;;;;;13690:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13892:18;::::0;::::1;:27:::0;;-1:-1:-1;;;;;;13892:27:0::1;-1:-1:-1::0;;;;;13892:27:0;::::1;;::::0;;;-1:-1:-1;13499:957:0::1;;;13940:12;13956:1;13940:17:::0;13936:520:::1;;13977:18;::::0;::::1;::::0;-1:-1:-1;;;;;13977:18:0::1;:32:::0;13973:132:::1;;14036:54;;-1:-1:-1::0;;;14036:54:0::1;;;;;;;;;;;13973:132;14153:15;-1:-1:-1::0;;;;;14127:49:0::1;;14194:6;14218:10;14267;14279:13;14294:5;14256:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14246:55;;;;;;14127:188;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14329:18;::::0;::::1;:27:::0;;-1:-1:-1;;;;;;14329:27:0::1;-1:-1:-1::0;;;;;14329:27:0;::::1;;::::0;;;-1:-1:-1;13936:520:0::1;;;14394:51;;-1:-1:-1::0;;;14394:51:0::1;;;;;;;;;;;13936:520;14466:13;;;4474:1;8649:5837:::0;;;;;;;:::o;15263:1363::-;15477:16;4359:10;-1:-1:-1;;;;;4373:7:0;4359:21;;4355:110;;4403:51;;-1:-1:-1;;;4403:51:0;;;;;;;;;;;4355:110;15555:20:::1;:18;:20::i;:::-;15647:22;15697:27:::0;;;::::1;::::0;;;;;;:38:::1;;::::0;-1:-1:-1;;;;;15697:38:0::1;::::0;15755:127:::1;;15815:56;;-1:-1:-1::0;;;15815:56:0::1;;;;;;;;;;;15755:127;15962:13;15978:118;16010:10;16034:3;16051:13;16078:8;15978:18;:118::i;:::-;15962:134;;16156:10;-1:-1:-1::0;;;;;16156:21:0::1;;16186:5;16207:13;16234:4;16252:8;16156:114;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16145:125:::0;-1:-1:-1;16331:14:0::1;16348:17;16360:5:::0;16348:9:::1;:17;:::i;:::-;16331:34:::0;-1:-1:-1;16379:10:0;;16375:219:::1;;16424:45;::::0;16406:12:::1;::::0;16432:10:::1;::::0;16457:6;;16406:12;16424:45;16406:12;16424:45;16457:6;16432:10;16424:45:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16405:64;;;16488:7;16483:101;;16522:47;;-1:-1:-1::0;;;16522:47:0::1;;;;;;;;;;;16483:101;16391:203;16604:15;;;15263:1363:::0;;;;;;;:::o;4979:2971::-;5177:7;4359:10;-1:-1:-1;;;;;4373:7:0;4359:21;;4355:110;;4403:51;;-1:-1:-1;;;4403:51:0;;;;;;;;;;;4355:110;5276:28:::1;5307:27:::0;;;::::1;::::0;;;;;;;;5276:58;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;5276:58:0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;;::::0;;;;5348:35;5344:131:::1;;5406:58;;-1:-1:-1::0;;;5406:58:0::1;;;;;;;;;;;5344:131;5624:21:::0;;5620:128:::1;;5682:55;;-1:-1:-1::0;;;5682:55:0::1;;;;;;;;;;;5620:128;5837:18;::::0;::::1;::::0;-1:-1:-1;;;;;5837:32:0::1;::::0;;:80:::1;;-1:-1:-1::0;5885:18:0::1;::::0;::::1;::::0;-1:-1:-1;;;;;5885:32:0::1;::::0;5837:80:::1;:128;;;-1:-1:-1::0;5933:18:0::1;::::0;::::1;::::0;-1:-1:-1;;;;;5933:32:0::1;::::0;5837:128:::1;:176;;;-1:-1:-1::0;5981:18:0::1;::::0;::::1;::::0;-1:-1:-1;;;;;5981:32:0::1;::::0;5837:176:::1;:224;;;-1:-1:-1::0;6029:18:0::1;::::0;::::1;::::0;-1:-1:-1;;;;;6029:32:0::1;::::0;5837:224:::1;5820:337;;;6093:53;;-1:-1:-1::0;;;6093:53:0::1;;;;;;;;;;;5820:337;6279:21:::0;;6249:25:::1;::::0;::::1;::::0;6260:13;;6249:25:::1;;;:::i;:::-;;;;;;;;;;;;;6239:36;;;;;;:61;6235:148;;6323:49;;-1:-1:-1::0;;;6323:49:0::1;;;;;;;;;;;6235:148;6498:10;:24;;;6483:10;6473:21;;;;;;:49;6469:139;;6545:52;;-1:-1:-1::0;;;6545:52:0::1;;;;;;;;;;;6469:139;6884:31;6901:13;6884:16;:31::i;:::-;7034:36;7073:30;7089:13;7073:15;:30::i;:::-;7034:69;;7145:10;:28;;;7113:6;:29;;:60;;;::::0;::::1;7263:20;7286:13;7263:36;;7339:12;7354:5;7339:20;;7399:18;7444:12;-1:-1:-1::0;;;;;7420:44:0::1;;7478:6;7498:10;7522;:18;;;7554:10;:18;;;7586:10;:18;;;7618:10;:18;;;7650:10;:18;;;7824:12;7838:4;7813:30;;;;;;;;9823:25:234::0;;;9879:2;9864:18;;9857:34;9811:2;9796:18;;9649:248;7813:30:0::1;;;;;;;;;;;;;7803:41;;;;;;7420:434;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7864:12;:27:::0;;;::::1;::::0;;;;;;;:38:::1;;:51:::0;;-1:-1:-1;;;;;;7864:51:0::1;-1:-1:-1::0;;;;;7864:51:0;::::1;;::::0;;-1:-1:-1;7864:51:0;;4979:2971;-1:-1:-1;;;;;;;;4979:2971:0:o;4266:1397:23:-;4429:37;4452:13;4429:22;:37::i;:::-;4559:23;;-1:-1:-1;;;;;4551:39:23;129:42:120;4551:39:23;4547:126;;4613:49;;-1:-1:-1;;;4613:49:23;;;;;;;;;;;4547:126;4829:15;-1:-1:-1;;;;;4778:67:23;4786:13;:30;;;-1:-1:-1;;;;;4778:67:23;;4761:183;;4877:56;;-1:-1:-1;;;4877:56:23;;;;;;;;;;;4761:183;5206:13;:34;;;5244:4;5206:42;5202:140;;5271:60;;-1:-1:-1;;;5271:60:23;;;;;;;;;;;5202:140;5496:13;:38;;;5538:4;5496:46;5492:165;;5565:81;;-1:-1:-1;;;5565:81:23;;;;;;;;;;;5492:165;4266:1397;:::o;5811:311::-;6083:32;;-1:-1:-1;;;6083:32:23;;193:4:122;6083:32:23;;;6001:25:234;6002:7:23;;6083:15;-1:-1:-1;;;;;6083:27:23;;;;5974:18:234;;6083:32:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6076:39;;5811:311;;;;;:::o;20051:1056:0:-;20164:37;;:::i;:::-;20300:23;;-1:-1:-1;;;;;20280:43:0;;;;;20360:30;;;;;20333:57;;:24;;;:57;20424:27;;;;;20400:51;;:21;;;:51;20486:28;;;;;20461:22;;;:53;20555:34;;;;20524:28;;;;:65;;;;20634:51;;;20599:32;;;;:86;;;;20722:30;;;20695:24;;;;:57;;;;20791:32;;;20762:26;;;;:61;;;;20855:25;;;20833:19;;;;:47;;;;20911:24;;;20890:45;;:18;;;;:45;;;;20968:26;;;20945:49;;:20;;;;:49;;;;21029:28;;;21004:53;:22;;;;:53;;;;21082:18;;;;21067:12;;;:33;20280:7;20051:1056::o;3963:145:23:-;4030:9;:14;4026:76;;4067:24;;-1:-1:-1;;;4067:24:23;;;;;;;;;;;4026:76;3963:145::o;2999:880::-;3190:7;3342:8;:15;;;3338:83;;;3380:30;;-1:-1:-1;;;3380:30:23;;;;;;;;;;;3338:83;3531:129;-1:-1:-1;;;;;3545:15:23;3531:48;3593:3;3618:4;3637:13;3531:48;:129::i;:::-;3670:115;-1:-1:-1;;;;;3684:15:23;3670:44;3736:11;3762:13;3670:44;:115::i;:::-;-1:-1:-1;3871:1:23;2999:880;;;;;;:::o;18150:1191:0:-;18451:3;18414:13;:34;;;:40;18410:138;;;18477:60;;-1:-1:-1;;;18477:60:0;;;;;;;;;;;18410:138;18562:13;:32;;;18598:1;18562:37;18558:133;;18622:58;;-1:-1:-1;;;18622:58:0;;;;;;;;;;;18558:133;18750:13;:32;;;18717:13;:30;;;:65;:163;;;;18831:13;:32;;;18798:13;:30;;;:65;;;;:::i;:::-;:82;;18717:163;18700:279;;;18912:56;;-1:-1:-1;;;18912:56:0;;;;;;;;;;;18700:279;19057:18;;;;:24;193:4:122;-1:-1:-1;19057:30:0;:75;;;193:4:122;19103:13:0;:18;;;:23;;;:29;19057:75;:128;;;;193:4:122;19148:13:0;:18;;;:31;;;:37;19057:128;:185;;;;193:4:122;19201:13:0;:18;;;:35;;;:41;19057:185;19040:295;;;19274:50;;-1:-1:-1;;;19274:50:0;;;;;;;;;;;1702:188:166;1829:53;;-1:-1:-1;;;;;15482:15:234;;;1829:53:166;;;15464:34:234;15534:15;;;15514:18;;;15507:43;15566:18;;;15559:34;;;1802:81:166;;1822:5;;1844:18;;;;;15399::234;;1829:53:166;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1829:53:166;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;3296:380::-;3411:47;;;-1:-1:-1;;;;;15796:32:234;;3411:47:166;;;15778:51:234;15845:18;;;;15838:34;;;3411:47:166;;;;;;;;;;15751:18:234;;;;3411:47:166;;;;;;;;-1:-1:-1;;;;;3411:47:166;-1:-1:-1;;;3411:47:166;;;3474:44;3426:13;3411:47;3474:23;:44::i;:::-;3469:201;;3561:43;;-1:-1:-1;;;;;15796:32:234;;;3561:43:166;;;15778:51:234;3601:1:166;15845:18:234;;;15838:34;3534:71:166;;3554:5;;3576:13;;;;;15751:18:234;;3561:43:166;15604:274:234;3534:71:166;3619:40;3639:5;3646:12;4059:629;4478:23;4504:33;-1:-1:-1;;;;;4504:27:166;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:166;;-1:-1:-1;;;;;4455:32:234;;4631:40:166;;;4437:51:234;4410:18;;4631:40:166;;;;;;;;4547:135;4129:559;4059:629;;:::o;5189:578::-;5272:4;5574:12;5588:23;5623:5;-1:-1:-1;;;;;5615:19:166;5635:4;5615:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5573:67;;;;5657:7;:69;;;;-1:-1:-1;5669:17:166;;:22;;:56;;;5706:10;5695:30;;;;;;;;;;;;:::i;:::-;5657:103;;;;-1:-1:-1;;;;;;;;;;5730:26:166;;:30;;;5189:578::o;2705:151:167:-;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;-1:-1:-1;;;;;3462:11:167;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:167;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:167;;-1:-1:-1;;;;;4455:32:234;;5121:24:167;;;4437:51:234;4410:18;;5121:24:167;4291:203:234;5041:119:167;-1:-1:-1;5180:10:167;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:167;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:234:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:255;218:2;212:9;260:6;248:19;;297:18;282:34;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:2;373:22;146:255;:::o;406:246::-;473:2;467:9;515:2;503:15;;548:18;533:34;;569:22;;;530:62;527:88;;;595:18;;:::i;657:139::-;-1:-1:-1;;;;;740:31:234;;730:42;;720:70;;786:1;783;776:12;801:150;877:20;;906:39;877:20;906:39;:::i;:::-;801:150;;;:::o;956:601::-;1007:5;1055:4;1043:9;1038:3;1034:19;1030:30;1027:50;;;1073:1;1070;1063:12;1027:50;1106:2;1100:9;1148:4;1140:6;1136:17;1219:6;1207:10;1204:22;1183:18;1171:10;1168:34;1165:62;1162:88;;;1230:18;;:::i;:::-;1270:10;1266:2;1259:22;;1299:6;1290:15;;1342:9;1329:23;1321:6;1314:39;1414:2;1403:9;1399:18;1386:32;1381:2;1373:6;1369:15;1362:57;1480:2;1469:9;1465:18;1452:32;1447:2;1439:6;1435:15;1428:57;1546:2;1535:9;1531:18;1518:32;1513:2;1505:6;1501:15;1494:57;;956:601;;;;:::o;1562:1225::-;1625:5;1673:6;1661:9;1656:3;1652:19;1648:32;1645:52;;;1693:1;1690;1683:12;1645:52;1715:22;;:::i;:::-;1706:31;;1760:37;1787:9;1760:37;:::i;:::-;1753:5;1746:52;1830:46;1872:2;1861:9;1857:18;1830:46;:::i;:::-;1825:2;1818:5;1814:14;1807:70;1909:46;1951:2;1940:9;1936:18;1909:46;:::i;:::-;1904:2;1897:5;1893:14;1886:70;2016:2;2005:9;2001:18;1988:32;1983:2;1976:5;1972:14;1965:56;2082:3;2071:9;2067:19;2054:33;2048:3;2041:5;2037:15;2030:58;2149:3;2138:9;2134:19;2121:33;2115:3;2108:5;2104:15;2097:58;2216:3;2205:9;2201:19;2188:33;2182:3;2175:5;2171:15;2164:58;2283:3;2272:9;2268:19;2255:33;2249:3;2242:5;2238:15;2231:58;2308:3;2371:2;2360:9;2356:18;2343:32;2338:2;2331:5;2327:14;2320:56;;2395:3;2430:46;2472:2;2461:9;2457:18;2430:46;:::i;:::-;2414:14;;;2407:70;2496:3;2531:46;2558:18;;;2531:46;:::i;:::-;2515:14;;;2508:70;2597:3;2632:46;2659:18;;;2632:46;:::i;:::-;2616:14;;;2609:70;2698:3;2733:47;2776:3;2756:18;;;2733:47;:::i;:::-;2717:14;;;2710:71;2721:5;1562:1225;-1:-1:-1;;1562:1225:234:o;2792:718::-;2834:5;2887:3;2880:4;2872:6;2868:17;2864:27;2854:55;;2905:1;2902;2895:12;2854:55;2941:6;2928:20;2967:18;3004:2;3000;2997:10;2994:36;;;3010:18;;:::i;:::-;3085:2;3079:9;3053:2;3139:13;;-1:-1:-1;;3135:22:234;;;3159:2;3131:31;3127:40;3115:53;;;3183:18;;;3203:22;;;3180:46;3177:72;;;3229:18;;:::i;:::-;3269:10;3265:2;3258:22;3304:2;3296:6;3289:18;3350:3;3343:4;3338:2;3330:6;3326:15;3322:26;3319:35;3316:55;;;3367:1;3364;3357:12;3316:55;3431:2;3424:4;3416:6;3412:17;3405:4;3397:6;3393:17;3380:54;3478:1;3471:4;3466:2;3458:6;3454:15;3450:26;3443:37;3498:6;3489:15;;;;;;2792:718;;;;:::o;3515:662::-;3654:6;3662;3670;3678;3686;3739:3;3727:9;3718:7;3714:23;3710:33;3707:53;;;3756:1;3753;3746:12;3707:53;3792:9;3779:23;3769:33;;3821:63;3876:7;3871:2;3860:9;3856:18;3821:63;:::i;:::-;3811:73;;3935:3;3924:9;3920:19;3907:33;3963:18;3955:6;3952:30;3949:50;;;3995:1;3992;3985:12;3949:50;4018:49;4059:7;4050:6;4039:9;4035:22;4018:49;:::i;:::-;3515:662;;;;-1:-1:-1;4008:59:234;;4114:3;4099:19;;4086:33;;-1:-1:-1;4166:3:234;4151:19;4138:33;;3515:662;-1:-1:-1;;;3515:662:234:o;4499:118::-;4585:5;4578:13;4571:21;4564:5;4561:32;4551:60;;4607:1;4604;4597:12;4622:1228;4743:6;4751;4759;4767;4775;4828:3;4816:9;4807:7;4803:23;4799:33;4796:53;;;4845:1;4842;4835:12;4796:53;4881:9;4868:23;4858:33;;4941:2;4930:9;4926:18;4913:32;4954:39;4987:5;4954:39;:::i;:::-;5012:5;-1:-1:-1;5064:2:234;5049:18;;5036:32;;-1:-1:-1;5115:2:234;5100:18;;5087:32;;-1:-1:-1;5170:3:234;5155:19;;5142:33;5194:18;5224:14;;;5221:34;;;5251:1;5248;5241:12;5221:34;5274:22;;;;5330:2;5312:16;;;5308:25;5305:45;;;5346:1;5343;5336:12;5305:45;5374:17;;:::i;:::-;5428:2;5415:16;5440:41;5473:7;5440:41;:::i;:::-;5490:24;;5559:2;5551:11;;5538:25;5572:30;5538:25;5572:30;:::i;:::-;5631:2;5618:16;;5611:33;5690:2;5682:11;;5669:25;5706:16;;;5703:36;;;5735:1;5732;5725:12;5703:36;5773:44;5809:7;5798:8;5794:2;5790:17;5773:44;:::i;:::-;5768:2;5759:7;5755:16;5748:70;;5837:7;5827:17;;;;;4622:1228;;;;;;;;:::o;6037:593::-;6167:6;6175;6183;6191;6244:3;6232:9;6223:7;6219:23;6215:33;6212:53;;;6261:1;6258;6251:12;6212:53;6297:9;6284:23;6274:33;;6326:63;6381:7;6376:2;6365:9;6361:18;6326:63;:::i;:::-;6316:73;;6440:3;6429:9;6425:19;6412:33;6468:18;6460:6;6457:30;6454:50;;;6500:1;6497;6490:12;6454:50;6523:49;6564:7;6555:6;6544:9;6540:22;6523:49;:::i;:::-;6037:593;;;;-1:-1:-1;6513:59:234;;6619:3;6604:19;6591:33;;-1:-1:-1;;;6037:593:234:o;6635:180::-;6694:6;6747:2;6735:9;6726:7;6722:23;6718:32;6715:52;;;6763:1;6760;6753:12;6715:52;-1:-1:-1;6786:23:234;;6635:180;-1:-1:-1;6635:180:234:o;6820:1087::-;7037:13;;7019:32;;7107:4;7095:17;;;7089:24;7067:20;;;7060:54;7170:4;7158:17;;;7152:24;7130:20;;;7123:54;7224:4;7212:17;;;7206:24;-1:-1:-1;;;;;7306:21:234;;;7284:20;;;7277:51;;;;7388:4;7376:17;;;7370:24;7366:33;;7344:20;;;7337:63;7257:3;7437:17;;;7431:24;4248:31;;7499:20;;;4236:44;7569:4;7557:17;;;7551:24;4248:31;;7619:20;;;4236:44;7689:4;7677:17;;;7671:24;4248:31;;7739:20;;;4236:44;7779:6;7822:15;;;7816:22;4248:31;;;7882:18;;;4236:44;7006:3;6991:19;;;7847:54;;;6820:1087;;;;:::o;8174:1470::-;8410:13;;-1:-1:-1;;;;;4248:31:234;4236:44;;8378:3;8363:19;;8482:4;8474:6;8470:17;8464:24;8497:54;8545:4;8534:9;8530:20;8516:12;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;8497:54;;8600:4;8592:6;8588:17;8582:24;8615:56;8665:4;8654:9;8650:20;8634:14;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;8615:56;;8727:4;8719:6;8715:17;8709:24;8702:4;8691:9;8687:20;8680:54;8790:4;8782:6;8778:17;8772:24;8765:4;8754:9;8750:20;8743:54;8853:4;8845:6;8841:17;8835:24;8828:4;8817:9;8813:20;8806:54;8916:4;8908:6;8904:17;8898:24;8891:4;8880:9;8876:20;8869:54;8979:4;8971:6;8967:17;8961:24;8954:4;8943:9;8939:20;8932:54;9005:6;9065:2;9057:6;9053:15;9047:22;9042:2;9031:9;9027:18;9020:50;;9089:6;9144:2;9136:6;9132:15;9126:22;9157:54;9207:2;9196:9;9192:18;9176:14;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;9157:54;-1:-1:-1;;9230:6:234;9273:15;;;9267:22;-1:-1:-1;;;;;4248:31:234;;9333:18;;;4236:44;-1:-1:-1;;9371:6:234;9414:15;;;9408:22;-1:-1:-1;;;;;4248:31:234;;9474:18;;;4236:44;-1:-1:-1;;9512:6:234;9555:15;;;9549:22;7982:12;;9619:18;;;7970:25;8044:4;8033:16;;8027:23;8011:14;;;8004:47;8100:4;8089:16;;8083:23;8067:14;;;8060:47;8156:4;8145:16;;8139:23;8123:14;;;8116:47;9580:58;7912:257;9902:1303;9985:12;;-1:-1:-1;;;;;4248:31:234;4236:44;;10049:4;10042:5;10038:16;10032:23;10064:48;10106:4;10101:3;10097:14;10083:12;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;10064:48;;10160:4;10153:5;10149:16;10143:23;10175:50;10219:4;10214:3;10210:14;10194;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;10175:50;;10274:4;10267:5;10263:16;10257:23;10250:4;10245:3;10241:14;10234:47;10330:4;10323:5;10319:16;10313:23;10306:4;10301:3;10297:14;10290:47;10386:4;10379:5;10375:16;10369:23;10362:4;10357:3;10353:14;10346:47;10442:4;10435:5;10431:16;10425:23;10418:4;10413:3;10409:14;10402:47;10498:4;10491:5;10487:16;10481:23;10474:4;10469:3;10465:14;10458:47;10524:6;10577:2;10570:5;10566:14;10560:21;10555:2;10550:3;10546:12;10539:43;;10601:6;10654:2;10647:5;10643:14;10637:21;10632:2;10627:3;10623:12;10616:43;;10678:6;10732:2;10725:5;10721:14;10715:21;10745:48;10789:2;10784:3;10780:12;10764:14;-1:-1:-1;;;;;4248:31:234;4236:44;;4182:104;10745:48;-1:-1:-1;;10812:6:234;10855:14;;;10849:21;-1:-1:-1;;;;;4248:31:234;;10914:12;;;4236:44;-1:-1:-1;;10946:6:234;10989:14;;;10983:21;-1:-1:-1;;;;;4248:31:234;;11048:12;;;4236:44;-1:-1:-1;;11080:6:234;11123:14;;;11117:21;7982:12;;11186;;;7970:25;8044:4;8033:16;;8027:23;8011:14;;;8004:47;8100:4;8089:16;;8083:23;8067:14;;;8060:47;8156:4;8145:16;;8139:23;8123:14;;;8116:47;11147:52;7912:257;11210:250;11295:1;11305:113;11319:6;11316:1;11313:13;11305:113;;;11395:11;;;11389:18;11376:11;;;11369:39;11341:2;11334:10;11305:113;;;-1:-1:-1;;11452:1:234;11434:16;;11427:27;11210:250::o;11465:270::-;11506:3;11544:5;11538:12;11571:6;11566:3;11559:19;11587:76;11656:6;11649:4;11644:3;11640:14;11633:4;11626:5;11622:16;11587:76;:::i;:::-;11717:2;11696:15;-1:-1:-1;;11692:29:234;11683:39;;;;11724:4;11679:50;;11465:270;-1:-1:-1;;11465:270:234:o;11740:463::-;11964:4;11993:3;12005:47;12042:9;12034:6;12005:47;:::i;:::-;12089:2;12083:3;12072:9;12068:19;12061:31;12109:44;12149:2;12138:9;12134:18;12126:6;12109:44;:::i;:::-;12101:52;;;12190:6;12184:3;12173:9;12169:19;12162:35;11740:463;;;;;;:::o;12208:259::-;12278:6;12331:2;12319:9;12310:7;12306:23;12302:32;12299:52;;;12347:1;12344;12337:12;12299:52;12379:9;12373:16;12398:39;12431:5;12398:39;:::i;12472:345::-;-1:-1:-1;;;;;12692:32:234;;;;12674:51;;12756:2;12741:18;;12734:34;;;;12799:2;12784:18;;12777:34;12662:2;12647:18;;12472:345::o;12822:643::-;13059:6;13048:9;13041:25;13102:6;13097:2;13086:9;13082:18;13075:34;13145:2;13140;13129:9;13125:18;13118:30;13220:1;13216;13211:3;13207:11;13203:19;13194:6;13188:13;13184:39;13179:2;13168:9;13164:18;13157:67;13293:2;13285:6;13281:15;13275:22;13268:30;13261:38;13255:3;13244:9;13240:19;13233:67;13022:4;13347:2;13339:6;13335:15;13329:22;13388:2;13382:3;13371:9;13367:19;13360:31;13408:51;13454:3;13443:9;13439:19;13425:12;13408:51;:::i;:::-;13400:59;12822:643;-1:-1:-1;;;;;;12822:643:234:o;13470:184::-;13540:6;13593:2;13581:9;13572:7;13568:23;13564:32;13561:52;;;13609:1;13606;13599:12;13561:52;-1:-1:-1;13632:16:234;;13470:184;-1:-1:-1;13470:184:234:o;13659:225::-;13726:9;;;13747:11;;;13744:134;;;13800:10;13795:3;13791:20;13788:1;13781:31;13835:4;13832:1;13825:15;13863:4;13860:1;13853:15;14099:906;14463:4;14492:3;14504:47;14541:9;14533:6;14504:47;:::i;:::-;14588:2;14582:3;14571:9;14567:19;14560:31;14608:44;14648:2;14637:9;14633:18;14625:6;14608:44;:::i;:::-;-1:-1:-1;;;;;14727:15:234;;;14721:3;14706:19;;14699:44;14780:15;;;14774:3;14759:19;;14752:44;-1:-1:-1;;14833:15:234;;;14827:3;14812:19;;14805:44;14886:15;;;14880:3;14865:19;;14858:44;14939:15;;;14933:3;14918:19;;14911:44;14986:3;14971:19;14964:35;;;;14600:52;14099:906;-1:-1:-1;;14099:906:234:o;15010:209::-;15042:1;15068;15058:132;;15112:10;15107:3;15103:20;15100:1;15093:31;15147:4;15144:1;15137:15;15175:4;15172:1;15165:15;15058:132;-1:-1:-1;15204:9:234;;15010:209::o;16170:245::-;16237:6;16290:2;16278:9;16269:7;16265:23;16261:32;16258:52;;;16306:1;16303;16296:12;16258:52;16338:9;16332:16;16357:28;16379:5;16357:28;:::i;16420:287::-;16549:3;16587:6;16581:13;16603:66;16662:6;16657:3;16650:4;16642:6;16638:17;16603:66;:::i;:::-;16685:16;;;;;16420:287;-1:-1:-1;;16420:287:234:o",
        "linkReferences": {},
        "immutableReferences": {
            "2841": [
                {
                    "start": 4056,
                    "length": 32
                },
                {
                    "start": 4261,
                    "length": 32
                },
                {
                    "start": 4646,
                    "length": 32
                },
                {
                    "start": 4699,
                    "length": 32
                }
            ],
            "45": [
                {
                    "start": 819,
                    "length": 32
                },
                {
                    "start": 918,
                    "length": 32
                },
                {
                    "start": 2730,
                    "length": 32
                },
                {
                    "start": 3142,
                    "length": 32
                }
            ],
            "48": [
                {
                    "start": 871,
                    "length": 32
                },
                {
                    "start": 3701,
                    "length": 32
                }
            ],
            "51": [
                {
                    "start": 715,
                    "length": 32
                },
                {
                    "start": 1137,
                    "length": 32
                }
            ],
            "54": [
                {
                    "start": 611,
                    "length": 32
                },
                {
                    "start": 1628,
                    "length": 32
                }
            ],
            "57": [
                {
                    "start": 767,
                    "length": 32
                },
                {
                    "start": 1904,
                    "length": 32
                }
            ],
            "60": [
                {
                    "start": 663,
                    "length": 32
                },
                {
                    "start": 2180,
                    "length": 32
                }
            ],
            "63": [
                {
                    "start": 559,
                    "length": 32
                },
                {
                    "start": 2456,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "coreDeployer()": "c83e1f51",
        "deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": "1ae6f515",
        "deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": "0b3c4f86",
        "deployments(bytes32)": "37404017",
        "factory()": "c45a0155",
        "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": "16abfc70",
        "target0Deployer()": "ab71905f",
        "target1Deployer()": "a085fa30",
        "target2Deployer()": "b6cb1118",
        "target3Deployer()": "aa8cd6c4",
        "target4Deployer()": "966ecd1c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_coreDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target0Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target1Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target2Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target3Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target4Deployer\",\"type\":\"address\"},{\"internalType\":\"contract IRocketTokenRETH\",\"name\":\"_rocketTokenReth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveIsNotDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBaseToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumTransactionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTargetIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidVaultSharesToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SenderIsNotFactory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"coreDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"vaultSharesToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"vaultSharesToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"}],\"name\":\"deployments\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"configHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"extraDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hyperdrive\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target4\",\"type\":\"address\"}],\"internalType\":\"struct HyperdriveDeployerCoordinator.Deployment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpShares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target0Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target1Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target2Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target3Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target4Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_coreDeployer\":\"The core deployer.\",\"_factory\":\"The factory that this deployer will be registered with.\",\"_rocketTokenReth\":\"The rETH token contract.\",\"_target0Deployer\":\"The target0 deployer.\",\"_target1Deployer\":\"The target1 deployer.\",\"_target2Deployer\":\"The target2 deployer.\",\"_target3Deployer\":\"The target3 deployer.\",\"_target4Deployer\":\"The target4 deployer.\"}},\"deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"details\":\"This can only be deployed by the associated factory.\",\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy Hyperdrive.\"},\"returns\":{\"_0\":\"The address of the newly deployed Hyperdrive instance.\"}},\"deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"details\":\"This can only be deployed by the associated factory.As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.\",\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy the target.\",\"_targetIndex\":\"The index of the target to deploy.\"},\"returns\":{\"target\":\"The address of the newly deployed target instance.\"}},\"deployments(bytes32)\":{\"params\":{\"_deploymentId\":\"The deployment ID.\"},\"returns\":{\"_0\":\"The deployment.\"}},\"initialize(bytes32,address,uint256,uint256,(address,bool,bytes))\":{\"details\":\"This can only be deployed by the associated factory.This function utilizes several helper functions that provide      flexibility to implementations.\",\"params\":{\"_apr\":\"The target APR.\",\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_deploymentId\":\"The ID of the deployment.\",\"_lp\":\"The LP that is initializing the pool.\",\"_options\":\"The options that configure how the initialization is        settled.\"},\"returns\":{\"lpShares\":\"The initial number of LP shares created.\"}}},\"stateVariables\":{\"rocketTokenReth\":{\"details\":\"The Rocket Token RETH contract.\"}},\"title\":\"RETHHyperdriveDeployerCoordinator\",\"version\":1},\"userdoc\":{\"errors\":{\"DeploymentAlreadyExists()\":[{\"notice\":\"Thrown when a user attempts to deploy target0 the deployment has         already been created.\"}],\"DeploymentDoesNotExist()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract that requires         the deployment to be created and the deployment doesn't exist.\"}],\"HyperdriveAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a hyperdrive contract         after it has already been deployed.\"}],\"HyperdriveIsNotDeployed()\":[{\"notice\":\"Thrown when a user attempts to initialize a hyperdrive contract         before is has been deployed.\"}],\"IncompleteDeployment()\":[{\"notice\":\"Thrown when a user attempts to deploy a Hyperdrive entrypoint         without first deploying the required targets.\"}],\"InsufficientValue()\":[{\"notice\":\"Thrown when a deployer provides an insufficient amount of base         to initialize a payable Hyperdrive instance.\"}],\"InvalidBaseToken()\":[{\"notice\":\"Thrown when the base token isn't valid. Each instance will have         different criteria for what constitutes a valid base token.\"}],\"InvalidCheckpointDuration()\":[{\"notice\":\"Thrown when the checkpoint duration specified is zero.\"}],\"InvalidFeeAmounts()\":[{\"notice\":\"Thrown when the curve fee, flat fee, governance LP fee, or         governance zombie fee is greater than 100%.\"}],\"InvalidMinimumShareReserves()\":[{\"notice\":\"Thrown when the minimum share reserves is too small. The         absolute smallest allowable minimum share reserves is 1e3;         however, yield sources may require a larger minimum share         reserves.\"}],\"InvalidMinimumTransactionAmount()\":[{\"notice\":\"Thrown when the minimum transaction amount is too small.\"}],\"InvalidPositionDuration()\":[{\"notice\":\"Thrown when the position duration is smaller than the checkpoint         duration or is not a multiple of the checkpoint duration.\"}],\"InvalidTargetIndex()\":[{\"notice\":\"Thrown when a user attempts to deploy a target using a target         index that is outside of the accepted range.\"}],\"InvalidVaultSharesToken()\":[{\"notice\":\"Thrown when the vault shares token isn't valid. Each instance         will have different criteria for what constitutes a valid base         token.\"}],\"MismatchedConfig()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with a config that doesn't match the deployment's         config hash.\"}],\"MismatchedExtraData()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with extra data that doesn't match the deployment's         extra data hash.\"}],\"NotPayable()\":[{\"notice\":\"Thrown when ether is sent to an instance that doesn't accept         ether as a deposit asset.\"},{\"notice\":\"Thrown when ether is sent to an instance that doesn't accept         ether as a deposit asset.\"}],\"SenderIsNotFactory()\":[{\"notice\":\"Thrown when the sender of a `deploy`, `deployTarget`, or         `initialize` transaction isn't the associated factory.\"}],\"TargetAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a target contract after         it has already been deployed.\"}],\"TransferFailed()\":[{\"notice\":\"Thrown when an ether transfer fails.\"}],\"UnsupportedToken()\":[{\"notice\":\"Thrown when an unsupported option is passed to a function or         a user attempts to sweep an invalid token. The options and sweep         targets that are supported vary between instances.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates the deployer coordinator.\"},\"coreDeployer()\":{\"notice\":\"The contract used to deploy new instances of Hyperdrive.\"},\"deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"},\"deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"notice\":\"Deploys a Hyperdrive target instance with the given parameters.\"},\"deployments(bytes32)\":{\"notice\":\"Gets the deployment specified by the deployment ID.\"},\"factory()\":{\"notice\":\"The factory that this deployer will be registered with.\"},\"initialize(bytes32,address,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Initializes a pool that was deployed by this coordinator.\"},\"target0Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget0.\"},\"target1Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget1.\"},\"target2Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget2.\"},\"target3Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget3.\"},\"target4Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget4.\"}},\"notice\":\"The deployer coordinator for the RETHHyperdrive implementation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/reth/RETHHyperdriveDeployerCoordinator.sol\":\"RETHHyperdriveDeployerCoordinator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/HyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xa808014ce91bfbe6e112f7ad34c35a0a6b127fc8d9c86f285e0e85db2887d08a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://85951b911bd00eb9ba8595b8aa822ca165b7ea6ba7059461c7e55466cc8996b9\",\"dweb:/ipfs/Qmdh8MTn2oHYgGhmftdg6KDZGpUcuoWM7QWW8e9pSFjNn3\"]},\"contracts/src/deployers/reth/RETHHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xf11fe9d80e0f1368b44e523f06baabfc5ddb11ede5309cbfef55ff12c2eb227f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://108c43d7bfd8df524c1e7e33f8575400d08048ca06378cf825be05bd6f76a37c\",\"dweb:/ipfs/QmSAGgJAYAJVV21JUA8KftahdScbhka4ov2PMroXAYAVT4\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0x8b726cbf87e5dbec80207d47b64bb20e35a9fb42667b9d1612a87ad8b2d361b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b2015112addc7b4ba33c0626a14c963294164906afce52296f3dc209737a7339\",\"dweb:/ipfs/QmZYR6qwGspufCtiofdvYbaHhxSrguNnP52rd3y3zXWiDz\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0xa48349cf2fcd27ce3aafcffeba25647d289e17653dc1a4e643c3de0b47e5c75f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4dee6d2061cc68e3bc52acfa0d35c973785e49170f49d2e09efd50ead85e2a19\",\"dweb:/ipfs/QmX6tpGgXTnVGt1CdD796N5kn8YrZWFX1FcRLqtBBhB5qk\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b\",\"dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU\"]},\"contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xe7bf783c896c0c519f4872a4f21d9279d9913a7dc124dd9c1b7d2ffd7c5e61cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5d0f7bc4f5cccaea086cee416479d0a7aaf919220a92b9fb74cca7fdcfb58d58\",\"dweb:/ipfs/QmPhKYBLix7tiEPq32mVNmFJkkzeTSt2qGQA7LWh8DM3Ru\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://338a9f960049c37d13b6e23e5bc2c9e6005366aa99c95168f57f170ef2a4bcfa\",\"dweb:/ipfs/QmaeAwacrvMgJGqrKDSXZkYNYRJ5FvirYFpY3xjbCbJTF9\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0xfbe341a751b577daa735f836ae9e213b23fffecfb1b7512e4faf3d7807f5b045\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://78ba0c247e48f642f44c30d7771bd752a5fe8bd4a6c10f849f1ad66804149c86\",\"dweb:/ipfs/QmXtSLfErEvA8wqMzXDdqNU9TRMVVgoMibmFSDRJCypi6j\"]},\"contracts/src/interfaces/IHyperdriveTargetDeployer.sol\":{\"keccak256\":\"0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed\",\"dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/interfaces/IRocketTokenRETH.sol\":{\"keccak256\":\"0x5796efb852a2ddbd07325f14230c90bf86b9229be421d0dda7e73748a786b7a9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3cc5ed3f01c7a6ece0bea2a85c1d4bd75e1b1e58caed8f02688e7df94f12e79f\",\"dweb:/ipfs/QmPpEbox2jwfjZScm3TGywPgi6UWHzproRGZmbCYBg2jy5\"]},\"contracts/src/libraries/Constants.sol\":{\"keccak256\":\"0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418\",\"dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x44e018888d5a9fe0c3e44d9d814879d8f0c3adb78154edc98ba07da86b976f5a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e3990bc86aaa8b4eb4b948ed3a26f0b018f1422c6470a00d146aa69e599a90d\",\"dweb:/ipfs/QmWg9hKoQK1po8ZxRC4xrSWePtoJhgndkHXmwLCpCtwAUu\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xa15878749f26b198b59e039cf814143b141698064d341cd8b88cb4a04491551c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b3fdd810b779630fce33fa7d2bfc17d6cca1bd3d646e5c702d09fd277167fde4\",\"dweb:/ipfs/QmW8C19uY5WLkVQfqFRsSU5NtuQDgoqt4jBoMhvuJ7kMn2\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.20+commit.a1b79de6"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_factory",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_coreDeployer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_target0Deployer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_target1Deployer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_target2Deployer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_target3Deployer",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_target4Deployer",
                            "type": "address"
                        },
                        {
                            "internalType": "contract IRocketTokenRETH",
                            "name": "_rocketTokenReth",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressEmptyCode"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "AddressInsufficientBalance"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "DeploymentAlreadyExists"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "DeploymentDoesNotExist"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "FailedInnerCall"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "HyperdriveAlreadyDeployed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "HyperdriveIsNotDeployed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "IncompleteDeployment"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InsufficientValue"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidBaseToken"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidCheckpointDuration"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidFeeAmounts"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidMinimumShareReserves"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidMinimumTransactionAmount"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidPositionDuration"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidTargetIndex"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "InvalidVaultSharesToken"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MismatchedConfig"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MismatchedExtraData"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPayable"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotPayable"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "token",
                            "type": "address"
                        }
                    ],
                    "type": "error",
                    "name": "SafeERC20FailedOperation"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "SenderIsNotFactory"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TargetAlreadyDeployed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "TransferFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UnsupportedToken"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "coreDeployer",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_deploymentId",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "struct IHyperdrive.PoolDeployConfig",
                            "name": "_deployConfig",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "contract IERC20",
                                    "name": "baseToken",
                                    "type": "address"
                                },
                                {
                                    "internalType": "contract IERC20",
                                    "name": "vaultSharesToken",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "linkerFactory",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "linkerCodeHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "minimumShareReserves",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "minimumTransactionAmount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "positionDuration",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "checkpointDuration",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "timeStretch",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "governance",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "sweepCollector",
                                    "type": "address"
                                },
                                {
                                    "internalType": "struct IHyperdrive.Fees",
                                    "name": "fees",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "uint256",
                                            "name": "curve",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "flat",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "governanceLP",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "governanceZombie",
                                            "type": "uint256"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "_extraData",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_salt",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "deploy",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_deploymentId",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "struct IHyperdrive.PoolDeployConfig",
                            "name": "_deployConfig",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "contract IERC20",
                                    "name": "baseToken",
                                    "type": "address"
                                },
                                {
                                    "internalType": "contract IERC20",
                                    "name": "vaultSharesToken",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "linkerFactory",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "linkerCodeHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "minimumShareReserves",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "minimumTransactionAmount",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "positionDuration",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "checkpointDuration",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "timeStretch",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "governance",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "feeCollector",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "sweepCollector",
                                    "type": "address"
                                },
                                {
                                    "internalType": "struct IHyperdrive.Fees",
                                    "name": "fees",
                                    "type": "tuple",
                                    "components": [
                                        {
                                            "internalType": "uint256",
                                            "name": "curve",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "flat",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "governanceLP",
                                            "type": "uint256"
                                        },
                                        {
                                            "internalType": "uint256",
                                            "name": "governanceZombie",
                                            "type": "uint256"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "internalType": "bytes",
                            "name": "_extraData",
                            "type": "bytes"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_targetIndex",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "_salt",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "deployTarget",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "target",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_deploymentId",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "deployments",
                    "outputs": [
                        {
                            "internalType": "struct HyperdriveDeployerCoordinator.Deployment",
                            "name": "",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "bytes32",
                                    "name": "configHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "extraDataHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint256",
                                    "name": "initialSharePrice",
                                    "type": "uint256"
                                },
                                {
                                    "internalType": "address",
                                    "name": "hyperdrive",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "target0",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "target1",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "target2",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "target3",
                                    "type": "address"
                                },
                                {
                                    "internalType": "address",
                                    "name": "target4",
                                    "type": "address"
                                }
                            ]
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "factory",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_deploymentId",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "_lp",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_contribution",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_apr",
                            "type": "uint256"
                        },
                        {
                            "internalType": "struct IHyperdrive.Options",
                            "name": "_options",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "address",
                                    "name": "destination",
                                    "type": "address"
                                },
                                {
                                    "internalType": "bool",
                                    "name": "asBase",
                                    "type": "bool"
                                },
                                {
                                    "internalType": "bytes",
                                    "name": "extraData",
                                    "type": "bytes"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "initialize",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "lpShares",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "target0Deployer",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "target1Deployer",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "target2Deployer",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "target3Deployer",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "target4Deployer",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "constructor": {
                        "params": {
                            "_coreDeployer": "The core deployer.",
                            "_factory": "The factory that this deployer will be registered with.",
                            "_rocketTokenReth": "The rETH token contract.",
                            "_target0Deployer": "The target0 deployer.",
                            "_target1Deployer": "The target1 deployer.",
                            "_target2Deployer": "The target2 deployer.",
                            "_target3Deployer": "The target3 deployer.",
                            "_target4Deployer": "The target4 deployer."
                        }
                    },
                    "deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        "details": "This can only be deployed by the associated factory.",
                        "params": {
                            "_deployConfig": "The deploy configuration of the Hyperdrive pool.",
                            "_deploymentId": "The ID of the deployment.",
                            "_extraData": "The extra data that contains the pool and sweep targets.",
                            "_salt": "The create2 salt used to deploy Hyperdrive."
                        },
                        "returns": {
                            "_0": "The address of the newly deployed Hyperdrive instance."
                        }
                    },
                    "deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        "details": "This can only be deployed by the associated factory.As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.",
                        "params": {
                            "_deployConfig": "The deploy configuration of the Hyperdrive pool.",
                            "_deploymentId": "The ID of the deployment.",
                            "_extraData": "The extra data that contains the pool and sweep targets.",
                            "_salt": "The create2 salt used to deploy the target.",
                            "_targetIndex": "The index of the target to deploy."
                        },
                        "returns": {
                            "target": "The address of the newly deployed target instance."
                        }
                    },
                    "deployments(bytes32)": {
                        "params": {
                            "_deploymentId": "The deployment ID."
                        },
                        "returns": {
                            "_0": "The deployment."
                        }
                    },
                    "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": {
                        "details": "This can only be deployed by the associated factory.This function utilizes several helper functions that provide      flexibility to implementations.",
                        "params": {
                            "_apr": "The target APR.",
                            "_contribution": "The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.",
                            "_deploymentId": "The ID of the deployment.",
                            "_lp": "The LP that is initializing the pool.",
                            "_options": "The options that configure how the initialization is        settled."
                        },
                        "returns": {
                            "lpShares": "The initial number of LP shares created."
                        }
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "constructor": {
                        "notice": "Instantiates the deployer coordinator."
                    },
                    "coreDeployer()": {
                        "notice": "The contract used to deploy new instances of Hyperdrive."
                    },
                    "deploy(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        "notice": "Deploys a Hyperdrive instance with the given parameters."
                    },
                    "deployTarget(bytes32,(address,address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        "notice": "Deploys a Hyperdrive target instance with the given parameters."
                    },
                    "deployments(bytes32)": {
                        "notice": "Gets the deployment specified by the deployment ID."
                    },
                    "factory()": {
                        "notice": "The factory that this deployer will be registered with."
                    },
                    "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": {
                        "notice": "Initializes a pool that was deployed by this coordinator."
                    },
                    "target0Deployer()": {
                        "notice": "The contract used to deploy new instances of HyperdriveTarget0."
                    },
                    "target1Deployer()": {
                        "notice": "The contract used to deploy new instances of HyperdriveTarget1."
                    },
                    "target2Deployer()": {
                        "notice": "The contract used to deploy new instances of HyperdriveTarget2."
                    },
                    "target3Deployer()": {
                        "notice": "The contract used to deploy new instances of HyperdriveTarget3."
                    },
                    "target4Deployer()": {
                        "notice": "The contract used to deploy new instances of HyperdriveTarget4."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "ds-test/=lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "openzeppelin/=lib/openzeppelin-contracts/contracts/",
                "solmate/=lib/solmate/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "contracts/src/deployers/reth/RETHHyperdriveDeployerCoordinator.sol": "RETHHyperdriveDeployerCoordinator"
            },
            "libraries": {}
        },
        "sources": {
            "contracts/src/deployers/HyperdriveDeployerCoordinator.sol": {
                "keccak256": "0xa808014ce91bfbe6e112f7ad34c35a0a6b127fc8d9c86f285e0e85db2887d08a",
                "urls": [
                    "bzz-raw://85951b911bd00eb9ba8595b8aa822ca165b7ea6ba7059461c7e55466cc8996b9",
                    "dweb:/ipfs/Qmdh8MTn2oHYgGhmftdg6KDZGpUcuoWM7QWW8e9pSFjNn3"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/deployers/reth/RETHHyperdriveDeployerCoordinator.sol": {
                "keccak256": "0xf11fe9d80e0f1368b44e523f06baabfc5ddb11ede5309cbfef55ff12c2eb227f",
                "urls": [
                    "bzz-raw://108c43d7bfd8df524c1e7e33f8575400d08048ca06378cf825be05bd6f76a37c",
                    "dweb:/ipfs/QmSAGgJAYAJVV21JUA8KftahdScbhka4ov2PMroXAYAVT4"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IERC20.sol": {
                "keccak256": "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9",
                "urls": [
                    "bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac",
                    "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IHyperdrive.sol": {
                "keccak256": "0x8b726cbf87e5dbec80207d47b64bb20e35a9fb42667b9d1612a87ad8b2d361b5",
                "urls": [
                    "bzz-raw://b2015112addc7b4ba33c0626a14c963294164906afce52296f3dc209737a7339",
                    "dweb:/ipfs/QmZYR6qwGspufCtiofdvYbaHhxSrguNnP52rd3y3zXWiDz"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IHyperdriveCore.sol": {
                "keccak256": "0xa48349cf2fcd27ce3aafcffeba25647d289e17653dc1a4e643c3de0b47e5c75f",
                "urls": [
                    "bzz-raw://4dee6d2061cc68e3bc52acfa0d35c973785e49170f49d2e09efd50ead85e2a19",
                    "dweb:/ipfs/QmX6tpGgXTnVGt1CdD796N5kn8YrZWFX1FcRLqtBBhB5qk"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                "keccak256": "0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761",
                "urls": [
                    "bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b",
                    "dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol": {
                "keccak256": "0xe7bf783c896c0c519f4872a4f21d9279d9913a7dc124dd9c1b7d2ffd7c5e61cc",
                "urls": [
                    "bzz-raw://5d0f7bc4f5cccaea086cee416479d0a7aaf919220a92b9fb74cca7fdcfb58d58",
                    "dweb:/ipfs/QmPhKYBLix7tiEPq32mVNmFJkkzeTSt2qGQA7LWh8DM3Ru"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IHyperdriveEvents.sol": {
                "keccak256": "0x567b78388802482303910be022299e39a0ef95b4a9a30d6acc4bea0d467fa784",
                "urls": [
                    "bzz-raw://338a9f960049c37d13b6e23e5bc2c9e6005366aa99c95168f57f170ef2a4bcfa",
                    "dweb:/ipfs/QmaeAwacrvMgJGqrKDSXZkYNYRJ5FvirYFpY3xjbCbJTF9"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IHyperdriveRead.sol": {
                "keccak256": "0xfbe341a751b577daa735f836ae9e213b23fffecfb1b7512e4faf3d7807f5b045",
                "urls": [
                    "bzz-raw://78ba0c247e48f642f44c30d7771bd752a5fe8bd4a6c10f849f1ad66804149c86",
                    "dweb:/ipfs/QmXtSLfErEvA8wqMzXDdqNU9TRMVVgoMibmFSDRJCypi6j"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IHyperdriveTargetDeployer.sol": {
                "keccak256": "0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205",
                "urls": [
                    "bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed",
                    "dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IMultiToken.sol": {
                "keccak256": "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f",
                "urls": [
                    "bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7",
                    "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IMultiTokenCore.sol": {
                "keccak256": "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501",
                "urls": [
                    "bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae",
                    "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IMultiTokenEvents.sol": {
                "keccak256": "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb",
                "urls": [
                    "bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222",
                    "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                "keccak256": "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca",
                "urls": [
                    "bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3",
                    "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IMultiTokenRead.sol": {
                "keccak256": "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0",
                "urls": [
                    "bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11",
                    "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/interfaces/IRocketTokenRETH.sol": {
                "keccak256": "0x5796efb852a2ddbd07325f14230c90bf86b9229be421d0dda7e73748a786b7a9",
                "urls": [
                    "bzz-raw://3cc5ed3f01c7a6ece0bea2a85c1d4bd75e1b1e58caed8f02688e7df94f12e79f",
                    "dweb:/ipfs/QmPpEbox2jwfjZScm3TGywPgi6UWHzproRGZmbCYBg2jy5"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/libraries/Constants.sol": {
                "keccak256": "0xcf133c1d2db33dd318a51f8db58aa188225dd4383499cf82aa35bb49a678e30d",
                "urls": [
                    "bzz-raw://bdfefbcdf520ad8790372e66571a9f0782886e1d754dc83c834b98a19f450418",
                    "dweb:/ipfs/QmdVcLsnb29dUJT4GVTWgEmuExEZ1wVhQ9KAJ5pwNTh6WU"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/libraries/FixedPointMath.sol": {
                "keccak256": "0x44e018888d5a9fe0c3e44d9d814879d8f0c3adb78154edc98ba07da86b976f5a",
                "urls": [
                    "bzz-raw://5e3990bc86aaa8b4eb4b948ed3a26f0b018f1422c6470a00d146aa69e599a90d",
                    "dweb:/ipfs/QmWg9hKoQK1po8ZxRC4xrSWePtoJhgndkHXmwLCpCtwAUu"
                ],
                "license": "Apache-2.0"
            },
            "contracts/src/libraries/SafeCast.sol": {
                "keccak256": "0xa15878749f26b198b59e039cf814143b141698064d341cd8b88cb4a04491551c",
                "urls": [
                    "bzz-raw://b3fdd810b779630fce33fa7d2bfc17d6cca1bd3d646e5c702d09fd277167fde4",
                    "dweb:/ipfs/QmW8C19uY5WLkVQfqFRsSU5NtuQDgoqt4jBoMhvuJ7kMn2"
                ],
                "license": "Apache-2.0"
            },
            "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
                "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
                "urls": [
                    "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
                    "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
                "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
                "urls": [
                    "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
                    "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
                "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
                "urls": [
                    "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
                    "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
                "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
                "urls": [
                    "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
                    "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
                "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
                "urls": [
                    "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
                    "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
                "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
                "urls": [
                    "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
                    "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
                "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
                "urls": [
                    "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
                    "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
                "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
                "urls": [
                    "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
                    "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "ast": {
        "absolutePath": "contracts/src/deployers/reth/RETHHyperdriveDeployerCoordinator.sol",
        "id": 3039,
        "exportedSymbols": {
            "ERC20": [
                70857
            ],
            "ETH": [
                18015
            ],
            "FixedPointMath": [
                18822
            ],
            "HyperdriveDeployerCoordinator": [
                1039
            ],
            "IHyperdrive": [
                10351
            ],
            "IHyperdriveDeployerCoordinator": [
                10684
            ],
            "IRocketTokenRETH": [
                12088
            ],
            "ONE": [
                18039
            ],
            "RETHHyperdriveDeployerCoordinator": [
                3038
            ],
            "SafeERC20": [
                71287
            ]
        },
        "nodeType": "SourceUnit",
        "src": "39:6086:23",
        "nodes": [
            {
                "id": 2810,
                "nodeType": "PragmaDirective",
                "src": "39:23:23",
                "nodes": [],
                "literals": [
                    "solidity",
                    "0.8",
                    ".20"
                ]
            },
            {
                "id": 2812,
                "nodeType": "ImportDirective",
                "src": "64:59:23",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
                "file": "openzeppelin/token/ERC20/ERC20.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 3039,
                "sourceUnit": 70858,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2811,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70857,
                            "src": "73:5:23",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 2814,
                "nodeType": "ImportDirective",
                "src": "124:73:23",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                "file": "openzeppelin/token/ERC20/utils/SafeERC20.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 3039,
                "sourceUnit": 71288,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2813,
                            "name": "SafeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71287,
                            "src": "133:9:23",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 2816,
                "nodeType": "ImportDirective",
                "src": "198:63:23",
                "nodes": [],
                "absolutePath": "contracts/src/interfaces/IHyperdrive.sol",
                "file": "../../interfaces/IHyperdrive.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 3039,
                "sourceUnit": 10352,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2815,
                            "name": "IHyperdrive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10351,
                            "src": "207:11:23",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 2818,
                "nodeType": "ImportDirective",
                "src": "262:101:23",
                "nodes": [],
                "absolutePath": "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol",
                "file": "../../interfaces/IHyperdriveDeployerCoordinator.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 3039,
                "sourceUnit": 10685,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2817,
                            "name": "IHyperdriveDeployerCoordinator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10684,
                            "src": "271:30:23",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 2820,
                "nodeType": "ImportDirective",
                "src": "364:73:23",
                "nodes": [],
                "absolutePath": "contracts/src/interfaces/IRocketTokenRETH.sol",
                "file": "../../interfaces/IRocketTokenRETH.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 3039,
                "sourceUnit": 12089,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2819,
                            "name": "IRocketTokenRETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12088,
                            "src": "373:16:23",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 2822,
                "nodeType": "ImportDirective",
                "src": "438:52:23",
                "nodes": [],
                "absolutePath": "contracts/src/libraries/Constants.sol",
                "file": "../../libraries/Constants.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 3039,
                "sourceUnit": 18016,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2821,
                            "name": "ETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18015,
                            "src": "447:3:23",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 2825,
                "nodeType": "ImportDirective",
                "src": "491:73:23",
                "nodes": [],
                "absolutePath": "contracts/src/libraries/FixedPointMath.sol",
                "file": "../../libraries/FixedPointMath.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 3039,
                "sourceUnit": 18823,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2823,
                            "name": "FixedPointMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18822,
                            "src": "500:14:23",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    },
                    {
                        "foreign": {
                            "id": 2824,
                            "name": "ONE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18039,
                            "src": "516:3:23",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 2827,
                "nodeType": "ImportDirective",
                "src": "565:85:23",
                "nodes": [],
                "absolutePath": "contracts/src/deployers/HyperdriveDeployerCoordinator.sol",
                "file": "../HyperdriveDeployerCoordinator.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 3039,
                "sourceUnit": 1040,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2826,
                            "name": "HyperdriveDeployerCoordinator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1039,
                            "src": "574:29:23",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 3038,
                "nodeType": "ContractDefinition",
                "src": "1014:5110:23",
                "nodes": [
                    {
                        "id": 2834,
                        "nodeType": "UsingForDirective",
                        "src": "1096:26:23",
                        "nodes": [],
                        "global": false,
                        "libraryName": {
                            "id": 2831,
                            "name": "SafeERC20",
                            "nameLocations": [
                                "1102:9:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 71287,
                            "src": "1102:9:23"
                        },
                        "typeName": {
                            "id": 2833,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 2832,
                                "name": "ERC20",
                                "nameLocations": [
                                    "1116:5:23"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 70857,
                                "src": "1116:5:23"
                            },
                            "referencedDeclaration": 70857,
                            "src": "1116:5:23",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$70857",
                                "typeString": "contract ERC20"
                            }
                        }
                    },
                    {
                        "id": 2837,
                        "nodeType": "UsingForDirective",
                        "src": "1127:33:23",
                        "nodes": [],
                        "global": false,
                        "libraryName": {
                            "id": 2835,
                            "name": "FixedPointMath",
                            "nameLocations": [
                                "1133:14:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 18822,
                            "src": "1133:14:23"
                        },
                        "typeName": {
                            "id": 2836,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1152:7:23",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        }
                    },
                    {
                        "id": 2841,
                        "nodeType": "VariableDeclaration",
                        "src": "1211:51:23",
                        "nodes": [],
                        "constant": false,
                        "documentation": {
                            "id": 2838,
                            "nodeType": "StructuredDocumentation",
                            "src": "1166:40:23",
                            "text": "@dev The Rocket Token RETH contract."
                        },
                        "mutability": "immutable",
                        "name": "rocketTokenReth",
                        "nameLocation": "1247:15:23",
                        "scope": 3038,
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                            "typeString": "contract IRocketTokenRETH"
                        },
                        "typeName": {
                            "id": 2840,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 2839,
                                "name": "IRocketTokenRETH",
                                "nameLocations": [
                                    "1211:16:23"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 12088,
                                "src": "1211:16:23"
                            },
                            "referencedDeclaration": 12088,
                            "src": "1211:16:23",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                "typeString": "contract IRocketTokenRETH"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "id": 2876,
                        "nodeType": "FunctionDefinition",
                        "src": "1779:590:23",
                        "nodes": [],
                        "body": {
                            "id": 2875,
                            "nodeType": "Block",
                            "src": "2318:51:23",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "id": 2873,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 2871,
                                            "name": "rocketTokenReth",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2841,
                                            "src": "2328:15:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                                "typeString": "contract IRocketTokenRETH"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 2872,
                                            "name": "_rocketTokenReth",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2859,
                                            "src": "2346:16:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                                "typeString": "contract IRocketTokenRETH"
                                            }
                                        },
                                        "src": "2328:34:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                            "typeString": "contract IRocketTokenRETH"
                                        }
                                    },
                                    "id": 2874,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2328:34:23"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 2842,
                            "nodeType": "StructuredDocumentation",
                            "src": "1269:505:23",
                            "text": "@notice Instantiates the deployer coordinator.\n @param _factory The factory that this deployer will be registered with.\n @param _coreDeployer The core deployer.\n @param _target0Deployer The target0 deployer.\n @param _target1Deployer The target1 deployer.\n @param _target2Deployer The target2 deployer.\n @param _target3Deployer The target3 deployer.\n @param _target4Deployer The target4 deployer.\n @param _rocketTokenReth The rETH token contract."
                        },
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 2862,
                                        "name": "_factory",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2844,
                                        "src": "2118:8:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 2863,
                                        "name": "_coreDeployer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2846,
                                        "src": "2140:13:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 2864,
                                        "name": "_target0Deployer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2848,
                                        "src": "2167:16:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 2865,
                                        "name": "_target1Deployer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2850,
                                        "src": "2197:16:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 2866,
                                        "name": "_target2Deployer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2852,
                                        "src": "2227:16:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 2867,
                                        "name": "_target3Deployer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2854,
                                        "src": "2257:16:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 2868,
                                        "name": "_target4Deployer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2856,
                                        "src": "2287:16:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 2869,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 2861,
                                    "name": "HyperdriveDeployerCoordinator",
                                    "nameLocations": [
                                        "2075:29:23"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1039,
                                    "src": "2075:29:23"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2075:238:23"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "parameters": {
                            "id": 2860,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 2844,
                                    "mutability": "mutable",
                                    "name": "_factory",
                                    "nameLocation": "1808:8:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2876,
                                    "src": "1800:16:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 2843,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1800:7:23",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2846,
                                    "mutability": "mutable",
                                    "name": "_coreDeployer",
                                    "nameLocation": "1834:13:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2876,
                                    "src": "1826:21:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 2845,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1826:7:23",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2848,
                                    "mutability": "mutable",
                                    "name": "_target0Deployer",
                                    "nameLocation": "1865:16:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2876,
                                    "src": "1857:24:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 2847,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1857:7:23",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2850,
                                    "mutability": "mutable",
                                    "name": "_target1Deployer",
                                    "nameLocation": "1899:16:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2876,
                                    "src": "1891:24:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 2849,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1891:7:23",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2852,
                                    "mutability": "mutable",
                                    "name": "_target2Deployer",
                                    "nameLocation": "1933:16:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2876,
                                    "src": "1925:24:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 2851,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1925:7:23",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2854,
                                    "mutability": "mutable",
                                    "name": "_target3Deployer",
                                    "nameLocation": "1967:16:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2876,
                                    "src": "1959:24:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 2853,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1959:7:23",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2856,
                                    "mutability": "mutable",
                                    "name": "_target4Deployer",
                                    "nameLocation": "2001:16:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2876,
                                    "src": "1993:24:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 2855,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1993:7:23",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2859,
                                    "mutability": "mutable",
                                    "name": "_rocketTokenReth",
                                    "nameLocation": "2044:16:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2876,
                                    "src": "2027:33:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                        "typeString": "contract IRocketTokenRETH"
                                    },
                                    "typeName": {
                                        "id": 2858,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 2857,
                                            "name": "IRocketTokenRETH",
                                            "nameLocations": [
                                                "2027:16:23"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 12088,
                                            "src": "2027:16:23"
                                        },
                                        "referencedDeclaration": 12088,
                                        "src": "2027:16:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                            "typeString": "contract IRocketTokenRETH"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1790:276:23"
                        },
                        "returnParameters": {
                            "id": 2870,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2318:0:23"
                        },
                        "scope": 3038,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 2934,
                        "nodeType": "FunctionDefinition",
                        "src": "2999:880:23",
                        "nodes": [],
                        "body": {
                            "id": 2933,
                            "nodeType": "Block",
                            "src": "3199:680:23",
                            "nodes": [],
                            "statements": [
                                {
                                    "condition": {
                                        "expression": {
                                            "id": 2893,
                                            "name": "_options",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2887,
                                            "src": "3342:8:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Options_$10210_memory_ptr",
                                                "typeString": "struct IHyperdrive.Options memory"
                                            }
                                        },
                                        "id": 2894,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3351:6:23",
                                        "memberName": "asBase",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10206,
                                        "src": "3342:15:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 2901,
                                    "nodeType": "IfStatement",
                                    "src": "3338:83:23",
                                    "trueBody": {
                                        "id": 2900,
                                        "nodeType": "Block",
                                        "src": "3359:62:23",
                                        "statements": [
                                            {
                                                "errorCall": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 2895,
                                                            "name": "IHyperdrive",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 10351,
                                                            "src": "3380:11:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$10351_$",
                                                                "typeString": "type(contract IHyperdrive)"
                                                            }
                                                        },
                                                        "id": 2897,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "3392:16:23",
                                                        "memberName": "UnsupportedToken",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 10317,
                                                        "src": "3380:28:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                            "typeString": "function () pure"
                                                        }
                                                    },
                                                    "id": 2898,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "3380:30:23",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 2899,
                                                "nodeType": "RevertStatement",
                                                "src": "3373:37:23"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 2909,
                                                "name": "_lp",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2882,
                                                "src": "3593:3:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 2912,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -28,
                                                        "src": "3618:4:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_RETHHyperdriveDeployerCoordinator_$3038",
                                                            "typeString": "contract RETHHyperdriveDeployerCoordinator"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_RETHHyperdriveDeployerCoordinator_$3038",
                                                            "typeString": "contract RETHHyperdriveDeployerCoordinator"
                                                        }
                                                    ],
                                                    "id": 2911,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3610:7:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 2910,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3610:7:23",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 2913,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3610:13:23",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 2914,
                                                "name": "_contribution",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2884,
                                                "src": "3637:13:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 2905,
                                                                "name": "rocketTokenReth",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2841,
                                                                "src": "3545:15:23",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                                                    "typeString": "contract IRocketTokenRETH"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                                                    "typeString": "contract IRocketTokenRETH"
                                                                }
                                                            ],
                                                            "id": 2904,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "3537:7:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 2903,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "3537:7:23",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 2906,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3537:24:23",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 2902,
                                                    "name": "ERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 70857,
                                                    "src": "3531:5:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$70857_$",
                                                        "typeString": "type(contract ERC20)"
                                                    }
                                                },
                                                "id": 2907,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3531:31:23",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_ERC20_$70857",
                                                    "typeString": "contract ERC20"
                                                }
                                            },
                                            "id": 2908,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3563:16:23",
                                            "memberName": "safeTransferFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 71074,
                                            "src": "3531:48:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$70935_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$70935_$",
                                                "typeString": "function (contract IERC20,address,address,uint256)"
                                            }
                                        },
                                        "id": 2915,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3531:129:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 2916,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3531:129:23"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 2926,
                                                        "name": "_hyperdrive",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2880,
                                                        "src": "3736:11:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_IHyperdrive_$10351",
                                                            "typeString": "contract IHyperdrive"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_IHyperdrive_$10351",
                                                            "typeString": "contract IHyperdrive"
                                                        }
                                                    ],
                                                    "id": 2925,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3728:7:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 2924,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3728:7:23",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 2927,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3728:20:23",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 2928,
                                                "name": "_contribution",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2884,
                                                "src": "3762:13:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "arguments": [
                                                            {
                                                                "id": 2920,
                                                                "name": "rocketTokenReth",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 2841,
                                                                "src": "3684:15:23",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                                                    "typeString": "contract IRocketTokenRETH"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                                                    "typeString": "contract IRocketTokenRETH"
                                                                }
                                                            ],
                                                            "id": 2919,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "lValueRequested": false,
                                                            "nodeType": "ElementaryTypeNameExpression",
                                                            "src": "3676:7:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_address_$",
                                                                "typeString": "type(address)"
                                                            },
                                                            "typeName": {
                                                                "id": 2918,
                                                                "name": "address",
                                                                "nodeType": "ElementaryTypeName",
                                                                "src": "3676:7:23",
                                                                "typeDescriptions": {}
                                                            }
                                                        },
                                                        "id": 2921,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "typeConversion",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "3676:24:23",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 2917,
                                                    "name": "ERC20",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 70857,
                                                    "src": "3670:5:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_ERC20_$70857_$",
                                                        "typeString": "type(contract ERC20)"
                                                    }
                                                },
                                                "id": 2922,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3670:31:23",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_ERC20_$70857",
                                                    "typeString": "contract ERC20"
                                                }
                                            },
                                            "id": 2923,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3702:12:23",
                                            "memberName": "forceApprove",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 71195,
                                            "src": "3670:44:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$70935_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$70935_$",
                                                "typeString": "function (contract IERC20,address,uint256)"
                                            }
                                        },
                                        "id": 2929,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3670:115:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 2930,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3670:115:23"
                                },
                                {
                                    "expression": {
                                        "hexValue": "30",
                                        "id": 2931,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3871:1:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                    },
                                    "functionReturnParameters": 2892,
                                    "id": 2932,
                                    "nodeType": "Return",
                                    "src": "3864:8:23"
                                }
                            ]
                        },
                        "baseFunctions": [
                            841
                        ],
                        "documentation": {
                            "id": 2877,
                            "nodeType": "StructuredDocumentation",
                            "src": "2375:619:23",
                            "text": "@dev Prepares the coordinator for initialization by drawing funds from\n      the LP, if necessary.\n @param _hyperdrive The Hyperdrive instance that is being initialized.\n @param _lp The LP that is initializing the pool.\n @param _contribution The amount of capital to supply. The units of this\n        quantity are either base or vault shares, depending on the value\n        of `_options.asBase`.\n @param _options The options that configure how the initialization is\n        settled.\n @return The value that should be sent in the initialize transaction."
                        },
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_prepareInitialize",
                        "nameLocation": "3008:18:23",
                        "overrides": {
                            "id": 2889,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "3172:8:23"
                        },
                        "parameters": {
                            "id": 2888,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 2880,
                                    "mutability": "mutable",
                                    "name": "_hyperdrive",
                                    "nameLocation": "3048:11:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2934,
                                    "src": "3036:23:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IHyperdrive_$10351",
                                        "typeString": "contract IHyperdrive"
                                    },
                                    "typeName": {
                                        "id": 2879,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 2878,
                                            "name": "IHyperdrive",
                                            "nameLocations": [
                                                "3036:11:23"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 10351,
                                            "src": "3036:11:23"
                                        },
                                        "referencedDeclaration": 10351,
                                        "src": "3036:11:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IHyperdrive_$10351",
                                            "typeString": "contract IHyperdrive"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2882,
                                    "mutability": "mutable",
                                    "name": "_lp",
                                    "nameLocation": "3077:3:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2934,
                                    "src": "3069:11:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 2881,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3069:7:23",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2884,
                                    "mutability": "mutable",
                                    "name": "_contribution",
                                    "nameLocation": "3098:13:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2934,
                                    "src": "3090:21:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 2883,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3090:7:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 2887,
                                    "mutability": "mutable",
                                    "name": "_options",
                                    "nameLocation": "3148:8:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2934,
                                    "src": "3121:35:23",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Options_$10210_memory_ptr",
                                        "typeString": "struct IHyperdrive.Options"
                                    },
                                    "typeName": {
                                        "id": 2886,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 2885,
                                            "name": "IHyperdrive.Options",
                                            "nameLocations": [
                                                "3121:11:23",
                                                "3133:7:23"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 10210,
                                            "src": "3121:19:23"
                                        },
                                        "referencedDeclaration": 10210,
                                        "src": "3121:19:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Options_$10210_storage_ptr",
                                            "typeString": "struct IHyperdrive.Options"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3026:136:23"
                        },
                        "returnParameters": {
                            "id": 2892,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 2891,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 2934,
                                    "src": "3190:7:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 2890,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3190:7:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3189:9:23"
                        },
                        "scope": 3038,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "id": 2951,
                        "nodeType": "FunctionDefinition",
                        "src": "3963:145:23",
                        "nodes": [],
                        "body": {
                            "id": 2950,
                            "nodeType": "Block",
                            "src": "4016:92:23",
                            "nodes": [],
                            "statements": [
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 2942,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 2939,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "4030:3:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 2940,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4034:5:23",
                                            "memberName": "value",
                                            "nodeType": "MemberAccess",
                                            "src": "4030:9:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 2941,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4043:1:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "4030:14:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 2949,
                                    "nodeType": "IfStatement",
                                    "src": "4026:76:23",
                                    "trueBody": {
                                        "id": 2948,
                                        "nodeType": "Block",
                                        "src": "4046:56:23",
                                        "statements": [
                                            {
                                                "errorCall": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 2943,
                                                            "name": "IHyperdrive",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 10351,
                                                            "src": "4067:11:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IHyperdrive_$10351_$",
                                                                "typeString": "type(contract IHyperdrive)"
                                                            }
                                                        },
                                                        "id": 2945,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "4079:10:23",
                                                        "memberName": "NotPayable",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 10270,
                                                        "src": "4067:22:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                            "typeString": "function () pure"
                                                        }
                                                    },
                                                    "id": 2946,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4067:24:23",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 2947,
                                                "nodeType": "RevertStatement",
                                                "src": "4060:31:23"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "baseFunctions": [
                            845
                        ],
                        "documentation": {
                            "id": 2935,
                            "nodeType": "StructuredDocumentation",
                            "src": "3885:73:23",
                            "text": "@dev Disallows the contract to receive ether, when opening positions."
                        },
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_checkMessageValue",
                        "nameLocation": "3972:18:23",
                        "overrides": {
                            "id": 2937,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4007:8:23"
                        },
                        "parameters": {
                            "id": 2936,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3990:2:23"
                        },
                        "returnParameters": {
                            "id": 2938,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4016:0:23"
                        },
                        "scope": 3038,
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "id": 3019,
                        "nodeType": "FunctionDefinition",
                        "src": "4266:1397:23",
                        "nodes": [],
                        "body": {
                            "id": 3018,
                            "nodeType": "Block",
                            "src": "4380:1283:23",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 2962,
                                                "name": "_deployConfig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2955,
                                                "src": "4452:13:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_PoolDeployConfig_$10108_memory_ptr",
                                                    "typeString": "struct IHyperdrive.PoolDeployConfig memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_struct$_PoolDeployConfig_$10108_memory_ptr",
                                                    "typeString": "struct IHyperdrive.PoolDeployConfig memory"
                                                }
                                            ],
                                            "expression": {
                                                "id": 2959,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -25,
                                                "src": "4429:5:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_RETHHyperdriveDeployerCoordinator_$3038_$",
                                                    "typeString": "type(contract super RETHHyperdriveDeployerCoordinator)"
                                                }
                                            },
                                            "id": 2961,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "4435:16:23",
                                            "memberName": "_checkPoolConfig",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 925,
                                            "src": "4429:22:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_struct$_PoolDeployConfig_$10108_memory_ptr_$returns$__$",
                                                "typeString": "function (struct IHyperdrive.PoolDeployConfig memory) view"
                                            }
                                        },
                                        "id": 2963,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4429:37:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 2964,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4429:37:23"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 2971,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [
                                                {
                                                    "expression": {
                                                        "id": 2967,
                                                        "name": "_deployConfig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2955,
                                                        "src": "4559:13:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_PoolDeployConfig_$10108_memory_ptr",
                                                            "typeString": "struct IHyperdrive.PoolDeployConfig memory"
                                                        }
                                                    },
                                                    "id": 2968,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4573:9:23",
                                                    "memberName": "baseToken",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 10069,
                                                    "src": "4559:23:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$9666",
                                                        "typeString": "contract IERC20"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_IERC20_$9666",
                                                        "typeString": "contract IERC20"
                                                    }
                                                ],
                                                "id": 2966,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4551:7:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 2965,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "4551:7:23",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 2969,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4551:32:23",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "id": 2970,
                                            "name": "ETH",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 18015,
                                            "src": "4587:3:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "4551:39:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 2978,
                                    "nodeType": "IfStatement",
                                    "src": "4547:126:23",
                                    "trueBody": {
                                        "id": 2977,
                                        "nodeType": "Block",
                                        "src": "4592:81:23",
                                        "statements": [
                                            {
                                                "errorCall": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 2972,
                                                            "name": "IHyperdriveDeployerCoordinator",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 10684,
                                                            "src": "4613:30:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10684_$",
                                                                "typeString": "type(contract IHyperdriveDeployerCoordinator)"
                                                            }
                                                        },
                                                        "id": 2974,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "4644:16:23",
                                                        "memberName": "InvalidBaseToken",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 10595,
                                                        "src": "4613:47:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                            "typeString": "function () pure"
                                                        }
                                                    },
                                                    "id": 2975,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4613:49:23",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 2976,
                                                "nodeType": "RevertStatement",
                                                "src": "4606:56:23"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 2988,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [
                                                {
                                                    "expression": {
                                                        "id": 2981,
                                                        "name": "_deployConfig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2955,
                                                        "src": "4786:13:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_PoolDeployConfig_$10108_memory_ptr",
                                                            "typeString": "struct IHyperdrive.PoolDeployConfig memory"
                                                        }
                                                    },
                                                    "id": 2982,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "4800:16:23",
                                                    "memberName": "vaultSharesToken",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 10073,
                                                    "src": "4786:30:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$9666",
                                                        "typeString": "contract IERC20"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_IERC20_$9666",
                                                        "typeString": "contract IERC20"
                                                    }
                                                ],
                                                "id": 2980,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4778:7:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 2979,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "4778:7:23",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 2983,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4778:39:23",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "id": 2986,
                                                    "name": "rocketTokenReth",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2841,
                                                    "src": "4829:15:23",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                                        "typeString": "contract IRocketTokenRETH"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                                        "typeString": "contract IRocketTokenRETH"
                                                    }
                                                ],
                                                "id": 2985,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "4821:7:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 2984,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "4821:7:23",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 2987,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4821:24:23",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "4778:67:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 2995,
                                    "nodeType": "IfStatement",
                                    "src": "4761:183:23",
                                    "trueBody": {
                                        "id": 2994,
                                        "nodeType": "Block",
                                        "src": "4856:88:23",
                                        "statements": [
                                            {
                                                "errorCall": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 2989,
                                                            "name": "IHyperdriveDeployerCoordinator",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 10684,
                                                            "src": "4877:30:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10684_$",
                                                                "typeString": "type(contract IHyperdriveDeployerCoordinator)"
                                                            }
                                                        },
                                                        "id": 2991,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "4908:23:23",
                                                        "memberName": "InvalidVaultSharesToken",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 10598,
                                                        "src": "4877:54:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                            "typeString": "function () pure"
                                                        }
                                                    },
                                                    "id": 2992,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "4877:56:23",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 2993,
                                                "nodeType": "RevertStatement",
                                                "src": "4870:63:23"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 2999,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 2996,
                                                "name": "_deployConfig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2955,
                                                "src": "5206:13:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_PoolDeployConfig_$10108_memory_ptr",
                                                    "typeString": "struct IHyperdrive.PoolDeployConfig memory"
                                                }
                                            },
                                            "id": 2997,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5220:20:23",
                                            "memberName": "minimumShareReserves",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10082,
                                            "src": "5206:34:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "hexValue": "31653135",
                                            "id": 2998,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5244:4:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000"
                                            },
                                            "value": "1e15"
                                        },
                                        "src": "5206:42:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 3006,
                                    "nodeType": "IfStatement",
                                    "src": "5202:140:23",
                                    "trueBody": {
                                        "id": 3005,
                                        "nodeType": "Block",
                                        "src": "5250:92:23",
                                        "statements": [
                                            {
                                                "errorCall": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 3000,
                                                            "name": "IHyperdriveDeployerCoordinator",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 10684,
                                                            "src": "5271:30:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10684_$",
                                                                "typeString": "type(contract IHyperdriveDeployerCoordinator)"
                                                            }
                                                        },
                                                        "id": 3002,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "5302:27:23",
                                                        "memberName": "InvalidMinimumShareReserves",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 10607,
                                                        "src": "5271:58:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                            "typeString": "function () pure"
                                                        }
                                                    },
                                                    "id": 3003,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "5271:60:23",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 3004,
                                                "nodeType": "RevertStatement",
                                                "src": "5264:67:23"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 3010,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "expression": {
                                                "id": 3007,
                                                "name": "_deployConfig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2955,
                                                "src": "5496:13:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_PoolDeployConfig_$10108_memory_ptr",
                                                    "typeString": "struct IHyperdrive.PoolDeployConfig memory"
                                                }
                                            },
                                            "id": 3008,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "5510:24:23",
                                            "memberName": "minimumTransactionAmount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 10085,
                                            "src": "5496:38:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                            "hexValue": "31653135",
                                            "id": 3009,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5538:4:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000"
                                            },
                                            "value": "1e15"
                                        },
                                        "src": "5496:46:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 3017,
                                    "nodeType": "IfStatement",
                                    "src": "5492:165:23",
                                    "trueBody": {
                                        "id": 3016,
                                        "nodeType": "Block",
                                        "src": "5544:113:23",
                                        "statements": [
                                            {
                                                "errorCall": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "expression": {
                                                            "id": 3011,
                                                            "name": "IHyperdriveDeployerCoordinator",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 10684,
                                                            "src": "5565:30:23",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$10684_$",
                                                                "typeString": "type(contract IHyperdriveDeployerCoordinator)"
                                                            }
                                                        },
                                                        "id": 3013,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "5613:31:23",
                                                        "memberName": "InvalidMinimumTransactionAmount",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 10610,
                                                        "src": "5565:79:23",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                                            "typeString": "function () pure"
                                                        }
                                                    },
                                                    "id": 3014,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "5565:81:23",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 3015,
                                                "nodeType": "RevertStatement",
                                                "src": "5558:88:23"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "baseFunctions": [
                            925
                        ],
                        "documentation": {
                            "id": 2952,
                            "nodeType": "StructuredDocumentation",
                            "src": "4114:147:23",
                            "text": "@notice Checks the pool configuration to ensure that it is valid.\n @param _deployConfig The deploy configuration of the Hyperdrive pool."
                        },
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_checkPoolConfig",
                        "nameLocation": "4275:16:23",
                        "overrides": {
                            "id": 2957,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "4371:8:23"
                        },
                        "parameters": {
                            "id": 2956,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 2955,
                                    "mutability": "mutable",
                                    "name": "_deployConfig",
                                    "nameLocation": "4337:13:23",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3019,
                                    "src": "4301:49:23",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolDeployConfig_$10108_memory_ptr",
                                        "typeString": "struct IHyperdrive.PoolDeployConfig"
                                    },
                                    "typeName": {
                                        "id": 2954,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 2953,
                                            "name": "IHyperdrive.PoolDeployConfig",
                                            "nameLocations": [
                                                "4301:11:23",
                                                "4313:16:23"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 10108,
                                            "src": "4301:28:23"
                                        },
                                        "referencedDeclaration": 10108,
                                        "src": "4301:28:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_PoolDeployConfig_$10108_storage_ptr",
                                            "typeString": "struct IHyperdrive.PoolDeployConfig"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "4291:65:23"
                        },
                        "returnParameters": {
                            "id": 2958,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "4380:0:23"
                        },
                        "scope": 3038,
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "id": 3037,
                        "nodeType": "FunctionDefinition",
                        "src": "5811:311:23",
                        "nodes": [],
                        "body": {
                            "id": 3036,
                            "nodeType": "Block",
                            "src": "6011:111:23",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 3033,
                                                "name": "ONE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 18039,
                                                "src": "6111:3:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 3031,
                                                "name": "rocketTokenReth",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2841,
                                                "src": "6083:15:23",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IRocketTokenRETH_$12088",
                                                    "typeString": "contract IRocketTokenRETH"
                                                }
                                            },
                                            "id": 3032,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6099:11:23",
                                            "memberName": "getEthValue",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 12047,
                                            "src": "6083:27:23",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256) view external returns (uint256)"
                                            }
                                        },
                                        "id": 3034,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6083:32:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 3030,
                                    "id": 3035,
                                    "nodeType": "Return",
                                    "src": "6076:39:23"
                                }
                            ]
                        },
                        "baseFunctions": [
                            936
                        ],
                        "documentation": {
                            "id": 3020,
                            "nodeType": "StructuredDocumentation",
                            "src": "5669:137:23",
                            "text": "@dev Gets the initial vault share price of the Hyperdrive pool.\n @return The initial vault share price of the Hyperdrive pool."
                        },
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_getInitialVaultSharePrice",
                        "nameLocation": "5820:26:23",
                        "overrides": {
                            "id": 3027,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "5984:8:23"
                        },
                        "parameters": {
                            "id": 3026,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 3023,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3037,
                                    "src": "5856:35:23",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolDeployConfig_$10108_memory_ptr",
                                        "typeString": "struct IHyperdrive.PoolDeployConfig"
                                    },
                                    "typeName": {
                                        "id": 3022,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 3021,
                                            "name": "IHyperdrive.PoolDeployConfig",
                                            "nameLocations": [
                                                "5856:11:23",
                                                "5868:16:23"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 10108,
                                            "src": "5856:28:23"
                                        },
                                        "referencedDeclaration": 10108,
                                        "src": "5856:28:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_PoolDeployConfig_$10108_storage_ptr",
                                            "typeString": "struct IHyperdrive.PoolDeployConfig"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 3025,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3037,
                                    "src": "5930:12:23",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 3024,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5930:5:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "5846:123:23"
                        },
                        "returnParameters": {
                            "id": 3030,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 3029,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3037,
                                    "src": "6002:7:23",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 3028,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6002:7:23",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "6001:9:23"
                        },
                        "scope": 3038,
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "internal"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 2829,
                            "name": "HyperdriveDeployerCoordinator",
                            "nameLocations": [
                                "1060:29:23"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1039,
                            "src": "1060:29:23"
                        },
                        "id": 2830,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1060:29:23"
                    }
                ],
                "canonicalName": "RETHHyperdriveDeployerCoordinator",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 2828,
                    "nodeType": "StructuredDocumentation",
                    "src": "652:362:23",
                    "text": "@author DELV\n @title RETHHyperdriveDeployerCoordinator\n @notice The deployer coordinator for the RETHHyperdrive implementation.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance."
                },
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    3038,
                    1039,
                    10684
                ],
                "name": "RETHHyperdriveDeployerCoordinator",
                "nameLocation": "1023:33:23",
                "scope": 3039,
                "usedErrors": [
                    10270,
                    10317,
                    10577,
                    10580,
                    10583,
                    10586,
                    10589,
                    10592,
                    10595,
                    10598,
                    10601,
                    10604,
                    10607,
                    10610,
                    10613,
                    10616,
                    10619,
                    10622,
                    10625,
                    10628,
                    10631,
                    10634,
                    71014,
                    71295,
                    71300,
                    71303
                ],
                "usedEvents": []
            }
        ],
        "license": "Apache-2.0"
    },
    "id": 23
};
