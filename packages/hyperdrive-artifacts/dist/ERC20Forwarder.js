export const ERC20Forwarder = { "abi": [{ "type": "constructor", "inputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "PERMIT_TYPEHASH", "inputs": [], "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }], "stateMutability": "view" }, { "type": "function", "name": "allowance", "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }, { "name": "spender", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "approve", "inputs": [{ "name": "spender", "type": "address", "internalType": "address" }, { "name": "amount", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }], "stateMutability": "nonpayable" }, { "type": "function", "name": "balanceOf", "inputs": [{ "name": "who", "type": "address", "internalType": "address" }], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "decimals", "inputs": [], "outputs": [{ "name": "", "type": "uint8", "internalType": "uint8" }], "stateMutability": "pure" }, { "type": "function", "name": "domainSeparator", "inputs": [], "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }], "stateMutability": "view" }, { "type": "function", "name": "name", "inputs": [], "outputs": [{ "name": "", "type": "string", "internalType": "string" }], "stateMutability": "view" }, { "type": "function", "name": "nonces", "inputs": [{ "name": "user", "type": "address", "internalType": "address" }], "outputs": [{ "name": "nonce", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "permit", "inputs": [{ "name": "owner", "type": "address", "internalType": "address" }, { "name": "spender", "type": "address", "internalType": "address" }, { "name": "value", "type": "uint256", "internalType": "uint256" }, { "name": "deadline", "type": "uint256", "internalType": "uint256" }, { "name": "v", "type": "uint8", "internalType": "uint8" }, { "name": "r", "type": "bytes32", "internalType": "bytes32" }, { "name": "s", "type": "bytes32", "internalType": "bytes32" }], "outputs": [], "stateMutability": "nonpayable" }, { "type": "function", "name": "symbol", "inputs": [], "outputs": [{ "name": "", "type": "string", "internalType": "string" }], "stateMutability": "view" }, { "type": "function", "name": "token", "inputs": [], "outputs": [{ "name": "", "type": "address", "internalType": "contract IMultiToken" }], "stateMutability": "view" }, { "type": "function", "name": "tokenId", "inputs": [], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "totalSupply", "inputs": [], "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }], "stateMutability": "view" }, { "type": "function", "name": "transfer", "inputs": [{ "name": "recipient", "type": "address", "internalType": "address" }, { "name": "amount", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }], "stateMutability": "nonpayable" }, { "type": "function", "name": "transferFrom", "inputs": [{ "name": "source", "type": "address", "internalType": "address" }, { "name": "recipient", "type": "address", "internalType": "address" }, { "name": "amount", "type": "uint256", "internalType": "uint256" }], "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }], "stateMutability": "nonpayable" }, { "type": "event", "name": "Approval", "inputs": [{ "name": "owner", "type": "address", "indexed": true, "internalType": "address" }, { "name": "spender", "type": "address", "indexed": true, "internalType": "address" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "event", "name": "Transfer", "inputs": [{ "name": "from", "type": "address", "indexed": true, "internalType": "address" }, { "name": "to", "type": "address", "indexed": true, "internalType": "address" }, { "name": "value", "type": "uint256", "indexed": false, "internalType": "uint256" }], "anonymous": false }, { "type": "error", "name": "ExpiredDeadline", "inputs": [] }, { "type": "error", "name": "InvalidSignature", "inputs": [] }, { "type": "error", "name": "RestrictedZeroAddress", "inputs": [] }], "bytecode": { "object": "0x60c060405234801561001057600080fd5b50604080516330075a5d60e11b815281513392839263600eb4ba92600480830193928290030181865afa15801561004b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061006f9190610084565b60a0526001600160a01b0316608052506100be565b6000806040838503121561009757600080fd5b82516001600160a01b03811681146100ae57600080fd5b6020939093015192949293505050565b60805160a051610f9f610168600039600081816101400152818161028c015281816103400152818161043e015281816104e9015281816105fb015281816106b00152818161071f015281816109e40152610b8c015260008181610244015281816102b501528181610386015281816104670152818161053701528181610634015281816106d90152818161076f01528181610a2101528181610b020152610bca0152610f9f6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063d505accf11610066578063d505accf1461020f578063dd62ed3e14610224578063f698da2514610237578063fc0c546a1461023f57600080fd5b806370a08231146101c15780637ecebe00146101d457806395d89b41146101f4578063a9059cbb146101fc57600080fd5b806318160ddd116100d357806318160ddd1461017057806323b872dd1461017857806330adf81f1461018b578063313ce567146101b257600080fd5b806306fdde03146100fa578063095ea7b31461011857806317d70f7c1461013b575b600080fd5b61010261027e565b60405161010f9190610cee565b60405180910390f35b61012b610126366004610d3d565b610331565b604051901515815260200161010f565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161010f565b61016261042f565b61012b610186366004610d67565b6104da565b6101627f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6040516012815260200161010f565b6101626101cf366004610da3565b6105ec565b6101626101e2366004610da3565b60006020819052908152604090205481565b6101026106a1565b61012b61020a366004610d3d565b610710565b61022261021d366004610dc5565b61080a565b005b610162610232366004610e38565b610ad8565b610162610c3c565b6102667f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010f565b604051622b600360e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062ad800c906024015b600060405180830381865afa158015610304573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261032c9190810190610e81565b905090565b6040516313b4b5ab60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b038381166024830152604482018390523360648301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634ed2d6ac90608401600060405180830381600087803b1580156103cc57600080fd5b505af11580156103e0573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906020015b60405180910390a35060015b92915050565b60405163bd85b03960e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bd85b03990602401602060405180830381865afa1580156104b6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c9190610f2e565b604051633912022f60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b0384811660248301528381166044830152606482018390523360848301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e44808bc9060a401600060405180830381600087803b15801561057d57600080fd5b505af1158015610591573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105da91815260200190565b60405180910390a35060019392505050565b604051631b2b776160e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b0382811660248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690633656eec290604401602060405180830381865afa15801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104299190610f2e565b604051634e41a1fb60e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634e41a1fb906024016102e7565b604051633912022f60e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482018190526001600160a01b0384811660448401526064830184905260848301919091526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e44808bc9060a401600060405180830381600087803b1580156107b557600080fd5b505af11580156107c9573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161041d565b8342111561082b5760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b0387166108525760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b03871660009081526020819052604081205490610874610c3c565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960208201526001600160a01b03808d1692820192909252908a1660608201526080810189905260a0810184905260c0810188905260e0016040516020818303038152906040528051906020012060405160200161090d92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015610978573d6000803e3d6000fd5b505050602060405103519050896001600160a01b0316816001600160a01b0316146109b657604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b03808b1660008181526020819052604090819020600187019055516313b4b5ab60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201528b83166024820152604481018b905260648101919091527f000000000000000000000000000000000000000000000000000000000000000090911690634ed2d6ac90608401600060405180830381600087803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b50505050886001600160a01b03168a6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258a604051610ac491815260200190565b60405180910390a350505050505050505050565b60405163e985e9c560e01b81526001600160a01b03838116600483015282811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e985e9c590604401602060405180830381865afa158015610b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6f9190610f47565b15610b7d5750600019610429565b6040516321ff32a960e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b03848116602483015283811660448301527f000000000000000000000000000000000000000000000000000000000000000016906321ff32a990606401602060405180830381865afa158015610c11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c359190610f2e565b9050610429565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b60005b83811015610ce5578181015183820152602001610ccd565b50506000910152565b6020815260008251806020840152610d0d816040850160208701610cca565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610d3857600080fd5b919050565b60008060408385031215610d5057600080fd5b610d5983610d21565b946020939093013593505050565b600080600060608486031215610d7c57600080fd5b610d8584610d21565b9250610d9360208501610d21565b9150604084013590509250925092565b600060208284031215610db557600080fd5b610dbe82610d21565b9392505050565b600080600080600080600060e0888a031215610de057600080fd5b610de988610d21565b9650610df760208901610d21565b95506040880135945060608801359350608088013560ff81168114610e1b57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610e4b57600080fd5b610e5483610d21565b9150610e6260208401610d21565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610e9357600080fd5b815167ffffffffffffffff80821115610eab57600080fd5b818401915084601f830112610ebf57600080fd5b815181811115610ed157610ed1610e6b565b604051601f8201601f19908116603f01168101908382118183101715610ef957610ef9610e6b565b81604052828152876020848701011115610f1257600080fd5b610f23836020830160208801610cca565b979650505050505050565b600060208284031215610f4057600080fd5b5051919050565b600060208284031215610f5957600080fd5b81518015158114610dbe57600080fdfea26469706673582212207258039ff824d28f4da7cc32f9d3373484e3d58ab2672cc25f41326b384ac05c64736f6c63430008140033", "sourceMap": "1092:9513:133:-:0;;;2001:252;;;;;;;;;-1:-1:-1;2220:26:133;;;-1:-1:-1;;;2220:26:133;;;;2121:10;;;;2220:24;;:26;;;;;;;;;;;2121:10;2220:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2201:45;;-1:-1:-1;;;;;2201:45:133;;;-1:-1:-1;1092:9513:133;;14:372:239;114:6;122;175:2;163:9;154:7;150:23;146:32;143:52;;;191:1;188;181:12;143:52;217:16;;-1:-1:-1;;;;;262:31:239;;252:42;;242:70;;308:1;305;298:12;242:70;376:2;361:18;;;;355:25;331:5;;355:25;;-1:-1:-1;;;14:372:239:o;:::-;1092:9513:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "linkReferences": {} }, "deployedBytecode": { "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063d505accf11610066578063d505accf1461020f578063dd62ed3e14610224578063f698da2514610237578063fc0c546a1461023f57600080fd5b806370a08231146101c15780637ecebe00146101d457806395d89b41146101f4578063a9059cbb146101fc57600080fd5b806318160ddd116100d357806318160ddd1461017057806323b872dd1461017857806330adf81f1461018b578063313ce567146101b257600080fd5b806306fdde03146100fa578063095ea7b31461011857806317d70f7c1461013b575b600080fd5b61010261027e565b60405161010f9190610cee565b60405180910390f35b61012b610126366004610d3d565b610331565b604051901515815260200161010f565b6101627f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161010f565b61016261042f565b61012b610186366004610d67565b6104da565b6101627f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6040516012815260200161010f565b6101626101cf366004610da3565b6105ec565b6101626101e2366004610da3565b60006020819052908152604090205481565b6101026106a1565b61012b61020a366004610d3d565b610710565b61022261021d366004610dc5565b61080a565b005b610162610232366004610e38565b610ad8565b610162610c3c565b6102667f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010f565b604051622b600360e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169062ad800c906024015b600060405180830381865afa158015610304573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261032c9190810190610e81565b905090565b6040516313b4b5ab60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b038381166024830152604482018390523360648301526000917f000000000000000000000000000000000000000000000000000000000000000090911690634ed2d6ac90608401600060405180830381600087803b1580156103cc57600080fd5b505af11580156103e0573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906020015b60405180910390a35060015b92915050565b60405163bd85b03960e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bd85b03990602401602060405180830381865afa1580156104b6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c9190610f2e565b604051633912022f60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b0384811660248301528381166044830152606482018390523360848301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e44808bc9060a401600060405180830381600087803b15801561057d57600080fd5b505af1158015610591573d6000803e3d6000fd5b50505050826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105da91815260200190565b60405180910390a35060019392505050565b604051631b2b776160e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b0382811660248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690633656eec290604401602060405180830381865afa15801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104299190610f2e565b604051634e41a1fb60e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634e41a1fb906024016102e7565b604051633912022f60e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015233602482018190526001600160a01b0384811660448401526064830184905260848301919091526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e44808bc9060a401600060405180830381600087803b1580156107b557600080fd5b505af11580156107c9573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161041d565b8342111561082b5760405163f87d927160e01b815260040160405180910390fd5b6001600160a01b0387166108525760405163f0dd15fd60e01b815260040160405180910390fd5b6001600160a01b03871660009081526020819052604081205490610874610c3c565b604080517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960208201526001600160a01b03808d1692820192909252908a1660608201526080810189905260a0810184905260c0810188905260e0016040516020818303038152906040528051906020012060405160200161090d92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015610978573d6000803e3d6000fd5b505050602060405103519050896001600160a01b0316816001600160a01b0316146109b657604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b03808b1660008181526020819052604090819020600187019055516313b4b5ab60e21b81527f000000000000000000000000000000000000000000000000000000000000000060048201528b83166024820152604481018b905260648101919091527f000000000000000000000000000000000000000000000000000000000000000090911690634ed2d6ac90608401600060405180830381600087803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b50505050886001600160a01b03168a6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258a604051610ac491815260200190565b60405180910390a350505050505050505050565b60405163e985e9c560e01b81526001600160a01b03838116600483015282811660248301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e985e9c590604401602060405180830381865afa158015610b4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6f9190610f47565b15610b7d5750600019610429565b6040516321ff32a960e01b81527f000000000000000000000000000000000000000000000000000000000000000060048201526001600160a01b03848116602483015283811660448301527f000000000000000000000000000000000000000000000000000000000000000016906321ff32a990606401602060405180830381865afa158015610c11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c359190610f2e565b9050610429565b60408051808201825260018152603160f81b60209182015281517f2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc681840152466060820152306080808301919091528351808303909101815260a0909101909252815191012090565b60005b83811015610ce5578181015183820152602001610ccd565b50506000910152565b6020815260008251806020840152610d0d816040850160208701610cca565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610d3857600080fd5b919050565b60008060408385031215610d5057600080fd5b610d5983610d21565b946020939093013593505050565b600080600060608486031215610d7c57600080fd5b610d8584610d21565b9250610d9360208501610d21565b9150604084013590509250925092565b600060208284031215610db557600080fd5b610dbe82610d21565b9392505050565b600080600080600080600060e0888a031215610de057600080fd5b610de988610d21565b9650610df760208901610d21565b95506040880135945060608801359350608088013560ff81168114610e1b57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610e4b57600080fd5b610e5483610d21565b9150610e6260208401610d21565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610e9357600080fd5b815167ffffffffffffffff80821115610eab57600080fd5b818401915084601f830112610ebf57600080fd5b815181811115610ed157610ed1610e6b565b604051601f8201601f19908116603f01168101908382118183101715610ef957610ef9610e6b565b81604052828152876020848701011115610f1257600080fd5b610f23836020830160208801610cca565b979650505050505050565b600060208284031215610f4057600080fd5b5051919050565b600060208284031215610f5957600080fd5b81518015158114610dbe57600080fdfea26469706673582212207258039ff824d28f4da7cc32f9d3373484e3d58ab2672cc25f41326b384ac05c64736f6c63430008140033", "sourceMap": "1092:9513:133:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3378:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5920:339;;;;;;:::i;:::-;;:::i;:::-;;;1272:14:239;;1265:22;1247:41;;1235:2;1220:18;5920:339:133;1107:187:239;1332:32:133;;;;;;;;1445:25:239;;;1433:2;1418:18;1332:32:133;1299:177:239;3678:114:133;;;:::i;7429:481::-;;;;;;:::i;:::-;;:::i;1633:167::-;;1683:117;1633:167;;3129:85;;;3205:2;2138:36:239;;2126:2;2111:18;3129:85:133;1996:184:239;4302:126:133;;;;;;:::i;:::-;;:::i;1447:52::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;3962:110;;;:::i;6608:399::-;;;;;;:::i;:::-;;:::i;9069:1534::-;;;;;;:::i;:::-;;:::i;:::-;;4918:496;;;;;;:::i;:::-;;:::i;2518:426::-;;;:::i;1216:34::-;;;;;;;;-1:-1:-1;;;;;3524:32:239;;;3506:51;;3494:2;3479:18;1216:34:133;3339:224:239;3378:106:133;3458:19;;-1:-1:-1;;;3458:19:133;;3469:7;3458:19;;;1445:25:239;3426:13:133;;3458:5;-1:-1:-1;;;;;3458:10:133;;;;1418:18:239;;3458:19:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3458:19:133;;;;;;;;;;;;:::i;:::-;3451:26;;3378:106;:::o;5920:339::-;6067:61;;-1:-1:-1;;;6067:61:133;;6091:7;6067:61;;;4833:25:239;-1:-1:-1;;;;;4932:15:239;;;4912:18;;;4905:43;4964:18;;;4957:34;;;6117:10:133;5007:18:239;;;5000:43;5988:4:133;;6067:5;:23;;;;;;4805:19:239;;6067:61:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6194:37:133;;1445:25:239;;;-1:-1:-1;;;;;6194:37:133;;;-1:-1:-1;6203:10:133;;-1:-1:-1;6194:37:133;;1433:2:239;1418:18;6194:37:133;;;;;;;;-1:-1:-1;6248:4:133;5920:339;;;;;:::o;3678:114::-;3759:26;;-1:-1:-1;;;3759:26:133;;3777:7;3759:26;;;1445:25:239;3733:7:133;;3759:5;-1:-1:-1;;;;;3759:17:133;;;;1418:18:239;;3759:26:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7429:481::-;7637:142;;-1:-1:-1;;;7637:142:133;;7675:7;7637:142;;;5502:25:239;-1:-1:-1;;;;;5601:15:239;;;5581:18;;;5574:43;5653:15;;;5633:18;;;5626:43;5685:18;;;5678:34;;;7759:10:133;5728:19:239;;;5721:44;7550:4:133;;7637:5;:24;;;;;;5474:19:239;;7637:142:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7864:9;-1:-1:-1;;;;;7847:35:133;7856:6;-1:-1:-1;;;;;7847:35:133;;7875:6;7847:35;;;;1445:25:239;;1433:2;1418:18;;1299:177;7847:35:133;;;;;;;;-1:-1:-1;7899:4:133;7429:481;;;;;:::o;4302:126::-;4392:29;;-1:-1:-1;;;4392:29:133;;4408:7;4392:29;;;5950:25:239;-1:-1:-1;;;;;6011:32:239;;;5991:18;;;5984:60;4366:7:133;;4392:5;:15;;;;;;5923:18:239;;4392:29:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3962:110::-;4044:21;;-1:-1:-1;;;4044:21:133;;4057:7;4044:21;;;1445:25:239;4012:13:133;;4044:5;-1:-1:-1;;;;;4044:12:133;;;;1418:18:239;;4044:21:133;1299:177:239;6608:399:133;6726:146;;-1:-1:-1;;;6726:146:133;;6764:7;6726:146;;;5502:25:239;6785:10:133;5581:18:239;;;5574:43;;;-1:-1:-1;;;;;5653:15:239;;;5633:18;;;5626:43;5685:18;;;5678:34;;;5728:19;;;5721:44;;;;6710:4:133;;6726:5;:24;;;;;;5474:19:239;;6726:146:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6940:39:133;;1445:25:239;;;-1:-1:-1;;;;;6940:39:133;;;-1:-1:-1;6949:10:133;;-1:-1:-1;6940:39:133;;1433:2:239;1418:18;6940:39:133;1299:177:239;9069:1534:133;9338:8;9320:15;:26;9316:97;;;9369:33;;-1:-1:-1;;;9369:33:133;;;;;;;;;;;9316:97;-1:-1:-1;;;;;9474:19:133;;9470:96;;9516:39;;-1:-1:-1;;;9516:39:133;;;;;;;;;;;9470:96;-1:-1:-1;;;;;9672:13:133;;9656;9672;;;;;;;;;;;;9801:17;:15;:17::i;:::-;9867:233;;;1683:117;9867:233;;;6342:25:239;-1:-1:-1;;;;;6441:15:239;;;6421:18;;;6414:43;;;;6493:15;;;6473:18;;;6466:43;6525:18;;;6518:34;;;6568:19;;;6561:35;;;6612:19;;;6605:35;;;6314:19;;9867:233:133;;;;;;;;;;;;9836:282;;;;;;9739:393;;;;;;;;-1:-1:-1;;;6909:27:239;;6961:1;6952:11;;6945:27;;;;6997:2;6988:12;;6981:28;7034:2;7025:12;;6651:392;9739:393:133;;;;-1:-1:-1;;9739:393:133;;;;;;;;;9716:426;;9739:393;9716:426;;;;10199:14;10216:30;;;;;;;;;7275:25:239;;;7348:4;7336:17;;7316:18;;;7309:45;;;;7370:18;;;7363:34;;;7413:18;;;7406:34;;;9716:426:133;;-1:-1:-1;10199:14:133;10216:30;;7247:19:239;;10216:30:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10199:47;;10270:5;-1:-1:-1;;;;;10260:15:133;:6;-1:-1:-1;;;;;10260:15:133;;10256:71;;10298:18;;-1:-1:-1;;;10298:18:133;;;;;;;;;;;10256:71;-1:-1:-1;;;;;10403:13:133;;;:6;:13;;;;;;;;;;;;10427:1;10419:9;;10403:25;;10495:55;-1:-1:-1;;;10495:55:133;;10519:7;10495:55;;;4833:25:239;4932:15;;;4912:18;;;4905:43;4964:18;;;4957:34;;;5007:18;;;5000:43;;;;10495:5:133;:23;;;;;;4805:19:239;;10495:55:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10581:7;-1:-1:-1;;;;;10565:31:133;10574:5;-1:-1:-1;;;;;10565:31:133;;10590:5;10565:31;;;;1445:25:239;;1433:2;1418:18;;1299:177;10565:31:133;;;;;;;;9252:1351;;;9069:1534;;;;;;;:::o;4918:496::-;5126:38;;-1:-1:-1;;;5126:38:133;;-1:-1:-1;;;;;7681:15:239;;;5126:38:133;;;7663:34:239;7733:15;;;7713:18;;;7706:43;5023:7:133;;5126:5;:22;;;;;;7598:18:239;;5126:38:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5122:286;;;-1:-1:-1;;;5180:24:133;;5122:286;5349:48;;-1:-1:-1;;;5349:48:133;;5373:7;5349:48;;;8244:25:239;-1:-1:-1;;;;;8343:15:239;;;8323:18;;;8316:43;8395:15;;;8375:18;;;8368:43;5349:5:133;:23;;;;8217:18:239;;5349:48:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5342:55;;;;2518:426;2824:10;;;;;;;;;;;-1:-1:-1;;;2824:10:133;;;;;2631:292;;2663:129;2631:292;;;8653:25:239;2814:21:133;8694:18:239;;;8687:34;2857:13:133;8737:18:239;;;8730:34;2900:4:133;8780:18:239;;;;8773:60;;;;2631:292:133;;;;;;;;;;8625:19:239;;;;2631:292:133;;;2604:333;;;;;;2518:426::o;14:250:239:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:239;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:239;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:239:o;670:173::-;738:20;;-1:-1:-1;;;;;787:31:239;;777:42;;767:70;;833:1;830;823:12;767:70;670:173;;;:::o;848:254::-;916:6;924;977:2;965:9;956:7;952:23;948:32;945:52;;;993:1;990;983:12;945:52;1016:29;1035:9;1016:29;:::i;:::-;1006:39;1092:2;1077:18;;;;1064:32;;-1:-1:-1;;;848:254:239:o;1481:328::-;1558:6;1566;1574;1627:2;1615:9;1606:7;1602:23;1598:32;1595:52;;;1643:1;1640;1633:12;1595:52;1666:29;1685:9;1666:29;:::i;:::-;1656:39;;1714:38;1748:2;1737:9;1733:18;1714:38;:::i;:::-;1704:48;;1799:2;1788:9;1784:18;1771:32;1761:42;;1481:328;;;;;:::o;2185:186::-;2244:6;2297:2;2285:9;2276:7;2272:23;2268:32;2265:52;;;2313:1;2310;2303:12;2265:52;2336:29;2355:9;2336:29;:::i;:::-;2326:39;2185:186;-1:-1:-1;;;2185:186:239:o;2376:693::-;2487:6;2495;2503;2511;2519;2527;2535;2588:3;2576:9;2567:7;2563:23;2559:33;2556:53;;;2605:1;2602;2595:12;2556:53;2628:29;2647:9;2628:29;:::i;:::-;2618:39;;2676:38;2710:2;2699:9;2695:18;2676:38;:::i;:::-;2666:48;;2761:2;2750:9;2746:18;2733:32;2723:42;;2812:2;2801:9;2797:18;2784:32;2774:42;;2866:3;2855:9;2851:19;2838:33;2911:4;2904:5;2900:16;2893:5;2890:27;2880:55;;2931:1;2928;2921:12;2880:55;2376:693;;;;-1:-1:-1;2376:693:239;;;;2954:5;3006:3;2991:19;;2978:33;;-1:-1:-1;3058:3:239;3043:19;;;3030:33;;2376:693;-1:-1:-1;;2376:693:239:o;3074:260::-;3142:6;3150;3203:2;3191:9;3182:7;3178:23;3174:32;3171:52;;;3219:1;3216;3209:12;3171:52;3242:29;3261:9;3242:29;:::i;:::-;3232:39;;3290:38;3324:2;3313:9;3309:18;3290:38;:::i;:::-;3280:48;;3074:260;;;;;:::o;3568:127::-;3629:10;3624:3;3620:20;3617:1;3610:31;3660:4;3657:1;3650:15;3684:4;3681:1;3674:15;3700:897;3780:6;3833:2;3821:9;3812:7;3808:23;3804:32;3801:52;;;3849:1;3846;3839:12;3801:52;3882:9;3876:16;3911:18;3952:2;3944:6;3941:14;3938:34;;;3968:1;3965;3958:12;3938:34;4006:6;3995:9;3991:22;3981:32;;4051:7;4044:4;4040:2;4036:13;4032:27;4022:55;;4073:1;4070;4063:12;4022:55;4102:2;4096:9;4124:2;4120;4117:10;4114:36;;;4130:18;;:::i;:::-;4205:2;4199:9;4173:2;4259:13;;-1:-1:-1;;4255:22:239;;;4279:2;4251:31;4247:40;4235:53;;;4303:18;;;4323:22;;;4300:46;4297:72;;;4349:18;;:::i;:::-;4389:10;4385:2;4378:22;4424:2;4416:6;4409:18;4464:7;4459:2;4454;4450;4446:11;4442:20;4439:33;4436:53;;;4485:1;4482;4475:12;4436:53;4498:68;4563:2;4558;4550:6;4546:15;4541:2;4537;4533:11;4498:68;:::i;:::-;4585:6;3700:897;-1:-1:-1;;;;;;;3700:897:239:o;5054:184::-;5124:6;5177:2;5165:9;5156:7;5152:23;5148:32;5145:52;;;5193:1;5190;5183:12;5145:52;-1:-1:-1;5216:16:239;;5054:184;-1:-1:-1;5054:184:239:o;7760:277::-;7827:6;7880:2;7868:9;7859:7;7855:23;7851:32;7848:52;;;7896:1;7893;7886:12;7848:52;7928:9;7922:16;7981:5;7974:13;7967:21;7960:5;7957:32;7947:60;;8003:1;8000;7993:12", "linkReferences": {}, "immutableReferences": { "23439": [{ "start": 580, "length": 32 }, { "start": 693, "length": 32 }, { "start": 902, "length": 32 }, { "start": 1127, "length": 32 }, { "start": 1335, "length": 32 }, { "start": 1588, "length": 32 }, { "start": 1753, "length": 32 }, { "start": 1903, "length": 32 }, { "start": 2593, "length": 32 }, { "start": 2818, "length": 32 }, { "start": 3018, "length": 32 }], "23442": [{ "start": 320, "length": 32 }, { "start": 652, "length": 32 }, { "start": 832, "length": 32 }, { "start": 1086, "length": 32 }, { "start": 1257, "length": 32 }, { "start": 1531, "length": 32 }, { "start": 1712, "length": 32 }, { "start": 1823, "length": 32 }, { "start": 2532, "length": 32 }, { "start": 2956, "length": 32 }] } }, "methodIdentifiers": { "PERMIT_TYPEHASH()": "30adf81f", "allowance(address,address)": "dd62ed3e", "approve(address,uint256)": "095ea7b3", "balanceOf(address)": "70a08231", "decimals()": "313ce567", "domainSeparator()": "f698da25", "name()": "06fdde03", "nonces(address)": "7ecebe00", "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf", "symbol()": "95d89b41", "token()": "fc0c546a", "tokenId()": "17d70f7c", "totalSupply()": "18160ddd", "transfer(address,uint256)": "a9059cbb", "transferFrom(address,address,uint256)": "23b872dd" }, "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExpiredDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RestrictedZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IMultiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"details\":\"This is a permissionless deployed bridge that is linked to a      MultiToken contract by a create2 deployment validation. With this in      mind, this forwarder MUST be deployed by the right factory in order to      function properly.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account whose tokens would be spent.\",\"spender\":\"The account who might be able to spend tokens.\"},\"returns\":{\"_0\":\"The amount of the owner's tokens the spender can spend.\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount which the spender is allowed to spend, if it is        set to uint256.max it is infinite and will not be reduced by        transfer.\",\"spender\":\"The address which can spend tokens of the caller.\"},\"returns\":{\"_0\":\"True if approval successful, false if not. The contract also         reverts on failure so only true is possible.\"}},\"balanceOf(address)\":{\"params\":{\"who\":\"The owner of the tokens.\"},\"returns\":{\"_0\":\"Returns the user's balance.\"}},\"constructor\":{\"details\":\"To give the contract a constant deploy code hash we call back into      the factory to load info instead of using calldata.\"},\"decimals()\":{\"returns\":{\"_0\":\"The amount of decimals (always 18).\"}},\"domainSeparator()\":{\"returns\":{\"_0\":\"The EIP712 domain separator.\"}},\"name()\":{\"returns\":{\"_0\":\"Returns the token's name.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature for this function follows EIP712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values. Those values are not      supported.\",\"params\":{\"deadline\":\"The timestamp which the signature must be submitted by        to be valid.\",\"owner\":\"The owner of the account which is having the new approval set.\",\"r\":\"The r component of the ECDSA signature.\",\"s\":\"The s component of the ECDSA signature.\",\"spender\":\"The address which will be allowed to spend owner's tokens.\",\"v\":\"Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28.\",\"value\":\"The new allowance value.\"}},\"symbol()\":{\"returns\":{\"_0\":\"Returns the token's symbol.\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"Returns the total supply of this token.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The amount of token to transfer\",\"recipient\":\"The recipient of the token transfer\"},\"returns\":{\"_0\":\"True if transfer successful, false if not. The contract also         reverts on failed transfer so only true is possible.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to be transferred.\",\"recipient\":\"The recipient of the tokens.\",\"source\":\"The source of the tokens to be transferred.\"},\"returns\":{\"_0\":\"Returns true for success false for failure, also reverts on         fail, so will always return true.\"}}},\"title\":\"ERC20Forwarder\",\"version\":1},\"userdoc\":{\"errors\":{\"ExpiredDeadline()\":[{\"notice\":\"Thrown when a permit signature is submitted after its deadline         has expired.\"}],\"InvalidSignature()\":[{\"notice\":\"Thrown when a permit signature doesn't recover to the owner's         address.\"}],\"RestrictedZeroAddress()\":[{\"notice\":\"Thrown when a permit signature recovers to the zero address.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Emitted when an owner changes the approval for a spender.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Emitted when tokens are transferred from one account to another.\"}},\"kind\":\"user\",\"methods\":{\"PERMIT_TYPEHASH()\":{\"notice\":\"The EIP712 typehash for the permit struct used by this contract         to validate permit signatures.\"},\"allowance(address,address)\":{\"notice\":\"Loads the allowance information for an owner spender pair.         If spender is approved for all tokens in the main contract         it will return Max(uint256) otherwise it returns the allowance         the allowance for just this asset.\"},\"approve(address,uint256)\":{\"notice\":\"Sets an approval for just this sub-token for the caller in the         main token.\"},\"balanceOf(address)\":{\"notice\":\"Returns a user's token balance. This is the balance of the user         in the underlying MultiToken sub-token.\"},\"constructor\":{\"notice\":\"Initializes the ERC20 forwarder.\"},\"decimals()\":{\"notice\":\"Returns the decimals for this ERC20 interface. Hyperdrive's         sub-tokens always use 18 decimals.\"},\"domainSeparator()\":{\"notice\":\"Computes the EIP712 domain separator which prevents user signed         messages for this contract to be replayed in other contracts:         https://eips.ethereum.org/EIPS/eip-712.\"},\"name()\":{\"notice\":\"Returns this token's name. This is the name of the underlying         MultiToken sub-token.\"},\"nonces(address)\":{\"notice\":\"A mapping from a user to their nonce for permit signatures.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"This function allows a caller who is not the owner of an account         to execute the functionality of 'approve' with the owners         signature.\"},\"symbol()\":{\"notice\":\"Returns this token's symbol. This is the symbol of the         underlying MultiToken sub-token.\"},\"token()\":{\"notice\":\"The target token ID that this ERC20 interface forwards to.\"},\"tokenId()\":{\"notice\":\"The target token ID that this ERC20 interface forwards to.\"},\"totalSupply()\":{\"notice\":\"Returns this token's total supply. This is the total supply         of the underlying MultiToken sub-token.\"},\"transfer(address,uint256)\":{\"notice\":\"Forwards a call to transfer from the msg.sender to the recipient.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Forwards a call to transferFrom to move funds from an owner to a         recipient.\"}},\"notice\":\"This ERC20Forwarder serves as an ERC20 interface for sub-tokens         in a MultiToken contract. This makes it possible for sub-tokens to         be used as if they were ERC20 tokens in integrating protocols.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/token/ERC20Forwarder.sol\":\"ERC20Forwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IERC20Forwarder.sol\":{\"keccak256\":\"0xeb9152fad7b2431ab4e9f0db4945462104825ac0ca2541319fafb1ea3e726592\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab76c60cc144e299295e24f00f4e642ab093eab7c0157de6201b96cd2097892e\",\"dweb:/ipfs/QmYLiPgwNvZgUKzuLqsJKAotqFoq1Yw7y5NQZgbUcdCWgV\"]},\"contracts/src/interfaces/IERC20ForwarderFactory.sol\":{\"keccak256\":\"0xd413c9701c4d8be234bd037de24aabacce110848f86eac44fa6de04eda6d05ed\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://59fcaa637112713c2d1264664f8c6b428da46cceb4689fd8757f07fa87633aad\",\"dweb:/ipfs/QmWGLox6p9Ja2dwH5bgED69JtuK4Y55G7pgTPeeTmYrW5Z\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf\",\"dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24\",\"dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c\",\"dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/token/ERC20Forwarder.sol\":{\"keccak256\":\"0x96b1f8899c3d97f301d1ce6bf3e53f4a911a652b487e53fb7c71f1e22ed3ce87\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2ad03e1ec6a9acba7d3fbf8ad4cec54eeb889c01f600785f81d73b318db640ce\",\"dweb:/ipfs/QmcHf1wsqNY8oCmLXrF4meo3jLg7y1GchYv5iUcpUJmae7\"]}},\"version\":1}", "metadata": { "compiler": { "version": "0.8.20+commit.a1b79de6" }, "language": "Solidity", "output": { "abi": [{ "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [], "type": "error", "name": "ExpiredDeadline" }, { "inputs": [], "type": "error", "name": "InvalidSignature" }, { "inputs": [], "type": "error", "name": "RestrictedZeroAddress" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address", "indexed": true }, { "internalType": "address", "name": "spender", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }], "type": "event", "name": "Approval", "anonymous": false }, { "inputs": [{ "internalType": "address", "name": "from", "type": "address", "indexed": true }, { "internalType": "address", "name": "to", "type": "address", "indexed": true }, { "internalType": "uint256", "name": "value", "type": "uint256", "indexed": false }], "type": "event", "name": "Transfer", "anonymous": false }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "PERMIT_TYPEHASH", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }] }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" }], "stateMutability": "view", "type": "function", "name": "allowance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function", "name": "approve", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }] }, { "inputs": [{ "internalType": "address", "name": "who", "type": "address" }], "stateMutability": "view", "type": "function", "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [], "stateMutability": "pure", "type": "function", "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "domainSeparator", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }] }, { "inputs": [{ "internalType": "address", "name": "user", "type": "address" }], "stateMutability": "view", "type": "function", "name": "nonces", "outputs": [{ "internalType": "uint256", "name": "nonce", "type": "uint256" }] }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "value", "type": "uint256" }, { "internalType": "uint256", "name": "deadline", "type": "uint256" }, { "internalType": "uint8", "name": "v", "type": "uint8" }, { "internalType": "bytes32", "name": "r", "type": "bytes32" }, { "internalType": "bytes32", "name": "s", "type": "bytes32" }], "stateMutability": "nonpayable", "type": "function", "name": "permit" }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "token", "outputs": [{ "internalType": "contract IMultiToken", "name": "", "type": "address" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "tokenId", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [], "stateMutability": "view", "type": "function", "name": "totalSupply", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }] }, { "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function", "name": "transfer", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }] }, { "inputs": [{ "internalType": "address", "name": "source", "type": "address" }, { "internalType": "address", "name": "recipient", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function", "name": "transferFrom", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }] }], "devdoc": { "kind": "dev", "methods": { "allowance(address,address)": { "params": { "owner": "The account whose tokens would be spent.", "spender": "The account who might be able to spend tokens." }, "returns": { "_0": "The amount of the owner's tokens the spender can spend." } }, "approve(address,uint256)": { "params": { "amount": "The amount which the spender is allowed to spend, if it is        set to uint256.max it is infinite and will not be reduced by        transfer.", "spender": "The address which can spend tokens of the caller." }, "returns": { "_0": "True if approval successful, false if not. The contract also         reverts on failure so only true is possible." } }, "balanceOf(address)": { "params": { "who": "The owner of the tokens." }, "returns": { "_0": "Returns the user's balance." } }, "constructor": { "details": "To give the contract a constant deploy code hash we call back into      the factory to load info instead of using calldata." }, "decimals()": { "returns": { "_0": "The amount of decimals (always 18)." } }, "domainSeparator()": { "returns": { "_0": "The EIP712 domain separator." } }, "name()": { "returns": { "_0": "Returns the token's name." } }, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": { "details": "The signature for this function follows EIP712 standard and should      be generated with the eth_signTypedData JSON RPC call instead of      the eth_sign JSON RPC call. If using out of date parity signing      libraries the v component may need to be adjusted. Also it is very      rare but possible for v to be other values. Those values are not      supported.", "params": { "deadline": "The timestamp which the signature must be submitted by        to be valid.", "owner": "The owner of the account which is having the new approval set.", "r": "The r component of the ECDSA signature.", "s": "The s component of the ECDSA signature.", "spender": "The address which will be allowed to spend owner's tokens.", "v": "Extra ECDSA data which allows public key recovery from        signature assumed to be 27 or 28.", "value": "The new allowance value." } }, "symbol()": { "returns": { "_0": "Returns the token's symbol." } }, "totalSupply()": { "returns": { "_0": "Returns the total supply of this token." } }, "transfer(address,uint256)": { "params": { "amount": "The amount of token to transfer", "recipient": "The recipient of the token transfer" }, "returns": { "_0": "True if transfer successful, false if not. The contract also         reverts on failed transfer so only true is possible." } }, "transferFrom(address,address,uint256)": { "params": { "amount": "The amount of tokens to be transferred.", "recipient": "The recipient of the tokens.", "source": "The source of the tokens to be transferred." }, "returns": { "_0": "Returns true for success false for failure, also reverts on         fail, so will always return true." } } }, "version": 1 }, "userdoc": { "kind": "user", "methods": { "PERMIT_TYPEHASH()": { "notice": "The EIP712 typehash for the permit struct used by this contract         to validate permit signatures." }, "allowance(address,address)": { "notice": "Loads the allowance information for an owner spender pair.         If spender is approved for all tokens in the main contract         it will return Max(uint256) otherwise it returns the allowance         the allowance for just this asset." }, "approve(address,uint256)": { "notice": "Sets an approval for just this sub-token for the caller in the         main token." }, "balanceOf(address)": { "notice": "Returns a user's token balance. This is the balance of the user         in the underlying MultiToken sub-token." }, "constructor": { "notice": "Initializes the ERC20 forwarder." }, "decimals()": { "notice": "Returns the decimals for this ERC20 interface. Hyperdrive's         sub-tokens always use 18 decimals." }, "domainSeparator()": { "notice": "Computes the EIP712 domain separator which prevents user signed         messages for this contract to be replayed in other contracts:         https://eips.ethereum.org/EIPS/eip-712." }, "name()": { "notice": "Returns this token's name. This is the name of the underlying         MultiToken sub-token." }, "nonces(address)": { "notice": "A mapping from a user to their nonce for permit signatures." }, "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": { "notice": "This function allows a caller who is not the owner of an account         to execute the functionality of 'approve' with the owners         signature." }, "symbol()": { "notice": "Returns this token's symbol. This is the symbol of the         underlying MultiToken sub-token." }, "token()": { "notice": "The target token ID that this ERC20 interface forwards to." }, "tokenId()": { "notice": "The target token ID that this ERC20 interface forwards to." }, "totalSupply()": { "notice": "Returns this token's total supply. This is the total supply         of the underlying MultiToken sub-token." }, "transfer(address,uint256)": { "notice": "Forwards a call to transfer from the msg.sender to the recipient." }, "transferFrom(address,address,uint256)": { "notice": "Forwards a call to transferFrom to move funds from an owner to a         recipient." } }, "version": 1 } }, "settings": { "remappings": ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"], "optimizer": { "enabled": true, "runs": 200 }, "metadata": { "bytecodeHash": "ipfs" }, "compilationTarget": { "contracts/src/token/ERC20Forwarder.sol": "ERC20Forwarder" }, "libraries": {} }, "sources": { "contracts/src/interfaces/IERC20.sol": { "keccak256": "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9", "urls": ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"], "license": "Apache-2.0" }, "contracts/src/interfaces/IERC20Forwarder.sol": { "keccak256": "0xeb9152fad7b2431ab4e9f0db4945462104825ac0ca2541319fafb1ea3e726592", "urls": ["bzz-raw://ab76c60cc144e299295e24f00f4e642ab093eab7c0157de6201b96cd2097892e", "dweb:/ipfs/QmYLiPgwNvZgUKzuLqsJKAotqFoq1Yw7y5NQZgbUcdCWgV"], "license": "Apache-2.0" }, "contracts/src/interfaces/IERC20ForwarderFactory.sol": { "keccak256": "0xd413c9701c4d8be234bd037de24aabacce110848f86eac44fa6de04eda6d05ed", "urls": ["bzz-raw://59fcaa637112713c2d1264664f8c6b428da46cceb4689fd8757f07fa87633aad", "dweb:/ipfs/QmWGLox6p9Ja2dwH5bgED69JtuK4Y55G7pgTPeeTmYrW5Z"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdrive.sol": { "keccak256": "0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952", "urls": ["bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf", "dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveCore.sol": { "keccak256": "0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e", "urls": ["bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24", "dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveEvents.sol": { "keccak256": "0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0", "urls": ["bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c", "dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IHyperdriveRead.sol": { "keccak256": "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55", "urls": ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiToken.sol": { "keccak256": "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f", "urls": ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenCore.sol": { "keccak256": "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501", "urls": ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenEvents.sol": { "keccak256": "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb", "urls": ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenMetadata.sol": { "keccak256": "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca", "urls": ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"], "license": "Apache-2.0" }, "contracts/src/interfaces/IMultiTokenRead.sol": { "keccak256": "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0", "urls": ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"], "license": "Apache-2.0" }, "contracts/src/token/ERC20Forwarder.sol": { "keccak256": "0x96b1f8899c3d97f301d1ce6bf3e53f4a911a652b487e53fb7c71f1e22ed3ce87", "urls": ["bzz-raw://2ad03e1ec6a9acba7d3fbf8ad4cec54eeb889c01f600785f81d73b318db640ce", "dweb:/ipfs/QmcHf1wsqNY8oCmLXrF4meo3jLg7y1GchYv5iUcpUJmae7"], "license": "Apache-2.0" } }, "version": 1 }, "ast": { "absolutePath": "contracts/src/token/ERC20Forwarder.sol", "id": 23809, "exportedSymbols": { "ERC20Forwarder": [23808], "IERC20Forwarder": [10486], "IERC20ForwarderFactory": [10534], "IHyperdrive": [11143], "IMultiToken": [12107] }, "nodeType": "SourceUnit", "src": "39:10567:133", "nodes": [{ "id": 23424, "nodeType": "PragmaDirective", "src": "39:23:133", "nodes": [], "literals": ["solidity", "0.8", ".20"] }, { "id": 23426, "nodeType": "ImportDirective", "src": "64:68:133", "nodes": [], "absolutePath": "contracts/src/interfaces/IERC20Forwarder.sol", "file": "../interfaces/IERC20Forwarder.sol", "nameLocation": "-1:-1:-1", "scope": 23809, "sourceUnit": 10487, "symbolAliases": [{ "foreign": { "id": 23425, "name": "IERC20Forwarder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10486, "src": "73:15:133", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 23428, "nodeType": "ImportDirective", "src": "133:82:133", "nodes": [], "absolutePath": "contracts/src/interfaces/IERC20ForwarderFactory.sol", "file": "../interfaces/IERC20ForwarderFactory.sol", "nameLocation": "-1:-1:-1", "scope": 23809, "sourceUnit": 10535, "symbolAliases": [{ "foreign": { "id": 23427, "name": "IERC20ForwarderFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10534, "src": "142:22:133", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 23430, "nodeType": "ImportDirective", "src": "216:60:133", "nodes": [], "absolutePath": "contracts/src/interfaces/IHyperdrive.sol", "file": "../interfaces/IHyperdrive.sol", "nameLocation": "-1:-1:-1", "scope": 23809, "sourceUnit": 11144, "symbolAliases": [{ "foreign": { "id": 23429, "name": "IHyperdrive", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11143, "src": "225:11:133", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 23432, "nodeType": "ImportDirective", "src": "277:60:133", "nodes": [], "absolutePath": "contracts/src/interfaces/IMultiToken.sol", "file": "../interfaces/IMultiToken.sol", "nameLocation": "-1:-1:-1", "scope": 23809, "sourceUnit": 12108, "symbolAliases": [{ "foreign": { "id": 23431, "name": "IMultiToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 12107, "src": "286:11:133", "typeDescriptions": {} }, "nameLocation": "-1:-1:-1" }], "unitAlias": "" }, { "id": 23808, "nodeType": "ContractDefinition", "src": "1092:9513:133", "nodes": [{ "id": 23439, "nodeType": "VariableDeclaration", "src": "1216:34:133", "nodes": [], "baseFunctions": [10467], "constant": false, "documentation": { "id": 23436, "nodeType": "StructuredDocumentation", "src": "1141:70:133", "text": "@notice The target token ID that this ERC20 interface forwards to." }, "functionSelector": "fc0c546a", "mutability": "immutable", "name": "token", "nameLocation": "1245:5:133", "scope": 23808, "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" }, "typeName": { "id": 23438, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 23437, "name": "IMultiToken", "nameLocations": ["1216:11:133"], "nodeType": "IdentifierPath", "referencedDeclaration": 12107, "src": "1216:11:133" }, "referencedDeclaration": 12107, "src": "1216:11:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "visibility": "public" }, { "id": 23442, "nodeType": "VariableDeclaration", "src": "1332:32:133", "nodes": [], "baseFunctions": [10473], "constant": false, "documentation": { "id": 23440, "nodeType": "StructuredDocumentation", "src": "1257:70:133", "text": "@notice The target token ID that this ERC20 interface forwards to." }, "functionSelector": "17d70f7c", "mutability": "immutable", "name": "tokenId", "nameLocation": "1357:7:133", "scope": 23808, "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23441, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1332:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "public" }, { "id": 23447, "nodeType": "VariableDeclaration", "src": "1447:52:133", "nodes": [], "baseFunctions": [10460], "constant": false, "documentation": { "id": 23443, "nodeType": "StructuredDocumentation", "src": "1371:71:133", "text": "@notice A mapping from a user to their nonce for permit signatures." }, "functionSelector": "7ecebe00", "mutability": "mutable", "name": "nonces", "nameLocation": "1493:6:133", "scope": 23808, "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" }, "typeName": { "id": 23446, "keyName": "user", "keyNameLocation": "1463:4:133", "keyType": { "id": 23444, "name": "address", "nodeType": "ElementaryTypeName", "src": "1455:7:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "Mapping", "src": "1447:38:133", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" }, "valueName": "nonce", "valueNameLocation": "1479:5:133", "valueType": { "id": 23445, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1471:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } } }, "visibility": "public" }, { "id": 23453, "nodeType": "VariableDeclaration", "src": "1633:167:133", "nodes": [], "baseFunctions": [10485], "constant": true, "documentation": { "id": 23448, "nodeType": "StructuredDocumentation", "src": "1506:122:133", "text": "@notice The EIP712 typehash for the permit struct used by this contract\n         to validate permit signatures." }, "functionSelector": "30adf81f", "mutability": "constant", "name": "PERMIT_TYPEHASH", "nameLocation": "1657:15:133", "scope": 23808, "stateVariable": true, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 23449, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1633:7:133", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "value": { "arguments": [{ "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529", "id": 23451, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1706:84:133", "typeDescriptions": { "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9", "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"" }, "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9", "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"" }], "id": 23450, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "1683:9:133", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 23452, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1683:117:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "public" }, { "id": 23474, "nodeType": "FunctionDefinition", "src": "2001:252:133", "nodes": [], "body": { "id": 23473, "nodeType": "Block", "src": "2015:238:133", "nodes": [], "statements": [{ "assignments": [23459], "declarations": [{ "constant": false, "id": 23459, "mutability": "mutable", "name": "factory", "nameLocation": "2088:7:133", "nodeType": "VariableDeclaration", "scope": 23473, "src": "2065:30:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20ForwarderFactory_$10534", "typeString": "contract IERC20ForwarderFactory" }, "typeName": { "id": 23458, "nodeType": "UserDefinedTypeName", "pathNode": { "id": 23457, "name": "IERC20ForwarderFactory", "nameLocations": ["2065:22:133"], "nodeType": "IdentifierPath", "referencedDeclaration": 10534, "src": "2065:22:133" }, "referencedDeclaration": 10534, "src": "2065:22:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20ForwarderFactory_$10534", "typeString": "contract IERC20ForwarderFactory" } }, "visibility": "internal" }], "id": 23464, "initialValue": { "arguments": [{ "expression": { "id": 23461, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2121:3:133", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 23462, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2125:6:133", "memberName": "sender", "nodeType": "MemberAccess", "src": "2121:10:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }], "id": 23460, "name": "IERC20ForwarderFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10534, "src": "2098:22:133", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC20ForwarderFactory_$10534_$", "typeString": "type(contract IERC20ForwarderFactory)" } }, "id": 23463, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2098:34:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20ForwarderFactory_$10534", "typeString": "contract IERC20ForwarderFactory" } }, "nodeType": "VariableDeclarationStatement", "src": "2065:67:133" }, { "expression": { "id": 23471, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "components": [{ "id": 23465, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "2202:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, { "id": 23466, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23442, "src": "2209:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "id": 23467, "isConstant": false, "isInlineArray": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "TupleExpression", "src": "2201:16:133", "typeDescriptions": { "typeIdentifier": "t_tuple$_t_contract$_IMultiToken_$12107_$_t_uint256_$", "typeString": "tuple(contract IMultiToken,uint256)" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 23468, "name": "factory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23459, "src": "2220:7:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IERC20ForwarderFactory_$10534", "typeString": "contract IERC20ForwarderFactory" } }, "id": 23469, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2228:16:133", "memberName": "getDeployDetails", "nodeType": "MemberAccess", "referencedDeclaration": 10516, "src": "2220:24:133", "typeDescriptions": { "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IMultiToken_$12107_$_t_uint256_$", "typeString": "function () view external returns (contract IMultiToken,uint256)" } }, "id": 23470, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2220:26:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$_t_contract$_IMultiToken_$12107_$_t_uint256_$", "typeString": "tuple(contract IMultiToken,uint256)" } }, "src": "2201:45:133", "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23472, "nodeType": "ExpressionStatement", "src": "2201:45:133" }] }, "documentation": { "id": 23454, "nodeType": "StructuredDocumentation", "src": "1807:189:133", "text": "@notice Initializes the ERC20 forwarder.\n @dev To give the contract a constant deploy code hash we call back into\n      the factory to load info instead of using calldata." }, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "parameters": { "id": 23455, "nodeType": "ParameterList", "parameters": [], "src": "2012:2:133" }, "returnParameters": { "id": 23456, "nodeType": "ParameterList", "parameters": [], "src": "2015:0:133" }, "scope": 23808, "stateMutability": "nonpayable", "virtual": false, "visibility": "public" }, { "id": 23502, "nodeType": "FunctionDefinition", "src": "2518:426:133", "nodes": [], "body": { "id": 23501, "nodeType": "Block", "src": "2575:369:133", "nodes": [], "statements": [{ "expression": { "arguments": [{ "arguments": [{ "arguments": [{ "hexValue": "454950373132446f6d61696e28737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429", "id": 23484, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2698:72:133", "typeDescriptions": { "typeIdentifier": "t_stringliteral_2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd", "typeString": "literal_string \"EIP712Domain(string version,uint256 chainId,address verifyingContract)\"" }, "value": "EIP712Domain(string version,uint256 chainId,address verifyingContract)" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_stringliteral_2aef22f9d7df5f9d21c56d14029233f3fdaa91917727e1eb68e504d27072d6cd", "typeString": "literal_string \"EIP712Domain(string version,uint256 chainId,address verifyingContract)\"" }], "id": 23483, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "2663:9:133", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 23485, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2663:129:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "arguments": [{ "arguments": [{ "hexValue": "31", "id": 23489, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2830:3:133", "typeDescriptions": { "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\"" }, "value": "1" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6", "typeString": "literal_string \"1\"" }], "id": 23488, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2824:5:133", "typeDescriptions": { "typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)" }, "typeName": { "id": 23487, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "2824:5:133", "typeDescriptions": {} } }, "id": 23490, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2824:10:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 23486, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "2814:9:133", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 23491, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2814:21:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "expression": { "id": 23492, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "2857:5:133", "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" } }, "id": 23493, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2863:7:133", "memberName": "chainid", "nodeType": "MemberAccess", "src": "2857:13:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "arguments": [{ "id": 23496, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2900:4:133", "typeDescriptions": { "typeIdentifier": "t_contract$_ERC20Forwarder_$23808", "typeString": "contract ERC20Forwarder" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_contract$_ERC20Forwarder_$23808", "typeString": "contract ERC20Forwarder" }], "id": 23495, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2892:7:133", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 23494, "name": "address", "nodeType": "ElementaryTypeName", "src": "2892:7:133", "typeDescriptions": {} } }, "id": 23497, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2892:13:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "expression": { "id": 23481, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "2631:3:133", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 23482, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "2635:6:133", "memberName": "encode", "nodeType": "MemberAccess", "src": "2631:10:133", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 23498, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2631:292:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 23480, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "2604:9:133", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 23499, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2604:333:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "functionReturnParameters": 23479, "id": 23500, "nodeType": "Return", "src": "2585:352:133" }] }, "baseFunctions": [10479], "documentation": { "id": 23475, "nodeType": "StructuredDocumentation", "src": "2259:254:133", "text": "@notice Computes the EIP712 domain separator which prevents user signed\n         messages for this contract to be replayed in other contracts:\n         https://eips.ethereum.org/EIPS/eip-712.\n @return The EIP712 domain separator." }, "functionSelector": "f698da25", "implemented": true, "kind": "function", "modifiers": [], "name": "domainSeparator", "nameLocation": "2527:15:133", "parameters": { "id": 23476, "nodeType": "ParameterList", "parameters": [], "src": "2542:2:133" }, "returnParameters": { "id": 23479, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23478, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23502, "src": "2566:7:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 23477, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2566:7:133", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }], "src": "2565:9:133" }, "scope": 23808, "stateMutability": "view", "virtual": false, "visibility": "public" }, { "id": 23512, "nodeType": "FunctionDefinition", "src": "3129:85:133", "nodes": [], "body": { "id": 23511, "nodeType": "Block", "src": "3188:26:133", "nodes": [], "statements": [{ "expression": { "hexValue": "3138", "id": 23509, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3205:2:133", "typeDescriptions": { "typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18" }, "value": "18" }, "functionReturnParameters": 23508, "id": 23510, "nodeType": "Return", "src": "3198:9:133" }] }, "baseFunctions": [10392], "documentation": { "id": 23503, "nodeType": "StructuredDocumentation", "src": "2950:174:133", "text": "@notice Returns the decimals for this ERC20 interface. Hyperdrive's\n         sub-tokens always use 18 decimals.\n @return The amount of decimals (always 18)." }, "functionSelector": "313ce567", "implemented": true, "kind": "function", "modifiers": [], "name": "decimals", "nameLocation": "3138:8:133", "overrides": { "id": 23505, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3163:8:133" }, "parameters": { "id": 23504, "nodeType": "ParameterList", "parameters": [], "src": "3146:2:133" }, "returnParameters": { "id": 23508, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23507, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23512, "src": "3181:5:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }, "typeName": { "id": 23506, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "3181:5:133", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "visibility": "internal" }], "src": "3180:7:133" }, "scope": 23808, "stateMutability": "pure", "virtual": false, "visibility": "external" }, { "id": 23525, "nodeType": "FunctionDefinition", "src": "3378:106:133", "nodes": [], "body": { "id": 23524, "nodeType": "Block", "src": "3441:43:133", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 23521, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23442, "src": "3469:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 23519, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "3458:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "id": 23520, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3464:4:133", "memberName": "name", "nodeType": "MemberAccess", "referencedDeclaration": 12263, "src": "3458:10:133", "typeDescriptions": { "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256) view external returns (string memory)" } }, "id": 23522, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3458:19:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 23518, "id": 23523, "nodeType": "Return", "src": "3451:26:133" }] }, "baseFunctions": [10380], "documentation": { "id": 23513, "nodeType": "StructuredDocumentation", "src": "3220:153:133", "text": "@notice Returns this token's name. This is the name of the underlying\n         MultiToken sub-token.\n @return Returns the token's name." }, "functionSelector": "06fdde03", "implemented": true, "kind": "function", "modifiers": [], "name": "name", "nameLocation": "3387:4:133", "overrides": { "id": 23515, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3408:8:133" }, "parameters": { "id": 23514, "nodeType": "ParameterList", "parameters": [], "src": "3391:2:133" }, "returnParameters": { "id": 23518, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23517, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23525, "src": "3426:13:133", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 23516, "name": "string", "nodeType": "ElementaryTypeName", "src": "3426:6:133", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "3425:15:133" }, "scope": 23808, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 23538, "nodeType": "FunctionDefinition", "src": "3678:114:133", "nodes": [], "body": { "id": 23537, "nodeType": "Block", "src": "3742:50:133", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 23534, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23442, "src": "3777:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 23532, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "3759:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "id": 23533, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3765:11:133", "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 12279, "src": "3759:17:133", "typeDescriptions": { "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) view external returns (uint256)" } }, "id": 23535, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3759:26:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 23531, "id": 23536, "nodeType": "Return", "src": "3752:33:133" }] }, "baseFunctions": [10398], "documentation": { "id": 23526, "nodeType": "StructuredDocumentation", "src": "3490:183:133", "text": "@notice Returns this token's total supply. This is the total supply\n         of the underlying MultiToken sub-token.\n @return Returns the total supply of this token." }, "functionSelector": "18160ddd", "implemented": true, "kind": "function", "modifiers": [], "name": "totalSupply", "nameLocation": "3687:11:133", "overrides": { "id": 23528, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3715:8:133" }, "parameters": { "id": 23527, "nodeType": "ParameterList", "parameters": [], "src": "3698:2:133" }, "returnParameters": { "id": 23531, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23530, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23538, "src": "3733:7:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23529, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3733:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "3732:9:133" }, "scope": 23808, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 23551, "nodeType": "FunctionDefinition", "src": "3962:110:133", "nodes": [], "body": { "id": 23550, "nodeType": "Block", "src": "4027:45:133", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 23547, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23442, "src": "4057:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 23545, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "4044:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "id": 23546, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4050:6:133", "memberName": "symbol", "nodeType": "MemberAccess", "referencedDeclaration": 12271, "src": "4044:12:133", "typeDescriptions": { "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256) view external returns (string memory)" } }, "id": 23548, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4044:21:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" } }, "functionReturnParameters": 23544, "id": 23549, "nodeType": "Return", "src": "4037:28:133" }] }, "baseFunctions": [10386], "documentation": { "id": 23539, "nodeType": "StructuredDocumentation", "src": "3798:159:133", "text": "@notice Returns this token's symbol. This is the symbol of the\n         underlying MultiToken sub-token.\n @return Returns the token's symbol." }, "functionSelector": "95d89b41", "implemented": true, "kind": "function", "modifiers": [], "name": "symbol", "nameLocation": "3971:6:133", "overrides": { "id": 23541, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3994:8:133" }, "parameters": { "id": 23540, "nodeType": "ParameterList", "parameters": [], "src": "3977:2:133" }, "returnParameters": { "id": 23544, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23543, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23551, "src": "4012:13:133", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" }, "typeName": { "id": 23542, "name": "string", "nodeType": "ElementaryTypeName", "src": "4012:6:133", "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" } }, "visibility": "internal" }], "src": "4011:15:133" }, "scope": 23808, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 23567, "nodeType": "FunctionDefinition", "src": "4302:126:133", "nodes": [], "body": { "id": 23566, "nodeType": "Block", "src": "4375:53:133", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 23562, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23442, "src": "4408:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 23563, "name": "who", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23554, "src": "4417:3:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "expression": { "id": 23560, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "4392:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "id": 23561, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4398:9:133", "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 12311, "src": "4392:15:133", "typeDescriptions": { "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$", "typeString": "function (uint256,address) view external returns (uint256)" } }, "id": 23564, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4392:29:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 23559, "id": 23565, "nodeType": "Return", "src": "4385:36:133" }] }, "baseFunctions": [10416], "documentation": { "id": 23552, "nodeType": "StructuredDocumentation", "src": "4078:219:133", "text": "@notice Returns a user's token balance. This is the balance of the user\n         in the underlying MultiToken sub-token.\n @param who The owner of the tokens.\n @return Returns the user's balance." }, "functionSelector": "70a08231", "implemented": true, "kind": "function", "modifiers": [], "name": "balanceOf", "nameLocation": "4311:9:133", "overrides": { "id": 23556, "nodeType": "OverrideSpecifier", "overrides": [], "src": "4348:8:133" }, "parameters": { "id": 23555, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23554, "mutability": "mutable", "name": "who", "nameLocation": "4329:3:133", "nodeType": "VariableDeclaration", "scope": 23567, "src": "4321:11:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 23553, "name": "address", "nodeType": "ElementaryTypeName", "src": "4321:7:133", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "4320:13:133" }, "returnParameters": { "id": 23559, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23558, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23567, "src": "4366:7:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23557, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4366:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "4365:9:133" }, "scope": 23808, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 23600, "nodeType": "FunctionDefinition", "src": "4918:496:133", "nodes": [], "body": { "id": 23599, "nodeType": "Block", "src": "5032:382:133", "nodes": [], "statements": [{ "condition": { "arguments": [{ "id": 23580, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23570, "src": "5149:5:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23581, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23572, "src": "5156:7:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }], "expression": { "id": 23578, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "5126:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "id": 23579, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5132:16:133", "memberName": "isApprovedForAll", "nodeType": "MemberAccess", "referencedDeclaration": 12289, "src": "5126:22:133", "typeDescriptions": { "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$", "typeString": "function (address,address) view external returns (bool)" } }, "id": 23582, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5126:38:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "falseBody": { "id": 23597, "nodeType": "Block", "src": "5328:80:133", "statements": [{ "expression": { "arguments": [{ "id": 23592, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23442, "src": "5373:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 23593, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23570, "src": "5382:5:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23594, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23572, "src": "5389:7:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }], "expression": { "id": 23590, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "5349:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "id": 23591, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5355:17:133", "memberName": "perTokenApprovals", "nodeType": "MemberAccess", "referencedDeclaration": 12301, "src": "5349:23:133", "typeDescriptions": { "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$", "typeString": "function (uint256,address,address) view external returns (uint256)" } }, "id": 23595, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5349:48:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 23577, "id": 23596, "nodeType": "Return", "src": "5342:55:133" }] }, "id": 23598, "nodeType": "IfStatement", "src": "5122:286:133", "trueBody": { "id": 23589, "nodeType": "Block", "src": "5166:49:133", "statements": [{ "expression": { "expression": { "arguments": [{ "id": 23585, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5192:7:133", "typeDescriptions": { "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }, "typeName": { "id": 23584, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5192:7:133", "typeDescriptions": {} } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)" }], "id": 23583, "name": "type", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -27, "src": "5187:4:133", "typeDescriptions": { "typeIdentifier": "t_function_metatype_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 23586, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5187:13:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_magic_meta_type_t_uint256", "typeString": "type(uint256)" } }, "id": 23587, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "5201:3:133", "memberName": "max", "nodeType": "MemberAccess", "src": "5187:17:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "functionReturnParameters": 23577, "id": 23588, "nodeType": "Return", "src": "5180:24:133" }] } }] }, "baseFunctions": [10408], "documentation": { "id": 23568, "nodeType": "StructuredDocumentation", "src": "4434:479:133", "text": "@notice Loads the allowance information for an owner spender pair.\n         If spender is approved for all tokens in the main contract\n         it will return Max(uint256) otherwise it returns the allowance\n         the allowance for just this asset.\n @param owner The account whose tokens would be spent.\n @param spender The account who might be able to spend tokens.\n @return The amount of the owner's tokens the spender can spend." }, "functionSelector": "dd62ed3e", "implemented": true, "kind": "function", "modifiers": [], "name": "allowance", "nameLocation": "4927:9:133", "overrides": { "id": 23574, "nodeType": "OverrideSpecifier", "overrides": [], "src": "5005:8:133" }, "parameters": { "id": 23573, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23570, "mutability": "mutable", "name": "owner", "nameLocation": "4954:5:133", "nodeType": "VariableDeclaration", "scope": 23600, "src": "4946:13:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 23569, "name": "address", "nodeType": "ElementaryTypeName", "src": "4946:7:133", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 23572, "mutability": "mutable", "name": "spender", "nameLocation": "4977:7:133", "nodeType": "VariableDeclaration", "scope": 23600, "src": "4969:15:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 23571, "name": "address", "nodeType": "ElementaryTypeName", "src": "4969:7:133", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "src": "4936:54:133" }, "returnParameters": { "id": 23577, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23576, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23600, "src": "5023:7:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23575, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5023:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "5022:9:133" }, "scope": 23808, "stateMutability": "view", "virtual": false, "visibility": "external" }, { "id": 23630, "nodeType": "FunctionDefinition", "src": "5920:339:133", "nodes": [], "body": { "id": 23629, "nodeType": "Block", "src": "5994:265:133", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 23613, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23442, "src": "6091:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 23614, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23603, "src": "6100:7:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23615, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23605, "src": "6109:6:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 23616, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6117:3:133", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 23617, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6121:6:133", "memberName": "sender", "nodeType": "MemberAccess", "src": "6117:10:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "expression": { "id": 23610, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "6067:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "id": 23612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6073:17:133", "memberName": "setApprovalBridge", "nodeType": "MemberAccess", "referencedDeclaration": 12157, "src": "6067:23:133", "typeDescriptions": { "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,address,uint256,address) external" } }, "id": 23618, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6067:61:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23619, "nodeType": "ExpressionStatement", "src": "6067:61:133" }, { "eventCall": { "arguments": [{ "expression": { "id": 23621, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6203:3:133", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 23622, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6207:6:133", "memberName": "sender", "nodeType": "MemberAccess", "src": "6203:10:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23623, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23603, "src": "6215:7:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23624, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23605, "src": "6224:6:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 23620, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10342, "src": "6194:8:133", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)" } }, "id": 23625, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6194:37:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23626, "nodeType": "EmitStatement", "src": "6189:42:133" }, { "expression": { "hexValue": "74727565", "id": 23627, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6248:4:133", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, "functionReturnParameters": 23609, "id": 23628, "nodeType": "Return", "src": "6241:11:133" }] }, "baseFunctions": [10352], "documentation": { "id": 23601, "nodeType": "StructuredDocumentation", "src": "5420:495:133", "text": "@notice Sets an approval for just this sub-token for the caller in the\n         main token.\n @param spender The address which can spend tokens of the caller.\n @param amount The amount which the spender is allowed to spend, if it is\n        set to uint256.max it is infinite and will not be reduced by\n        transfer.\n @return True if approval successful, false if not. The contract also\n         reverts on failure so only true is possible." }, "functionSelector": "095ea7b3", "implemented": true, "kind": "function", "modifiers": [], "name": "approve", "nameLocation": "5929:7:133", "parameters": { "id": 23606, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23603, "mutability": "mutable", "name": "spender", "nameLocation": "5945:7:133", "nodeType": "VariableDeclaration", "scope": 23630, "src": "5937:15:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 23602, "name": "address", "nodeType": "ElementaryTypeName", "src": "5937:7:133", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 23605, "mutability": "mutable", "name": "amount", "nameLocation": "5962:6:133", "nodeType": "VariableDeclaration", "scope": 23630, "src": "5954:14:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23604, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5954:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "5936:33:133" }, "returnParameters": { "id": 23609, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23608, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23630, "src": "5988:4:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 23607, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5988:4:133", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "5987:6:133" }, "scope": 23808, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 23663, "nodeType": "FunctionDefinition", "src": "6608:399:133", "nodes": [], "body": { "id": 23662, "nodeType": "Block", "src": "6716:291:133", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 23644, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23442, "src": "6764:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 23645, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6785:3:133", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 23646, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6789:6:133", "memberName": "sender", "nodeType": "MemberAccess", "src": "6785:10:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23647, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23633, "src": "6809:9:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23648, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23635, "src": "6832:6:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 23649, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6852:3:133", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 23650, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6856:6:133", "memberName": "sender", "nodeType": "MemberAccess", "src": "6852:10:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "expression": { "id": 23641, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "6726:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "id": 23643, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6732:18:133", "memberName": "transferFromBridge", "nodeType": "MemberAccess", "referencedDeclaration": 12135, "src": "6726:24:133", "typeDescriptions": { "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,address,address,uint256,address) external" } }, "id": 23651, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6726:146:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23652, "nodeType": "ExpressionStatement", "src": "6726:146:133" }, { "eventCall": { "arguments": [{ "expression": { "id": 23654, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "6949:3:133", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 23655, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "6953:6:133", "memberName": "sender", "nodeType": "MemberAccess", "src": "6949:10:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23656, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23633, "src": "6961:9:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23657, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23635, "src": "6972:6:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 23653, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10333, "src": "6940:8:133", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)" } }, "id": 23658, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6940:39:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23659, "nodeType": "EmitStatement", "src": "6935:44:133" }, { "expression": { "hexValue": "74727565", "id": 23660, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "6996:4:133", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, "functionReturnParameters": 23640, "id": 23661, "nodeType": "Return", "src": "6989:11:133" }] }, "baseFunctions": [10362], "documentation": { "id": 23631, "nodeType": "StructuredDocumentation", "src": "6265:338:133", "text": "@notice Forwards a call to transfer from the msg.sender to the recipient.\n @param recipient The recipient of the token transfer\n @param amount The amount of token to transfer\n @return True if transfer successful, false if not. The contract also\n         reverts on failed transfer so only true is possible." }, "functionSelector": "a9059cbb", "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "6617:8:133", "overrides": { "id": 23637, "nodeType": "OverrideSpecifier", "overrides": [], "src": "6692:8:133" }, "parameters": { "id": 23636, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23633, "mutability": "mutable", "name": "recipient", "nameLocation": "6643:9:133", "nodeType": "VariableDeclaration", "scope": 23663, "src": "6635:17:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 23632, "name": "address", "nodeType": "ElementaryTypeName", "src": "6635:7:133", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 23635, "mutability": "mutable", "name": "amount", "nameLocation": "6670:6:133", "nodeType": "VariableDeclaration", "scope": 23663, "src": "6662:14:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23634, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "6662:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "6625:57:133" }, "returnParameters": { "id": 23640, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23639, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23663, "src": "6710:4:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 23638, "name": "bool", "nodeType": "ElementaryTypeName", "src": "6710:4:133", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "6709:6:133" }, "scope": 23808, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 23695, "nodeType": "FunctionDefinition", "src": "7429:481:133", "nodes": [], "body": { "id": 23694, "nodeType": "Block", "src": "7556:354:133", "nodes": [], "statements": [{ "expression": { "arguments": [{ "id": 23678, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23442, "src": "7675:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 23679, "name": "source", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23666, "src": "7696:6:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23680, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23668, "src": "7716:9:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23681, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23670, "src": "7739:6:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "expression": { "id": 23682, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "7759:3:133", "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" } }, "id": 23683, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "7763:6:133", "memberName": "sender", "nodeType": "MemberAccess", "src": "7759:10:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "expression": { "id": 23675, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "7637:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "id": 23677, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "7643:18:133", "memberName": "transferFromBridge", "nodeType": "MemberAccess", "referencedDeclaration": 12135, "src": "7637:24:133", "typeDescriptions": { "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,address,address,uint256,address) external" } }, "id": 23684, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "7637:142:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23685, "nodeType": "ExpressionStatement", "src": "7637:142:133" }, { "eventCall": { "arguments": [{ "id": 23687, "name": "source", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23666, "src": "7856:6:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23688, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23668, "src": "7864:9:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23689, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23670, "src": "7875:6:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 23686, "name": "Transfer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10333, "src": "7847:8:133", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)" } }, "id": 23690, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "7847:35:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23691, "nodeType": "EmitStatement", "src": "7842:40:133" }, { "expression": { "hexValue": "74727565", "id": 23692, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "7899:4:133", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "value": "true" }, "functionReturnParameters": 23674, "id": 23693, "nodeType": "Return", "src": "7892:11:133" }] }, "baseFunctions": [10374], "documentation": { "id": 23664, "nodeType": "StructuredDocumentation", "src": "7013:411:133", "text": "@notice Forwards a call to transferFrom to move funds from an owner to a\n         recipient.\n @param source The source of the tokens to be transferred.\n @param recipient The recipient of the tokens.\n @param amount The amount of tokens to be transferred.\n @return Returns true for success false for failure, also reverts on\n         fail, so will always return true." }, "functionSelector": "23b872dd", "implemented": true, "kind": "function", "modifiers": [], "name": "transferFrom", "nameLocation": "7438:12:133", "parameters": { "id": 23671, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23666, "mutability": "mutable", "name": "source", "nameLocation": "7468:6:133", "nodeType": "VariableDeclaration", "scope": 23695, "src": "7460:14:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 23665, "name": "address", "nodeType": "ElementaryTypeName", "src": "7460:7:133", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 23668, "mutability": "mutable", "name": "recipient", "nameLocation": "7492:9:133", "nodeType": "VariableDeclaration", "scope": 23695, "src": "7484:17:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 23667, "name": "address", "nodeType": "ElementaryTypeName", "src": "7484:7:133", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 23670, "mutability": "mutable", "name": "amount", "nameLocation": "7519:6:133", "nodeType": "VariableDeclaration", "scope": 23695, "src": "7511:14:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23669, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "7511:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "src": "7450:81:133" }, "returnParameters": { "id": 23674, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23673, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23695, "src": "7550:4:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }, "typeName": { "id": 23672, "name": "bool", "nodeType": "ElementaryTypeName", "src": "7550:4:133", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "visibility": "internal" }], "src": "7549:6:133" }, "scope": 23808, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }, { "id": 23807, "nodeType": "FunctionDefinition", "src": "9069:1534:133", "nodes": [], "body": { "id": 23806, "nodeType": "Block", "src": "9252:1351:133", "nodes": [], "statements": [{ "condition": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 23716, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "expression": { "id": 23713, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "9320:5:133", "typeDescriptions": { "typeIdentifier": "t_magic_block", "typeString": "block" } }, "id": 23714, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "9326:9:133", "memberName": "timestamp", "nodeType": "MemberAccess", "src": "9320:15:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": { "id": 23715, "name": "deadline", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23704, "src": "9338:8:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "9320:26:133", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 23723, "nodeType": "IfStatement", "src": "9316:97:133", "trueBody": { "id": 23722, "nodeType": "Block", "src": "9348:65:133", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 23717, "name": "IERC20Forwarder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10486, "src": "9369:15:133", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC20Forwarder_$10486_$", "typeString": "type(contract IERC20Forwarder)" } }, "id": 23719, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "9385:15:133", "memberName": "ExpiredDeadline", "nodeType": "MemberAccess", "referencedDeclaration": 10428, "src": "9369:31:133", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 23720, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9369:33:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23721, "nodeType": "RevertStatement", "src": "9362:40:133" }] } }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 23729, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 23724, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23698, "src": "9474:5:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": { "arguments": [{ "hexValue": "30", "id": 23727, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "9491:1:133", "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }, "value": "0" }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }], "id": 23726, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "9483:7:133", "typeDescriptions": { "typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)" }, "typeName": { "id": 23725, "name": "address", "nodeType": "ElementaryTypeName", "src": "9483:7:133", "typeDescriptions": {} } }, "id": 23728, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9483:10:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "9474:19:133", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 23736, "nodeType": "IfStatement", "src": "9470:96:133", "trueBody": { "id": 23735, "nodeType": "Block", "src": "9495:71:133", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "expression": { "id": 23730, "name": "IERC20Forwarder", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10486, "src": "9516:15:133", "typeDescriptions": { "typeIdentifier": "t_type$_t_contract$_IERC20Forwarder_$10486_$", "typeString": "type(contract IERC20Forwarder)" } }, "id": 23732, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "9532:21:133", "memberName": "RestrictedZeroAddress", "nodeType": "MemberAccess", "referencedDeclaration": 10434, "src": "9516:37:133", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 23733, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9516:39:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23734, "nodeType": "RevertStatement", "src": "9509:46:133" }] } }, { "assignments": [23738], "declarations": [{ "constant": false, "id": 23738, "mutability": "mutable", "name": "nonce", "nameLocation": "9664:5:133", "nodeType": "VariableDeclaration", "scope": 23806, "src": "9656:13:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23737, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9656:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }], "id": 23742, "initialValue": { "baseExpression": { "id": 23739, "name": "nonces", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23447, "src": "9672:6:133", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" } }, "id": 23741, "indexExpression": { "id": 23740, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23698, "src": "9679:5:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "9672:13:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "VariableDeclarationStatement", "src": "9656:29:133" }, { "assignments": [23744], "declarations": [{ "constant": false, "id": 23744, "mutability": "mutable", "name": "structHash", "nameLocation": "9703:10:133", "nodeType": "VariableDeclaration", "scope": 23806, "src": "9695:18:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 23743, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "9695:7:133", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }], "id": 23764, "initialValue": { "arguments": [{ "arguments": [{ "hexValue": "1901", "id": 23748, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "9773:10:133", "typeDescriptions": { "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541", "typeString": "literal_string hex\"1901\"" }, "value": "\u0019\u0001" }, { "arguments": [], "expression": { "argumentTypes": [], "id": 23749, "name": "domainSeparator", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23502, "src": "9801:15:133", "typeDescriptions": { "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$", "typeString": "function () view returns (bytes32)" } }, "id": 23750, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9801:17:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "arguments": [{ "arguments": [{ "id": 23754, "name": "PERMIT_TYPEHASH", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23453, "src": "9903:15:133", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "id": 23755, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23698, "src": "9944:5:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23756, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23700, "src": "9975:7:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23757, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23702, "src": "10008:5:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 23758, "name": "nonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23738, "src": "10039:5:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 23759, "name": "deadline", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23704, "src": "10070:8:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "expression": { "id": 23752, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "9867:3:133", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 23753, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "9871:6:133", "memberName": "encode", "nodeType": "MemberAccess", "src": "9867:10:133", "typeDescriptions": { "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 23760, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9867:233:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 23751, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "9836:9:133", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 23761, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9836:282:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541", "typeString": "literal_string hex\"1901\"" }, { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }], "expression": { "id": 23746, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "9739:3:133", "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" } }, "id": 23747, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "9743:12:133", "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "9739:16:133", "typeDescriptions": { "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)" } }, "id": 23762, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9739:393:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }], "id": 23745, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "9716:9:133", "typeDescriptions": { "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)" } }, "id": 23763, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "9716:426:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "nodeType": "VariableDeclarationStatement", "src": "9695:447:133" }, { "assignments": [23766], "declarations": [{ "constant": false, "id": 23766, "mutability": "mutable", "name": "signer", "nameLocation": "10207:6:133", "nodeType": "VariableDeclaration", "scope": 23806, "src": "10199:14:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 23765, "name": "address", "nodeType": "ElementaryTypeName", "src": "10199:7:133", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }], "id": 23773, "initialValue": { "arguments": [{ "id": 23768, "name": "structHash", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23744, "src": "10226:10:133", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "id": 23769, "name": "v", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23706, "src": "10238:1:133", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, { "id": 23770, "name": "r", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23708, "src": "10241:1:133", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, { "id": 23771, "name": "s", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23710, "src": "10244:1:133", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_uint8", "typeString": "uint8" }, { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }], "id": 23767, "name": "ecrecover", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -6, "src": "10216:9:133", "typeDescriptions": { "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$", "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)" } }, "id": 23772, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10216:30:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "VariableDeclarationStatement", "src": "10199:47:133" }, { "condition": { "commonType": { "typeIdentifier": "t_address", "typeString": "address" }, "id": 23776, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 23774, "name": "signer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23766, "src": "10260:6:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": { "id": 23775, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23698, "src": "10270:5:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "src": "10260:15:133", "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" } }, "id": 23781, "nodeType": "IfStatement", "src": "10256:71:133", "trueBody": { "id": 23780, "nodeType": "Block", "src": "10277:50:133", "statements": [{ "errorCall": { "arguments": [], "expression": { "argumentTypes": [], "id": 23777, "name": "InvalidSignature", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10431, "src": "10298:16:133", "typeDescriptions": { "typeIdentifier": "t_function_error_pure$__$returns$__$", "typeString": "function () pure" } }, "id": 23778, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10298:18:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23779, "nodeType": "RevertStatement", "src": "10291:25:133" }] } }, { "id": 23790, "nodeType": "UncheckedBlock", "src": "10379:60:133", "statements": [{ "expression": { "id": 23788, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": { "baseExpression": { "id": 23782, "name": "nonces", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23447, "src": "10403:6:133", "typeDescriptions": { "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)" } }, "id": 23784, "indexExpression": { "id": 23783, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23698, "src": "10410:5:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "10403:13:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "Assignment", "operator": "=", "rightHandSide": { "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "id": 23787, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": { "id": 23785, "name": "nonce", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23738, "src": "10419:5:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": { "hexValue": "31", "id": 23786, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "10427:1:133", "typeDescriptions": { "typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1" }, "value": "1" }, "src": "10419:9:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "src": "10403:25:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "id": 23789, "nodeType": "ExpressionStatement", "src": "10403:25:133" }] }, { "expression": { "arguments": [{ "id": 23794, "name": "tokenId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23442, "src": "10519:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 23795, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23700, "src": "10528:7:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23796, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23702, "src": "10537:5:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, { "id": 23797, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23698, "src": "10544:5:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }, { "typeIdentifier": "t_address", "typeString": "address" }], "expression": { "id": 23791, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23439, "src": "10495:5:133", "typeDescriptions": { "typeIdentifier": "t_contract$_IMultiToken_$12107", "typeString": "contract IMultiToken" } }, "id": 23793, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "10501:17:133", "memberName": "setApprovalBridge", "nodeType": "MemberAccess", "referencedDeclaration": 12157, "src": "10495:23:133", "typeDescriptions": { "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$", "typeString": "function (uint256,address,uint256,address) external" } }, "id": 23798, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10495:55:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23799, "nodeType": "ExpressionStatement", "src": "10495:55:133" }, { "eventCall": { "arguments": [{ "id": 23801, "name": "owner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23698, "src": "10574:5:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23802, "name": "spender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23700, "src": "10581:7:133", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, { "id": 23803, "name": "value", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23702, "src": "10590:5:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }], "expression": { "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_address", "typeString": "address" }, { "typeIdentifier": "t_uint256", "typeString": "uint256" }], "id": 23800, "name": "Approval", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10342, "src": "10565:8:133", "typeDescriptions": { "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)" } }, "id": 23804, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "10565:31:133", "tryCall": false, "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" } }, "id": 23805, "nodeType": "EmitStatement", "src": "10560:36:133" }] }, "baseFunctions": [10452], "documentation": { "id": 23696, "nodeType": "StructuredDocumentation", "src": "7916:1148:133", "text": "@notice This function allows a caller who is not the owner of an account\n         to execute the functionality of 'approve' with the owners\n         signature.\n @dev The signature for this function follows EIP712 standard and should\n      be generated with the eth_signTypedData JSON RPC call instead of\n      the eth_sign JSON RPC call. If using out of date parity signing\n      libraries the v component may need to be adjusted. Also it is very\n      rare but possible for v to be other values. Those values are not\n      supported.\n @param owner The owner of the account which is having the new approval set.\n @param spender The address which will be allowed to spend owner's tokens.\n @param value The new allowance value.\n @param deadline The timestamp which the signature must be submitted by\n        to be valid.\n @param v Extra ECDSA data which allows public key recovery from\n        signature assumed to be 27 or 28.\n @param r The r component of the ECDSA signature.\n @param s The s component of the ECDSA signature." }, "functionSelector": "d505accf", "implemented": true, "kind": "function", "modifiers": [], "name": "permit", "nameLocation": "9078:6:133", "parameters": { "id": 23711, "nodeType": "ParameterList", "parameters": [{ "constant": false, "id": 23698, "mutability": "mutable", "name": "owner", "nameLocation": "9102:5:133", "nodeType": "VariableDeclaration", "scope": 23807, "src": "9094:13:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 23697, "name": "address", "nodeType": "ElementaryTypeName", "src": "9094:7:133", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 23700, "mutability": "mutable", "name": "spender", "nameLocation": "9125:7:133", "nodeType": "VariableDeclaration", "scope": 23807, "src": "9117:15:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }, "typeName": { "id": 23699, "name": "address", "nodeType": "ElementaryTypeName", "src": "9117:7:133", "stateMutability": "nonpayable", "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" } }, "visibility": "internal" }, { "constant": false, "id": 23702, "mutability": "mutable", "name": "value", "nameLocation": "9150:5:133", "nodeType": "VariableDeclaration", "scope": 23807, "src": "9142:13:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23701, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9142:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 23704, "mutability": "mutable", "name": "deadline", "nameLocation": "9173:8:133", "nodeType": "VariableDeclaration", "scope": 23807, "src": "9165:16:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }, "typeName": { "id": 23703, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "9165:7:133", "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" } }, "visibility": "internal" }, { "constant": false, "id": 23706, "mutability": "mutable", "name": "v", "nameLocation": "9197:1:133", "nodeType": "VariableDeclaration", "scope": 23807, "src": "9191:7:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" }, "typeName": { "id": 23705, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "9191:5:133", "typeDescriptions": { "typeIdentifier": "t_uint8", "typeString": "uint8" } }, "visibility": "internal" }, { "constant": false, "id": 23708, "mutability": "mutable", "name": "r", "nameLocation": "9216:1:133", "nodeType": "VariableDeclaration", "scope": 23807, "src": "9208:9:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 23707, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "9208:7:133", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }, { "constant": false, "id": 23710, "mutability": "mutable", "name": "s", "nameLocation": "9235:1:133", "nodeType": "VariableDeclaration", "scope": 23807, "src": "9227:9:133", "stateVariable": false, "storageLocation": "default", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }, "typeName": { "id": 23709, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "9227:7:133", "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" } }, "visibility": "internal" }], "src": "9084:158:133" }, "returnParameters": { "id": 23712, "nodeType": "ParameterList", "parameters": [], "src": "9252:0:133" }, "scope": 23808, "stateMutability": "nonpayable", "virtual": false, "visibility": "external" }], "abstract": false, "baseContracts": [{ "baseName": { "id": 23434, "name": "IERC20Forwarder", "nameLocations": ["1119:15:133"], "nodeType": "IdentifierPath", "referencedDeclaration": 10486, "src": "1119:15:133" }, "id": 23435, "nodeType": "InheritanceSpecifier", "src": "1119:15:133" }], "canonicalName": "ERC20Forwarder", "contractDependencies": [], "contractKind": "contract", "documentation": { "id": 23433, "nodeType": "StructuredDocumentation", "src": "339:753:133", "text": "@author DELV\n @title ERC20Forwarder\n @notice This ERC20Forwarder serves as an ERC20 interface for sub-tokens\n         in a MultiToken contract. This makes it possible for sub-tokens to\n         be used as if they were ERC20 tokens in integrating protocols.\n @dev This is a permissionless deployed bridge that is linked to a\n      MultiToken contract by a create2 deployment validation. With this in\n      mind, this forwarder MUST be deployed by the right factory in order to\n      function properly.\n @custom:disclaimer The language used in this code is for coding convenience\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance." }, "fullyImplemented": true, "linearizedBaseContracts": [23808, 10486, 10417], "name": "ERC20Forwarder", "nameLocation": "1101:14:133", "scope": 23809, "usedErrors": [10428, 10431, 10434], "usedEvents": [10333, 10342] }], "license": "Apache-2.0" }, "id": 133 };
