export declare const EzETHHyperdriveDeployerCoordinator: {
    readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_coreDeployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target0Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target1Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target2Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target3Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_target4Deployer";
            readonly type: "address";
        }, {
            readonly internalType: "contract IRestakeManager";
            readonly name: "_restakeManager";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentAlreadyExists";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeploymentDoesNotExist";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "HyperdriveAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "HyperdriveIsNotDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncompleteDeployment";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InsufficientValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCheckpointDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidFeeAmounts";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumShareReserves";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidMinimumTransactionAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidPositionDuration";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidTargetIndex";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedConfig";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MismatchedExtraData";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotPayable";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotPayable";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TargetAlreadyDeployed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UnsupportedToken";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "coreDeployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sweepCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "contract IERC20";
                readonly name: "baseToken";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "linkerFactory";
                readonly type: "address";
            }, {
                readonly internalType: "bytes32";
                readonly name: "linkerCodeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumShareReserves";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minimumTransactionAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "positionDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "checkpointDuration";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "timeStretch";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "governance";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "feeCollector";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "sweepCollector";
                readonly type: "address";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "curve";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "flat";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceLP";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "governanceZombie";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct IHyperdrive.Fees";
                readonly name: "fees";
                readonly type: "tuple";
            }];
            readonly internalType: "struct IHyperdrive.PoolDeployConfig";
            readonly name: "_deployConfig";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_extraData";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_targetIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }];
        readonly name: "deployTarget";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "target";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_deployer";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }];
        readonly name: "deployments";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "configHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "extraDataHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "initialSharePrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "hyperdrive";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target0";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target1";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target2";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target3";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "target4";
                readonly type: "address";
            }];
            readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "ezETH";
        readonly outputs: readonly [{
            readonly internalType: "contract IERC20";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_deploymentId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_lp";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_contribution";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_apr";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "destination";
                readonly type: "address";
            }, {
                readonly internalType: "bool";
                readonly name: "asBase";
                readonly type: "bool";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraData";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IHyperdrive.Options";
            readonly name: "_options";
            readonly type: "tuple";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "lpShares";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "restakeManager";
        readonly outputs: readonly [{
            readonly internalType: "contract IRestakeManager";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target0Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target1Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target2Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target3Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "target4Deployer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "";
        readonly sourceMap: "872:4395:9:-:0;;;1586:587;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3753:28:0;;;;;3791:34;;;;;3835;;;;;3879;;;;;3923;;;;;3967;;;;;2085:32:9;::::1;;::::0;;;2142:23:::1;::::0;;-1:-1:-1;;;2142:23:9;;;;:21:::1;::::0;:23:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;2085:32;2142:23:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2127:39:9::1;;::::0;-1:-1:-1;872:4395:9;;-1:-1:-1;;;;;;872:4395:9;14:131:235;-1:-1:-1;;;;;89:31:235;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:1084::-;299:6;307;315;323;331;339;347;400:3;388:9;379:7;375:23;371:33;368:53;;;417:1;414;407:12;368:53;449:9;443:16;468:31;493:5;468:31;:::i;:::-;568:2;553:18;;547:25;518:5;;-1:-1:-1;581:33:235;547:25;581:33;:::i;:::-;685:2;670:18;;664:25;633:7;;-1:-1:-1;698:33:235;664:25;698:33;:::i;:::-;802:2;787:18;;781:25;750:7;;-1:-1:-1;815:33:235;781:25;815:33;:::i;:::-;919:3;904:19;;898:26;867:7;;-1:-1:-1;933:33:235;898:26;933:33;:::i;:::-;1037:3;1022:19;;1016:26;985:7;;-1:-1:-1;1051:33:235;1016:26;1051:33;:::i;:::-;1155:3;1140:19;;1134:26;1103:7;;-1:-1:-1;1169:33:235;1134:26;1169:33;:::i;:::-;1221:7;1211:17;;;150:1084;;;;;;;;;;:::o;1239:251::-;1309:6;1362:2;1350:9;1341:7;1337:23;1333:32;1330:52;;;1378:1;1375;1368:12;1330:52;1410:9;1404:16;1429:31;1454:5;1429:31;:::i;:::-;1479:5;1239:251;-1:-1:-1;;;1239:251:235:o;:::-;872:4395:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "";
        readonly sourceMap: "872:4395:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1126:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;311:32:235;;;293:51;;281:2;266:18;1126:29:9;;;;;;;;14865:1363:0;;;;;;:::i;:::-;;:::i;:::-;;;3584:25:235;;;3572:2;3557:18;14865:1363:0;3438:177:235;8078:6076:0;;;;;;;;;;-1:-1:-1;8078:6076:0;;;;;:::i;:::-;;:::i;16434:189::-;;;;;;;;;;-1:-1:-1;16434:189:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4439:3006::-;;;;;;;;;;-1:-1:-1;4439:3006:0;;;;;:::i;:::-;;:::i;3007:40::-;;;;;;;;;;;;;;;2626;;;;;;;;;;;;;;;2880;;;;;;;;;;;;;;;2499;;;;;;;;;;;;;;;2753;;;;;;;;;;;;;;;2375:37;;;;;;;;;;;;;;;1030:47:9;;;;;;;;;;;;;;;14865:1363:0;15067:16;15145:20;:18;:20::i;:::-;15300:10;15237:22;15287:24;;;;;;;;;;;:39;;;;;;;;:50;;;-1:-1:-1;;;;;15287:50:0;;15357:127;;15417:56;;-1:-1:-1;;;15417:56:0;;;;;;;;;;;15357:127;15564:13;15580:118;15612:10;15636:3;15653:13;15680:8;15580:18;:118::i;:::-;15564:134;;15758:10;-1:-1:-1;;;;;15758:21:0;;15788:5;15809:13;15836:4;15854:8;15758:114;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15747:125;-1:-1:-1;15933:14:0;15950:17;15962:5;15950:9;:17;:::i;:::-;15933:34;-1:-1:-1;15981:10:0;;15977:219;;16026:45;;16008:12;;16034:10;;16059:6;;16008:12;16026:45;16008:12;16026:45;16059:6;16034:10;16026:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16007:64;;;16090:7;16085:101;;16124:47;;-1:-1:-1;;;16124:47:0;;;;;;;;;;;16085:101;15993:203;15977:219;16206:15;;;14865:1363;;;;;;;;:::o;8078:6076::-;8300:14;8571:12;8587:1;8571:17;8567:1981;;8781:10;8830:1;8768:24;;;;;;;;;;;:39;;;;;;;;:50;:64;8747:196;;8872:56;;-1:-1:-1;;;8872:56:0;;;;;;;;;;;8747:196;9077:31;9094:13;9077:16;:31::i;:::-;9226:25;9254:38;9281:10;9254:26;:38::i;:::-;9226:66;;9306:19;9349:13;9338:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;9328:36;;;;;;9306:58;;9378:21;9412:10;9402:21;;;;;;9378:45;;9554:37;9594:60;9627:13;9594:15;:60::i;:::-;9668:30;;;;:50;;;10056:44;;;10067:10;10056:44;;;12007:51:235;12074:18;;;12067:34;;;12117:18;;;12110:34;;;9554:100:0;;-1:-1:-1;;;;;;9812:15:0;9786:49;;;;9554:100;;9878:10;;11980:18:235;;10056:44:0;;;;;;;;;;;;10046:55;;;;;;9786:329;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10180:10;10167:12;:24;;;;;;;;;;;:39;;;;;;;;:64;;;10245:70;;;:86;;;;-1:-1:-1;10345:74:0;;;:94;;;;10453:47;;:56;;-1:-1:-1;;;;;;10453:56:0;-1:-1:-1;;;;;10453:56:0;;;;;:39;-1:-1:-1;10524:13:0;;8567:1981;10727:10;10693:18;10714:24;;;;;;;;;;;:39;;;;;;;;:50;;10774:117;;10825:55;;-1:-1:-1;;;10825:55:0;;;;;;;;;;;10774:117;11013:10;10994:13;10983:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;10973:36;;;;;;:50;10969:137;;11046:49;;-1:-1:-1;;;11046:49:0;;;;;;;;;;;10969:137;11259:10;11246:12;:24;;;;;;;;;;;:39;;;;;;;;:53;;;11209:21;;;;;;;;;:90;11192:202;;11331:52;;-1:-1:-1;;;11331:52:0;;;;;;;;;;;11192:202;11670:31;11687:13;11670:16;:31::i;:::-;11820:36;11859:30;11875:13;11859:15;:30::i;:::-;11944:10;11931:12;:24;;;;;;;;;;;:39;;;;;;;;:70;;;11899:29;;;:102;11820:69;-1:-1:-1;12281:1:0;12265:17;;;12261:1863;;12315:10;12361:1;12302:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12302:47:0;:61;12298:161;;12390:54;;-1:-1:-1;;;12390:54:0;;;;;;;;;;;12298:161;12481:138;;-1:-1:-1;;;12481:138:0;;-1:-1:-1;;;;;12507:15:0;12481:49;;;;:138;;12548:6;;12572:10;;12600:5;;12481:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12646:10;12633:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;12633:56:0;-1:-1:-1;;;;;12633:56:0;;;;;;-1:-1:-1;12261:1863:0;;;12710:12;12726:1;12710:17;12706:1418;;12760:10;12806:1;12747:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;12747:47:0;:61;12743:161;;12835:54;;-1:-1:-1;;;12835:54:0;;;;;;;;;;;12743:161;12926:138;;-1:-1:-1;;;12926:138:0;;-1:-1:-1;;;;;12952:15:0;12926:49;;;;:138;;12993:6;;13017:10;;13045:5;;12926:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13091:10;13078:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13078:56:0;-1:-1:-1;;;;;13078:56:0;;;;;;-1:-1:-1;12706:1418:0;;;13155:12;13171:1;13155:17;13151:973;;13205:10;13251:1;13192:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;13192:47:0;:61;13188:161;;13280:54;;-1:-1:-1;;;13280:54:0;;;;;;;;;;;13188:161;13371:138;;-1:-1:-1;;;13371:138:0;;-1:-1:-1;;;;;13397:15:0;13371:49;;;;:138;;13438:6;;13462:10;;13490:5;;13371:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13536:10;13523:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13523:56:0;-1:-1:-1;;;;;13523:56:0;;;;;;-1:-1:-1;13151:973:0;;;13600:12;13616:1;13600:17;13596:528;;13650:10;13696:1;13637:24;;;;;;;;;;;:39;;;;;;;;:47;;;-1:-1:-1;;;;;13637:47:0;:61;13633:161;;13725:54;;-1:-1:-1;;;13725:54:0;;;;;;;;;;;13633:161;13816:138;;-1:-1:-1;;;13816:138:0;;-1:-1:-1;;;;;13842:15:0;13816:49;;;;:138;;13883:6;;13907:10;;13935:5;;13816:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13981:10;13968:12;:24;;;;;;;;;;;:39;;;;;;;;:47;;:56;;-1:-1:-1;;;;;;13968:56:0;-1:-1:-1;;;;;13968:56:0;;;;;;-1:-1:-1;13596:528:0;;;14062:51;;-1:-1:-1;;;14062:51:0;;;;;;;;;;;13596:528;14134:13;;8078:6076;;;;;;;:::o;16434:189::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16578:23:0;;;:12;:23;;;;;;;;;;;:38;;;;;;;;;16571:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16434:189;;;;;:::o;4439:3006::-;4768:10;4625:7;4755:24;;;;;;;;;;;:39;;;;;;;;4724:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4724:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4808:35;4804:131;;4866:58;;-1:-1:-1;;;4866:58:0;;;;;;;;;;;4804:131;5084:21;;5080:128;;5142:55;;-1:-1:-1;;;5142:55:0;;;;;;;;;;;5080:128;5297:18;;;;-1:-1:-1;;;;;5297:32:0;;;:80;;-1:-1:-1;5345:18:0;;;;-1:-1:-1;;;;;5345:32:0;;5297:80;:128;;;-1:-1:-1;5393:18:0;;;;-1:-1:-1;;;;;5393:32:0;;5297:128;:176;;;-1:-1:-1;5441:18:0;;;;-1:-1:-1;;;;;5441:32:0;;5297:176;:224;;;-1:-1:-1;5489:18:0;;;;-1:-1:-1;;;;;5489:32:0;;5297:224;5280:337;;;5553:53;;-1:-1:-1;;;5553:53:0;;;;;;;;;;;5280:337;5739:21;;5709:25;;;;5720:13;;5709:25;;;:::i;:::-;;;;;;;;;;;;;5699:36;;;;;;:61;5695:148;;5783:49;;-1:-1:-1;;;5783:49:0;;;;;;;;;;;5695:148;5958:10;:24;;;5943:10;5933:21;;;;;;:49;5929:139;;6005:52;;-1:-1:-1;;;6005:52:0;;;;;;;;;;;5929:139;6344:31;6361:13;6344:16;:31::i;:::-;6494:36;6533:30;6549:13;6533:15;:30::i;:::-;6494:69;;6605:10;:28;;;6573:6;:29;;:60;;;;;6723:20;6746:13;6723:36;;6799:12;6814:5;6799:20;;6859:18;6904:12;-1:-1:-1;;;;;6880:44:0;;6938:6;6958:10;6982;:18;;;7014:10;:18;;;7046:10;:18;;;7078:10;:18;;;7110:10;:18;;;7295:10;7307:12;7321:4;7284:42;;;;;;;;;-1:-1:-1;;;;;12025:32:235;;;;12007:51;;12089:2;12074:18;;12067:34;;;;12132:2;12117:18;;12110:34;11995:2;11980:18;;11805:345;7284:42:0;;;;;;;;;;;;;7274:53;;;;;;6880:457;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7360:10;7347:12;:24;;;;;;;;;;;:39;;;;;;;;;;:50;;:63;;-1:-1:-1;;;;;;7347:63:0;-1:-1:-1;;;;;7347:63:0;;;;;-1:-1:-1;7347:63:0;;4439:3006;-1:-1:-1;;;;;;;;4439:3006:0:o;3477:144:9:-;3544:9;:13;3540:75;;3580:24;;-1:-1:-1;;;3580:24:9;;;;;;;;;;;3540:75;3477:144::o;2825:595::-;3016:13;3090:8;:15;;;3086:83;;;3128:30;;-1:-1:-1;;;3128:30:9;;;;;;;;;;;3086:83;3278:53;;-1:-1:-1;;;3278:53:9;;-1:-1:-1;;;;;15262:15:235;;;3278:53:9;;;15244:34:235;3310:4:9;15294:18:235;;;15287:43;15346:18;;;15339:34;;;3278:5:9;:18;;;;15179::235;;3278:53:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3341:50:9;;-1:-1:-1;;;3341:50:9;;-1:-1:-1;;;;;15826:32:235;;;3341:50:9;;;15808:51:235;15875:18;;;15868:34;;;3341:5:9;:13;;;;15781:18:235;;3341:50:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2825:595;;;;;;:::o;3779:920::-;3942:37;3965:13;3942:22;:37::i;:::-;4242:13;:34;;;4280:4;4242:42;4238:140;;4307:60;;-1:-1:-1;;;4307:60:9;;;;;;;;;;;4238:140;4532:13;:38;;;4574:4;4532:46;4528:165;;4601:81;;-1:-1:-1;;;4601:81:9;;;;;;;;;;;4528:165;3779:920;:::o;4847:418::-;4964:7;5041:16;5061:14;-1:-1:-1;;;;;5061:28:9;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5061:30:9;;;;;;;;;;;;:::i;:::-;5036:55;;;;5101:19;5123:5;-1:-1:-1;;;;;5123:17:9;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5101:41;-1:-1:-1;5229:29:9;:8;5101:41;5229:16;:29::i;:::-;5222:36;4847:418;-1:-1:-1;;;;4847:418:9:o;19584:926:0:-;19697:37;;:::i;:::-;19833:23;;-1:-1:-1;;;;;19813:43:0;;;;;19890:27;;;;;19866:51;;:21;;;:51;19952:28;;;;;19927:22;;;:53;20021:34;;;;19990:28;;;;:65;;;;20100:51;;;20065:32;;;;:86;;;;20188:30;;;20161:24;;;;:57;;;;20257:32;;;20228:26;;;;:61;;;;20321:25;;;20299:19;;;;:47;;;;20377:24;;;20356:45;;:18;;;;:45;;;;20434:26;;;20411:49;:20;;;:49;20485:18;;;;;20470:12;;;:33;19813:7;19584:926::o;17842:1191::-;18143:3;18106:13;:34;;;:40;18102:138;;;18169:60;;-1:-1:-1;;;18169:60:0;;;;;;;;;;;18102:138;18254:13;:32;;;18290:1;18254:37;18250:133;;18314:58;;-1:-1:-1;;;18314:58:0;;;;;;;;;;;18250:133;18442:13;:32;;;18409:13;:30;;;:65;:163;;;;18523:13;:32;;;18490:13;:30;;;:65;;;;:::i;:::-;:82;;18409:163;18392:279;;;18604:56;;-1:-1:-1;;;18604:56:0;;;;;;;;;;;18392:279;18749:18;;;;:24;193:4:124;-1:-1:-1;18749:30:0;:75;;;193:4:124;18795:13:0;:18;;;:23;;;:29;18749:75;:128;;;;193:4:124;18840:13:0;:18;;;:31;;;:37;18749:128;:185;;;;193:4:124;18893:13:0;:18;;;:35;;;:41;18749:185;18732:295;;;18966:50;;-1:-1:-1;;;18966:50:0;;;;;;;;;;;1884:164:124;1946:7;1973:21;1984:1;193:4;1992:1;1973:10;:21::i;:::-;1965:30;1884:164;-1:-1:-1;;;1884:164:124:o;898:556::-;1014:9;1279:1;-1:-1:-1;;1262:19:124;1259:1;1256:26;1253:1;1249:34;1242:42;1229:11;1225:60;1198:146;;1328:1;1325;1318:12;1198:146;-1:-1:-1;1415:9:124;;1411:27;;898:556::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;355:131:235:-;-1:-1:-1;;;;;430:31:235;;420:42;;410:70;;476:1;473;466:12;491:134;559:20;;588:31;559:20;588:31;:::i;:::-;491:134;;;:::o;630:127::-;691:10;686:3;682:20;679:1;672:31;722:4;719:1;712:15;746:4;743:1;736:15;762:251;834:2;828:9;876:2;864:15;;909:18;894:34;;930:22;;;891:62;888:88;;;956:18;;:::i;:::-;992:2;985:22;762:251;:::o;1018:255::-;1090:2;1084:9;1132:6;1120:19;;1169:18;1154:34;;1190:22;;;1151:62;1148:88;;;1216:18;;:::i;1278:275::-;1349:2;1343:9;1414:2;1395:13;;-1:-1:-1;;1391:27:235;1379:40;;1449:18;1434:34;;1470:22;;;1431:62;1428:88;;;1496:18;;:::i;:::-;1532:2;1525:22;1278:275;;-1:-1:-1;1278:275:235:o;1558:118::-;1644:5;1637:13;1630:21;1623:5;1620:32;1610:60;;1666:1;1663;1656:12;1681:530;1723:5;1776:3;1769:4;1761:6;1757:17;1753:27;1743:55;;1794:1;1791;1784:12;1743:55;1830:6;1817:20;1856:18;1852:2;1849:26;1846:52;;;1878:18;;:::i;:::-;1922:55;1965:2;1946:13;;-1:-1:-1;;1942:27:235;1971:4;1938:38;1922:55;:::i;:::-;2002:2;1993:7;1986:19;2048:3;2041:4;2036:2;2028:6;2024:15;2020:26;2017:35;2014:55;;;2065:1;2062;2055:12;2014:55;2130:2;2123:4;2115:6;2111:17;2104:4;2095:7;2091:18;2078:55;2178:1;2153:16;;;2171:4;2149:27;2142:38;;;;2157:7;1681:530;-1:-1:-1;;;1681:530:235:o;2216:1217::-;2337:6;2345;2353;2361;2369;2422:3;2410:9;2401:7;2397:23;2393:33;2390:53;;;2439:1;2436;2429:12;2390:53;2475:9;2462:23;2452:33;;2535:2;2524:9;2520:18;2507:32;2548:31;2573:5;2548:31;:::i;:::-;2598:5;-1:-1:-1;2650:2:235;2635:18;;2622:32;;-1:-1:-1;2701:2:235;2686:18;;2673:32;;-1:-1:-1;2756:3:235;2741:19;;2728:33;2780:18;2810:14;;;2807:34;;;2837:1;2834;2827:12;2807:34;2860:22;;;;2916:2;2898:16;;;2894:25;2891:45;;;2932:1;2929;2922:12;2891:45;2960:22;;:::i;:::-;3019:2;3006:16;3031:33;3056:7;3031:33;:::i;:::-;3073:24;;3142:2;3134:11;;3121:25;3155:30;3121:25;3155:30;:::i;:::-;3214:2;3201:16;;3194:33;3273:2;3265:11;;3252:25;3289:16;;;3286:36;;;3318:1;3315;3308:12;3286:36;3356:44;3392:7;3381:8;3377:2;3373:17;3356:44;:::i;:::-;3351:2;3342:7;3338:16;3331:70;;3420:7;3410:17;;;;;2216:1217;;;;;;;;:::o;3620:601::-;3671:5;3719:4;3707:9;3702:3;3698:19;3694:30;3691:50;;;3737:1;3734;3727:12;3691:50;3770:2;3764:9;3812:4;3804:6;3800:17;3883:6;3871:10;3868:22;3847:18;3835:10;3832:34;3829:62;3826:88;;;3894:18;;:::i;:::-;3934:10;3930:2;3923:22;;3963:6;3954:15;;4006:9;3993:23;3985:6;3978:39;4078:2;4067:9;4063:18;4050:32;4045:2;4037:6;4033:15;4026:57;4144:2;4133:9;4129:18;4116:32;4111:2;4103:6;4099:15;4092:57;4210:2;4199:9;4195:18;4182:32;4177:2;4169:6;4165:15;4158:57;;3620:601;;;;:::o;4226:1084::-;4289:5;4337:6;4325:9;4320:3;4316:19;4312:32;4309:52;;;4357:1;4354;4347:12;4309:52;4379:22;;:::i;:::-;4370:31;;4424:29;4443:9;4424:29;:::i;:::-;4417:5;4410:44;4486:38;4520:2;4509:9;4505:18;4486:38;:::i;:::-;4481:2;4474:5;4470:14;4463:62;4585:2;4574:9;4570:18;4557:32;4552:2;4545:5;4541:14;4534:56;4650:2;4639:9;4635:18;4622:32;4617:2;4610:5;4606:14;4599:56;4716:3;4705:9;4701:19;4688:33;4682:3;4675:5;4671:15;4664:58;4783:3;4772:9;4768:19;4755:33;4749:3;4742:5;4738:15;4731:58;4850:3;4839:9;4835:19;4822:33;4816:3;4809:5;4805:15;4798:58;4917:3;4906:9;4902:19;4889:33;4883:3;4876:5;4872:15;4865:58;4942:3;4977:38;5011:2;5000:9;4996:18;4977:38;:::i;:::-;4961:14;;;4954:62;5035:3;5070:38;5089:18;;;5070:38;:::i;:::-;5054:14;;;5047:62;5128:3;5163:38;5182:18;;;5163:38;:::i;:::-;5147:14;;;5140:62;5221:3;5256:47;5299:3;5279:18;;;5256:47;:::i;:::-;5240:14;;;5233:71;5244:5;4226:1084;-1:-1:-1;;4226:1084:235:o;5315:662::-;5454:6;5462;5470;5478;5486;5539:3;5527:9;5518:7;5514:23;5510:33;5507:53;;;5556:1;5553;5546:12;5507:53;5592:9;5579:23;5569:33;;5621:63;5676:7;5671:2;5660:9;5656:18;5621:63;:::i;:::-;5611:73;;5735:3;5724:9;5720:19;5707:33;5763:18;5755:6;5752:30;5749:50;;;5795:1;5792;5785:12;5749:50;5818:49;5859:7;5850:6;5839:9;5835:22;5818:49;:::i;:::-;5315:662;;;;-1:-1:-1;5808:59:235;;5914:3;5899:19;;5886:33;;-1:-1:-1;5966:3:235;5951:19;5938:33;;5315:662;-1:-1:-1;;;5315:662:235:o;6190:315::-;6258:6;6266;6319:2;6307:9;6298:7;6294:23;6290:32;6287:52;;;6335:1;6332;6325:12;6287:52;6374:9;6361:23;6393:31;6418:5;6393:31;:::i;:::-;6443:5;6495:2;6480:18;;;;6467:32;;-1:-1:-1;;;6190:315:235:o;6510:1119::-;6727:13;;6709:32;;6797:4;6785:17;;;6779:24;6757:20;;;6750:54;6860:4;6848:17;;;6842:24;6820:20;;;6813:54;6914:4;6902:17;;;6896:24;-1:-1:-1;;;;;6996:21:235;;;6974:20;;;6967:51;;;;7078:4;7066:17;;;7060:24;7056:33;;7034:20;;;7027:63;6947:3;7127:17;;;7121:24;88:31;;7197:20;;;76:44;7267:4;7255:17;;;7249:24;88:31;;7325:20;;;76:44;7395:4;7383:17;;;7377:24;88:31;;7453:20;;;76:44;7493:6;7536:15;;;7530:22;88:31;;;7604:18;;;76:44;6696:3;6681:19;;;7561:62;;;6510:1119;;;;:::o;7634:593::-;7764:6;7772;7780;7788;7841:3;7829:9;7820:7;7816:23;7812:33;7809:53;;;7858:1;7855;7848:12;7809:53;7894:9;7881:23;7871:33;;7923:63;7978:7;7973:2;7962:9;7958:18;7923:63;:::i;:::-;7913:73;;8037:3;8026:9;8022:19;8009:33;8065:18;8057:6;8054:30;8051:50;;;8097:1;8094;8087:12;8051:50;8120:49;8161:7;8152:6;8141:9;8137:22;8120:49;:::i;:::-;7634:593;;;;-1:-1:-1;8110:59:235;;8216:3;8201:19;8188:33;;-1:-1:-1;;;7634:593:235:o;8465:422::-;8506:3;8544:5;8538:12;8571:6;8566:3;8559:19;8596:1;8606:162;8620:6;8617:1;8614:13;8606:162;;;8682:4;8738:13;;;8734:22;;8728:29;8710:11;;;8706:20;;8699:59;8635:12;8606:162;;;8610:3;8813:1;8806:4;8797:6;8792:3;8788:16;8784:27;8777:38;8876:4;8869:2;8865:7;8860:2;8852:6;8848:15;8844:29;8839:3;8835:39;8831:50;8824:57;;;8465:422;;;;:::o;8892:643::-;9129:6;9118:9;9111:25;9172:6;9167:2;9156:9;9152:18;9145:34;9215:2;9210;9199:9;9195:18;9188:30;9290:1;9286;9281:3;9277:11;9273:19;9264:6;9258:13;9254:39;9249:2;9238:9;9234:18;9227:67;9363:2;9355:6;9351:15;9345:22;9338:30;9331:38;9325:3;9314:9;9310:19;9303:67;9092:4;9417:2;9409:6;9405:15;9399:22;9458:2;9452:3;9441:9;9437:19;9430:31;9478:51;9524:3;9513:9;9509:19;9495:12;9478:51;:::i;:::-;9470:59;8892:643;-1:-1:-1;;;;;;8892:643:235:o;9540:184::-;9610:6;9663:2;9651:9;9642:7;9638:23;9634:32;9631:52;;;9679:1;9676;9669:12;9631:52;-1:-1:-1;9702:16:235;;9540:184;-1:-1:-1;9540:184:235:o;9729:225::-;9796:9;;;9817:11;;;9814:134;;;9870:10;9865:3;9861:20;9858:1;9851:31;9905:4;9902:1;9895:15;9933:4;9930:1;9923:15;10431:1369;10675:13;;-1:-1:-1;;;;;88:31:235;76:44;;10635:3;10620:19;;10747:4;10739:6;10735:17;10729:24;10762:62;10818:4;10807:9;10803:20;10789:12;-1:-1:-1;;;;;88:31:235;76:44;;14:112;10762:62;;10880:4;10872:6;10868:17;10862:24;10855:4;10844:9;10840:20;10833:54;10943:4;10935:6;10931:17;10925:24;10918:4;10907:9;10903:20;10896:54;11006:4;10998:6;10994:17;10988:24;10981:4;10970:9;10966:20;10959:54;11069:4;11061:6;11057:17;11051:24;11044:4;11033:9;11029:20;11022:54;11132:4;11124:6;11120:17;11114:24;11107:4;11096:9;11092:20;11085:54;11195:4;11187:6;11183:17;11177:24;11170:4;11159:9;11155:20;11148:54;11221:6;11276:2;11268:6;11264:15;11258:22;11289:62;11347:2;11336:9;11332:18;11316:14;-1:-1:-1;;;;;88:31:235;76:44;;14:112;11289:62;-1:-1:-1;;11370:6:235;11413:15;;;11407:22;-1:-1:-1;;;;;88:31:235;;11481:18;;;76:44;-1:-1:-1;;11519:6:235;11562:15;;;11556:22;-1:-1:-1;;;;;88:31:235;;11630:18;;;76:44;-1:-1:-1;;11668:6:235;11711:15;;;11705:22;10239:12;;11775:18;;;10227:25;10301:4;10290:16;;10284:23;10268:14;;;10261:47;10357:4;10346:16;;10340:23;10324:14;;;10317:47;10413:4;10402:16;;10396:23;10380:14;;;10373:47;11736:58;10169:257;12155:1209;12246:12;;-1:-1:-1;;;;;88:31:235;76:44;;12310:4;12303:5;12299:16;12293:23;12325:56;12375:4;12370:3;12366:14;12352:12;-1:-1:-1;;;;;88:31:235;76:44;;14:112;12325:56;;12430:4;12423:5;12419:16;12413:23;12406:4;12401:3;12397:14;12390:47;12486:4;12479:5;12475:16;12469:23;12462:4;12457:3;12453:14;12446:47;12542:4;12535:5;12531:16;12525:23;12518:4;12513:3;12509:14;12502:47;12598:4;12591:5;12587:16;12581:23;12574:4;12569:3;12565:14;12558:47;12654:4;12647:5;12643:16;12637:23;12630:4;12625:3;12621:14;12614:47;12710:4;12703:5;12699:16;12693:23;12686:4;12681:3;12677:14;12670:47;12736:6;12789:2;12782:5;12778:14;12772:21;12767:2;12762:3;12758:12;12751:43;;12813:6;12867:2;12860:5;12856:14;12850:21;12880:56;12932:2;12927:3;12923:12;12907:14;-1:-1:-1;;;;;88:31:235;76:44;;14:112;12880:56;-1:-1:-1;;12955:6:235;12998:14;;;12992:21;-1:-1:-1;;;;;88:31:235;;;13065:12;;;76:44;;;;13097:6;13140:14;;;13134:21;88:31;;;13207:12;;;76:44;13239:6;13282:14;;;13276:21;10239:12;;13345;;;10227:25;;;;10301:4;10290:16;;10284:23;10268:14;;;10261:47;10357:4;10346:16;;10340:23;10324:14;;;10317:47;10413:4;10402:16;10396:23;10380:14;;;;10373:47;12155:1209::o;13369:463::-;13593:4;13622:3;13634:47;13671:9;13663:6;13634:47;:::i;:::-;13718:2;13712:3;13701:9;13697:19;13690:31;13738:44;13778:2;13767:9;13763:18;13755:6;13738:44;:::i;:::-;13730:52;;;13819:6;13813:3;13802:9;13798:19;13791:35;13369:463;;;;;;:::o;13837:251::-;13907:6;13960:2;13948:9;13939:7;13935:23;13931:32;13928:52;;;13976:1;13973;13966:12;13928:52;14008:9;14002:16;14027:31;14052:5;14027:31;:::i;14093:906::-;14457:4;14486:3;14498:47;14535:9;14527:6;14498:47;:::i;:::-;14582:2;14576:3;14565:9;14561:19;14554:31;14602:44;14642:2;14631:9;14627:18;14619:6;14602:44;:::i;:::-;-1:-1:-1;;;;;14721:15:235;;;14715:3;14700:19;;14693:44;14774:15;;;14768:3;14753:19;;14746:44;-1:-1:-1;;14827:15:235;;;14821:3;14806:19;;14799:44;14880:15;;;14874:3;14859:19;;14852:44;14933:15;;;14927:3;14912:19;;14905:44;14980:3;14965:19;14958:35;;;;14594:52;14093:906;-1:-1:-1;;14093:906:235:o;15384:245::-;15451:6;15504:2;15492:9;15483:7;15479:23;15475:32;15472:52;;;15520:1;15517;15510:12;15472:52;15552:9;15546:16;15571:28;15593:5;15571:28;:::i;15913:193::-;15983:4;16016:18;16008:6;16005:30;16002:56;;;16038:18;;:::i;:::-;-1:-1:-1;16083:1:235;16079:14;16095:4;16075:25;;15913:193::o;16111:669::-;16176:5;16229:3;16222:4;16214:6;16210:17;16206:27;16196:55;;16247:1;16244;16237:12;16196:55;16276:6;16270:13;16302:4;16326:70;16342:53;16392:2;16342:53;:::i;:::-;16326:70;:::i;:::-;16430:15;;;16516:1;16512:10;;;;16500:23;;16496:32;;;16461:12;;;;16540:15;;;16537:35;;;16568:1;16565;16558:12;16537:35;16604:2;16596:6;16592:15;16616:135;16632:6;16627:3;16624:15;16616:135;;;16698:10;;16686:23;;16729:12;;;;16649;;16616:135;;;-1:-1:-1;16769:5:235;16111:669;-1:-1:-1;;;;;;16111:669:235:o;16785:1463::-;16948:6;16956;16964;17017:2;17005:9;16996:7;16992:23;16988:32;16985:52;;;17033:1;17030;17023:12;16985:52;17066:9;17060:16;17095:18;17136:2;17128:6;17125:14;17122:34;;;17152:1;17149;17142:12;17122:34;17190:6;17179:9;17175:22;17165:32;;17235:7;17228:4;17224:2;17220:13;17216:27;17206:55;;17257:1;17254;17247:12;17206:55;17286:2;17280:9;17308:4;17332:70;17348:53;17398:2;17348:53;:::i;17332:70::-;17436:15;;;17518:1;17514:10;;;;17506:19;;17502:28;;;17467:12;;;;17542:19;;;17539:39;;;17574:1;17571;17564:12;17539:39;17606:2;17602;17598:11;17618:368;17634:6;17629:3;17626:15;17618:368;;;17713:3;17707:10;17749:2;17736:11;17733:19;17730:109;;;17793:1;17822:2;17818;17811:14;17730:109;17864:79;17935:7;17930:2;17916:11;17912:2;17908:20;17904:29;17864:79;:::i;:::-;17852:92;;-1:-1:-1;17964:12:235;;;;17651;;17618:368;;;-1:-1:-1;18041:18:235;;;18035:25;18005:5;;-1:-1:-1;18035:25:235;;-1:-1:-1;;;18072:16:235;;;18069:36;;;18101:1;18098;18091:12;18069:36;;18124:74;18190:7;18179:8;18168:9;18164:24;18124:74;:::i;:::-;18114:84;;;18238:2;18227:9;18223:18;18217:25;18207:35;;16785:1463;;;;;:::o;18253:209::-;18285:1;18311;18301:132;;18355:10;18350:3;18346:20;18343:1;18336:31;18390:4;18387:1;18380:15;18418:4;18415:1;18408:15;18301:132;-1:-1:-1;18447:9:235;;18253:209::o";
        readonly linkReferences: {};
        readonly immutableReferences: {
            readonly "1741": readonly [{
                readonly start: 725;
                readonly length: 32;
            }, {
                readonly start: 4483;
                readonly length: 32;
            }];
            readonly "1745": readonly [{
                readonly start: 190;
                readonly length: 32;
            }, {
                readonly start: 4114;
                readonly length: 32;
            }, {
                readonly start: 4262;
                readonly length: 32;
            }, {
                readonly start: 4623;
                readonly length: 32;
            }];
            readonly "45": readonly [{
                readonly start: 673;
                readonly length: 32;
            }, {
                readonly start: 3686;
                readonly length: 32;
            }];
            readonly "48": readonly [{
                readonly start: 569;
                readonly length: 32;
            }, {
                readonly start: 1306;
                readonly length: 32;
            }];
            readonly "51": readonly [{
                readonly start: 465;
                readonly length: 32;
            }, {
                readonly start: 1895;
                readonly length: 32;
            }];
            readonly "54": readonly [{
                readonly start: 621;
                readonly length: 32;
            }, {
                readonly start: 2175;
                readonly length: 32;
            }];
            readonly "57": readonly [{
                readonly start: 517;
                readonly length: 32;
            }, {
                readonly start: 2455;
                readonly length: 32;
            }];
            readonly "60": readonly [{
                readonly start: 413;
                readonly length: 32;
            }, {
                readonly start: 2735;
                readonly length: 32;
            }];
        };
    };
    readonly methodIdentifiers: {
        readonly "coreDeployer()": "c83e1f51";
        readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": "8d10a15b";
        readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": "1b06a35b";
        readonly "deployments(address,bytes32)": "20503b3f";
        readonly "ezETH()": "13a73c78";
        readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": "16abfc70";
        readonly "restakeManager()": "ff0996b5";
        readonly "target0Deployer()": "ab71905f";
        readonly "target1Deployer()": "a085fa30";
        readonly "target2Deployer()": "b6cb1118";
        readonly "target3Deployer()": "aa8cd6c4";
        readonly "target4Deployer()": "966ecd1c";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coreDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target0Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target1Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target2Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target3Deployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target4Deployer\",\"type\":\"address\"},{\"internalType\":\"contract IRestakeManager\",\"name\":\"_restakeManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"DeploymentAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeploymentDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HyperdriveIsNotDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncompleteDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCheckpointDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeAmounts\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumShareReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumTransactionAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPositionDuration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTargetIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedConfig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MismatchedExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"coreDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkerFactory\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"linkerCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minimumShareReserves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTransactionAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"positionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpointDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStretch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sweepCollector\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"curve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceLP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"governanceZombie\",\"type\":\"uint256\"}],\"internalType\":\"struct IHyperdrive.Fees\",\"name\":\"fees\",\"type\":\"tuple\"}],\"internalType\":\"struct IHyperdrive.PoolDeployConfig\",\"name\":\"_deployConfig\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_targetIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deployTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"}],\"name\":\"deployments\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"configHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"extraDataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"initialSharePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"hyperdrive\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target3\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target4\",\"type\":\"address\"}],\"internalType\":\"struct HyperdriveDeployerCoordinator.Deployment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ezETH\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_deploymentId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"asBase\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct IHyperdrive.Options\",\"name\":\"_options\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpShares\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restakeManager\",\"outputs\":[{\"internalType\":\"contract IRestakeManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target0Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target1Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target2Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target3Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target4Deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"DELV\",\"custom:disclaimer\":\"The language used in this code is for coding convenience\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_coreDeployer\":\"The core deployer.\",\"_restakeManager\":\"The Renzo contract.\",\"_target0Deployer\":\"The target0 deployer.\",\"_target1Deployer\":\"The target1 deployer.\",\"_target2Deployer\":\"The target2 deployer.\",\"_target3Deployer\":\"The target3 deployer.\",\"_target4Deployer\":\"The target4 deployer.\"}},\"deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy Hyperdrive.\"},\"returns\":{\"_0\":\"The address of the newly deployed Hyperdrive instance.\"}},\"deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"details\":\"As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.\",\"params\":{\"_deployConfig\":\"The deploy configuration of the Hyperdrive pool.\",\"_deploymentId\":\"The ID of the deployment.\",\"_extraData\":\"The extra data that contains the pool and sweep targets.\",\"_salt\":\"The create2 salt used to deploy the target.\",\"_targetIndex\":\"The index of the target to deploy.\"},\"returns\":{\"target\":\"The address of the newly deployed target instance.\"}},\"deployments(address,bytes32)\":{\"params\":{\"_deployer\":\"The deployer.\",\"_deploymentId\":\"The deployment ID.\"},\"returns\":{\"_0\":\"The deployment.\"}},\"initialize(bytes32,address,uint256,uint256,(address,bool,bytes))\":{\"details\":\"This function utilizes several helper functions that provide      flexibility to implementations.\",\"params\":{\"_apr\":\"The target APR.\",\"_contribution\":\"The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.\",\"_deploymentId\":\"The ID of the deployment.\",\"_lp\":\"The LP that is initializing the pool.\",\"_options\":\"The options that configure how the initialization is        settled.\"},\"returns\":{\"lpShares\":\"The initial number of LP shares created.\"}}},\"title\":\"EzETHHyperdriveDeployerCoordinator\",\"version\":1},\"userdoc\":{\"errors\":{\"DeploymentAlreadyExists()\":[{\"notice\":\"Thrown when a user attempts to deploy target0 the deployment has         already been created.\"}],\"DeploymentDoesNotExist()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract that requires         the deployment to be created and the deployment doesn't exist.\"}],\"HyperdriveAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a hyperdrive contract         after it has already been deployed.\"}],\"HyperdriveIsNotDeployed()\":[{\"notice\":\"Thrown when a user attempts to initialize a hyperdrive contract         before is has been deployed.\"}],\"IncompleteDeployment()\":[{\"notice\":\"Thrown when a user attempts to deploy a Hyperdrive entrypoint         without first deploying the required targets.\"}],\"InsufficientValue()\":[{\"notice\":\"Thrown when a deployer provides an insufficient amount of base         to initialize a payable Hyperdrive instance.\"}],\"InvalidCheckpointDuration()\":[{\"notice\":\"Thrown when the checkpoint duration specified is zero.\"}],\"InvalidFeeAmounts()\":[{\"notice\":\"Thrown when the curve fee, flat fee, governance LP fee, or         governance zombie fee is greater than 100%.\"}],\"InvalidMinimumShareReserves()\":[{\"notice\":\"Thrown when the minimum share reserves is too small. The         absolute smallest allowable minimum share reserves is 1e3;         however, yield sources may require a larger minimum share         reserves.\"}],\"InvalidMinimumTransactionAmount()\":[{\"notice\":\"Thrown when the minimum transaction amount is too small.\"}],\"InvalidPositionDuration()\":[{\"notice\":\"Thrown when the position duration is smaller than the checkpoint         duration or is not a multiple of the checkpoint duration.\"}],\"InvalidTargetIndex()\":[{\"notice\":\"Thrown when a user attempts to deploy a target using a target         index that is outside of the accepted range.\"}],\"MismatchedConfig()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with a config that doesn't match the deployment's         config hash.\"}],\"MismatchedExtraData()\":[{\"notice\":\"Thrown when a user attempts to deploy a contract in an existing         deployment with extra data that doesn't match the deployment's         extra data hash.\"}],\"NotPayable()\":[{\"notice\":\"Thrown when ether is sent to an instance that doesn't accept         ether as a deposit asset.\"},{\"notice\":\"Thrown when ether is sent to an instance that doesn't accept         ether as a deposit asset.\"}],\"TargetAlreadyDeployed()\":[{\"notice\":\"Thrown when a user attempts to deploy a target contract after         it has already been deployed.\"}],\"TransferFailed()\":[{\"notice\":\"Thrown when an ether transfer fails.\"}],\"UnsupportedToken()\":[{\"notice\":\"Thrown when an unsupported option is passed to a function or         a user attempts to sweep an invalid token. The options and sweep         targets that are supported vary between instances.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Instantiates the deployer coordinator.\"},\"coreDeployer()\":{\"notice\":\"The contract used to deploy new instances of Hyperdrive.\"},\"deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)\":{\"notice\":\"Deploys a Hyperdrive instance with the given parameters.\"},\"deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)\":{\"notice\":\"Deploys a Hyperdrive target instance with the given parameters.\"},\"deployments(address,bytes32)\":{\"notice\":\"Gets the deployment specified by the deployer and deployment ID.\"},\"ezETH()\":{\"notice\":\"The ezETH token contract.\"},\"initialize(bytes32,address,uint256,uint256,(address,bool,bytes))\":{\"notice\":\"Initializes a pool that was deployed by this coordinator.\"},\"restakeManager()\":{\"notice\":\"The Renzo contract.\"},\"target0Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget0.\"},\"target1Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget1.\"},\"target2Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget2.\"},\"target3Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget3.\"},\"target4Deployer()\":{\"notice\":\"The contract used to deploy new instances of HyperdriveTarget4.\"}},\"notice\":\"The deployer coordinator for the EzETHHyperdrive implementation.                    only, and is not intended to, and does not, have any                    particular legal or regulatory significance.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/deployers/ezeth/EzETHHyperdriveDeployerCoordinator.sol\":\"EzETHHyperdriveDeployerCoordinator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/deployers/HyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xb914d1a15ee479fc2a5f6cea7e3032f5fe3c36c3d35abbdbe7f0e25ea871ec71\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d83f3ed3fd751c2324a69eeb8d165502b3330edf8497d9417c8e747e85949d49\",\"dweb:/ipfs/QmSnNbKq1Gmxa7HpG5LrqVqF47BQXmxPQJGYoV2XCspvxb\"]},\"contracts/src/deployers/ezeth/EzETHHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0x2f36d08bb1dac82d9eb93fa8770c551643d420fe02c97aa3791f39c680982ffe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4dc0eed7b38825dcbac89d97cda1815b97b9fdcbcb726053963bd8ebd0c9caaa\",\"dweb:/ipfs/QmRGsuwjPxP4NYXEenLiEiYfXR8ESHpN3ybjjCj6jq8Yjg\"]},\"contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac\",\"dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p\"]},\"contracts/src/interfaces/IHyperdrive.sol\":{\"keccak256\":\"0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf\",\"dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK\"]},\"contracts/src/interfaces/IHyperdriveCore.sol\":{\"keccak256\":\"0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24\",\"dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h\"]},\"contracts/src/interfaces/IHyperdriveCoreDeployer.sol\":{\"keccak256\":\"0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b\",\"dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU\"]},\"contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol\":{\"keccak256\":\"0xb21fef06e9a50d1dd8fb765fe9efe9dd0cf01dfba1edf519743930e64b6cec9b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f5dba59592d1f4ff5359367ceadac86a19dbb976958c5abf632c953ae10b8799\",\"dweb:/ipfs/QmTfWhYzcMaLtmJFymXPweCXu6njXQPtHf4mhPEWErR8V5\"]},\"contracts/src/interfaces/IHyperdriveEvents.sol\":{\"keccak256\":\"0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c\",\"dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG\"]},\"contracts/src/interfaces/IHyperdriveRead.sol\":{\"keccak256\":\"0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf\",\"dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6\"]},\"contracts/src/interfaces/IHyperdriveTargetDeployer.sol\":{\"keccak256\":\"0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed\",\"dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss\"]},\"contracts/src/interfaces/IMultiToken.sol\":{\"keccak256\":\"0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7\",\"dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp\"]},\"contracts/src/interfaces/IMultiTokenCore.sol\":{\"keccak256\":\"0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae\",\"dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs\"]},\"contracts/src/interfaces/IMultiTokenEvents.sol\":{\"keccak256\":\"0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222\",\"dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK\"]},\"contracts/src/interfaces/IMultiTokenMetadata.sol\":{\"keccak256\":\"0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3\",\"dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG\"]},\"contracts/src/interfaces/IMultiTokenRead.sol\":{\"keccak256\":\"0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11\",\"dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR\"]},\"contracts/src/interfaces/IRenzo.sol\":{\"keccak256\":\"0x61bdb85d6c6804facffa12d31496d3acfc9482de001ec8fb3d15f294e5fd5e00\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5519988953b2b131e9726ce2827a96fb3691f802d71501d30a10b5118e8a541d\",\"dweb:/ipfs/QmZZCtcg3SR2F37gareTCnbdS5QfHRwRBCH4Sr64jAJQ7F\"]},\"contracts/src/libraries/FixedPointMath.sol\":{\"keccak256\":\"0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd\",\"dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L\"]},\"contracts/src/libraries/SafeCast.sol\":{\"keccak256\":\"0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8\",\"dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_coreDeployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target0Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target1Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target2Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target3Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "_target4Deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "contract IRestakeManager";
                    readonly name: "_restakeManager";
                    readonly type: "address";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "constructor";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentAlreadyExists";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "DeploymentDoesNotExist";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "HyperdriveIsNotDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "IncompleteDeployment";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InsufficientValue";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidCheckpointDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidFeeAmounts";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumShareReserves";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidMinimumTransactionAmount";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidPositionDuration";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "InvalidTargetIndex";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedConfig";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "MismatchedExtraData";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "NotPayable";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "NotPayable";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TargetAlreadyDeployed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "TransferFailed";
            }, {
                readonly inputs: readonly [];
                readonly type: "error";
                readonly name: "UnsupportedToken";
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "coreDeployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deploy";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "struct IHyperdrive.PoolDeployConfig";
                    readonly name: "_deployConfig";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "contract IERC20";
                        readonly name: "baseToken";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "linkerFactory";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "linkerCodeHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumShareReserves";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "minimumTransactionAmount";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "positionDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "checkpointDuration";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "timeStretch";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "governance";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "feeCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "sweepCollector";
                        readonly type: "address";
                    }, {
                        readonly internalType: "struct IHyperdrive.Fees";
                        readonly name: "fees";
                        readonly type: "tuple";
                        readonly components: readonly [{
                            readonly internalType: "uint256";
                            readonly name: "curve";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "flat";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceLP";
                            readonly type: "uint256";
                        }, {
                            readonly internalType: "uint256";
                            readonly name: "governanceZombie";
                            readonly type: "uint256";
                        }];
                    }];
                }, {
                    readonly internalType: "bytes";
                    readonly name: "_extraData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_targetIndex";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_salt";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "deployTarget";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "target";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "_deployer";
                    readonly type: "address";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "deployments";
                readonly outputs: readonly [{
                    readonly internalType: "struct HyperdriveDeployerCoordinator.Deployment";
                    readonly name: "";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "bytes32";
                        readonly name: "configHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "bytes32";
                        readonly name: "extraDataHash";
                        readonly type: "bytes32";
                    }, {
                        readonly internalType: "uint256";
                        readonly name: "initialSharePrice";
                        readonly type: "uint256";
                    }, {
                        readonly internalType: "address";
                        readonly name: "hyperdrive";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target0";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target1";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target2";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target3";
                        readonly type: "address";
                    }, {
                        readonly internalType: "address";
                        readonly name: "target4";
                        readonly type: "address";
                    }];
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "ezETH";
                readonly outputs: readonly [{
                    readonly internalType: "contract IERC20";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "_deploymentId";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "address";
                    readonly name: "_lp";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_contribution";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "_apr";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "struct IHyperdrive.Options";
                    readonly name: "_options";
                    readonly type: "tuple";
                    readonly components: readonly [{
                        readonly internalType: "address";
                        readonly name: "destination";
                        readonly type: "address";
                    }, {
                        readonly internalType: "bool";
                        readonly name: "asBase";
                        readonly type: "bool";
                    }, {
                        readonly internalType: "bytes";
                        readonly name: "extraData";
                        readonly type: "bytes";
                    }];
                }];
                readonly stateMutability: "payable";
                readonly type: "function";
                readonly name: "initialize";
                readonly outputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "lpShares";
                    readonly type: "uint256";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "restakeManager";
                readonly outputs: readonly [{
                    readonly internalType: "contract IRestakeManager";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target0Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target1Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target2Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target3Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "target4Deployer";
                readonly outputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {
                    readonly constructor: {
                        readonly params: {
                            readonly _coreDeployer: "The core deployer.";
                            readonly _restakeManager: "The Renzo contract.";
                            readonly _target0Deployer: "The target0 deployer.";
                            readonly _target1Deployer: "The target1 deployer.";
                            readonly _target2Deployer: "The target2 deployer.";
                            readonly _target3Deployer: "The target3 deployer.";
                            readonly _target4Deployer: "The target4 deployer.";
                        };
                    };
                    readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy Hyperdrive.";
                        };
                        readonly returns: {
                            readonly _0: "The address of the newly deployed Hyperdrive instance.";
                        };
                    };
                    readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly details: "As a convention, target0 must be deployed first. After this, the      targets can be deployed in any order.";
                        readonly params: {
                            readonly _deployConfig: "The deploy configuration of the Hyperdrive pool.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _extraData: "The extra data that contains the pool and sweep targets.";
                            readonly _salt: "The create2 salt used to deploy the target.";
                            readonly _targetIndex: "The index of the target to deploy.";
                        };
                        readonly returns: {
                            readonly target: "The address of the newly deployed target instance.";
                        };
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly params: {
                            readonly _deployer: "The deployer.";
                            readonly _deploymentId: "The deployment ID.";
                        };
                        readonly returns: {
                            readonly _0: "The deployment.";
                        };
                    };
                    readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": {
                        readonly details: "This function utilizes several helper functions that provide      flexibility to implementations.";
                        readonly params: {
                            readonly _apr: "The target APR.";
                            readonly _contribution: "The amount of capital to supply. The units of this        quantity are either base or vault shares, depending on the value        of `_options.asBase`.";
                            readonly _deploymentId: "The ID of the deployment.";
                            readonly _lp: "The LP that is initializing the pool.";
                            readonly _options: "The options that configure how the initialization is        settled.";
                        };
                        readonly returns: {
                            readonly lpShares: "The initial number of LP shares created.";
                        };
                    };
                };
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {
                    readonly constructor: {
                        readonly notice: "Instantiates the deployer coordinator.";
                    };
                    readonly "coreDeployer()": {
                        readonly notice: "The contract used to deploy new instances of Hyperdrive.";
                    };
                    readonly "deploy(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive instance with the given parameters.";
                    };
                    readonly "deployTarget(bytes32,(address,address,bytes32,uint256,uint256,uint256,uint256,uint256,address,address,address,(uint256,uint256,uint256,uint256)),bytes,uint256,bytes32)": {
                        readonly notice: "Deploys a Hyperdrive target instance with the given parameters.";
                    };
                    readonly "deployments(address,bytes32)": {
                        readonly notice: "Gets the deployment specified by the deployer and deployment ID.";
                    };
                    readonly "ezETH()": {
                        readonly notice: "The ezETH token contract.";
                    };
                    readonly "initialize(bytes32,address,uint256,uint256,(address,bool,bytes))": {
                        readonly notice: "Initializes a pool that was deployed by this coordinator.";
                    };
                    readonly "restakeManager()": {
                        readonly notice: "The Renzo contract.";
                    };
                    readonly "target0Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget0.";
                    };
                    readonly "target1Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget1.";
                    };
                    readonly "target2Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget2.";
                    };
                    readonly "target3Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget3.";
                    };
                    readonly "target4Deployer()": {
                        readonly notice: "The contract used to deploy new instances of HyperdriveTarget4.";
                    };
                };
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "contracts/src/deployers/ezeth/EzETHHyperdriveDeployerCoordinator.sol": "EzETHHyperdriveDeployerCoordinator";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "contracts/src/deployers/HyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xb914d1a15ee479fc2a5f6cea7e3032f5fe3c36c3d35abbdbe7f0e25ea871ec71";
                readonly urls: readonly ["bzz-raw://d83f3ed3fd751c2324a69eeb8d165502b3330edf8497d9417c8e747e85949d49", "dweb:/ipfs/QmSnNbKq1Gmxa7HpG5LrqVqF47BQXmxPQJGYoV2XCspvxb"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/deployers/ezeth/EzETHHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0x2f36d08bb1dac82d9eb93fa8770c551643d420fe02c97aa3791f39c680982ffe";
                readonly urls: readonly ["bzz-raw://4dc0eed7b38825dcbac89d97cda1815b97b9fdcbcb726053963bd8ebd0c9caaa", "dweb:/ipfs/QmRGsuwjPxP4NYXEenLiEiYfXR8ESHpN3ybjjCj6jq8Yjg"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IERC20.sol": {
                readonly keccak256: "0x5f446a4987d57c64380d44c234ee079172e98bed9595ec067eb519898c3117d9";
                readonly urls: readonly ["bzz-raw://a3245994c58110716f5099c07e5cb270137356d288044f03c713d29c36e207ac", "dweb:/ipfs/QmYdn52sGRQKXfSyL8ieSz8HysG6R5kLJWsNwEnyX1e22p"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdrive.sol": {
                readonly keccak256: "0xb8ee04f3090b498966970e210f7de0f982f6445628556f2f176385423d8c5952";
                readonly urls: readonly ["bzz-raw://db789f03faa935c6e3b0882b6e873e8f683c9c8841a4b128366dcbe7321911bf", "dweb:/ipfs/QmSQh1cX79nApuSAfJbVN99dmEaE4CK9QwWfEGcwhJMBLK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCore.sol": {
                readonly keccak256: "0x68adcd293ff25711add1698b6024faa45beec01eb044bd0103d3020aa96d856e";
                readonly urls: readonly ["bzz-raw://0e0f5e35a7d2c656e249394d25896e5adfb9af3e210c01b9ef5fa81d25a45e24", "dweb:/ipfs/QmbLASezHPWHcbodqSfw3Qh9NzqekqVPM8FhCXKGTCXL1h"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveCoreDeployer.sol": {
                readonly keccak256: "0x8aaf56733c7d566752a7f4b70652645d1bd68889443b3a55313ff93a7b7a5761";
                readonly urls: readonly ["bzz-raw://52ca088c697f0bd94c371ab825575f53fa187d589386915b068bf1f108b2cf8b", "dweb:/ipfs/QmYGTYBULTU8LeQGcUgp7FLYrP973oXqwGofHbLj6crAiU"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol": {
                readonly keccak256: "0xb21fef06e9a50d1dd8fb765fe9efe9dd0cf01dfba1edf519743930e64b6cec9b";
                readonly urls: readonly ["bzz-raw://f5dba59592d1f4ff5359367ceadac86a19dbb976958c5abf632c953ae10b8799", "dweb:/ipfs/QmTfWhYzcMaLtmJFymXPweCXu6njXQPtHf4mhPEWErR8V5"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveEvents.sol": {
                readonly keccak256: "0x812ccb32dff907e8614c89a65196eec239eceb3e63f9f14dde2b2269c75a67c0";
                readonly urls: readonly ["bzz-raw://da5f2ce974bfcd8185342c121c879ba5aef23e1e4e7b36cf9fcba68296b8892c", "dweb:/ipfs/QmSho3PWs9bzejTYYjySuXcH9tVP4xFnkbUmSzQA54g8eG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveRead.sol": {
                readonly keccak256: "0x5922cbd86a7267c8fd19e3dc7a6f2636bad2b3330c28bca8e66adc7cd8ce2b55";
                readonly urls: readonly ["bzz-raw://ced8bce3f3c15a9f0bcdd11ba16e69651179edd6b16e267936788f4ab4d6eabf", "dweb:/ipfs/QmcoZPj4h2ym6r13KDU7JG2GoVdDWa1GwfKL2jjFRsp8H6"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IHyperdriveTargetDeployer.sol": {
                readonly keccak256: "0x7845ba86a634960ea10cc90004de897d994c5519ed382c7b6c7571447e30e205";
                readonly urls: readonly ["bzz-raw://00f26f094a5fe200d17030b43bcce07c1374ef1e1bd24acd9617c93ec746b0ed", "dweb:/ipfs/QmR7PkD3vAJX8d7psiduNuQhExvBFBsUjp9ZTiWNCPJiss"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiToken.sol": {
                readonly keccak256: "0xf5f82b8223e0c1bfcf4f73566a909ba07a9266960dfe2335c1494e06debbbe3f";
                readonly urls: readonly ["bzz-raw://920cf3fd66132a1e98a6a5708ad9a3bb047f4df8848119ab382b51094c1290a7", "dweb:/ipfs/QmWL3SyG8L91Coe9DsHz3Ke9tGMvYBf2NgRRDr3Fg5xFzp"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenCore.sol": {
                readonly keccak256: "0x5c27315743bb6ef8a121ecf72cb24d5c144786dedb6526ef010f580eb872e501";
                readonly urls: readonly ["bzz-raw://3e102c51bac9c82766c9826d97dc780a05a2bf64703b070757a7531a0851a1ae", "dweb:/ipfs/QmXYwbzPbiznj5AeDiX7NNfRE9xyhSx1huTMfMFndrUZWs"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenEvents.sol": {
                readonly keccak256: "0x165f79e628b1975343f979549f3fdb5073a29aeecb03861f41d165961ee39fdb";
                readonly urls: readonly ["bzz-raw://3c0751cf322944d080a7a6692897807d0cef798268689afc1f6c8f91182a4222", "dweb:/ipfs/QmQVWtCgphU9sjqD2q6F6ww62uXDSWZx5KJVj6jFJpXeDK"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenMetadata.sol": {
                readonly keccak256: "0xcc21ad6d3d4e3de354fbc25a472d940e5e2af0b48766404f9efecdac600d72ca";
                readonly urls: readonly ["bzz-raw://b48fa111a773c820fe578efdd737d164e3957930ed46f3f304c6a8602a7e26a3", "dweb:/ipfs/QmcA7bjBC6ZBvYyojZZx3eKpugHmSrAAA14p14bQugiVKG"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IMultiTokenRead.sol": {
                readonly keccak256: "0xac84dd306f29ae9d6becf764d93545c33f7c37737bb1aeb714c85930d0c074a0";
                readonly urls: readonly ["bzz-raw://d9082a16d5a736ab7ce5670be4f2475ea5c5fdae8ad7096ed9663f84eed96b11", "dweb:/ipfs/QmUTH8dZaQJt56UsT7N2aCUCKmjQYj7Ah53rRXk6DuVNUR"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/interfaces/IRenzo.sol": {
                readonly keccak256: "0x61bdb85d6c6804facffa12d31496d3acfc9482de001ec8fb3d15f294e5fd5e00";
                readonly urls: readonly ["bzz-raw://5519988953b2b131e9726ce2827a96fb3691f802d71501d30a10b5118e8a541d", "dweb:/ipfs/QmZZCtcg3SR2F37gareTCnbdS5QfHRwRBCH4Sr64jAJQ7F"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/FixedPointMath.sol": {
                readonly keccak256: "0x631f6529908f62f71775f8c6120afdca3a836fb24fa9fa4701cad54f4a9da076";
                readonly urls: readonly ["bzz-raw://2baf6ad8917a3fbb6d040334451f6b4f6936b00518c4cd308b9c6fa11569b2bd", "dweb:/ipfs/QmXD16vk6MRxmPRqy8ZXSpRA5XxhSf1pnsQH32ARDJTk8L"];
                readonly license: "Apache-2.0";
            };
            readonly "contracts/src/libraries/SafeCast.sol": {
                readonly keccak256: "0xc5282be69c8c85c1a1bbbf1554a501c17599f4b84119339b660018ae90eb7148";
                readonly urls: readonly ["bzz-raw://fd29b570d1e3205d25939b1c0e78e98ae34747a8118703fc5b2c9690791b26c8", "dweb:/ipfs/QmSdecxKRE66cgEipikK5uS4mUJxz2FgfncCk9iXvkdjG8"];
                readonly license: "Apache-2.0";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "contracts/src/deployers/ezeth/EzETHHyperdriveDeployerCoordinator.sol";
        readonly id: 1918;
        readonly exportedSymbols: {
            readonly EzETHHyperdriveDeployerCoordinator: readonly [1917];
            readonly FixedPointMath: readonly [19394];
            readonly HyperdriveDeployerCoordinator: readonly [1040];
            readonly IERC20: readonly [10319];
            readonly IHyperdrive: readonly [11028];
            readonly IHyperdriveDeployerCoordinator: readonly [11350];
            readonly IRestakeManager: readonly [12239];
            readonly ONE: readonly [18628];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "39:5229:9";
        readonly nodes: readonly [{
            readonly id: 1718;
            readonly nodeType: "PragmaDirective";
            readonly src: "39:23:9";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", "0.8", ".20"];
        }, {
            readonly id: 1720;
            readonly nodeType: "ImportDirective";
            readonly src: "64:53:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IERC20.sol";
            readonly file: "../../interfaces/IERC20.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1918;
            readonly sourceUnit: 10320;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1719;
                    readonly name: "IERC20";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 10319;
                    readonly src: "73:6:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1722;
            readonly nodeType: "ImportDirective";
            readonly src: "118:63:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdrive.sol";
            readonly file: "../../interfaces/IHyperdrive.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1918;
            readonly sourceUnit: 11029;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1721;
                    readonly name: "IHyperdrive";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11028;
                    readonly src: "127:11:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1724;
            readonly nodeType: "ImportDirective";
            readonly src: "182:101:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly file: "../../interfaces/IHyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1918;
            readonly sourceUnit: 11351;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1723;
                    readonly name: "IHyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 11350;
                    readonly src: "191:30:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1726;
            readonly nodeType: "ImportDirective";
            readonly src: "284:62:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/interfaces/IRenzo.sol";
            readonly file: "../../interfaces/IRenzo.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1918;
            readonly sourceUnit: 12306;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1725;
                    readonly name: "IRestakeManager";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 12239;
                    readonly src: "293:15:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1729;
            readonly nodeType: "ImportDirective";
            readonly src: "347:73:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/libraries/FixedPointMath.sol";
            readonly file: "../../libraries/FixedPointMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1918;
            readonly sourceUnit: 19395;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1727;
                    readonly name: "FixedPointMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 19394;
                    readonly src: "356:14:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }, {
                readonly foreign: {
                    readonly id: 1728;
                    readonly name: "ONE";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 18628;
                    readonly src: "372:3:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1731;
            readonly nodeType: "ImportDirective";
            readonly src: "421:85:9";
            readonly nodes: readonly [];
            readonly absolutePath: "contracts/src/deployers/HyperdriveDeployerCoordinator.sol";
            readonly file: "../HyperdriveDeployerCoordinator.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 1918;
            readonly sourceUnit: 1041;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 1730;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 1040;
                    readonly src: "430:29:9";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 1917;
            readonly nodeType: "ContractDefinition";
            readonly src: "872:4395:9";
            readonly nodes: readonly [{
                readonly id: 1737;
                readonly nodeType: "UsingForDirective";
                readonly src: "955:33:9";
                readonly nodes: readonly [];
                readonly global: false;
                readonly libraryName: {
                    readonly id: 1735;
                    readonly name: "FixedPointMath";
                    readonly nameLocations: readonly ["961:14:9"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 19394;
                    readonly src: "961:14:9";
                };
                readonly typeName: {
                    readonly id: 1736;
                    readonly name: "uint256";
                    readonly nodeType: "ElementaryTypeName";
                    readonly src: "980:7:9";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_uint256";
                        readonly typeString: "uint256";
                    };
                };
            }, {
                readonly id: 1741;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1030:47:9";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 1738;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "994:31:9";
                    readonly text: "@notice The Renzo contract.";
                };
                readonly functionSelector: "ff0996b5";
                readonly mutability: "immutable";
                readonly name: "restakeManager";
                readonly nameLocation: "1063:14:9";
                readonly scope: 1917;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_contract$_IRestakeManager_$12239";
                    readonly typeString: "contract IRestakeManager";
                };
                readonly typeName: {
                    readonly id: 1740;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 1739;
                        readonly name: "IRestakeManager";
                        readonly nameLocations: readonly ["1030:15:9"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 12239;
                        readonly src: "1030:15:9";
                    };
                    readonly referencedDeclaration: 12239;
                    readonly src: "1030:15:9";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_IRestakeManager_$12239";
                        readonly typeString: "contract IRestakeManager";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 1745;
                readonly nodeType: "VariableDeclaration";
                readonly src: "1126:29:9";
                readonly nodes: readonly [];
                readonly constant: false;
                readonly documentation: {
                    readonly id: 1742;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1084:37:9";
                    readonly text: "@notice The ezETH token contract.";
                };
                readonly functionSelector: "13a73c78";
                readonly mutability: "immutable";
                readonly name: "ezETH";
                readonly nameLocation: "1150:5:9";
                readonly scope: 1917;
                readonly stateVariable: true;
                readonly storageLocation: "default";
                readonly typeDescriptions: {
                    readonly typeIdentifier: "t_contract$_IERC20_$10319";
                    readonly typeString: "contract IERC20";
                };
                readonly typeName: {
                    readonly id: 1744;
                    readonly nodeType: "UserDefinedTypeName";
                    readonly pathNode: {
                        readonly id: 1743;
                        readonly name: "IERC20";
                        readonly nameLocations: readonly ["1126:6:9"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 10319;
                        readonly src: "1126:6:9";
                    };
                    readonly referencedDeclaration: 10319;
                    readonly src: "1126:6:9";
                    readonly typeDescriptions: {
                        readonly typeIdentifier: "t_contract$_IERC20_$10319";
                        readonly typeString: "contract IERC20";
                    };
                };
                readonly visibility: "public";
            }, {
                readonly id: 1785;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1586:587:9";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1784;
                    readonly nodeType: "Block";
                    readonly src: "2075:98:9";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly id: 1774;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 1772;
                                readonly name: "restakeManager";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1741;
                                readonly src: "2085:14:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IRestakeManager_$12239";
                                    readonly typeString: "contract IRestakeManager";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly id: 1773;
                                readonly name: "_restakeManager";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1761;
                                readonly src: "2102:15:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IRestakeManager_$12239";
                                    readonly typeString: "contract IRestakeManager";
                                };
                            };
                            readonly src: "2085:32:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IRestakeManager_$12239";
                                readonly typeString: "contract IRestakeManager";
                            };
                        };
                        readonly id: 1775;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2085:32:9";
                    }, {
                        readonly expression: {
                            readonly id: 1782;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftHandSide: {
                                readonly id: 1776;
                                readonly name: "ezETH";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1745;
                                readonly src: "2127:5:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IERC20_$10319";
                                    readonly typeString: "contract IERC20";
                                };
                            };
                            readonly nodeType: "Assignment";
                            readonly operator: "=";
                            readonly rightHandSide: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1778;
                                            readonly name: "_restakeManager";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 1761;
                                            readonly src: "2142:15:9";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_contract$_IRestakeManager_$12239";
                                                readonly typeString: "contract IRestakeManager";
                                            };
                                        };
                                        readonly id: 1779;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2158:5:9";
                                        readonly memberName: "ezETH";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 12215;
                                        readonly src: "2142:21:9";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_external_view$__$returns$_t_address_$";
                                            readonly typeString: "function () view external returns (address)";
                                        };
                                    };
                                    readonly id: 1780;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2142:23:9";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    }];
                                    readonly id: 1777;
                                    readonly name: "IERC20";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 10319;
                                    readonly src: "2135:6:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_IERC20_$10319_$";
                                        readonly typeString: "type(contract IERC20)";
                                    };
                                };
                                readonly id: 1781;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2135:31:9";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_contract$_IERC20_$10319";
                                    readonly typeString: "contract IERC20";
                                };
                            };
                            readonly src: "2127:39:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IERC20_$10319";
                                readonly typeString: "contract IERC20";
                            };
                        };
                        readonly id: 1783;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "2127:39:9";
                    }];
                };
                readonly documentation: {
                    readonly id: 1746;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "1162:419:9";
                    readonly text: "@notice Instantiates the deployer coordinator.\n @param _coreDeployer The core deployer.\n @param _target0Deployer The target0 deployer.\n @param _target1Deployer The target1 deployer.\n @param _target2Deployer The target2 deployer.\n @param _target3Deployer The target3 deployer.\n @param _target4Deployer The target4 deployer.\n @param _restakeManager The Renzo contract.";
                };
                readonly implemented: true;
                readonly kind: "constructor";
                readonly modifiers: readonly [{
                    readonly arguments: readonly [{
                        readonly id: 1764;
                        readonly name: "_coreDeployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1748;
                        readonly src: "1897:13:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1765;
                        readonly name: "_target0Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1750;
                        readonly src: "1924:16:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1766;
                        readonly name: "_target1Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1752;
                        readonly src: "1954:16:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1767;
                        readonly name: "_target2Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1754;
                        readonly src: "1984:16:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1768;
                        readonly name: "_target3Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1756;
                        readonly src: "2014:16:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }, {
                        readonly id: 1769;
                        readonly name: "_target4Deployer";
                        readonly nodeType: "Identifier";
                        readonly overloadedDeclarations: readonly [];
                        readonly referencedDeclaration: 1758;
                        readonly src: "2044:16:9";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                    }];
                    readonly id: 1770;
                    readonly kind: "baseConstructorSpecifier";
                    readonly modifierName: {
                        readonly id: 1763;
                        readonly name: "HyperdriveDeployerCoordinator";
                        readonly nameLocations: readonly ["1854:29:9"];
                        readonly nodeType: "IdentifierPath";
                        readonly referencedDeclaration: 1040;
                        readonly src: "1854:29:9";
                    };
                    readonly nodeType: "ModifierInvocation";
                    readonly src: "1854:216:9";
                }];
                readonly name: "";
                readonly nameLocation: "-1:-1:-1";
                readonly parameters: {
                    readonly id: 1762;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1748;
                        readonly mutability: "mutable";
                        readonly name: "_coreDeployer";
                        readonly nameLocation: "1615:13:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1785;
                        readonly src: "1607:21:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1747;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1607:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1750;
                        readonly mutability: "mutable";
                        readonly name: "_target0Deployer";
                        readonly nameLocation: "1646:16:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1785;
                        readonly src: "1638:24:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1749;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1638:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1752;
                        readonly mutability: "mutable";
                        readonly name: "_target1Deployer";
                        readonly nameLocation: "1680:16:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1785;
                        readonly src: "1672:24:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1751;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1672:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1754;
                        readonly mutability: "mutable";
                        readonly name: "_target2Deployer";
                        readonly nameLocation: "1714:16:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1785;
                        readonly src: "1706:24:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1753;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1706:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1756;
                        readonly mutability: "mutable";
                        readonly name: "_target3Deployer";
                        readonly nameLocation: "1748:16:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1785;
                        readonly src: "1740:24:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1755;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1740:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1758;
                        readonly mutability: "mutable";
                        readonly name: "_target4Deployer";
                        readonly nameLocation: "1782:16:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1785;
                        readonly src: "1774:24:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1757;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1774:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1761;
                        readonly mutability: "mutable";
                        readonly name: "_restakeManager";
                        readonly nameLocation: "1824:15:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1785;
                        readonly src: "1808:31:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IRestakeManager_$12239";
                            readonly typeString: "contract IRestakeManager";
                        };
                        readonly typeName: {
                            readonly id: 1760;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 1759;
                                readonly name: "IRestakeManager";
                                readonly nameLocations: readonly ["1808:15:9"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 12239;
                                readonly src: "1808:15:9";
                            };
                            readonly referencedDeclaration: 12239;
                            readonly src: "1808:15:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IRestakeManager_$12239";
                                readonly typeString: "contract IRestakeManager";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1597:248:9";
                };
                readonly returnParameters: {
                    readonly id: 1771;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2075:0:9";
                };
                readonly scope: 1917;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "public";
            }, {
                readonly id: 1835;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2825:595:9";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1834;
                    readonly nodeType: "Block";
                    readonly src: "3031:389:9";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly expression: {
                                readonly id: 1802;
                                readonly name: "_options";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1796;
                                readonly src: "3090:8:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_Options_$10875_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.Options memory";
                                };
                            };
                            readonly id: 1803;
                            readonly isConstant: false;
                            readonly isLValue: true;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly memberLocation: "3099:6:9";
                            readonly memberName: "asBase";
                            readonly nodeType: "MemberAccess";
                            readonly referencedDeclaration: 10871;
                            readonly src: "3090:15:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1810;
                        readonly nodeType: "IfStatement";
                        readonly src: "3086:83:9";
                        readonly trueBody: {
                            readonly id: 1809;
                            readonly nodeType: "Block";
                            readonly src: "3107:62:9";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1804;
                                            readonly name: "IHyperdrive";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11028;
                                            readonly src: "3128:11:9";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdrive_$11028_$";
                                                readonly typeString: "type(contract IHyperdrive)";
                                            };
                                        };
                                        readonly id: 1806;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3140:16:9";
                                        readonly memberName: "UnsupportedToken";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10994;
                                        readonly src: "3128:28:9";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 1807;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3128:30:9";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 1808;
                                readonly nodeType: "RevertStatement";
                                readonly src: "3121:37:9";
                            }];
                        };
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 1814;
                                readonly name: "_lp";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1791;
                                readonly src: "3297:3:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly arguments: readonly [{
                                    readonly id: 1817;
                                    readonly name: "this";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -28;
                                    readonly src: "3310:4:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_EzETHHyperdriveDeployerCoordinator_$1917";
                                        readonly typeString: "contract EzETHHyperdriveDeployerCoordinator";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_EzETHHyperdriveDeployerCoordinator_$1917";
                                        readonly typeString: "contract EzETHHyperdriveDeployerCoordinator";
                                    }];
                                    readonly id: 1816;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "3302:7:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 1815;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3302:7:9";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 1818;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3302:13:9";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 1819;
                                readonly name: "_contribution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1793;
                                readonly src: "3317:13:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 1811;
                                    readonly name: "ezETH";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1745;
                                    readonly src: "3278:5:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC20_$10319";
                                        readonly typeString: "contract IERC20";
                                    };
                                };
                                readonly id: 1813;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3284:12:9";
                                readonly memberName: "transferFrom";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10276;
                                readonly src: "3278:18:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$";
                                    readonly typeString: "function (address,address,uint256) external returns (bool)";
                                };
                            };
                            readonly id: 1820;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3278:53:9";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1821;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "3278:53:9";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly id: 1827;
                                    readonly name: "_hyperdrive";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1789;
                                    readonly src: "3363:11:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$11028";
                                        readonly typeString: "contract IHyperdrive";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_contract$_IHyperdrive_$11028";
                                        readonly typeString: "contract IHyperdrive";
                                    }];
                                    readonly id: 1826;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "3355:7:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_address_$";
                                        readonly typeString: "type(address)";
                                    };
                                    readonly typeName: {
                                        readonly id: 1825;
                                        readonly name: "address";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3355:7:9";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 1828;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3355:20:9";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 1829;
                                readonly name: "_contribution";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1793;
                                readonly src: "3377:13:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 1822;
                                    readonly name: "ezETH";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1745;
                                    readonly src: "3341:5:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC20_$10319";
                                        readonly typeString: "contract IERC20";
                                    };
                                };
                                readonly id: 1824;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3347:7:9";
                                readonly memberName: "approve";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10254;
                                readonly src: "3341:13:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$";
                                    readonly typeString: "function (address,uint256) external returns (bool)";
                                };
                            };
                            readonly id: 1830;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3341:50:9";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1831;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "3341:50:9";
                    }, {
                        readonly expression: {
                            readonly id: 1832;
                            readonly name: "value";
                            readonly nodeType: "Identifier";
                            readonly overloadedDeclarations: readonly [];
                            readonly referencedDeclaration: 1800;
                            readonly src: "3408:5:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 1801;
                        readonly id: 1833;
                        readonly nodeType: "Return";
                        readonly src: "3401:12:9";
                    }];
                };
                readonly baseFunctions: readonly [859];
                readonly documentation: {
                    readonly id: 1786;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "2179:641:9";
                    readonly text: "@dev Prepares the coordinator for initialization by drawing funds from\n      the LP, if necessary.\n @param _hyperdrive The Hyperdrive instance that is being initialized.\n @param _lp The LP that is initializing the pool.\n @param _contribution The amount of capital to supply. The units of this\n        quantity are either base or vault shares, depending on the value\n        of `_options.asBase`.\n @param _options The options that configure how the initialization is\n        settled.\n @return value The value that should be sent in the initialize\n         transaction.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_prepareInitialize";
                readonly nameLocation: "2834:18:9";
                readonly overrides: {
                    readonly id: 1798;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "2998:8:9";
                };
                readonly parameters: {
                    readonly id: 1797;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1789;
                        readonly mutability: "mutable";
                        readonly name: "_hyperdrive";
                        readonly nameLocation: "2874:11:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1835;
                        readonly src: "2862:23:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_contract$_IHyperdrive_$11028";
                            readonly typeString: "contract IHyperdrive";
                        };
                        readonly typeName: {
                            readonly id: 1788;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 1787;
                                readonly name: "IHyperdrive";
                                readonly nameLocations: readonly ["2862:11:9"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 11028;
                                readonly src: "2862:11:9";
                            };
                            readonly referencedDeclaration: 11028;
                            readonly src: "2862:11:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_contract$_IHyperdrive_$11028";
                                readonly typeString: "contract IHyperdrive";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1791;
                        readonly mutability: "mutable";
                        readonly name: "_lp";
                        readonly nameLocation: "2903:3:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1835;
                        readonly src: "2895:11:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 1790;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2895:7:9";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1793;
                        readonly mutability: "mutable";
                        readonly name: "_contribution";
                        readonly nameLocation: "2924:13:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1835;
                        readonly src: "2916:21:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 1792;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2916:7:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 1796;
                        readonly mutability: "mutable";
                        readonly name: "_options";
                        readonly nameLocation: "2974:8:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1835;
                        readonly src: "2947:35:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_Options_$10875_memory_ptr";
                            readonly typeString: "struct IHyperdrive.Options";
                        };
                        readonly typeName: {
                            readonly id: 1795;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 1794;
                                readonly name: "IHyperdrive.Options";
                                readonly nameLocations: readonly ["2947:11:9", "2959:7:9"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10875;
                                readonly src: "2947:19:9";
                            };
                            readonly referencedDeclaration: 10875;
                            readonly src: "2947:19:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_Options_$10875_storage_ptr";
                                readonly typeString: "struct IHyperdrive.Options";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2852:136:9";
                };
                readonly returnParameters: {
                    readonly id: 1801;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1800;
                        readonly mutability: "mutable";
                        readonly name: "value";
                        readonly nameLocation: "3024:5:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1835;
                        readonly src: "3016:13:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 1799;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3016:7:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3015:15:9";
                };
                readonly scope: 1917;
                readonly stateMutability: "nonpayable";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 1852;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3477:144:9";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1851;
                    readonly nodeType: "Block";
                    readonly src: "3530:91:9";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 1843;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 1840;
                                    readonly name: "msg";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -15;
                                    readonly src: "3544:3:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_magic_message";
                                        readonly typeString: "msg";
                                    };
                                };
                                readonly id: 1841;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3548:5:9";
                                readonly memberName: "value";
                                readonly nodeType: "MemberAccess";
                                readonly src: "3544:9:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 1842;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "3556:1:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "3544:13:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1850;
                        readonly nodeType: "IfStatement";
                        readonly src: "3540:75:9";
                        readonly trueBody: {
                            readonly id: 1849;
                            readonly nodeType: "Block";
                            readonly src: "3559:56:9";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1844;
                                            readonly name: "IHyperdrive";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11028;
                                            readonly src: "3580:11:9";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdrive_$11028_$";
                                                readonly typeString: "type(contract IHyperdrive)";
                                            };
                                        };
                                        readonly id: 1846;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3592:10:9";
                                        readonly memberName: "NotPayable";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 10947;
                                        readonly src: "3580:22:9";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 1847;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3580:24:9";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 1848;
                                readonly nodeType: "RevertStatement";
                                readonly src: "3573:31:9";
                            }];
                        };
                    }];
                };
                readonly baseFunctions: readonly [863];
                readonly documentation: {
                    readonly id: 1836;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3426:46:9";
                    readonly text: "@dev Allows the contract to receive ether.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkMessageValue";
                readonly nameLocation: "3486:18:9";
                readonly overrides: {
                    readonly id: 1838;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "3521:8:9";
                };
                readonly parameters: {
                    readonly id: 1837;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3504:2:9";
                };
                readonly returnParameters: {
                    readonly id: 1839;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3530:0:9";
                };
                readonly scope: 1917;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 1889;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3779:920:9";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1888;
                    readonly nodeType: "Block";
                    readonly src: "3893:806:9";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 1863;
                                readonly name: "_deployConfig";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1856;
                                readonly src: "3965:13:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_memory_ptr";
                                    readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                }];
                                readonly expression: {
                                    readonly id: 1860;
                                    readonly name: "super";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -25;
                                    readonly src: "3942:5:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_super$_EzETHHyperdriveDeployerCoordinator_$1917_$";
                                        readonly typeString: "type(contract super EzETHHyperdriveDeployerCoordinator)";
                                    };
                                };
                                readonly id: 1862;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3948:16:9";
                                readonly memberName: "_checkPoolConfig";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 943;
                                readonly src: "3942:22:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_view$_t_struct$_PoolDeployConfig_$10777_memory_ptr_$returns$__$";
                                    readonly typeString: "function (struct IHyperdrive.PoolDeployConfig memory) view";
                                };
                            };
                            readonly id: 1864;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3942:37:9";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 1865;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "3942:37:9";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 1869;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 1866;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1856;
                                    readonly src: "4242:13:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 1867;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4256:20:9";
                                readonly memberName: "minimumShareReserves";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10751;
                                readonly src: "4242:34:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly hexValue: "31653135";
                                readonly id: 1868;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "4280:4:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000";
                                };
                                readonly value: "1e15";
                            };
                            readonly src: "4242:42:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1876;
                        readonly nodeType: "IfStatement";
                        readonly src: "4238:140:9";
                        readonly trueBody: {
                            readonly id: 1875;
                            readonly nodeType: "Block";
                            readonly src: "4286:92:9";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1870;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11350;
                                            readonly src: "4307:30:9";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$11350_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 1872;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "4338:27:9";
                                        readonly memberName: "InvalidMinimumShareReserves";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11276;
                                        readonly src: "4307:58:9";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 1873;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4307:60:9";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 1874;
                                readonly nodeType: "RevertStatement";
                                readonly src: "4300:67:9";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 1880;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly expression: {
                                    readonly id: 1877;
                                    readonly name: "_deployConfig";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1856;
                                    readonly src: "4532:13:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_memory_ptr";
                                        readonly typeString: "struct IHyperdrive.PoolDeployConfig memory";
                                    };
                                };
                                readonly id: 1878;
                                readonly isConstant: false;
                                readonly isLValue: true;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4546:24:9";
                                readonly memberName: "minimumTransactionAmount";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10754;
                                readonly src: "4532:38:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly hexValue: "31653135";
                                readonly id: 1879;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "4574:4:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_1000000000000000_by_1";
                                    readonly typeString: "int_const 1000000000000000";
                                };
                                readonly value: "1e15";
                            };
                            readonly src: "4532:46:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 1887;
                        readonly nodeType: "IfStatement";
                        readonly src: "4528:165:9";
                        readonly trueBody: {
                            readonly id: 1886;
                            readonly nodeType: "Block";
                            readonly src: "4580:113:9";
                            readonly statements: readonly [{
                                readonly errorCall: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly expression: {
                                            readonly id: 1881;
                                            readonly name: "IHyperdriveDeployerCoordinator";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 11350;
                                            readonly src: "4601:30:9";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_type$_t_contract$_IHyperdriveDeployerCoordinator_$11350_$";
                                                readonly typeString: "type(contract IHyperdriveDeployerCoordinator)";
                                            };
                                        };
                                        readonly id: 1883;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "4649:31:9";
                                        readonly memberName: "InvalidMinimumTransactionAmount";
                                        readonly nodeType: "MemberAccess";
                                        readonly referencedDeclaration: 11279;
                                        readonly src: "4601:79:9";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_error_pure$__$returns$__$";
                                            readonly typeString: "function () pure";
                                        };
                                    };
                                    readonly id: 1884;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4601:81:9";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 1885;
                                readonly nodeType: "RevertStatement";
                                readonly src: "4594:88:9";
                            }];
                        };
                    }];
                };
                readonly baseFunctions: readonly [943];
                readonly documentation: {
                    readonly id: 1853;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "3627:147:9";
                    readonly text: "@notice Checks the pool configuration to ensure that it is valid.\n @param _deployConfig The deploy configuration of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_checkPoolConfig";
                readonly nameLocation: "3788:16:9";
                readonly overrides: {
                    readonly id: 1858;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "3884:8:9";
                };
                readonly parameters: {
                    readonly id: 1857;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1856;
                        readonly mutability: "mutable";
                        readonly name: "_deployConfig";
                        readonly nameLocation: "3850:13:9";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1889;
                        readonly src: "3814:49:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_memory_ptr";
                            readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                        };
                        readonly typeName: {
                            readonly id: 1855;
                            readonly nodeType: "UserDefinedTypeName";
                            readonly pathNode: {
                                readonly id: 1854;
                                readonly name: "IHyperdrive.PoolDeployConfig";
                                readonly nameLocations: readonly ["3814:11:9", "3826:16:9"];
                                readonly nodeType: "IdentifierPath";
                                readonly referencedDeclaration: 10777;
                                readonly src: "3814:28:9";
                            };
                            readonly referencedDeclaration: 10777;
                            readonly src: "3814:28:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_struct$_PoolDeployConfig_$10777_storage_ptr";
                                readonly typeString: "struct IHyperdrive.PoolDeployConfig";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3804:65:9";
                };
                readonly returnParameters: {
                    readonly id: 1859;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3893:0:9";
                };
                readonly scope: 1917;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }, {
                readonly id: 1916;
                readonly nodeType: "FunctionDefinition";
                readonly src: "4847:418:9";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 1915;
                    readonly nodeType: "Block";
                    readonly src: "4973:292:9";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [null, null, 1899];
                        readonly declarations: readonly [null, null, {
                            readonly constant: false;
                            readonly id: 1899;
                            readonly mutability: "mutable";
                            readonly name: "totalTVL";
                            readonly nameLocation: "5049:8:9";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 1915;
                            readonly src: "5041:16:9";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 1898;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5041:7:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 1903;
                        readonly initialValue: {
                            readonly arguments: readonly [];
                            readonly expression: {
                                readonly argumentTypes: readonly [];
                                readonly expression: {
                                    readonly id: 1900;
                                    readonly name: "restakeManager";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1741;
                                    readonly src: "5061:14:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IRestakeManager_$12239";
                                        readonly typeString: "contract IRestakeManager";
                                    };
                                };
                                readonly id: 1901;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5076:13:9";
                                readonly memberName: "calculateTVLs";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 12238;
                                readonly src: "5061:28:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_view$__$returns$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$";
                                    readonly typeString: "function () view external returns (uint256[] memory[] memory,uint256[] memory,uint256)";
                                };
                            };
                            readonly id: 1902;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5061:30:9";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$";
                                readonly typeString: "tuple(uint256[] memory[] memory,uint256[] memory,uint256)";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5036:55:9";
                    }, {
                        readonly assignments: readonly [1905];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 1905;
                            readonly mutability: "mutable";
                            readonly name: "ezETHSupply";
                            readonly nameLocation: "5109:11:9";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 1915;
                            readonly src: "5101:19:9";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 1904;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5101:7:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 1909;
                        readonly initialValue: {
                            readonly arguments: readonly [];
                            readonly expression: {
                                readonly argumentTypes: readonly [];
                                readonly expression: {
                                    readonly id: 1906;
                                    readonly name: "ezETH";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1745;
                                    readonly src: "5123:5:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_contract$_IERC20_$10319";
                                        readonly typeString: "contract IERC20";
                                    };
                                };
                                readonly id: 1907;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5129:11:9";
                                readonly memberName: "totalSupply";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 10300;
                                readonly src: "5123:17:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_external_view$__$returns$_t_uint256_$";
                                    readonly typeString: "function () view external returns (uint256)";
                                };
                            };
                            readonly id: 1908;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5123:19:9";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5101:41:9";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 1912;
                                readonly name: "ezETHSupply";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 1905;
                                readonly src: "5246:11:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 1910;
                                    readonly name: "totalTVL";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 1899;
                                    readonly src: "5229:8:9";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                };
                                readonly id: 1911;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5238:7:9";
                                readonly memberName: "divDown";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 18692;
                                readonly src: "5229:16:9";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 1913;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5229:29:9";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly functionReturnParameters: 1897;
                        readonly id: 1914;
                        readonly nodeType: "Return";
                        readonly src: "5222:36:9";
                    }];
                };
                readonly baseFunctions: readonly [951];
                readonly documentation: {
                    readonly id: 1890;
                    readonly nodeType: "StructuredDocumentation";
                    readonly src: "4705:137:9";
                    readonly text: "@dev Gets the initial vault share price of the Hyperdrive pool.\n @return The initial vault share price of the Hyperdrive pool.";
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "_getInitialVaultSharePrice";
                readonly nameLocation: "4856:26:9";
                readonly overrides: {
                    readonly id: 1894;
                    readonly nodeType: "OverrideSpecifier";
                    readonly overrides: readonly [];
                    readonly src: "4946:8:9";
                };
                readonly parameters: {
                    readonly id: 1893;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1892;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1916;
                        readonly src: "4892:12:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 1891;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4892:5:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4882:49:9";
                };
                readonly returnParameters: {
                    readonly id: 1897;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 1896;
                        readonly mutability: "mutable";
                        readonly name: "";
                        readonly nameLocation: "-1:-1:-1";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 1916;
                        readonly src: "4964:7:9";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 1895;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4964:7:9";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4963:9:9";
                };
                readonly scope: 1917;
                readonly stateMutability: "view";
                readonly virtual: false;
                readonly visibility: "internal";
            }];
            readonly abstract: false;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 1733;
                    readonly name: "HyperdriveDeployerCoordinator";
                    readonly nameLocations: readonly ["919:29:9"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 1040;
                    readonly src: "919:29:9";
                };
                readonly id: 1734;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "919:29:9";
            }];
            readonly canonicalName: "EzETHHyperdriveDeployerCoordinator";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly documentation: {
                readonly id: 1732;
                readonly nodeType: "StructuredDocumentation";
                readonly src: "508:364:9";
                readonly text: "@author DELV\n @title EzETHHyperdriveDeployerCoordinator\n @custom:disclaimer The language used in this code is for coding convenience\n @notice The deployer coordinator for the EzETHHyperdrive implementation.\n                    only, and is not intended to, and does not, have any\n                    particular legal or regulatory significance.";
            };
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [1917, 1040, 11350];
            readonly name: "EzETHHyperdriveDeployerCoordinator";
            readonly nameLocation: "881:34:9";
            readonly scope: 1918;
            readonly usedErrors: readonly [10947, 10994, 11252, 11255, 11258, 11261, 11264, 11267, 11270, 11273, 11276, 11279, 11282, 11285, 11288, 11291, 11294, 11297, 11300];
            readonly usedEvents: readonly [];
        }];
        readonly license: "Apache-2.0";
    };
    readonly id: 9;
};
//# sourceMappingURL=EzETHHyperdriveDeployerCoordinator.d.ts.map