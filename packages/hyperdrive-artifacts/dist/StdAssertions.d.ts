export declare const StdAssertions: {
    readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "log_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "log_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "log_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "";
            readonly type: "int256";
        }];
        readonly name: "log_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "val";
            readonly type: "address";
        }];
        readonly name: "log_named_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "val";
            readonly type: "bytes";
        }];
        readonly name: "log_named_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "val";
            readonly type: "bytes32";
        }];
        readonly name: "log_named_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }];
        readonly name: "log_named_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "val";
            readonly type: "string";
        }];
        readonly name: "log_named_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }];
        readonly name: "log_named_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "log_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "logs";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "IS_TEST";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "failed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    readonly bytecode: {
        readonly object: "0x";
        readonly sourceMap: "";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "0x";
        readonly sourceMap: "";
        readonly linkReferences: {};
    };
    readonly methodIdentifiers: {
        readonly "IS_TEST()": "fa7626d4";
        readonly "failed()": "ba414fa6";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdAssertions.sol\":\"StdAssertions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_address";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256[]";
                    readonly name: "val";
                    readonly type: "uint256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "int256[]";
                    readonly name: "val";
                    readonly type: "int256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "val";
                    readonly type: "address[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes";
                    readonly name: "";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_bytes";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_bytes32";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "int256";
                    readonly name: "";
                    readonly type: "int256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "address";
                    readonly name: "val";
                    readonly type: "address";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_address";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "val";
                    readonly type: "uint256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256[]";
                    readonly name: "val";
                    readonly type: "int256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "address[]";
                    readonly name: "val";
                    readonly type: "address[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "bytes";
                    readonly name: "val";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_bytes";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "val";
                    readonly type: "bytes32";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_bytes32";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256";
                    readonly name: "val";
                    readonly type: "int256";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "decimals";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_decimal_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "val";
                    readonly type: "uint256";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "decimals";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_decimal_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256";
                    readonly name: "val";
                    readonly type: "int256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "string";
                    readonly name: "val";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_string";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "val";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_string";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes";
                    readonly name: "";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "logs";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "IS_TEST";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "failed";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {};
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {};
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "lib/forge-std/src/StdAssertions.sol": "StdAssertions";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "lib/forge-std/lib/ds-test/src/test.sol": {
                readonly keccak256: "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b";
                readonly urls: readonly ["bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240", "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"];
                readonly license: "GPL-3.0-or-later";
            };
            readonly "lib/forge-std/src/StdAssertions.sol": {
                readonly keccak256: "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60";
                readonly urls: readonly ["bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b", "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdMath.sol": {
                readonly keccak256: "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2";
                readonly urls: readonly ["bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92", "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"];
                readonly license: "MIT";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "lib/forge-std/src/StdAssertions.sol";
        readonly id: 31027;
        readonly exportedSymbols: {
            readonly DSTest: readonly [29533];
            readonly StdAssertions: readonly [31026];
            readonly stdMath: readonly [35572];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "32:13639:145";
        readonly nodes: readonly [{
            readonly id: 29610;
            readonly nodeType: "PragmaDirective";
            readonly src: "32:31:145";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", ">=", "0.6", ".2", "<", "0.9", ".0"];
        }, {
            readonly id: 29612;
            readonly nodeType: "ImportDirective";
            readonly src: "65:40:145";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/forge-std/lib/ds-test/src/test.sol";
            readonly file: "ds-test/test.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 31027;
            readonly sourceUnit: 29534;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 29611;
                    readonly name: "DSTest";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 29533;
                    readonly src: "73:6:145";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 29614;
            readonly nodeType: "ImportDirective";
            readonly src: "106:38:145";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/forge-std/src/StdMath.sol";
            readonly file: "./StdMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 31027;
            readonly sourceUnit: 35573;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 29613;
                    readonly name: "stdMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 35572;
                    readonly src: "114:7:145";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 31026;
            readonly nodeType: "ContractDefinition";
            readonly src: "146:13524:145";
            readonly nodes: readonly [{
                readonly id: 29621;
                readonly nodeType: "EventDefinition";
                readonly src: "194:31:145";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "fb102865d50addddf69da9b5aa1bced66c80cf869a5c8d0471a467e18ce9cab1";
                readonly name: "log_array";
                readonly nameLocation: "200:9:145";
                readonly parameters: {
                    readonly id: 29620;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29619;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "220:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29621;
                        readonly src: "210:13:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29617;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "210:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 29618;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "210:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "209:15:145";
                };
            }, {
                readonly id: 29626;
                readonly nodeType: "EventDefinition";
                readonly src: "230:30:145";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "890a82679b470f2bd82816ed9b161f97d8b967f37fa3647c21d5bf39749e2dd5";
                readonly name: "log_array";
                readonly nameLocation: "236:9:145";
                readonly parameters: {
                    readonly id: 29625;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29624;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "255:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29626;
                        readonly src: "246:12:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29622;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "246:6:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 29623;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "246:8:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "245:14:145";
                };
            }, {
                readonly id: 29631;
                readonly nodeType: "EventDefinition";
                readonly src: "265:31:145";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "40e1840f5769073d61bd01372d9b75baa9842d5629a0c99ff103be1178a8e9e2";
                readonly name: "log_array";
                readonly nameLocation: "271:9:145";
                readonly parameters: {
                    readonly id: 29630;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29629;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "291:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29631;
                        readonly src: "281:13:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29627;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "281:7:145";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 29628;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "281:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "280:15:145";
                };
            }, {
                readonly id: 29638;
                readonly nodeType: "EventDefinition";
                readonly src: "301:49:145";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "00aaa39c9ffb5f567a4534380c737075702e1f7f14107fc95328e3b56c0325fb";
                readonly name: "log_named_array";
                readonly nameLocation: "307:15:145";
                readonly parameters: {
                    readonly id: 29637;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29633;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "key";
                        readonly nameLocation: "330:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29638;
                        readonly src: "323:10:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 29632;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "323:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29636;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "345:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29638;
                        readonly src: "335:13:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29634;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "335:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 29635;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "335:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "322:27:145";
                };
            }, {
                readonly id: 29645;
                readonly nodeType: "EventDefinition";
                readonly src: "355:48:145";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "a73eda09662f46dde729be4611385ff34fe6c44fbbc6f7e17b042b59a3445b57";
                readonly name: "log_named_array";
                readonly nameLocation: "361:15:145";
                readonly parameters: {
                    readonly id: 29644;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29640;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "key";
                        readonly nameLocation: "384:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29645;
                        readonly src: "377:10:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 29639;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "377:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29643;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "398:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29645;
                        readonly src: "389:12:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29641;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "389:6:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 29642;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "389:8:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "376:26:145";
                };
            }, {
                readonly id: 29652;
                readonly nodeType: "EventDefinition";
                readonly src: "408:49:145";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "3bcfb2ae2e8d132dd1fce7cf278a9a19756a9fceabe470df3bdabb4bc577d1bd";
                readonly name: "log_named_array";
                readonly nameLocation: "414:15:145";
                readonly parameters: {
                    readonly id: 29651;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29647;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "key";
                        readonly nameLocation: "437:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29652;
                        readonly src: "430:10:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 29646;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "430:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29650;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "452:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29652;
                        readonly src: "442:13:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29648;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "442:7:145";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 29649;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "442:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "429:27:145";
                };
            }, {
                readonly id: 29666;
                readonly nodeType: "FunctionDefinition";
                readonly src: "463:118:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29665;
                    readonly nodeType: "Block";
                    readonly src: "513:68:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly hexValue: "4572726f72";
                                readonly id: 29658;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "string";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "545:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                    readonly typeString: "literal_string \"Error\"";
                                };
                                readonly value: "Error";
                            }, {
                                readonly id: 29659;
                                readonly name: "err";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29654;
                                readonly src: "554:3:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                    readonly typeString: "literal_string \"Error\"";
                                }, {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                }];
                                readonly id: 29657;
                                readonly name: "log_named_string";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 27327;
                                readonly src: "528:16:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                    readonly typeString: "function (string memory,string memory)";
                                };
                            };
                            readonly id: 29660;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "528:30:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 29661;
                        readonly nodeType: "EmitStatement";
                        readonly src: "523:35:145";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [];
                            readonly expression: {
                                readonly argumentTypes: readonly [];
                                readonly id: 29662;
                                readonly name: "fail";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [29666, 27458];
                                readonly referencedDeclaration: 27458;
                                readonly src: "568:4:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                    readonly typeString: "function ()";
                                };
                            };
                            readonly id: 29663;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "568:6:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 29664;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "568:6:145";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "fail";
                readonly nameLocation: "472:4:145";
                readonly parameters: {
                    readonly id: 29655;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29654;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "491:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29666;
                        readonly src: "477:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 29653;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "477:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "476:19:145";
                };
                readonly returnParameters: {
                    readonly id: 29656;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "513:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29677;
                readonly nodeType: "FunctionDefinition";
                readonly src: "587:83:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29676;
                    readonly nodeType: "Block";
                    readonly src: "636:34:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 29673;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "657:5:145";
                                readonly subExpression: {
                                    readonly id: 29672;
                                    readonly name: "data";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29668;
                                    readonly src: "658:4:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 29671;
                                readonly name: "assertTrue";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [27511, 27532];
                                readonly referencedDeclaration: 27511;
                                readonly src: "646:10:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bool_$returns$__$";
                                    readonly typeString: "function (bool)";
                                };
                            };
                            readonly id: 29674;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "646:17:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 29675;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "646:17:145";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertFalse";
                readonly nameLocation: "596:11:145";
                readonly parameters: {
                    readonly id: 29669;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29668;
                        readonly mutability: "mutable";
                        readonly name: "data";
                        readonly nameLocation: "613:4:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29677;
                        readonly src: "608:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 29667;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "608:4:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "607:11:145";
                };
                readonly returnParameters: {
                    readonly id: 29670;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "636:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29691;
                readonly nodeType: "FunctionDefinition";
                readonly src: "676:107:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29690;
                    readonly nodeType: "Block";
                    readonly src: "744:39:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 29686;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "765:5:145";
                                readonly subExpression: {
                                    readonly id: 29685;
                                    readonly name: "data";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 29679;
                                    readonly src: "766:4:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            }, {
                                readonly id: 29687;
                                readonly name: "err";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29681;
                                readonly src: "772:3:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }, {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                }];
                                readonly id: 29684;
                                readonly name: "assertTrue";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [27511, 27532];
                                readonly referencedDeclaration: 27532;
                                readonly src: "754:10:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$";
                                    readonly typeString: "function (bool,string memory)";
                                };
                            };
                            readonly id: 29688;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "754:22:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 29689;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "754:22:145";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertFalse";
                readonly nameLocation: "685:11:145";
                readonly parameters: {
                    readonly id: 29682;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29679;
                        readonly mutability: "mutable";
                        readonly name: "data";
                        readonly nameLocation: "702:4:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29691;
                        readonly src: "697:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 29678;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "697:4:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29681;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "722:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29691;
                        readonly src: "708:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 29680;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "708:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "696:30:145";
                };
                readonly returnParameters: {
                    readonly id: 29683;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "744:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29727;
                readonly nodeType: "FunctionDefinition";
                readonly src: "789:312:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29726;
                    readonly nodeType: "Block";
                    readonly src: "840:261:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 29700;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 29698;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29693;
                                readonly src: "854:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 29699;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29695;
                                readonly src: "859:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "854:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 29725;
                        readonly nodeType: "IfStatement";
                        readonly src: "850:245:145";
                        readonly trueBody: {
                            readonly id: 29724;
                            readonly nodeType: "Block";
                            readonly src: "862:233:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6c5d";
                                        readonly id: 29702;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "885:36:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_8b48ec9ac4dc7123ad32509232067c63ebae61bff18d5e06bf4dea2a25240ed2";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [bool]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [bool]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_8b48ec9ac4dc7123ad32509232067c63ebae61bff18d5e06bf4dea2a25240ed2";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [bool]\"";
                                        }];
                                        readonly id: 29701;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "881:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 29703;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "881:41:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29704;
                                readonly nodeType: "EmitStatement";
                                readonly src: "876:46:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 29706;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "958:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly condition: {
                                            readonly id: 29707;
                                            readonly name: "a";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 29693;
                                            readonly src: "972:1:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly falseExpression: {
                                            readonly hexValue: "66616c7365";
                                            readonly id: 29709;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "985:7:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a";
                                                readonly typeString: "literal_string \"false\"";
                                            };
                                            readonly value: "false";
                                        };
                                        readonly id: 29710;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Conditional";
                                        readonly src: "972:20:145";
                                        readonly trueExpression: {
                                            readonly hexValue: "74727565";
                                            readonly id: 29708;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "976:6:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034";
                                                readonly typeString: "literal_string \"true\"";
                                            };
                                            readonly value: "true";
                                        };
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 29705;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "941:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 29711;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "941:52:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29712;
                                readonly nodeType: "EmitStatement";
                                readonly src: "936:57:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 29714;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1029:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly condition: {
                                            readonly id: 29715;
                                            readonly name: "b";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 29695;
                                            readonly src: "1043:1:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly falseExpression: {
                                            readonly hexValue: "66616c7365";
                                            readonly id: 29717;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "1056:7:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a";
                                                readonly typeString: "literal_string \"false\"";
                                            };
                                            readonly value: "false";
                                        };
                                        readonly id: 29718;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Conditional";
                                        readonly src: "1043:20:145";
                                        readonly trueExpression: {
                                            readonly hexValue: "74727565";
                                            readonly id: 29716;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "1047:6:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034";
                                                readonly typeString: "literal_string \"true\"";
                                            };
                                            readonly value: "true";
                                        };
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 29713;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "1012:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 29719;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1012:52:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29720;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1007:57:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 29721;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "1078:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 29722;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1078:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29723;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "1078:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "798:8:145";
                readonly parameters: {
                    readonly id: 29696;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29693;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "812:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29727;
                        readonly src: "807:6:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 29692;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "807:4:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29695;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "820:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29727;
                        readonly src: "815:6:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 29694;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "815:4:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "806:16:145";
                };
                readonly returnParameters: {
                    readonly id: 29697;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "840:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29752;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1107:186:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29751;
                    readonly nodeType: "Block";
                    readonly src: "1177:116:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 29738;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 29736;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29729;
                                readonly src: "1191:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 29737;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29731;
                                readonly src: "1196:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "1191:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 29750;
                        readonly nodeType: "IfStatement";
                        readonly src: "1187:100:145";
                        readonly trueBody: {
                            readonly id: 29749;
                            readonly nodeType: "Block";
                            readonly src: "1199:88:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 29740;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1235:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 29741;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29733;
                                        readonly src: "1244:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 29739;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "1218:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 29742;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1218:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29743;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1213:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 29745;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29729;
                                        readonly src: "1271:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    }, {
                                        readonly id: 29746;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29731;
                                        readonly src: "1274:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        }, {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        }];
                                        readonly id: 29744;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                        readonly referencedDeclaration: 29727;
                                        readonly src: "1262:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$";
                                            readonly typeString: "function (bool,bool)";
                                        };
                                    };
                                    readonly id: 29747;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1262:14:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29748;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "1262:14:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1116:8:145";
                readonly parameters: {
                    readonly id: 29734;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29729;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1130:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29752;
                        readonly src: "1125:6:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 29728;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1125:4:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29731;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1138:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29752;
                        readonly src: "1133:6:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 29730;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1133:4:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29733;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "1155:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29752;
                        readonly src: "1141:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 29732;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1141:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1124:35:145";
                };
                readonly returnParameters: {
                    readonly id: 29735;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1177:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29765;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1299:99:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29764;
                    readonly nodeType: "Block";
                    readonly src: "1366:32:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 29760;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29754;
                                readonly src: "1386:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 29761;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29756;
                                readonly src: "1389:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly id: 29759;
                                readonly name: "assertEq0";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [29448, 29475];
                                readonly referencedDeclaration: 29448;
                                readonly src: "1376:9:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                    readonly typeString: "function (bytes memory,bytes memory)";
                                };
                            };
                            readonly id: 29762;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1376:15:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 29763;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1376:15:145";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1308:8:145";
                readonly parameters: {
                    readonly id: 29757;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29754;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1330:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29765;
                        readonly src: "1317:14:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 29753;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1317:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29756;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1346:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29765;
                        readonly src: "1333:14:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 29755;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1333:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1316:32:145";
                };
                readonly returnParameters: {
                    readonly id: 29758;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1366:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29781;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1404:123:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29780;
                    readonly nodeType: "Block";
                    readonly src: "1490:37:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 29775;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29767;
                                readonly src: "1510:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 29776;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29769;
                                readonly src: "1513:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 29777;
                                readonly name: "err";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 29771;
                                readonly src: "1516:3:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                }];
                                readonly id: 29774;
                                readonly name: "assertEq0";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [29448, 29475];
                                readonly referencedDeclaration: 29475;
                                readonly src: "1500:9:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                    readonly typeString: "function (bytes memory,bytes memory,string memory)";
                                };
                            };
                            readonly id: 29778;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1500:20:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 29779;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1500:20:145";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1413:8:145";
                readonly parameters: {
                    readonly id: 29772;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29767;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1435:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29781;
                        readonly src: "1422:14:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 29766;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1422:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29769;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1451:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29781;
                        readonly src: "1438:14:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 29768;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1438:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29771;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "1468:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29781;
                        readonly src: "1454:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 29770;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1454:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1421:51:145";
                };
                readonly returnParameters: {
                    readonly id: 29773;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1490:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29823;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1533:344:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29822;
                    readonly nodeType: "Block";
                    readonly src: "1608:269:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 29802;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29793;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29784;
                                        readonly src: "1643:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29791;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "1632:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29792;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "1636:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "1632:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29794;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1632:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29790;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1622:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29795;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1622:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29799;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29787;
                                        readonly src: "1671:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29797;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "1660:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29798;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "1664:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "1660:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29800;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1660:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29796;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1650:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29801;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1650:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "1622:52:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 29821;
                        readonly nodeType: "IfStatement";
                        readonly src: "1618:253:145";
                        readonly trueBody: {
                            readonly id: 29820;
                            readonly nodeType: "Block";
                            readonly src: "1676:195:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e745b5d5d";
                                        readonly id: 29804;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1699:38:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_521d63632bd73b6c06245b96e4e8f1b767ee309607c65899b409e5c9e6c384eb";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [uint[]]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [uint[]]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_521d63632bd73b6c06245b96e4e8f1b767ee309607c65899b409e5c9e6c384eb";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [uint[]]\"";
                                        }];
                                        readonly id: 29803;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "1695:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 29805;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1695:43:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29806;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1690:48:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 29808;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1773:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 29809;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29784;
                                        readonly src: "1787:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly id: 29807;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29638, 29645, 29652];
                                        readonly referencedDeclaration: 29638;
                                        readonly src: "1757:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,uint256[] memory)";
                                        };
                                    };
                                    readonly id: 29810;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1757:32:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29811;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1752:37:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 29813;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1824:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 29814;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29787;
                                        readonly src: "1838:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly id: 29812;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29638, 29645, 29652];
                                        readonly referencedDeclaration: 29638;
                                        readonly src: "1808:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,uint256[] memory)";
                                        };
                                    };
                                    readonly id: 29815;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1808:32:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29816;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1803:37:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 29817;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "1854:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 29818;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1854:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29819;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "1854:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1542:8:145";
                readonly parameters: {
                    readonly id: 29788;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29784;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1568:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29823;
                        readonly src: "1551:18:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29782;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1551:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 29783;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1551:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29787;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1588:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29823;
                        readonly src: "1571:18:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29785;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1571:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 29786;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1571:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1550:40:145";
                };
                readonly returnParameters: {
                    readonly id: 29789;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1608:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29865;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1883:341:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29864;
                    readonly nodeType: "Block";
                    readonly src: "1956:268:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 29844;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29835;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29826;
                                        readonly src: "1991:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29833;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "1980:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29834;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "1984:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "1980:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29836;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1980:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29832;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1970:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29837;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1970:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29841;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29829;
                                        readonly src: "2019:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29839;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2008:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29840;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2012:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2008:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29842;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2008:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29838;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1998:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29843;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1998:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "1970:52:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 29863;
                        readonly nodeType: "IfStatement";
                        readonly src: "1966:252:145";
                        readonly trueBody: {
                            readonly id: 29862;
                            readonly nodeType: "Block";
                            readonly src: "2024:194:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e745b5d5d";
                                        readonly id: 29846;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2047:37:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_6c8a6638f7c95c9ee18ffcfc37ffe04d6270c2db7493e9b7a14add834054a5f5";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [int[]]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [int[]]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_6c8a6638f7c95c9ee18ffcfc37ffe04d6270c2db7493e9b7a14add834054a5f5";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [int[]]\"";
                                        }];
                                        readonly id: 29845;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "2043:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 29847;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2043:42:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29848;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2038:47:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 29850;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2120:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 29851;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29826;
                                        readonly src: "2134:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly id: 29849;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29638, 29645, 29652];
                                        readonly referencedDeclaration: 29645;
                                        readonly src: "2104:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,int256[] memory)";
                                        };
                                    };
                                    readonly id: 29852;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2104:32:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29853;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2099:37:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 29855;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2171:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 29856;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29829;
                                        readonly src: "2185:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly id: 29854;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29638, 29645, 29652];
                                        readonly referencedDeclaration: 29645;
                                        readonly src: "2155:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,int256[] memory)";
                                        };
                                    };
                                    readonly id: 29857;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2155:32:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29858;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2150:37:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 29859;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "2201:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 29860;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2201:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29861;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "2201:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1892:8:145";
                readonly parameters: {
                    readonly id: 29830;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29826;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1917:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29865;
                        readonly src: "1901:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29824;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1901:6:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 29825;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1901:8:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29829;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1936:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29865;
                        readonly src: "1920:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29827;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1920:6:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 29828;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1920:8:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1900:38:145";
                };
                readonly returnParameters: {
                    readonly id: 29831;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1956:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29907;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2230:347:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29906;
                    readonly nodeType: "Block";
                    readonly src: "2305:272:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 29886;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29877;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29868;
                                        readonly src: "2340:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29875;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2329:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29876;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2333:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2329:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29878;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2329:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29874;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2319:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29879;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2319:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29883;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29871;
                                        readonly src: "2368:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29881;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2357:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29882;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2361:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2357:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29884;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2357:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29880;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2347:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29885;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2347:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "2319:52:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 29905;
                        readonly nodeType: "IfStatement";
                        readonly src: "2315:256:145";
                        readonly trueBody: {
                            readonly id: 29904;
                            readonly nodeType: "Block";
                            readonly src: "2373:198:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464726573735b5d5d";
                                        readonly id: 29888;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2396:41:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_18b6dc04296758144a4e9b271bd3d79214335bb195df00f93d1706586d5041f8";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [address[]]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [address[]]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_18b6dc04296758144a4e9b271bd3d79214335bb195df00f93d1706586d5041f8";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [address[]]\"";
                                        }];
                                        readonly id: 29887;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "2392:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 29889;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2392:46:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29890;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2387:51:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 29892;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2473:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 29893;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29868;
                                        readonly src: "2487:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly id: 29891;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29638, 29645, 29652];
                                        readonly referencedDeclaration: 29652;
                                        readonly src: "2457:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,address[] memory)";
                                        };
                                    };
                                    readonly id: 29894;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2457:32:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29895;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2452:37:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 29897;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2524:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 29898;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29871;
                                        readonly src: "2538:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly id: 29896;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29638, 29645, 29652];
                                        readonly referencedDeclaration: 29652;
                                        readonly src: "2508:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,address[] memory)";
                                        };
                                    };
                                    readonly id: 29899;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2508:32:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29900;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2503:37:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 29901;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "2554:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 29902;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2554:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29903;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "2554:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "2239:8:145";
                readonly parameters: {
                    readonly id: 29872;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29868;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "2265:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29907;
                        readonly src: "2248:18:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29866;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2248:7:145";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 29867;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2248:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29871;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "2285:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29907;
                        readonly src: "2268:18:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29869;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2268:7:145";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 29870;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2268:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2247:40:145";
                };
                readonly returnParameters: {
                    readonly id: 29873;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2305:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29944;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2583:256:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29943;
                    readonly nodeType: "Block";
                    readonly src: "2677:162:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 29930;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29921;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29910;
                                        readonly src: "2712:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29919;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2701:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29920;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2705:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2701:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29922;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2701:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29918;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2691:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29923;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2691:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29927;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29913;
                                        readonly src: "2740:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29925;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2729:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29926;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2733:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2729:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29928;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2729:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29924;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2719:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29929;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2719:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "2691:52:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 29942;
                        readonly nodeType: "IfStatement";
                        readonly src: "2687:146:145";
                        readonly trueBody: {
                            readonly id: 29941;
                            readonly nodeType: "Block";
                            readonly src: "2745:88:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 29932;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2781:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 29933;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29915;
                                        readonly src: "2790:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 29931;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "2764:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 29934;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2764:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29935;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2759:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 29937;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29910;
                                        readonly src: "2817:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }, {
                                        readonly id: 29938;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29913;
                                        readonly src: "2820:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly id: 29936;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                        readonly referencedDeclaration: 29823;
                                        readonly src: "2808:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (uint256[] memory,uint256[] memory)";
                                        };
                                    };
                                    readonly id: 29939;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2808:14:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29940;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "2808:14:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "2592:8:145";
                readonly parameters: {
                    readonly id: 29916;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29910;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "2618:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29944;
                        readonly src: "2601:18:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29908;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2601:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 29909;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2601:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29913;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "2638:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29944;
                        readonly src: "2621:18:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29911;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2621:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 29912;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2621:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29915;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "2655:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29944;
                        readonly src: "2641:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 29914;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2641:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2600:59:145";
                };
                readonly returnParameters: {
                    readonly id: 29917;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2677:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 29981;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2845:254:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 29980;
                    readonly nodeType: "Block";
                    readonly src: "2937:162:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 29967;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29958;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29947;
                                        readonly src: "2972:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29956;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2961:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29957;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2965:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2961:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29959;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2961:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29955;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2951:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29960;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2951:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29964;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29950;
                                        readonly src: "3000:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29962;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2989:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29963;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2993:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2989:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29965;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2989:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29961;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2979:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29966;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2979:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "2951:52:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 29979;
                        readonly nodeType: "IfStatement";
                        readonly src: "2947:146:145";
                        readonly trueBody: {
                            readonly id: 29978;
                            readonly nodeType: "Block";
                            readonly src: "3005:88:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 29969;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3041:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 29970;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29952;
                                        readonly src: "3050:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 29968;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "3024:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 29971;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3024:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29972;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3019:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 29974;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29947;
                                        readonly src: "3077:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }, {
                                        readonly id: 29975;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29950;
                                        readonly src: "3080:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly id: 29973;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                        readonly referencedDeclaration: 29865;
                                        readonly src: "3068:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (int256[] memory,int256[] memory)";
                                        };
                                    };
                                    readonly id: 29976;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3068:14:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 29977;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3068:14:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "2854:8:145";
                readonly parameters: {
                    readonly id: 29953;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29947;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "2879:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29981;
                        readonly src: "2863:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29945;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2863:6:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 29946;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2863:8:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29950;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "2898:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29981;
                        readonly src: "2882:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29948;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2882:6:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 29949;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2882:8:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29952;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "2915:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 29981;
                        readonly src: "2901:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 29951;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2901:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2862:57:145";
                };
                readonly returnParameters: {
                    readonly id: 29954;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2937:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30018;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3105:256:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30017;
                    readonly nodeType: "Block";
                    readonly src: "3199:162:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 30004;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 29995;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29984;
                                        readonly src: "3234:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29993;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "3223:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 29994;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3227:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "3223:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 29996;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3223:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29992;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "3213:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 29997;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3213:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30001;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29987;
                                        readonly src: "3262:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 29999;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "3251:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30000;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3255:6:145";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "3251:10:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30002;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3251:13:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 29998;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "3241:9:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30003;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3241:24:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "3213:52:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30016;
                        readonly nodeType: "IfStatement";
                        readonly src: "3209:146:145";
                        readonly trueBody: {
                            readonly id: 30015;
                            readonly nodeType: "Block";
                            readonly src: "3267:88:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30006;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3303:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30007;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29989;
                                        readonly src: "3312:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30005;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "3286:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30008;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3286:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30009;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3281:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30011;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29984;
                                        readonly src: "3339:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }, {
                                        readonly id: 30012;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 29987;
                                        readonly src: "3342:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly id: 30010;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                        readonly referencedDeclaration: 29907;
                                        readonly src: "3330:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (address[] memory,address[] memory)";
                                        };
                                    };
                                    readonly id: 30013;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3330:14:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30014;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3330:14:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "3114:8:145";
                readonly parameters: {
                    readonly id: 29990;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 29984;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "3140:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30018;
                        readonly src: "3123:18:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29982;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "3123:7:145";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 29983;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "3123:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29987;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "3160:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30018;
                        readonly src: "3143:18:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 29985;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "3143:7:145";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 29986;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "3143:9:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 29989;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "3177:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30018;
                        readonly src: "3163:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 29988;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3163:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3122:59:145";
                };
                readonly returnParameters: {
                    readonly id: 29991;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3199:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30037;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3388:110:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30036;
                    readonly nodeType: "Block";
                    readonly src: "3449:49:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly id: 30028;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30020;
                                    readonly src: "3476:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 30027;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "3468:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_uint256_$";
                                        readonly typeString: "type(uint256)";
                                    };
                                    readonly typeName: {
                                        readonly id: 30026;
                                        readonly name: "uint256";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3468:7:145";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 30029;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3468:10:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly arguments: readonly [{
                                    readonly id: 30032;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30022;
                                    readonly src: "3488:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 30031;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "3480:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_uint256_$";
                                        readonly typeString: "type(uint256)";
                                    };
                                    readonly typeName: {
                                        readonly id: 30030;
                                        readonly name: "uint256";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3480:7:145";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 30033;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3480:10:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 30025;
                                readonly name: "assertEq";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                readonly referencedDeclaration: 27756;
                                readonly src: "3459:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256,uint256)";
                                };
                            };
                            readonly id: 30034;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3459:32:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30035;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "3459:32:145";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqUint";
                readonly nameLocation: "3397:12:145";
                readonly parameters: {
                    readonly id: 30023;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30020;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "3418:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30037;
                        readonly src: "3410:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30019;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3410:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30022;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "3429:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30037;
                        readonly src: "3421:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30021;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3421:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3409:22:145";
                };
                readonly returnParameters: {
                    readonly id: 30024;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3449:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30087;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3504:470:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30086;
                    readonly nodeType: "Block";
                    readonly src: "3588:386:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30047];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30047;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "3606:5:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30086;
                            readonly src: "3598:13:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30046;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "3598:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30053;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30050;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30039;
                                readonly src: "3628:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30051;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30041;
                                readonly src: "3631:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30048;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "3614:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30049;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3622:5:145";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35483;
                                readonly src: "3614:13:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30052;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3614:19:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "3598:35:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30056;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30054;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30047;
                                readonly src: "3648:5:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30055;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30043;
                                readonly src: "3656:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "3648:16:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30085;
                        readonly nodeType: "IfStatement";
                        readonly src: "3644:324:145";
                        readonly trueBody: {
                            readonly id: 30084;
                            readonly nodeType: "Block";
                            readonly src: "3666:302:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 30058;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3689:36:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 30057;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "3685:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30059;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3685:41:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30060;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3680:46:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 30062;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3760:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 30063;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30039;
                                        readonly src: "3774:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30061;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27315;
                                        readonly src: "3745:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30064;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3745:31:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30065;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3740:36:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 30067;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3810:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 30068;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30041;
                                        readonly src: "3824:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30066;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27315;
                                        readonly src: "3795:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30069;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3795:31:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30070;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3790:36:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 30072;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3860:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 30073;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30043;
                                        readonly src: "3874:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30071;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27315;
                                        readonly src: "3845:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30074;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3845:38:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30075;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3840:43:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 30077;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3917:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 30078;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30047;
                                        readonly src: "3931:5:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30076;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27315;
                                        readonly src: "3902:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30079;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3902:35:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30080;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3897:40:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30081;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "3951:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30082;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3951:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30083;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3951:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "3513:17:145";
                readonly parameters: {
                    readonly id: 30044;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30039;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "3539:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30087;
                        readonly src: "3531:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30038;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3531:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30041;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "3550:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30087;
                        readonly src: "3542:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30040;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3542:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30043;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "3561:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30087;
                        readonly src: "3553:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30042;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3553:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3530:40:145";
                };
                readonly returnParameters: {
                    readonly id: 30045;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3588:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30123;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3980:294:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30122;
                    readonly nodeType: "Block";
                    readonly src: "4083:191:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30099];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30099;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "4101:5:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30122;
                            readonly src: "4093:13:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30098;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "4093:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30105;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30102;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30089;
                                readonly src: "4123:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30103;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30091;
                                readonly src: "4126:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30100;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "4109:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30101;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4117:5:145";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35483;
                                readonly src: "4109:13:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30104;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "4109:19:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "4093:35:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30108;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30106;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30099;
                                readonly src: "4143:5:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30107;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30093;
                                readonly src: "4151:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "4143:16:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30121;
                        readonly nodeType: "IfStatement";
                        readonly src: "4139:129:145";
                        readonly trueBody: {
                            readonly id: 30120;
                            readonly nodeType: "Block";
                            readonly src: "4161:107:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30110;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4197:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30111;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30095;
                                        readonly src: "4206:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30109;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "4180:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30112;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4180:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30113;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4175:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30115;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30089;
                                        readonly src: "4242:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30116;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30091;
                                        readonly src: "4245:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30117;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30093;
                                        readonly src: "4248:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30114;
                                        readonly name: "assertApproxEqAbs";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30087, 30123, 30268, 30304];
                                        readonly referencedDeclaration: 30087;
                                        readonly src: "4224:17:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30118;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4224:33:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30119;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "4224:33:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "3989:17:145";
                readonly parameters: {
                    readonly id: 30096;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30089;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "4015:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30123;
                        readonly src: "4007:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30088;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4007:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30091;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "4026:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30123;
                        readonly src: "4018:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30090;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4018:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30093;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "4037:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30123;
                        readonly src: "4029:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30092;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4029:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30095;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "4061:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30123;
                        readonly src: "4047:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30094;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4047:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4006:59:145";
                };
                readonly returnParameters: {
                    readonly id: 30097;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "4083:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30179;
                readonly nodeType: "FunctionDefinition";
                readonly src: "4280:567:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30178;
                    readonly nodeType: "Block";
                    readonly src: "4389:458:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30135];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30135;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "4407:5:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30178;
                            readonly src: "4399:13:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30134;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "4399:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30141;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30138;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30125;
                                readonly src: "4429:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30139;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30127;
                                readonly src: "4432:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30136;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "4415:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30137;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4423:5:145";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35483;
                                readonly src: "4415:13:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30140;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "4415:19:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "4399:35:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30144;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30142;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30135;
                                readonly src: "4449:5:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30143;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30129;
                                readonly src: "4457:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "4449:16:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30177;
                        readonly nodeType: "IfStatement";
                        readonly src: "4445:396:145";
                        readonly trueBody: {
                            readonly id: 30176;
                            readonly nodeType: "Block";
                            readonly src: "4467:374:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 30146;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4490:36:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 30145;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "4486:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30147;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4486:41:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30148;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4481:46:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 30150;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4569:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 30151;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30125;
                                        readonly src: "4583:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30152;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30131;
                                        readonly src: "4586:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30149;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "4546:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30153;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4546:49:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30154;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4541:54:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 30156;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4637:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 30157;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30127;
                                        readonly src: "4651:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30158;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30131;
                                        readonly src: "4654:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30155;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "4614:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30159;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4614:49:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30160;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4609:54:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 30162;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4705:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 30163;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30129;
                                        readonly src: "4719:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30164;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30131;
                                        readonly src: "4729:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30161;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "4682:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30165;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4682:56:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30166;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4677:61:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 30168;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4780:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 30169;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30135;
                                        readonly src: "4794:5:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30170;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30131;
                                        readonly src: "4801:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30167;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "4757:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30171;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4757:53:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30172;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4752:58:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30173;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "4824:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30174;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4824:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30175;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "4824:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "4289:24:145";
                readonly parameters: {
                    readonly id: 30132;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30125;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "4322:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30179;
                        readonly src: "4314:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30124;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4314:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30127;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "4333:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30179;
                        readonly src: "4325:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30126;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4325:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30129;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "4344:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30179;
                        readonly src: "4336:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30128;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4336:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30131;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "4362:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30179;
                        readonly src: "4354:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30130;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4354:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4313:58:145";
                };
                readonly returnParameters: {
                    readonly id: 30133;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "4389:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30218;
                readonly nodeType: "FunctionDefinition";
                readonly src: "4853:356:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30217;
                    readonly nodeType: "Block";
                    readonly src: "5001:208:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30193];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30193;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "5019:5:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30217;
                            readonly src: "5011:13:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30192;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5011:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30199;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30196;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30181;
                                readonly src: "5041:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30197;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30183;
                                readonly src: "5044:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30194;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "5027:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30195;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5035:5:145";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35483;
                                readonly src: "5027:13:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30198;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5027:19:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5011:35:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30202;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30200;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30193;
                                readonly src: "5061:5:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30201;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30185;
                                readonly src: "5069:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "5061:16:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30216;
                        readonly nodeType: "IfStatement";
                        readonly src: "5057:146:145";
                        readonly trueBody: {
                            readonly id: 30215;
                            readonly nodeType: "Block";
                            readonly src: "5079:124:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30204;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5115:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30205;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30189;
                                        readonly src: "5124:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30203;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "5098:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30206;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5098:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30207;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5093:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30209;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30181;
                                        readonly src: "5167:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30210;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30183;
                                        readonly src: "5170:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30211;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30185;
                                        readonly src: "5173:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30212;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30187;
                                        readonly src: "5183:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30208;
                                        readonly name: "assertApproxEqAbsDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30179, 30218, 30360, 30399];
                                        readonly referencedDeclaration: 30179;
                                        readonly src: "5142:24:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30213;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5142:50:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30214;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "5142:50:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "4862:24:145";
                readonly parameters: {
                    readonly id: 30190;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30181;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "4895:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30218;
                        readonly src: "4887:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30180;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4887:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30183;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "4906:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30218;
                        readonly src: "4898:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30182;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4898:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30185;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "4917:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30218;
                        readonly src: "4909:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30184;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4909:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30187;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "4935:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30218;
                        readonly src: "4927:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30186;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4927:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30189;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "4959:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30218;
                        readonly src: "4945:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30188;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4945:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4886:77:145";
                };
                readonly returnParameters: {
                    readonly id: 30191;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "5001:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30268;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5215:467:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30267;
                    readonly nodeType: "Block";
                    readonly src: "5297:385:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30228];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30228;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "5315:5:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30267;
                            readonly src: "5307:13:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30227;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5307:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30234;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30231;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30220;
                                readonly src: "5337:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30232;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30222;
                                readonly src: "5340:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30229;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "5323:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30230;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5331:5:145";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35519;
                                readonly src: "5323:13:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30233;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5323:19:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5307:35:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30237;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30235;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30228;
                                readonly src: "5357:5:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30236;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30224;
                                readonly src: "5365:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "5357:16:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30266;
                        readonly nodeType: "IfStatement";
                        readonly src: "5353:323:145";
                        readonly trueBody: {
                            readonly id: 30265;
                            readonly nodeType: "Block";
                            readonly src: "5375:301:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 30239;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5398:35:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 30238;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "5394:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30240;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5394:40:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30241;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5389:45:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020204c656674";
                                        readonly id: 30243;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5467:13:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_0d86233afabb8b3973e071db5489b096a3194445fead9d01245809171b4e3927";
                                            readonly typeString: "literal_string \"       Left\"";
                                        };
                                        readonly value: "       Left";
                                    }, {
                                        readonly id: 30244;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30220;
                                        readonly src: "5482:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_0d86233afabb8b3973e071db5489b096a3194445fead9d01245809171b4e3927";
                                            readonly typeString: "literal_string \"       Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 30242;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27309;
                                        readonly src: "5453:13:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 30245;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5453:31:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30246;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5448:36:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020205269676874";
                                        readonly id: 30248;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5517:13:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_49df7c349e5ac2a2258473415d7a60c524ff5057a99dca9437d1a93b96f3739d";
                                            readonly typeString: "literal_string \"      Right\"";
                                        };
                                        readonly value: "      Right";
                                    }, {
                                        readonly id: 30249;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30222;
                                        readonly src: "5532:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_49df7c349e5ac2a2258473415d7a60c524ff5057a99dca9437d1a93b96f3739d";
                                            readonly typeString: "literal_string \"      Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 30247;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27309;
                                        readonly src: "5503:13:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 30250;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5503:31:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30251;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5498:36:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 30253;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5568:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 30254;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30224;
                                        readonly src: "5582:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30252;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27315;
                                        readonly src: "5553:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30255;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5553:38:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30256;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5548:43:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 30258;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5625:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 30259;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30228;
                                        readonly src: "5639:5:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30257;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27315;
                                        readonly src: "5610:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30260;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5610:35:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30261;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5605:40:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30262;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "5659:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30263;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5659:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30264;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "5659:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "5224:17:145";
                readonly parameters: {
                    readonly id: 30225;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30220;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "5249:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30268;
                        readonly src: "5242:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30219;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5242:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30222;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "5259:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30268;
                        readonly src: "5252:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30221;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5252:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30224;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "5270:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30268;
                        readonly src: "5262:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30223;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5262:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "5241:38:145";
                };
                readonly returnParameters: {
                    readonly id: 30226;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "5297:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30304;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5688:292:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30303;
                    readonly nodeType: "Block";
                    readonly src: "5789:191:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30280];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30280;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "5807:5:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30303;
                            readonly src: "5799:13:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30279;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5799:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30286;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30283;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30270;
                                readonly src: "5829:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30284;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30272;
                                readonly src: "5832:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30281;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "5815:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30282;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5823:5:145";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35519;
                                readonly src: "5815:13:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30285;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5815:19:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5799:35:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30289;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30287;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30280;
                                readonly src: "5849:5:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30288;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30274;
                                readonly src: "5857:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "5849:16:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30302;
                        readonly nodeType: "IfStatement";
                        readonly src: "5845:129:145";
                        readonly trueBody: {
                            readonly id: 30301;
                            readonly nodeType: "Block";
                            readonly src: "5867:107:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30291;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5903:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30292;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30276;
                                        readonly src: "5912:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30290;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "5886:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30293;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5886:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30294;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5881:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30296;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30270;
                                        readonly src: "5948:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30297;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30272;
                                        readonly src: "5951:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30298;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30274;
                                        readonly src: "5954:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30295;
                                        readonly name: "assertApproxEqAbs";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30087, 30123, 30268, 30304];
                                        readonly referencedDeclaration: 30268;
                                        readonly src: "5930:17:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256)";
                                        };
                                    };
                                    readonly id: 30299;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5930:33:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30300;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "5930:33:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "5697:17:145";
                readonly parameters: {
                    readonly id: 30277;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30270;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "5722:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30304;
                        readonly src: "5715:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30269;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5715:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30272;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "5732:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30304;
                        readonly src: "5725:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30271;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5725:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30274;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "5743:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30304;
                        readonly src: "5735:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30273;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5735:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30276;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "5767:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30304;
                        readonly src: "5753:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30275;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5753:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "5714:57:145";
                };
                readonly returnParameters: {
                    readonly id: 30278;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "5789:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30360;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5986:562:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30359;
                    readonly nodeType: "Block";
                    readonly src: "6093:455:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30316];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30316;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "6111:5:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30359;
                            readonly src: "6103:13:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30315;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "6103:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30322;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30319;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30306;
                                readonly src: "6133:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30320;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30308;
                                readonly src: "6136:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30317;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "6119:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30318;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "6127:5:145";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35519;
                                readonly src: "6119:13:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30321;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "6119:19:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "6103:35:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30325;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30323;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30316;
                                readonly src: "6153:5:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30324;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30310;
                                readonly src: "6161:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "6153:16:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30358;
                        readonly nodeType: "IfStatement";
                        readonly src: "6149:393:145";
                        readonly trueBody: {
                            readonly id: 30357;
                            readonly nodeType: "Block";
                            readonly src: "6171:371:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 30327;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6194:35:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 30326;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "6190:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30328;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6190:40:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30329;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6185:45:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 30331;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6271:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 30332;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30306;
                                        readonly src: "6285:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30333;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30312;
                                        readonly src: "6288:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30330;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27295;
                                        readonly src: "6249:21:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 30334;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6249:48:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30335;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6244:53:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 30337;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6338:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 30338;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30308;
                                        readonly src: "6352:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30339;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30312;
                                        readonly src: "6355:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30336;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27295;
                                        readonly src: "6316:21:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 30340;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6316:48:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30341;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6311:53:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 30343;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6406:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 30344;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30310;
                                        readonly src: "6420:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30345;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30312;
                                        readonly src: "6430:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30342;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "6383:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30346;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6383:56:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30347;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6378:61:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 30349;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6481:12:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 30350;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30316;
                                        readonly src: "6495:5:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30351;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30312;
                                        readonly src: "6502:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30348;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "6458:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30352;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6458:53:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30353;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6453:58:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30354;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "6525:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30355;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6525:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30356;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "6525:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "5995:24:145";
                readonly parameters: {
                    readonly id: 30313;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30306;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "6027:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30360;
                        readonly src: "6020:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30305;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6020:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30308;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "6037:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30360;
                        readonly src: "6030:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30307;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6030:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30310;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "6048:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30360;
                        readonly src: "6040:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30309;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6040:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30312;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "6066:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30360;
                        readonly src: "6058:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30311;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6058:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "6019:56:145";
                };
                readonly returnParameters: {
                    readonly id: 30314;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "6093:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30399;
                readonly nodeType: "FunctionDefinition";
                readonly src: "6554:354:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30398;
                    readonly nodeType: "Block";
                    readonly src: "6700:208:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30374];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30374;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "6718:5:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30398;
                            readonly src: "6710:13:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30373;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "6710:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30380;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30377;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30362;
                                readonly src: "6740:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30378;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30364;
                                readonly src: "6743:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30375;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "6726:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30376;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "6734:5:145";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35519;
                                readonly src: "6726:13:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30379;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "6726:19:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "6710:35:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30383;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30381;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30374;
                                readonly src: "6760:5:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30382;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30366;
                                readonly src: "6768:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "6760:16:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30397;
                        readonly nodeType: "IfStatement";
                        readonly src: "6756:146:145";
                        readonly trueBody: {
                            readonly id: 30396;
                            readonly nodeType: "Block";
                            readonly src: "6778:124:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30385;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6814:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30386;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30370;
                                        readonly src: "6823:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30384;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "6797:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30387;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6797:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30388;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6792:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30390;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30362;
                                        readonly src: "6866:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30391;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30364;
                                        readonly src: "6869:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30392;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30366;
                                        readonly src: "6872:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30393;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30368;
                                        readonly src: "6882:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30389;
                                        readonly name: "assertApproxEqAbsDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30179, 30218, 30360, 30399];
                                        readonly referencedDeclaration: 30360;
                                        readonly src: "6841:24:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30394;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6841:50:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30395;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "6841:50:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "6563:24:145";
                readonly parameters: {
                    readonly id: 30371;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30362;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "6595:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30399;
                        readonly src: "6588:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30361;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6588:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30364;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "6605:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30399;
                        readonly src: "6598:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30363;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6598:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30366;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "6616:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30399;
                        readonly src: "6608:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30365;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6608:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30368;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "6634:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30399;
                        readonly src: "6626:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30367;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6626:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30370;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "6658:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30399;
                        readonly src: "6644:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30369;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6644:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "6587:75:145";
                };
                readonly returnParameters: {
                    readonly id: 30372;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "6700:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30464;
                readonly nodeType: "FunctionDefinition";
                readonly src: "6914:733:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30463;
                    readonly nodeType: "Block";
                    readonly src: "7091:556:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30410;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30408;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30403;
                                readonly src: "7105:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 30409;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "7110:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "7105:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30416;
                        readonly nodeType: "IfStatement";
                        readonly src: "7101:33:145";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 30412;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30401;
                                    readonly src: "7129:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 30413;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30403;
                                    readonly src: "7132:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 30411;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                    readonly referencedDeclaration: 27756;
                                    readonly src: "7120:8:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$";
                                        readonly typeString: "function (uint256,uint256)";
                                    };
                                };
                                readonly id: 30414;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "7120:14:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 30407;
                            readonly id: 30415;
                            readonly nodeType: "Return";
                            readonly src: "7113:21:145";
                        };
                    }, {
                        readonly assignments: readonly [30418];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30418;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "7193:12:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30463;
                            readonly src: "7185:20:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30417;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "7185:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30424;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30421;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30401;
                                readonly src: "7229:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30422;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30403;
                                readonly src: "7232:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30419;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "7208:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30420;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "7216:12:145";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35542;
                                readonly src: "7208:20:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30423;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "7208:26:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "7185:49:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30427;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30425;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30418;
                                readonly src: "7249:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30426;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30405;
                                readonly src: "7264:15:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "7249:30:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30462;
                        readonly nodeType: "IfStatement";
                        readonly src: "7245:396:145";
                        readonly trueBody: {
                            readonly id: 30461;
                            readonly nodeType: "Block";
                            readonly src: "7281:360:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 30429;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7304:36:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 30428;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "7300:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30430;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7300:41:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30431;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7295:46:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 30433;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7375:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 30434;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30401;
                                        readonly src: "7391:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30432;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27315;
                                        readonly src: "7360:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30435;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7360:33:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30436;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7355:38:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 30438;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7427:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 30439;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30403;
                                        readonly src: "7443:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30437;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27315;
                                        readonly src: "7412:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30440;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7412:33:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30441;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7407:38:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 30443;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7487:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 30446;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 30444;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 30405;
                                            readonly src: "7503:15:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 30445;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "7521:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "7503:21:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 30447;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7526:2:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 30442;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "7464:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30448;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7464:65:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30449;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7459:70:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 30451;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7571:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 30454;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 30452;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 30418;
                                            readonly src: "7587:12:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 30453;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "7602:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "7587:18:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 30455;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7607:2:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 30450;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "7548:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30456;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7548:62:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30457;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7543:67:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30458;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "7624:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30459;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7624:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30460;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "7624:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "6923:17:145";
                readonly parameters: {
                    readonly id: 30406;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30401;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "6958:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30464;
                        readonly src: "6950:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30400;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6950:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30403;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "6977:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30464;
                        readonly src: "6969:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30402;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6969:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30405;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "6996:15:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30464;
                        readonly src: "6988:23:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30404;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6988:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "6940:133:145";
                };
                readonly returnParameters: {
                    readonly id: 30407;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "7091:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30510;
                readonly nodeType: "FunctionDefinition";
                readonly src: "7653:519:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30509;
                    readonly nodeType: "Block";
                    readonly src: "7857:315:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30477;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30475;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30468;
                                readonly src: "7871:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 30476;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "7876:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "7871:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30484;
                        readonly nodeType: "IfStatement";
                        readonly src: "7867:38:145";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 30479;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30466;
                                    readonly src: "7895:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 30480;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30468;
                                    readonly src: "7898:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 30481;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30472;
                                    readonly src: "7901:3:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 30478;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                    readonly referencedDeclaration: 27781;
                                    readonly src: "7886:8:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (uint256,uint256,string memory)";
                                    };
                                };
                                readonly id: 30482;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "7886:19:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 30474;
                            readonly id: 30483;
                            readonly nodeType: "Return";
                            readonly src: "7879:26:145";
                        };
                    }, {
                        readonly assignments: readonly [30486];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30486;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "7964:12:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30509;
                            readonly src: "7956:20:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30485;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "7956:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30492;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30489;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30466;
                                readonly src: "8000:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30490;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30468;
                                readonly src: "8003:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30487;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "7979:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30488;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "7987:12:145";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35542;
                                readonly src: "7979:20:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30491;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "7979:26:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "7956:49:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30495;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30493;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30486;
                                readonly src: "8020:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30494;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30470;
                                readonly src: "8035:15:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8020:30:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30508;
                        readonly nodeType: "IfStatement";
                        readonly src: "8016:150:145";
                        readonly trueBody: {
                            readonly id: 30507;
                            readonly nodeType: "Block";
                            readonly src: "8052:114:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30497;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8088:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30498;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30472;
                                        readonly src: "8097:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30496;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "8071:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30499;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8071:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30500;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8066:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30502;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30466;
                                        readonly src: "8133:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30503;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30468;
                                        readonly src: "8136:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30504;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30470;
                                        readonly src: "8139:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30501;
                                        readonly name: "assertApproxEqRel";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30464, 30510, 30693, 30739];
                                        readonly referencedDeclaration: 30464;
                                        readonly src: "8115:17:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30505;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8115:40:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30506;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "8115:40:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "7662:17:145";
                readonly parameters: {
                    readonly id: 30473;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30466;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "7697:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30510;
                        readonly src: "7689:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30465;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7689:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30468;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "7716:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30510;
                        readonly src: "7708:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30467;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7708:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30470;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "7735:15:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30510;
                        readonly src: "7727:23:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30469;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7727:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30472;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "7830:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30510;
                        readonly src: "7816:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30471;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7816:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "7679:160:145";
                };
                readonly returnParameters: {
                    readonly id: 30474;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "7857:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30579;
                readonly nodeType: "FunctionDefinition";
                readonly src: "8178:802:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30578;
                    readonly nodeType: "Block";
                    readonly src: "8388:592:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30523;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30521;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30514;
                                readonly src: "8402:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 30522;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "8407:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "8402:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30529;
                        readonly nodeType: "IfStatement";
                        readonly src: "8398:33:145";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 30525;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30512;
                                    readonly src: "8426:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 30526;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30514;
                                    readonly src: "8429:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 30524;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                    readonly referencedDeclaration: 27756;
                                    readonly src: "8417:8:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$";
                                        readonly typeString: "function (uint256,uint256)";
                                    };
                                };
                                readonly id: 30527;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "8417:14:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 30520;
                            readonly id: 30528;
                            readonly nodeType: "Return";
                            readonly src: "8410:21:145";
                        };
                    }, {
                        readonly assignments: readonly [30531];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30531;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "8490:12:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30578;
                            readonly src: "8482:20:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30530;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "8482:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30537;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30534;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30512;
                                readonly src: "8526:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30535;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30514;
                                readonly src: "8529:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30532;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "8505:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30533;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8513:12:145";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35542;
                                readonly src: "8505:20:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30536;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "8505:26:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "8482:49:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30540;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30538;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30531;
                                readonly src: "8546:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30539;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30516;
                                readonly src: "8561:15:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8546:30:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30577;
                        readonly nodeType: "IfStatement";
                        readonly src: "8542:432:145";
                        readonly trueBody: {
                            readonly id: 30576;
                            readonly nodeType: "Block";
                            readonly src: "8578:396:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 30542;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8601:36:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 30541;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "8597:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30543;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8597:41:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30544;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8592:46:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 30546;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8680:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 30547;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30512;
                                        readonly src: "8696:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30548;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30518;
                                        readonly src: "8699:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30545;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "8657:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30549;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8657:51:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30550;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8652:56:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 30552;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8750:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 30553;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30514;
                                        readonly src: "8766:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30554;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30518;
                                        readonly src: "8769:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30551;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "8727:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30555;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8727:51:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30556;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8722:56:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 30558;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8820:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 30561;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 30559;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 30516;
                                            readonly src: "8836:15:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 30560;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "8854:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "8836:21:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 30562;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8859:2:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 30557;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "8797:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30563;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8797:65:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30564;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8792:70:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 30566;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8904:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 30569;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 30567;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 30531;
                                            readonly src: "8920:12:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 30568;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "8935:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "8920:18:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 30570;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8940:2:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 30565;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "8881:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30571;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8881:62:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30572;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8876:67:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30573;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "8957:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30574;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8957:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30575;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "8957:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "8187:24:145";
                readonly parameters: {
                    readonly id: 30519;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30512;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "8229:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30579;
                        readonly src: "8221:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30511;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8221:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30514;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "8248:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30579;
                        readonly src: "8240:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30513;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8240:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30516;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "8267:15:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30579;
                        readonly src: "8259:23:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30515;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8259:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30518;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "8356:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30579;
                        readonly src: "8348:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30517;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8348:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "8211:159:145";
                };
                readonly returnParameters: {
                    readonly id: 30520;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "8388:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30628;
                readonly nodeType: "FunctionDefinition";
                readonly src: "8986:569:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30627;
                    readonly nodeType: "Block";
                    readonly src: "9223:332:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30594;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30592;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30583;
                                readonly src: "9237:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 30593;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "9242:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "9237:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30601;
                        readonly nodeType: "IfStatement";
                        readonly src: "9233:38:145";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 30596;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30581;
                                    readonly src: "9261:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 30597;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30583;
                                    readonly src: "9264:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 30598;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30589;
                                    readonly src: "9267:3:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 30595;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                    readonly referencedDeclaration: 27781;
                                    readonly src: "9252:8:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (uint256,uint256,string memory)";
                                    };
                                };
                                readonly id: 30599;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "9252:19:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 30591;
                            readonly id: 30600;
                            readonly nodeType: "Return";
                            readonly src: "9245:26:145";
                        };
                    }, {
                        readonly assignments: readonly [30603];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30603;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "9330:12:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30627;
                            readonly src: "9322:20:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30602;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "9322:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30609;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30606;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30581;
                                readonly src: "9366:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30607;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30583;
                                readonly src: "9369:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30604;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "9345:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30605;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9353:12:145";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35542;
                                readonly src: "9345:20:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30608;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "9345:26:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "9322:49:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30612;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30610;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30603;
                                readonly src: "9386:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30611;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30585;
                                readonly src: "9401:15:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9386:30:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30626;
                        readonly nodeType: "IfStatement";
                        readonly src: "9382:167:145";
                        readonly trueBody: {
                            readonly id: 30625;
                            readonly nodeType: "Block";
                            readonly src: "9418:131:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30614;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9454:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30615;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30589;
                                        readonly src: "9463:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30613;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "9437:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30616;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9437:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30617;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9432:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30619;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30581;
                                        readonly src: "9506:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30620;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30583;
                                        readonly src: "9509:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30621;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30585;
                                        readonly src: "9512:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30622;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30587;
                                        readonly src: "9529:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30618;
                                        readonly name: "assertApproxEqRelDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30579, 30628, 30808, 30857];
                                        readonly referencedDeclaration: 30579;
                                        readonly src: "9481:24:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30623;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9481:57:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30624;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "9481:57:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "8995:24:145";
                readonly parameters: {
                    readonly id: 30590;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30581;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "9037:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30628;
                        readonly src: "9029:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30580;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9029:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30583;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "9056:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30628;
                        readonly src: "9048:9:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30582;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9048:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30585;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "9075:15:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30628;
                        readonly src: "9067:23:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30584;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9067:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30587;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "9164:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30628;
                        readonly src: "9156:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30586;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9156:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30589;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "9196:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30628;
                        readonly src: "9182:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30588;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9182:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "9019:186:145";
                };
                readonly returnParameters: {
                    readonly id: 30591;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "9223:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30693;
                readonly nodeType: "FunctionDefinition";
                readonly src: "9561:642:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30692;
                    readonly nodeType: "Block";
                    readonly src: "9650:553:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 30639;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30637;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30632;
                                readonly src: "9664:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 30638;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "9669:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "9664:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30645;
                        readonly nodeType: "IfStatement";
                        readonly src: "9660:33:145";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 30641;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30630;
                                    readonly src: "9688:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 30642;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30632;
                                    readonly src: "9691:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }];
                                    readonly id: 30640;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                    readonly referencedDeclaration: 27701;
                                    readonly src: "9679:8:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$";
                                        readonly typeString: "function (int256,int256)";
                                    };
                                };
                                readonly id: 30643;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "9679:14:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 30636;
                            readonly id: 30644;
                            readonly nodeType: "Return";
                            readonly src: "9672:21:145";
                        };
                    }, {
                        readonly assignments: readonly [30647];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30647;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "9752:12:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30692;
                            readonly src: "9744:20:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30646;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "9744:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30653;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30650;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30630;
                                readonly src: "9788:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30651;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30632;
                                readonly src: "9791:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30648;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "9767:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30649;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9775:12:145";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35571;
                                readonly src: "9767:20:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30652;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "9767:26:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "9744:49:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30656;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30654;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30647;
                                readonly src: "9808:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30655;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30634;
                                readonly src: "9823:15:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9808:30:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30691;
                        readonly nodeType: "IfStatement";
                        readonly src: "9804:393:145";
                        readonly trueBody: {
                            readonly id: 30690;
                            readonly nodeType: "Block";
                            readonly src: "9840:357:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 30658;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9863:35:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 30657;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "9859:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30659;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9859:40:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30660;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9854:45:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 30662;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9932:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 30663;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30630;
                                        readonly src: "9948:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 30661;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27309;
                                        readonly src: "9918:13:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 30664;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9918:32:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30665;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9913:37:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 30667;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9983:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 30668;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30632;
                                        readonly src: "9999:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 30666;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27309;
                                        readonly src: "9969:13:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 30669;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9969:32:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30670;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9964:37:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 30672;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10043:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 30675;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 30673;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 30634;
                                            readonly src: "10059:15:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 30674;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "10077:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "10059:21:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 30676;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10082:2:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 30671;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "10020:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30677;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10020:65:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30678;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10015:70:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 30680;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10127:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 30683;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 30681;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 30647;
                                            readonly src: "10143:12:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 30682;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "10158:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "10143:18:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 30684;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10163:2:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 30679;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "10104:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30685;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10104:62:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30686;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10099:67:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30687;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "10180:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30688;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10180:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30689;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "10180:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "9570:17:145";
                readonly parameters: {
                    readonly id: 30635;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30630;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "9595:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30693;
                        readonly src: "9588:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30629;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9588:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30632;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "9605:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30693;
                        readonly src: "9598:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30631;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9598:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30634;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "9616:15:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30693;
                        readonly src: "9608:23:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30633;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9608:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "9587:45:145";
                };
                readonly returnParameters: {
                    readonly id: 30636;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "9650:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30739;
                readonly nodeType: "FunctionDefinition";
                readonly src: "10209:423:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30738;
                    readonly nodeType: "Block";
                    readonly src: "10317:315:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 30706;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30704;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30697;
                                readonly src: "10331:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 30705;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "10336:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "10331:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30713;
                        readonly nodeType: "IfStatement";
                        readonly src: "10327:38:145";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 30708;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30695;
                                    readonly src: "10355:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 30709;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30697;
                                    readonly src: "10358:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 30710;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30701;
                                    readonly src: "10361:3:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 30707;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                    readonly referencedDeclaration: 27726;
                                    readonly src: "10346:8:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (int256,int256,string memory)";
                                    };
                                };
                                readonly id: 30711;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "10346:19:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 30703;
                            readonly id: 30712;
                            readonly nodeType: "Return";
                            readonly src: "10339:26:145";
                        };
                    }, {
                        readonly assignments: readonly [30715];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30715;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "10424:12:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30738;
                            readonly src: "10416:20:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30714;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "10416:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30721;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30718;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30695;
                                readonly src: "10460:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30719;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30697;
                                readonly src: "10463:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30716;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "10439:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30717;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10447:12:145";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35571;
                                readonly src: "10439:20:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30720;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "10439:26:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "10416:49:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30724;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30722;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30715;
                                readonly src: "10480:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30723;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30699;
                                readonly src: "10495:15:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10480:30:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30737;
                        readonly nodeType: "IfStatement";
                        readonly src: "10476:150:145";
                        readonly trueBody: {
                            readonly id: 30736;
                            readonly nodeType: "Block";
                            readonly src: "10512:114:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30726;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10548:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30727;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30701;
                                        readonly src: "10557:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30725;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "10531:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30728;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10531:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30729;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10526:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30731;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30695;
                                        readonly src: "10593:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30732;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30697;
                                        readonly src: "10596:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30733;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30699;
                                        readonly src: "10599:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30730;
                                        readonly name: "assertApproxEqRel";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30464, 30510, 30693, 30739];
                                        readonly referencedDeclaration: 30693;
                                        readonly src: "10575:17:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256)";
                                        };
                                    };
                                    readonly id: 30734;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10575:40:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30735;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "10575:40:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "10218:17:145";
                readonly parameters: {
                    readonly id: 30702;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30695;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "10243:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30739;
                        readonly src: "10236:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30694;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10236:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30697;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "10253:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30739;
                        readonly src: "10246:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30696;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10246:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30699;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "10264:15:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30739;
                        readonly src: "10256:23:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30698;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10256:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30701;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "10295:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30739;
                        readonly src: "10281:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30700;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10281:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "10235:64:145";
                };
                readonly returnParameters: {
                    readonly id: 30703;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "10317:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30808;
                readonly nodeType: "FunctionDefinition";
                readonly src: "10638:703:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30807;
                    readonly nodeType: "Block";
                    readonly src: "10752:589:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 30752;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30750;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30743;
                                readonly src: "10766:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 30751;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "10771:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "10766:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30758;
                        readonly nodeType: "IfStatement";
                        readonly src: "10762:33:145";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 30754;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30741;
                                    readonly src: "10790:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 30755;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30743;
                                    readonly src: "10793:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }];
                                    readonly id: 30753;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                    readonly referencedDeclaration: 27701;
                                    readonly src: "10781:8:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$";
                                        readonly typeString: "function (int256,int256)";
                                    };
                                };
                                readonly id: 30756;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "10781:14:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 30749;
                            readonly id: 30757;
                            readonly nodeType: "Return";
                            readonly src: "10774:21:145";
                        };
                    }, {
                        readonly assignments: readonly [30760];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30760;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "10854:12:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30807;
                            readonly src: "10846:20:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30759;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "10846:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30766;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30763;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30741;
                                readonly src: "10890:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30764;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30743;
                                readonly src: "10893:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30761;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "10869:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30762;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10877:12:145";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35571;
                                readonly src: "10869:20:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30765;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "10869:26:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "10846:49:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30769;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30767;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30760;
                                readonly src: "10910:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30768;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30745;
                                readonly src: "10925:15:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10910:30:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30806;
                        readonly nodeType: "IfStatement";
                        readonly src: "10906:429:145";
                        readonly trueBody: {
                            readonly id: 30805;
                            readonly nodeType: "Block";
                            readonly src: "10942:393:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 30771;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10965:35:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 30770;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "10961:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30772;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10961:40:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30773;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10956:45:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 30775;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11042:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 30776;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30741;
                                        readonly src: "11058:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30777;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30747;
                                        readonly src: "11061:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30774;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27295;
                                        readonly src: "11020:21:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 30778;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11020:50:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30779;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11015:55:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 30781;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11111:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 30782;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30743;
                                        readonly src: "11127:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30783;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30747;
                                        readonly src: "11130:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30780;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27295;
                                        readonly src: "11089:21:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 30784;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11089:50:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30785;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11084:55:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 30787;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11181:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 30790;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 30788;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 30745;
                                            readonly src: "11197:15:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 30789;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "11215:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "11197:21:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 30791;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11220:2:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 30786;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "11158:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30792;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11158:65:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30793;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11153:70:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 30795;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11265:14:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 30798;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 30796;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 30760;
                                            readonly src: "11281:12:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 30797;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "11296:3:145";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "11281:18:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 30799;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11301:2:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 30794;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27303;
                                        readonly src: "11242:22:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30800;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11242:62:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30801;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11237:67:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30802;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "11318:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30803;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11318:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30804;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "11318:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "10647:24:145";
                readonly parameters: {
                    readonly id: 30748;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30741;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "10679:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30808;
                        readonly src: "10672:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30740;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10672:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30743;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "10689:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30808;
                        readonly src: "10682:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30742;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10682:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30745;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "10700:15:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30808;
                        readonly src: "10692:23:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30744;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10692:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30747;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "10725:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30808;
                        readonly src: "10717:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30746;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10717:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "10671:63:145";
                };
                readonly returnParameters: {
                    readonly id: 30749;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "10752:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30857;
                readonly nodeType: "FunctionDefinition";
                readonly src: "11347:485:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30856;
                    readonly nodeType: "Block";
                    readonly src: "11500:332:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 30823;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30821;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30812;
                                readonly src: "11514:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 30822;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "11519:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "11514:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30830;
                        readonly nodeType: "IfStatement";
                        readonly src: "11510:38:145";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 30825;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30810;
                                    readonly src: "11538:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 30826;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30812;
                                    readonly src: "11541:1:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 30827;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30818;
                                    readonly src: "11544:3:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 30824;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                    readonly referencedDeclaration: 27726;
                                    readonly src: "11529:8:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (int256,int256,string memory)";
                                    };
                                };
                                readonly id: 30828;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "11529:19:145";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 30820;
                            readonly id: 30829;
                            readonly nodeType: "Return";
                            readonly src: "11522:26:145";
                        };
                    }, {
                        readonly assignments: readonly [30832];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30832;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "11607:12:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30856;
                            readonly src: "11599:20:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30831;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "11599:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30838;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30835;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30810;
                                readonly src: "11643:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30836;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30812;
                                readonly src: "11646:1:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30833;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 35572;
                                    readonly src: "11622:7:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$35572_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30834;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11630:12:145";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 35571;
                                readonly src: "11622:20:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30837;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "11622:26:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "11599:49:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30841;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30839;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30832;
                                readonly src: "11663:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30840;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30814;
                                readonly src: "11678:15:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "11663:30:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30855;
                        readonly nodeType: "IfStatement";
                        readonly src: "11659:167:145";
                        readonly trueBody: {
                            readonly id: 30854;
                            readonly nodeType: "Block";
                            readonly src: "11695:131:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30843;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11731:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30844;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30818;
                                        readonly src: "11740:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30842;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27327;
                                        readonly src: "11714:16:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30845;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11714:30:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30846;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11709:35:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30848;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30810;
                                        readonly src: "11783:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30849;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30812;
                                        readonly src: "11786:1:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30850;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30814;
                                        readonly src: "11789:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30851;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30816;
                                        readonly src: "11806:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30847;
                                        readonly name: "assertApproxEqRelDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30579, 30628, 30808, 30857];
                                        readonly referencedDeclaration: 30808;
                                        readonly src: "11758:24:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30852;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11758:57:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30853;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "11758:57:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "11356:24:145";
                readonly parameters: {
                    readonly id: 30819;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30810;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "11388:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30857;
                        readonly src: "11381:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30809;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11381:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30812;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "11398:1:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30857;
                        readonly src: "11391:8:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30811;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11391:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30814;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "11409:15:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30857;
                        readonly src: "11401:23:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30813;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11401:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30816;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "11434:8:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30857;
                        readonly src: "11426:16:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30815;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11426:7:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30818;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "11458:3:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30857;
                        readonly src: "11444:17:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30817;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11444:6:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "11380:82:145";
                };
                readonly returnParameters: {
                    readonly id: 30820;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "11500:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30875;
                readonly nodeType: "FunctionDefinition";
                readonly src: "11838:176:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30874;
                    readonly nodeType: "Block";
                    readonly src: "11941:73:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 30867;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30859;
                                readonly src: "11964:6:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 30868;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30861;
                                readonly src: "11972:9:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 30869;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30859;
                                readonly src: "11983:6:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 30870;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30863;
                                readonly src: "11991:9:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly hexValue: "74727565";
                                readonly id: 30871;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "12002:4:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 30866;
                                readonly name: "assertEqCall";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [30875, 30895, 30915, 31025];
                                readonly referencedDeclaration: 31025;
                                readonly src: "11951:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$";
                                    readonly typeString: "function (address,bytes memory,address,bytes memory,bool)";
                                };
                            };
                            readonly id: 30872;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "11951:56:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30873;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11951:56:145";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "11847:12:145";
                readonly parameters: {
                    readonly id: 30864;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30859;
                        readonly mutability: "mutable";
                        readonly name: "target";
                        readonly nameLocation: "11868:6:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30875;
                        readonly src: "11860:14:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 30858;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11860:7:145";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30861;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "11889:9:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30875;
                        readonly src: "11876:22:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30860;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11876:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30863;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "11913:9:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30875;
                        readonly src: "11900:22:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30862;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11900:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "11859:64:145";
                };
                readonly returnParameters: {
                    readonly id: 30865;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "11941:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30895;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12020:216:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30894;
                    readonly nodeType: "Block";
                    readonly src: "12161:75:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 30887;
                                readonly name: "targetA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30877;
                                readonly src: "12184:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 30888;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30879;
                                readonly src: "12193:9:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 30889;
                                readonly name: "targetB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30881;
                                readonly src: "12204:7:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 30890;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30883;
                                readonly src: "12213:9:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly hexValue: "74727565";
                                readonly id: 30891;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "12224:4:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 30886;
                                readonly name: "assertEqCall";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [30875, 30895, 30915, 31025];
                                readonly referencedDeclaration: 31025;
                                readonly src: "12171:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$";
                                    readonly typeString: "function (address,bytes memory,address,bytes memory,bool)";
                                };
                            };
                            readonly id: 30892;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12171:58:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30893;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12171:58:145";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "12029:12:145";
                readonly parameters: {
                    readonly id: 30884;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30877;
                        readonly mutability: "mutable";
                        readonly name: "targetA";
                        readonly nameLocation: "12050:7:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30895;
                        readonly src: "12042:15:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 30876;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12042:7:145";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30879;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "12072:9:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30895;
                        readonly src: "12059:22:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30878;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12059:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30881;
                        readonly mutability: "mutable";
                        readonly name: "targetB";
                        readonly nameLocation: "12091:7:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30895;
                        readonly src: "12083:15:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 30880;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12083:7:145";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30883;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "12113:9:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30895;
                        readonly src: "12100:22:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30882;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12100:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12041:82:145";
                };
                readonly returnParameters: {
                    readonly id: 30885;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12161:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30915;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12242:231:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30914;
                    readonly nodeType: "Block";
                    readonly src: "12388:85:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 30907;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30897;
                                readonly src: "12411:6:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 30908;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30899;
                                readonly src: "12419:9:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 30909;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30897;
                                readonly src: "12430:6:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 30910;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30901;
                                readonly src: "12438:9:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 30911;
                                readonly name: "strictRevertData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30903;
                                readonly src: "12449:16:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 30906;
                                readonly name: "assertEqCall";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [30875, 30895, 30915, 31025];
                                readonly referencedDeclaration: 31025;
                                readonly src: "12398:12:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$";
                                    readonly typeString: "function (address,bytes memory,address,bytes memory,bool)";
                                };
                            };
                            readonly id: 30912;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12398:68:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30913;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12398:68:145";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "12251:12:145";
                readonly parameters: {
                    readonly id: 30904;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30897;
                        readonly mutability: "mutable";
                        readonly name: "target";
                        readonly nameLocation: "12272:6:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30915;
                        readonly src: "12264:14:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 30896;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12264:7:145";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30899;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "12293:9:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30915;
                        readonly src: "12280:22:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30898;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12280:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30901;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "12317:9:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30915;
                        readonly src: "12304:22:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30900;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12304:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30903;
                        readonly mutability: "mutable";
                        readonly name: "strictRevertData";
                        readonly nameLocation: "12333:16:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30915;
                        readonly src: "12328:21:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 30902;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12328:4:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12263:87:145";
                };
                readonly returnParameters: {
                    readonly id: 30905;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12388:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31025;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12479:1189:145";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31024;
                    readonly nodeType: "Block";
                    readonly src: "12669:999:145";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30929, 30931];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30929;
                            readonly mutability: "mutable";
                            readonly name: "successA";
                            readonly nameLocation: "12685:8:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31024;
                            readonly src: "12680:13:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly typeName: {
                                readonly id: 30928;
                                readonly name: "bool";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12680:4:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly visibility: "internal";
                        }, {
                            readonly constant: false;
                            readonly id: 30931;
                            readonly mutability: "mutable";
                            readonly name: "returnDataA";
                            readonly nameLocation: "12708:11:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31024;
                            readonly src: "12695:24:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "memory";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_memory_ptr";
                                readonly typeString: "bytes";
                            };
                            readonly typeName: {
                                readonly id: 30930;
                                readonly name: "bytes";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12695:5:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_storage_ptr";
                                    readonly typeString: "bytes";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30939;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30937;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30919;
                                readonly src: "12745:9:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30934;
                                        readonly name: "targetA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30917;
                                        readonly src: "12731:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 30933;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "12723:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 30932;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "12723:7:145";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 30935;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12723:16:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly id: 30936;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "12740:4:145";
                                readonly memberName: "call";
                                readonly nodeType: "MemberAccess";
                                readonly src: "12723:21:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$";
                                    readonly typeString: "function (bytes memory) payable returns (bool,bytes memory)";
                                };
                            };
                            readonly id: 30938;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12723:32:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$_t_bool_$_t_bytes_memory_ptr_$";
                                readonly typeString: "tuple(bool,bytes memory)";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "12679:76:145";
                    }, {
                        readonly assignments: readonly [30941, 30943];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30941;
                            readonly mutability: "mutable";
                            readonly name: "successB";
                            readonly nameLocation: "12771:8:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31024;
                            readonly src: "12766:13:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly typeName: {
                                readonly id: 30940;
                                readonly name: "bool";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12766:4:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly visibility: "internal";
                        }, {
                            readonly constant: false;
                            readonly id: 30943;
                            readonly mutability: "mutable";
                            readonly name: "returnDataB";
                            readonly nameLocation: "12794:11:145";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31024;
                            readonly src: "12781:24:145";
                            readonly stateVariable: false;
                            readonly storageLocation: "memory";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_memory_ptr";
                                readonly typeString: "bytes";
                            };
                            readonly typeName: {
                                readonly id: 30942;
                                readonly name: "bytes";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12781:5:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_storage_ptr";
                                    readonly typeString: "bytes";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30951;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30949;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30923;
                                readonly src: "12831:9:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30946;
                                        readonly name: "targetB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30921;
                                        readonly src: "12817:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 30945;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "12809:7:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 30944;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "12809:7:145";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 30947;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12809:16:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly id: 30948;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "12826:4:145";
                                readonly memberName: "call";
                                readonly nodeType: "MemberAccess";
                                readonly src: "12809:21:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$";
                                    readonly typeString: "function (bytes memory) payable returns (bool,bytes memory)";
                                };
                            };
                            readonly id: 30950;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12809:32:145";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$_t_bool_$_t_bytes_memory_ptr_$";
                                readonly typeString: "tuple(bool,bytes memory)";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "12765:76:145";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 30954;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30952;
                                readonly name: "successA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30929;
                                readonly src: "12856:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 30953;
                                readonly name: "successB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30941;
                                readonly src: "12868:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "12856:20:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30962;
                        readonly nodeType: "IfStatement";
                        readonly src: "12852:120:145";
                        readonly trueBody: {
                            readonly id: 30961;
                            readonly nodeType: "Block";
                            readonly src: "12878:94:145";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30956;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30931;
                                        readonly src: "12901:11:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly id: 30957;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30943;
                                        readonly src: "12914:11:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly hexValue: "43616c6c2072657475726e206461746120646f6573206e6f74206d61746368";
                                        readonly id: 30958;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "12927:33:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f3c9e4317c8eebc5635871f467354820a216f046f0a61b2ded371c2d507a555f";
                                            readonly typeString: "literal_string \"Call return data does not match\"";
                                        };
                                        readonly value: "Call return data does not match";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_stringliteral_f3c9e4317c8eebc5635871f467354820a216f046f0a61b2ded371c2d507a555f";
                                            readonly typeString: "literal_string \"Call return data does not match\"";
                                        }];
                                        readonly id: 30955;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                        readonly referencedDeclaration: 29781;
                                        readonly src: "12892:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (bytes memory,bytes memory,string memory)";
                                        };
                                    };
                                    readonly id: 30959;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12892:69:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30960;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "12892:69:145";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 30969;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 30967;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 30964;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "UnaryOperation";
                                    readonly operator: "!";
                                    readonly prefix: true;
                                    readonly src: "12986:9:145";
                                    readonly subExpression: {
                                        readonly id: 30963;
                                        readonly name: "successA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30929;
                                        readonly src: "12987:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "&&";
                                readonly rightExpression: {
                                    readonly id: 30966;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "UnaryOperation";
                                    readonly operator: "!";
                                    readonly prefix: true;
                                    readonly src: "12999:9:145";
                                    readonly subExpression: {
                                        readonly id: 30965;
                                        readonly name: "successB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30941;
                                        readonly src: "13000:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "12986:22:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 30968;
                                readonly name: "strictRevertData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30925;
                                readonly src: "13012:16:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "12986:42:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30977;
                        readonly nodeType: "IfStatement";
                        readonly src: "12982:142:145";
                        readonly trueBody: {
                            readonly id: 30976;
                            readonly nodeType: "Block";
                            readonly src: "13030:94:145";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30971;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30931;
                                        readonly src: "13053:11:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly id: 30972;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30943;
                                        readonly src: "13066:11:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly hexValue: "43616c6c20726576657274206461746120646f6573206e6f74206d61746368";
                                        readonly id: 30973;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13079:33:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_428332fc36b72ecad0a5d9bab5b9a568a85eeb20fd69ffcfbf4cf91598a0c858";
                                            readonly typeString: "literal_string \"Call revert data does not match\"";
                                        };
                                        readonly value: "Call revert data does not match";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_stringliteral_428332fc36b72ecad0a5d9bab5b9a568a85eeb20fd69ffcfbf4cf91598a0c858";
                                            readonly typeString: "literal_string \"Call revert data does not match\"";
                                        }];
                                        readonly id: 30970;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29727, 29752, 29765, 29781, 29823, 29865, 29907, 29944, 29981, 30018, 27562, 27587, 27617, 27642, 27701, 27726, 27756, 27781, 29254, 29289];
                                        readonly referencedDeclaration: 29781;
                                        readonly src: "13044:8:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (bytes memory,bytes memory,string memory)";
                                        };
                                    };
                                    readonly id: 30974;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13044:69:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30975;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "13044:69:145";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 30981;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30979;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "13138:9:145";
                                readonly subExpression: {
                                    readonly id: 30978;
                                    readonly name: "successA";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30929;
                                    readonly src: "13139:8:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 30980;
                                readonly name: "successB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30941;
                                readonly src: "13151:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "13138:21:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31000;
                        readonly nodeType: "IfStatement";
                        readonly src: "13134:259:145";
                        readonly trueBody: {
                            readonly id: 30999;
                            readonly nodeType: "Block";
                            readonly src: "13161:232:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2043616c6c732077657265206e6f7420657175616c";
                                        readonly id: 30983;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13184:29:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        };
                                        readonly value: "Error: Calls were not equal";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        }];
                                        readonly id: 30982;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "13180:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30984;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13180:34:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30985;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13175:39:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20204c6566742063616c6c207265766572742064617461";
                                        readonly id: 30987;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13249:25:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d7308eff46cc177523801826a9076ec6e32f003b8da409c4d39812f8e534c573";
                                            readonly typeString: "literal_string \"  Left call revert data\"";
                                        };
                                        readonly value: "  Left call revert data";
                                    }, {
                                        readonly id: 30988;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30931;
                                        readonly src: "13276:11:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d7308eff46cc177523801826a9076ec6e32f003b8da409c4d39812f8e534c573";
                                            readonly typeString: "literal_string \"  Left call revert data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 30986;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27321;
                                        readonly src: "13233:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 30989;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13233:55:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30990;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13228:60:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2052696768742063616c6c2072657475726e2064617461";
                                        readonly id: 30992;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13323:25:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_688c5b0ecbf27f0fe1b748e920d97ecaaa6ff424050ac2e32936b79dcfbe27d9";
                                            readonly typeString: "literal_string \" Right call return data\"";
                                        };
                                        readonly value: " Right call return data";
                                    }, {
                                        readonly id: 30993;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30943;
                                        readonly src: "13350:11:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_688c5b0ecbf27f0fe1b748e920d97ecaaa6ff424050ac2e32936b79dcfbe27d9";
                                            readonly typeString: "literal_string \" Right call return data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 30991;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27321;
                                        readonly src: "13307:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 30994;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13307:55:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30995;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13302:60:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30996;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "13376:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30997;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13376:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30998;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "13376:6:145";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 31004;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31001;
                                readonly name: "successA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30929;
                                readonly src: "13407:8:145";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 31003;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "13419:9:145";
                                readonly subExpression: {
                                    readonly id: 31002;
                                    readonly name: "successB";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30941;
                                    readonly src: "13420:8:145";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "13407:21:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31023;
                        readonly nodeType: "IfStatement";
                        readonly src: "13403:259:145";
                        readonly trueBody: {
                            readonly id: 31022;
                            readonly nodeType: "Block";
                            readonly src: "13430:232:145";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2043616c6c732077657265206e6f7420657175616c";
                                        readonly id: 31006;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13453:29:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        };
                                        readonly value: "Error: Calls were not equal";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        }];
                                        readonly id: 31005;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27247;
                                        readonly src: "13449:3:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 31007;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13449:34:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31008;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13444:39:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20204c6566742063616c6c2072657475726e2064617461";
                                        readonly id: 31010;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13518:25:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_596a9779ba89cf63b8ee3ff9d9ab391dc33d379f762c747717807c6af488f86f";
                                            readonly typeString: "literal_string \"  Left call return data\"";
                                        };
                                        readonly value: "  Left call return data";
                                    }, {
                                        readonly id: 31011;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30931;
                                        readonly src: "13545:11:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_596a9779ba89cf63b8ee3ff9d9ab391dc33d379f762c747717807c6af488f86f";
                                            readonly typeString: "literal_string \"  Left call return data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 31009;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27321;
                                        readonly src: "13502:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 31012;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13502:55:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31013;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13497:60:145";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2052696768742063616c6c207265766572742064617461";
                                        readonly id: 31015;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13592:25:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_07ebd1833884933dbc5d408273462f380b6eb526f9bb29a66115cfe3ede76145";
                                            readonly typeString: "literal_string \" Right call revert data\"";
                                        };
                                        readonly value: " Right call revert data";
                                    }, {
                                        readonly id: 31016;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30943;
                                        readonly src: "13619:11:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_07ebd1833884933dbc5d408273462f380b6eb526f9bb29a66115cfe3ede76145";
                                            readonly typeString: "literal_string \" Right call revert data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 31014;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27321;
                                        readonly src: "13576:15:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 31017;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13576:55:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31018;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13571:60:145";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 31019;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [29666, 27458];
                                        readonly referencedDeclaration: 27458;
                                        readonly src: "13645:4:145";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 31020;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13645:6:145";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31021;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "13645:6:145";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "12488:12:145";
                readonly parameters: {
                    readonly id: 30926;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30917;
                        readonly mutability: "mutable";
                        readonly name: "targetA";
                        readonly nameLocation: "12518:7:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31025;
                        readonly src: "12510:15:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 30916;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12510:7:145";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30919;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "12548:9:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31025;
                        readonly src: "12535:22:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30918;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12535:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30921;
                        readonly mutability: "mutable";
                        readonly name: "targetB";
                        readonly nameLocation: "12575:7:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31025;
                        readonly src: "12567:15:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 30920;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12567:7:145";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30923;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "12605:9:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31025;
                        readonly src: "12592:22:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30922;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12592:5:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30925;
                        readonly mutability: "mutable";
                        readonly name: "strictRevertData";
                        readonly nameLocation: "12629:16:145";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31025;
                        readonly src: "12624:21:145";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 30924;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12624:4:145";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12500:151:145";
                };
                readonly returnParameters: {
                    readonly id: 30927;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12669:0:145";
                };
                readonly scope: 31026;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }];
            readonly abstract: true;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 29615;
                    readonly name: "DSTest";
                    readonly nameLocations: readonly ["181:6:145"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 29533;
                    readonly src: "181:6:145";
                };
                readonly id: 29616;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "181:6:145";
            }];
            readonly canonicalName: "StdAssertions";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [31026, 29533];
            readonly name: "StdAssertions";
            readonly nameLocation: "164:13:145";
            readonly scope: 31027;
            readonly usedErrors: readonly [];
            readonly usedEvents: readonly [27247, 27251, 27255, 27259, 27263, 27267, 27271, 27275, 27281, 27287, 27295, 27303, 27309, 27315, 27321, 27327, 29621, 29626, 29631, 29638, 29645, 29652];
        }];
        readonly license: "MIT";
    };
    readonly id: 145;
};
//# sourceMappingURL=StdAssertions.d.ts.map