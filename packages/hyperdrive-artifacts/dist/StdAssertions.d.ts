export declare const StdAssertions: {
    readonly abi: readonly [{
        readonly type: "function";
        readonly name: "IS_TEST";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly name: "failed";
        readonly inputs: readonly [];
        readonly outputs: readonly [{
            readonly name: "";
            readonly type: "bool";
            readonly internalType: "bool";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "event";
        readonly name: "log";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_address";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_array";
        readonly inputs: readonly [{
            readonly name: "val";
            readonly type: "uint256[]";
            readonly indexed: false;
            readonly internalType: "uint256[]";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_array";
        readonly inputs: readonly [{
            readonly name: "val";
            readonly type: "int256[]";
            readonly indexed: false;
            readonly internalType: "int256[]";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_array";
        readonly inputs: readonly [{
            readonly name: "val";
            readonly type: "address[]";
            readonly indexed: false;
            readonly internalType: "address[]";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_bytes";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "bytes";
            readonly indexed: false;
            readonly internalType: "bytes";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_bytes32";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "bytes32";
            readonly indexed: false;
            readonly internalType: "bytes32";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_int";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "int256";
            readonly indexed: false;
            readonly internalType: "int256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_address";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "address";
            readonly indexed: false;
            readonly internalType: "address";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_array";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "uint256[]";
            readonly indexed: false;
            readonly internalType: "uint256[]";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_array";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "int256[]";
            readonly indexed: false;
            readonly internalType: "int256[]";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_array";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "address[]";
            readonly indexed: false;
            readonly internalType: "address[]";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_bytes";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "bytes";
            readonly indexed: false;
            readonly internalType: "bytes";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_bytes32";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "bytes32";
            readonly indexed: false;
            readonly internalType: "bytes32";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_decimal_int";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "int256";
            readonly indexed: false;
            readonly internalType: "int256";
        }, {
            readonly name: "decimals";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_decimal_uint";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }, {
            readonly name: "decimals";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_int";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "int256";
            readonly indexed: false;
            readonly internalType: "int256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_string";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_named_uint";
        readonly inputs: readonly [{
            readonly name: "key";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }, {
            readonly name: "val";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_string";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "string";
            readonly indexed: false;
            readonly internalType: "string";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "log_uint";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "uint256";
            readonly indexed: false;
            readonly internalType: "uint256";
        }];
        readonly anonymous: false;
    }, {
        readonly type: "event";
        readonly name: "logs";
        readonly inputs: readonly [{
            readonly name: "";
            readonly type: "bytes";
            readonly indexed: false;
            readonly internalType: "bytes";
        }];
        readonly anonymous: false;
    }];
    readonly bytecode: {
        readonly object: "0x";
        readonly sourceMap: "";
        readonly linkReferences: {};
    };
    readonly deployedBytecode: {
        readonly object: "0x";
        readonly sourceMap: "";
        readonly linkReferences: {};
    };
    readonly methodIdentifiers: {
        readonly "IS_TEST()": "fa7626d4";
        readonly "failed()": "ba414fa6";
    };
    readonly rawMetadata: "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdAssertions.sol\":\"StdAssertions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":aave-v3-core/=lib/aave-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]}},\"version\":1}";
    readonly metadata: {
        readonly compiler: {
            readonly version: "0.8.20+commit.a1b79de6";
        };
        readonly language: "Solidity";
        readonly output: {
            readonly abi: readonly [{
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address";
                    readonly name: "";
                    readonly type: "address";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_address";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256[]";
                    readonly name: "val";
                    readonly type: "uint256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "int256[]";
                    readonly name: "val";
                    readonly type: "int256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "val";
                    readonly type: "address[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes";
                    readonly name: "";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_bytes";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "";
                    readonly type: "bytes32";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_bytes32";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "int256";
                    readonly name: "";
                    readonly type: "int256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "address";
                    readonly name: "val";
                    readonly type: "address";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_address";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256[]";
                    readonly name: "val";
                    readonly type: "uint256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256[]";
                    readonly name: "val";
                    readonly type: "int256[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "address[]";
                    readonly name: "val";
                    readonly type: "address[]";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_array";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "bytes";
                    readonly name: "val";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_bytes";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "val";
                    readonly type: "bytes32";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_bytes32";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256";
                    readonly name: "val";
                    readonly type: "int256";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "decimals";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_decimal_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "val";
                    readonly type: "uint256";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "decimals";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_decimal_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "int256";
                    readonly name: "val";
                    readonly type: "int256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_int";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "string";
                    readonly name: "val";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_string";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "key";
                    readonly type: "string";
                    readonly indexed: false;
                }, {
                    readonly internalType: "uint256";
                    readonly name: "val";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_named_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "string";
                    readonly name: "";
                    readonly type: "string";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_string";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "";
                    readonly type: "uint256";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "log_uint";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [{
                    readonly internalType: "bytes";
                    readonly name: "";
                    readonly type: "bytes";
                    readonly indexed: false;
                }];
                readonly type: "event";
                readonly name: "logs";
                readonly anonymous: false;
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "view";
                readonly type: "function";
                readonly name: "IS_TEST";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }, {
                readonly inputs: readonly [];
                readonly stateMutability: "nonpayable";
                readonly type: "function";
                readonly name: "failed";
                readonly outputs: readonly [{
                    readonly internalType: "bool";
                    readonly name: "";
                    readonly type: "bool";
                }];
            }];
            readonly devdoc: {
                readonly kind: "dev";
                readonly methods: {};
                readonly version: 1;
            };
            readonly userdoc: {
                readonly kind: "user";
                readonly methods: {};
                readonly version: 1;
            };
        };
        readonly settings: {
            readonly remappings: readonly ["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/", "aave-v3-core/=lib/aave-v3-core/", "ds-test/=lib/forge-std/lib/ds-test/src/", "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/", "forge-std/=lib/forge-std/src/", "openzeppelin-contracts/=lib/openzeppelin-contracts/", "openzeppelin/=lib/openzeppelin-contracts/contracts/", "solmate/=lib/solmate/src/"];
            readonly optimizer: {
                readonly enabled: true;
                readonly runs: 200;
            };
            readonly metadata: {
                readonly bytecodeHash: "ipfs";
            };
            readonly compilationTarget: {
                readonly "lib/forge-std/src/StdAssertions.sol": "StdAssertions";
            };
            readonly libraries: {};
        };
        readonly sources: {
            readonly "lib/forge-std/lib/ds-test/src/test.sol": {
                readonly keccak256: "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b";
                readonly urls: readonly ["bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240", "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"];
                readonly license: "GPL-3.0-or-later";
            };
            readonly "lib/forge-std/src/StdAssertions.sol": {
                readonly keccak256: "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60";
                readonly urls: readonly ["bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b", "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"];
                readonly license: "MIT";
            };
            readonly "lib/forge-std/src/StdMath.sol": {
                readonly keccak256: "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2";
                readonly urls: readonly ["bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92", "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"];
                readonly license: "MIT";
            };
        };
        readonly version: 1;
    };
    readonly ast: {
        readonly absolutePath: "lib/forge-std/src/StdAssertions.sol";
        readonly id: 31635;
        readonly exportedSymbols: {
            readonly DSTest: readonly [30141];
            readonly StdAssertions: readonly [31634];
            readonly stdMath: readonly [36180];
        };
        readonly nodeType: "SourceUnit";
        readonly src: "32:13639:151";
        readonly nodes: readonly [{
            readonly id: 30218;
            readonly nodeType: "PragmaDirective";
            readonly src: "32:31:151";
            readonly nodes: readonly [];
            readonly literals: readonly ["solidity", ">=", "0.6", ".2", "<", "0.9", ".0"];
        }, {
            readonly id: 30220;
            readonly nodeType: "ImportDirective";
            readonly src: "65:40:151";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/forge-std/lib/ds-test/src/test.sol";
            readonly file: "ds-test/test.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 31635;
            readonly sourceUnit: 30142;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 30219;
                    readonly name: "DSTest";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 30141;
                    readonly src: "73:6:151";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 30222;
            readonly nodeType: "ImportDirective";
            readonly src: "106:38:151";
            readonly nodes: readonly [];
            readonly absolutePath: "lib/forge-std/src/StdMath.sol";
            readonly file: "./StdMath.sol";
            readonly nameLocation: "-1:-1:-1";
            readonly scope: 31635;
            readonly sourceUnit: 36181;
            readonly symbolAliases: readonly [{
                readonly foreign: {
                    readonly id: 30221;
                    readonly name: "stdMath";
                    readonly nodeType: "Identifier";
                    readonly overloadedDeclarations: readonly [];
                    readonly referencedDeclaration: 36180;
                    readonly src: "114:7:151";
                    readonly typeDescriptions: {};
                };
                readonly nameLocation: "-1:-1:-1";
            }];
            readonly unitAlias: "";
        }, {
            readonly id: 31634;
            readonly nodeType: "ContractDefinition";
            readonly src: "146:13524:151";
            readonly nodes: readonly [{
                readonly id: 30229;
                readonly nodeType: "EventDefinition";
                readonly src: "194:31:151";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "fb102865d50addddf69da9b5aa1bced66c80cf869a5c8d0471a467e18ce9cab1";
                readonly name: "log_array";
                readonly nameLocation: "200:9:151";
                readonly parameters: {
                    readonly id: 30228;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30227;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "220:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30229;
                        readonly src: "210:13:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30225;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "210:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 30226;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "210:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "209:15:151";
                };
            }, {
                readonly id: 30234;
                readonly nodeType: "EventDefinition";
                readonly src: "230:30:151";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "890a82679b470f2bd82816ed9b161f97d8b967f37fa3647c21d5bf39749e2dd5";
                readonly name: "log_array";
                readonly nameLocation: "236:9:151";
                readonly parameters: {
                    readonly id: 30233;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30232;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "255:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30234;
                        readonly src: "246:12:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30230;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "246:6:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 30231;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "246:8:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "245:14:151";
                };
            }, {
                readonly id: 30239;
                readonly nodeType: "EventDefinition";
                readonly src: "265:31:151";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "40e1840f5769073d61bd01372d9b75baa9842d5629a0c99ff103be1178a8e9e2";
                readonly name: "log_array";
                readonly nameLocation: "271:9:151";
                readonly parameters: {
                    readonly id: 30238;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30237;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "291:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30239;
                        readonly src: "281:13:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30235;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "281:7:151";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 30236;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "281:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "280:15:151";
                };
            }, {
                readonly id: 30246;
                readonly nodeType: "EventDefinition";
                readonly src: "301:49:151";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "00aaa39c9ffb5f567a4534380c737075702e1f7f14107fc95328e3b56c0325fb";
                readonly name: "log_named_array";
                readonly nameLocation: "307:15:151";
                readonly parameters: {
                    readonly id: 30245;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30241;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "key";
                        readonly nameLocation: "330:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30246;
                        readonly src: "323:10:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30240;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "323:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30244;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "345:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30246;
                        readonly src: "335:13:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30242;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "335:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 30243;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "335:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "322:27:151";
                };
            }, {
                readonly id: 30253;
                readonly nodeType: "EventDefinition";
                readonly src: "355:48:151";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "a73eda09662f46dde729be4611385ff34fe6c44fbbc6f7e17b042b59a3445b57";
                readonly name: "log_named_array";
                readonly nameLocation: "361:15:151";
                readonly parameters: {
                    readonly id: 30252;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30248;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "key";
                        readonly nameLocation: "384:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30253;
                        readonly src: "377:10:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30247;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "377:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30251;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "398:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30253;
                        readonly src: "389:12:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30249;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "389:6:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 30250;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "389:8:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "376:26:151";
                };
            }, {
                readonly id: 30260;
                readonly nodeType: "EventDefinition";
                readonly src: "408:49:151";
                readonly nodes: readonly [];
                readonly anonymous: false;
                readonly eventSelector: "3bcfb2ae2e8d132dd1fce7cf278a9a19756a9fceabe470df3bdabb4bc577d1bd";
                readonly name: "log_named_array";
                readonly nameLocation: "414:15:151";
                readonly parameters: {
                    readonly id: 30259;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30255;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "key";
                        readonly nameLocation: "437:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30260;
                        readonly src: "430:10:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30254;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "430:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30258;
                        readonly indexed: false;
                        readonly mutability: "mutable";
                        readonly name: "val";
                        readonly nameLocation: "452:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30260;
                        readonly src: "442:13:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30256;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "442:7:151";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 30257;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "442:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "429:27:151";
                };
            }, {
                readonly id: 30274;
                readonly nodeType: "FunctionDefinition";
                readonly src: "463:118:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30273;
                    readonly nodeType: "Block";
                    readonly src: "513:68:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly eventCall: {
                            readonly arguments: readonly [{
                                readonly hexValue: "4572726f72";
                                readonly id: 30266;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "string";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "545:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                    readonly typeString: "literal_string \"Error\"";
                                };
                                readonly value: "Error";
                            }, {
                                readonly id: 30267;
                                readonly name: "err";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30262;
                                readonly src: "554:3:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                    readonly typeString: "literal_string \"Error\"";
                                }, {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                }];
                                readonly id: 30265;
                                readonly name: "log_named_string";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 27935;
                                readonly src: "528:16:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                    readonly typeString: "function (string memory,string memory)";
                                };
                            };
                            readonly id: 30268;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "528:30:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30269;
                        readonly nodeType: "EmitStatement";
                        readonly src: "523:35:151";
                    }, {
                        readonly expression: {
                            readonly arguments: readonly [];
                            readonly expression: {
                                readonly argumentTypes: readonly [];
                                readonly id: 30270;
                                readonly name: "fail";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [30274, 28066];
                                readonly referencedDeclaration: 28066;
                                readonly src: "568:4:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                    readonly typeString: "function ()";
                                };
                            };
                            readonly id: 30271;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "568:6:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30272;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "568:6:151";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "fail";
                readonly nameLocation: "472:4:151";
                readonly parameters: {
                    readonly id: 30263;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30262;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "491:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30274;
                        readonly src: "477:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30261;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "477:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "476:19:151";
                };
                readonly returnParameters: {
                    readonly id: 30264;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "513:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30285;
                readonly nodeType: "FunctionDefinition";
                readonly src: "587:83:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30284;
                    readonly nodeType: "Block";
                    readonly src: "636:34:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 30281;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "657:5:151";
                                readonly subExpression: {
                                    readonly id: 30280;
                                    readonly name: "data";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30276;
                                    readonly src: "658:4:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 30279;
                                readonly name: "assertTrue";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [28119, 28140];
                                readonly referencedDeclaration: 28119;
                                readonly src: "646:10:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bool_$returns$__$";
                                    readonly typeString: "function (bool)";
                                };
                            };
                            readonly id: 30282;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "646:17:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30283;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "646:17:151";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertFalse";
                readonly nameLocation: "596:11:151";
                readonly parameters: {
                    readonly id: 30277;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30276;
                        readonly mutability: "mutable";
                        readonly name: "data";
                        readonly nameLocation: "613:4:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30285;
                        readonly src: "608:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 30275;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "608:4:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "607:11:151";
                };
                readonly returnParameters: {
                    readonly id: 30278;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "636:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30299;
                readonly nodeType: "FunctionDefinition";
                readonly src: "676:107:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30298;
                    readonly nodeType: "Block";
                    readonly src: "744:39:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 30294;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "765:5:151";
                                readonly subExpression: {
                                    readonly id: 30293;
                                    readonly name: "data";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30287;
                                    readonly src: "766:4:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            }, {
                                readonly id: 30295;
                                readonly name: "err";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30289;
                                readonly src: "772:3:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }, {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                }];
                                readonly id: 30292;
                                readonly name: "assertTrue";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [28119, 28140];
                                readonly referencedDeclaration: 28140;
                                readonly src: "754:10:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$";
                                    readonly typeString: "function (bool,string memory)";
                                };
                            };
                            readonly id: 30296;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "754:22:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30297;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "754:22:151";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertFalse";
                readonly nameLocation: "685:11:151";
                readonly parameters: {
                    readonly id: 30290;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30287;
                        readonly mutability: "mutable";
                        readonly name: "data";
                        readonly nameLocation: "702:4:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30299;
                        readonly src: "697:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 30286;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "697:4:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30289;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "722:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30299;
                        readonly src: "708:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30288;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "708:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "696:30:151";
                };
                readonly returnParameters: {
                    readonly id: 30291;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "744:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30335;
                readonly nodeType: "FunctionDefinition";
                readonly src: "789:312:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30334;
                    readonly nodeType: "Block";
                    readonly src: "840:261:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 30308;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30306;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30301;
                                readonly src: "854:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 30307;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30303;
                                readonly src: "859:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "854:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30333;
                        readonly nodeType: "IfStatement";
                        readonly src: "850:245:151";
                        readonly trueBody: {
                            readonly id: 30332;
                            readonly nodeType: "Block";
                            readonly src: "862:233:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6c5d";
                                        readonly id: 30310;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "885:36:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_8b48ec9ac4dc7123ad32509232067c63ebae61bff18d5e06bf4dea2a25240ed2";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [bool]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [bool]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_8b48ec9ac4dc7123ad32509232067c63ebae61bff18d5e06bf4dea2a25240ed2";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [bool]\"";
                                        }];
                                        readonly id: 30309;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "881:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30311;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "881:41:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30312;
                                readonly nodeType: "EmitStatement";
                                readonly src: "876:46:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 30314;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "958:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly condition: {
                                            readonly id: 30315;
                                            readonly name: "a";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 30301;
                                            readonly src: "972:1:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly falseExpression: {
                                            readonly hexValue: "66616c7365";
                                            readonly id: 30317;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "985:7:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a";
                                                readonly typeString: "literal_string \"false\"";
                                            };
                                            readonly value: "false";
                                        };
                                        readonly id: 30318;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Conditional";
                                        readonly src: "972:20:151";
                                        readonly trueExpression: {
                                            readonly hexValue: "74727565";
                                            readonly id: 30316;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "976:6:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034";
                                                readonly typeString: "literal_string \"true\"";
                                            };
                                            readonly value: "true";
                                        };
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30313;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "941:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30319;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "941:52:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30320;
                                readonly nodeType: "EmitStatement";
                                readonly src: "936:57:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 30322;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1029:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly condition: {
                                            readonly id: 30323;
                                            readonly name: "b";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 30303;
                                            readonly src: "1043:1:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_bool";
                                                readonly typeString: "bool";
                                            };
                                        };
                                        readonly falseExpression: {
                                            readonly hexValue: "66616c7365";
                                            readonly id: 30325;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "1056:7:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a";
                                                readonly typeString: "literal_string \"false\"";
                                            };
                                            readonly value: "false";
                                        };
                                        readonly id: 30326;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Conditional";
                                        readonly src: "1043:20:151";
                                        readonly trueExpression: {
                                            readonly hexValue: "74727565";
                                            readonly id: 30324;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "string";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "1047:6:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034";
                                                readonly typeString: "literal_string \"true\"";
                                            };
                                            readonly value: "true";
                                        };
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30321;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "1012:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30327;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1012:52:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30328;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1007:57:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30329;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "1078:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30330;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1078:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30331;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "1078:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "798:8:151";
                readonly parameters: {
                    readonly id: 30304;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30301;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "812:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30335;
                        readonly src: "807:6:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 30300;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "807:4:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30303;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "820:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30335;
                        readonly src: "815:6:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 30302;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "815:4:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "806:16:151";
                };
                readonly returnParameters: {
                    readonly id: 30305;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "840:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30360;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1107:186:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30359;
                    readonly nodeType: "Block";
                    readonly src: "1177:116:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 30346;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30344;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30337;
                                readonly src: "1191:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly id: 30345;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30339;
                                readonly src: "1196:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "1191:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30358;
                        readonly nodeType: "IfStatement";
                        readonly src: "1187:100:151";
                        readonly trueBody: {
                            readonly id: 30357;
                            readonly nodeType: "Block";
                            readonly src: "1199:88:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30348;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1235:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30349;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30341;
                                        readonly src: "1244:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30347;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "1218:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30350;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1218:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30351;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1213:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30353;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30337;
                                        readonly src: "1271:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    }, {
                                        readonly id: 30354;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30339;
                                        readonly src: "1274:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        }, {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        }];
                                        readonly id: 30352;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                        readonly referencedDeclaration: 30335;
                                        readonly src: "1262:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$";
                                            readonly typeString: "function (bool,bool)";
                                        };
                                    };
                                    readonly id: 30355;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1262:14:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30356;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "1262:14:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1116:8:151";
                readonly parameters: {
                    readonly id: 30342;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30337;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1130:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30360;
                        readonly src: "1125:6:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 30336;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1125:4:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30339;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1138:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30360;
                        readonly src: "1133:6:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 30338;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1133:4:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30341;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "1155:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30360;
                        readonly src: "1141:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30340;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1141:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1124:35:151";
                };
                readonly returnParameters: {
                    readonly id: 30343;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1177:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30373;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1299:99:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30372;
                    readonly nodeType: "Block";
                    readonly src: "1366:32:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 30368;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30362;
                                readonly src: "1386:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 30369;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30364;
                                readonly src: "1389:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly id: 30367;
                                readonly name: "assertEq0";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [30056, 30083];
                                readonly referencedDeclaration: 30056;
                                readonly src: "1376:9:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                    readonly typeString: "function (bytes memory,bytes memory)";
                                };
                            };
                            readonly id: 30370;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1376:15:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30371;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1376:15:151";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1308:8:151";
                readonly parameters: {
                    readonly id: 30365;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30362;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1330:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30373;
                        readonly src: "1317:14:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30361;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1317:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30364;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1346:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30373;
                        readonly src: "1333:14:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30363;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1333:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1316:32:151";
                };
                readonly returnParameters: {
                    readonly id: 30366;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1366:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30389;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1404:123:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30388;
                    readonly nodeType: "Block";
                    readonly src: "1490:37:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 30383;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30375;
                                readonly src: "1510:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 30384;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30377;
                                readonly src: "1513:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 30385;
                                readonly name: "err";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30379;
                                readonly src: "1516:3:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_string_memory_ptr";
                                    readonly typeString: "string memory";
                                }];
                                readonly id: 30382;
                                readonly name: "assertEq0";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [30056, 30083];
                                readonly referencedDeclaration: 30083;
                                readonly src: "1500:9:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                    readonly typeString: "function (bytes memory,bytes memory,string memory)";
                                };
                            };
                            readonly id: 30386;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "1500:20:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30387;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "1500:20:151";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1413:8:151";
                readonly parameters: {
                    readonly id: 30380;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30375;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1435:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30389;
                        readonly src: "1422:14:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30374;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1422:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30377;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1451:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30389;
                        readonly src: "1438:14:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 30376;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1438:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30379;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "1468:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30389;
                        readonly src: "1454:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30378;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "1454:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1421:51:151";
                };
                readonly returnParameters: {
                    readonly id: 30381;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1490:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30431;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1533:344:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30430;
                    readonly nodeType: "Block";
                    readonly src: "1608:269:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 30410;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30401;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30392;
                                        readonly src: "1643:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30399;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "1632:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30400;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "1636:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "1632:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30402;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1632:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30398;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1622:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30403;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1622:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30407;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30395;
                                        readonly src: "1671:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30405;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "1660:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30406;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "1664:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "1660:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30408;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1660:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30404;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1650:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30409;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1650:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "1622:52:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30429;
                        readonly nodeType: "IfStatement";
                        readonly src: "1618:253:151";
                        readonly trueBody: {
                            readonly id: 30428;
                            readonly nodeType: "Block";
                            readonly src: "1676:195:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e745b5d5d";
                                        readonly id: 30412;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1699:38:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_521d63632bd73b6c06245b96e4e8f1b767ee309607c65899b409e5c9e6c384eb";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [uint[]]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [uint[]]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_521d63632bd73b6c06245b96e4e8f1b767ee309607c65899b409e5c9e6c384eb";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [uint[]]\"";
                                        }];
                                        readonly id: 30411;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "1695:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30413;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1695:43:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30414;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1690:48:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 30416;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1773:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 30417;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30392;
                                        readonly src: "1787:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly id: 30415;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30246, 30253, 30260];
                                        readonly referencedDeclaration: 30246;
                                        readonly src: "1757:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,uint256[] memory)";
                                        };
                                    };
                                    readonly id: 30418;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1757:32:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30419;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1752:37:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 30421;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "1824:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 30422;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30395;
                                        readonly src: "1838:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly id: 30420;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30246, 30253, 30260];
                                        readonly referencedDeclaration: 30246;
                                        readonly src: "1808:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,uint256[] memory)";
                                        };
                                    };
                                    readonly id: 30423;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1808:32:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30424;
                                readonly nodeType: "EmitStatement";
                                readonly src: "1803:37:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30425;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "1854:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30426;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1854:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30427;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "1854:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1542:8:151";
                readonly parameters: {
                    readonly id: 30396;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30392;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1568:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30431;
                        readonly src: "1551:18:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30390;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1551:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 30391;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1551:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30395;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1588:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30431;
                        readonly src: "1571:18:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30393;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1571:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 30394;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1571:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1550:40:151";
                };
                readonly returnParameters: {
                    readonly id: 30397;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1608:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30473;
                readonly nodeType: "FunctionDefinition";
                readonly src: "1883:341:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30472;
                    readonly nodeType: "Block";
                    readonly src: "1956:268:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 30452;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30443;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30434;
                                        readonly src: "1991:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30441;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "1980:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30442;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "1984:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "1980:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30444;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "1980:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30440;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1970:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30445;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1970:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30449;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30437;
                                        readonly src: "2019:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30447;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2008:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30448;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2012:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2008:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30450;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2008:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30446;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "1998:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30451;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "1998:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "1970:52:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30471;
                        readonly nodeType: "IfStatement";
                        readonly src: "1966:252:151";
                        readonly trueBody: {
                            readonly id: 30470;
                            readonly nodeType: "Block";
                            readonly src: "2024:194:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b696e745b5d5d";
                                        readonly id: 30454;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2047:37:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_6c8a6638f7c95c9ee18ffcfc37ffe04d6270c2db7493e9b7a14add834054a5f5";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [int[]]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [int[]]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_6c8a6638f7c95c9ee18ffcfc37ffe04d6270c2db7493e9b7a14add834054a5f5";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [int[]]\"";
                                        }];
                                        readonly id: 30453;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "2043:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30455;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2043:42:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30456;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2038:47:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 30458;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2120:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 30459;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30434;
                                        readonly src: "2134:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly id: 30457;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30246, 30253, 30260];
                                        readonly referencedDeclaration: 30253;
                                        readonly src: "2104:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,int256[] memory)";
                                        };
                                    };
                                    readonly id: 30460;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2104:32:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30461;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2099:37:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 30463;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2171:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 30464;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30437;
                                        readonly src: "2185:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly id: 30462;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30246, 30253, 30260];
                                        readonly referencedDeclaration: 30253;
                                        readonly src: "2155:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,int256[] memory)";
                                        };
                                    };
                                    readonly id: 30465;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2155:32:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30466;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2150:37:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30467;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "2201:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30468;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2201:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30469;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "2201:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "1892:8:151";
                readonly parameters: {
                    readonly id: 30438;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30434;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "1917:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30473;
                        readonly src: "1901:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30432;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1901:6:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 30433;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1901:8:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30437;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "1936:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30473;
                        readonly src: "1920:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30435;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "1920:6:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 30436;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "1920:8:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "1900:38:151";
                };
                readonly returnParameters: {
                    readonly id: 30439;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "1956:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30515;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2230:347:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30514;
                    readonly nodeType: "Block";
                    readonly src: "2305:272:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 30494;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30485;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30476;
                                        readonly src: "2340:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30483;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2329:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30484;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2333:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2329:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30486;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2329:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30482;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2319:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30487;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2319:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30491;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30479;
                                        readonly src: "2368:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30489;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2357:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30490;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2361:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2357:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30492;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2357:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30488;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2347:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30493;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2347:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "2319:52:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30513;
                        readonly nodeType: "IfStatement";
                        readonly src: "2315:256:151";
                        readonly trueBody: {
                            readonly id: 30512;
                            readonly nodeType: "Block";
                            readonly src: "2373:198:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464726573735b5d5d";
                                        readonly id: 30496;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2396:41:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_18b6dc04296758144a4e9b271bd3d79214335bb195df00f93d1706586d5041f8";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [address[]]\"";
                                        };
                                        readonly value: "Error: a == b not satisfied [address[]]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_18b6dc04296758144a4e9b271bd3d79214335bb195df00f93d1706586d5041f8";
                                            readonly typeString: "literal_string \"Error: a == b not satisfied [address[]]\"";
                                        }];
                                        readonly id: 30495;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "2392:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30497;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2392:46:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30498;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2387:51:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 30500;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2473:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 30501;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30476;
                                        readonly src: "2487:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly id: 30499;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30246, 30253, 30260];
                                        readonly referencedDeclaration: 30260;
                                        readonly src: "2457:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,address[] memory)";
                                        };
                                    };
                                    readonly id: 30502;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2457:32:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30503;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2452:37:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 30505;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2524:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 30506;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30479;
                                        readonly src: "2538:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly id: 30504;
                                        readonly name: "log_named_array";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30246, 30253, 30260];
                                        readonly referencedDeclaration: 30260;
                                        readonly src: "2508:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,address[] memory)";
                                        };
                                    };
                                    readonly id: 30507;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2508:32:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30508;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2503:37:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30509;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "2554:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30510;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2554:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30511;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "2554:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "2239:8:151";
                readonly parameters: {
                    readonly id: 30480;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30476;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "2265:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30515;
                        readonly src: "2248:18:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30474;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2248:7:151";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 30475;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2248:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30479;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "2285:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30515;
                        readonly src: "2268:18:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30477;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2268:7:151";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 30478;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2268:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2247:40:151";
                };
                readonly returnParameters: {
                    readonly id: 30481;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2305:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30552;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2583:256:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30551;
                    readonly nodeType: "Block";
                    readonly src: "2677:162:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 30538;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30529;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30518;
                                        readonly src: "2712:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30527;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2701:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30528;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2705:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2701:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30530;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2701:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30526;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2691:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30531;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2691:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30535;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30521;
                                        readonly src: "2740:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30533;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2729:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30534;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2733:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2729:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30536;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2729:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30532;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2719:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30537;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2719:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "2691:52:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30550;
                        readonly nodeType: "IfStatement";
                        readonly src: "2687:146:151";
                        readonly trueBody: {
                            readonly id: 30549;
                            readonly nodeType: "Block";
                            readonly src: "2745:88:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30540;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "2781:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30541;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30523;
                                        readonly src: "2790:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30539;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "2764:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30542;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2764:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30543;
                                readonly nodeType: "EmitStatement";
                                readonly src: "2759:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30545;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30518;
                                        readonly src: "2817:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }, {
                                        readonly id: 30546;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30521;
                                        readonly src: "2820:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                                            readonly typeString: "uint256[] memory";
                                        }];
                                        readonly id: 30544;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                        readonly referencedDeclaration: 30431;
                                        readonly src: "2808:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (uint256[] memory,uint256[] memory)";
                                        };
                                    };
                                    readonly id: 30547;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2808:14:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30548;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "2808:14:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "2592:8:151";
                readonly parameters: {
                    readonly id: 30524;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30518;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "2618:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30552;
                        readonly src: "2601:18:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30516;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2601:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 30517;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2601:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30521;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "2638:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30552;
                        readonly src: "2621:18:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_uint256_$dyn_memory_ptr";
                            readonly typeString: "uint256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30519;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2621:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly id: 30520;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2621:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_uint256_$dyn_storage_ptr";
                                readonly typeString: "uint256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30523;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "2655:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30552;
                        readonly src: "2641:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30522;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2641:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2600:59:151";
                };
                readonly returnParameters: {
                    readonly id: 30525;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2677:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30589;
                readonly nodeType: "FunctionDefinition";
                readonly src: "2845:254:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30588;
                    readonly nodeType: "Block";
                    readonly src: "2937:162:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 30575;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30566;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30555;
                                        readonly src: "2972:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30564;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2961:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30565;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2965:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2961:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30567;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2961:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30563;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2951:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30568;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2951:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30572;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30558;
                                        readonly src: "3000:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30570;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "2989:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30571;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "2993:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "2989:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30573;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "2989:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30569;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "2979:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30574;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "2979:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "2951:52:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30587;
                        readonly nodeType: "IfStatement";
                        readonly src: "2947:146:151";
                        readonly trueBody: {
                            readonly id: 30586;
                            readonly nodeType: "Block";
                            readonly src: "3005:88:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30577;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3041:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30578;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30560;
                                        readonly src: "3050:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30576;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "3024:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30579;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3024:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30580;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3019:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30582;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30555;
                                        readonly src: "3077:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }, {
                                        readonly id: 30583;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30558;
                                        readonly src: "3080:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                                            readonly typeString: "int256[] memory";
                                        }];
                                        readonly id: 30581;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                        readonly referencedDeclaration: 30473;
                                        readonly src: "3068:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_array$_t_int256_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (int256[] memory,int256[] memory)";
                                        };
                                    };
                                    readonly id: 30584;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3068:14:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30585;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3068:14:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "2854:8:151";
                readonly parameters: {
                    readonly id: 30561;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30555;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "2879:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30589;
                        readonly src: "2863:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30553;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2863:6:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 30554;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2863:8:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30558;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "2898:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30589;
                        readonly src: "2882:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_int256_$dyn_memory_ptr";
                            readonly typeString: "int256[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30556;
                                readonly name: "int256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "2882:6:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly id: 30557;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "2882:8:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_int256_$dyn_storage_ptr";
                                readonly typeString: "int256[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30560;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "2915:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30589;
                        readonly src: "2901:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30559;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "2901:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "2862:57:151";
                };
                readonly returnParameters: {
                    readonly id: 30562;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "2937:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30626;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3105:256:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30625;
                    readonly nodeType: "Block";
                    readonly src: "3199:162:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bytes32";
                                readonly typeString: "bytes32";
                            };
                            readonly id: 30612;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30603;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30592;
                                        readonly src: "3234:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30601;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "3223:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30602;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3227:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "3223:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30604;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3223:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30600;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "3213:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30605;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3213:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "!=";
                            readonly rightExpression: {
                                readonly arguments: readonly [{
                                    readonly arguments: readonly [{
                                        readonly id: 30609;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30595;
                                        readonly src: "3262:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly expression: {
                                            readonly id: 30607;
                                            readonly name: "abi";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: -1;
                                            readonly src: "3251:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_magic_abi";
                                                readonly typeString: "abi";
                                            };
                                        };
                                        readonly id: 30608;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly memberLocation: "3255:6:151";
                                        readonly memberName: "encode";
                                        readonly nodeType: "MemberAccess";
                                        readonly src: "3251:10:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$";
                                            readonly typeString: "function () pure returns (bytes memory)";
                                        };
                                    };
                                    readonly id: 30610;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3251:13:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_bytes_memory_ptr";
                                        readonly typeString: "bytes memory";
                                    }];
                                    readonly id: 30606;
                                    readonly name: "keccak256";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: -8;
                                    readonly src: "3241:9:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$";
                                        readonly typeString: "function (bytes memory) pure returns (bytes32)";
                                    };
                                };
                                readonly id: 30611;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3241:24:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes32";
                                    readonly typeString: "bytes32";
                                };
                            };
                            readonly src: "3213:52:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30624;
                        readonly nodeType: "IfStatement";
                        readonly src: "3209:146:151";
                        readonly trueBody: {
                            readonly id: 30623;
                            readonly nodeType: "Block";
                            readonly src: "3267:88:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30614;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3303:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30615;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30597;
                                        readonly src: "3312:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30613;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "3286:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30616;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3286:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30617;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3281:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30619;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30592;
                                        readonly src: "3339:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }, {
                                        readonly id: 30620;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30595;
                                        readonly src: "3342:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }, {
                                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                                            readonly typeString: "address[] memory";
                                        }];
                                        readonly id: 30618;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                        readonly referencedDeclaration: 30515;
                                        readonly src: "3330:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$";
                                            readonly typeString: "function (address[] memory,address[] memory)";
                                        };
                                    };
                                    readonly id: 30621;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3330:14:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30622;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3330:14:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEq";
                readonly nameLocation: "3114:8:151";
                readonly parameters: {
                    readonly id: 30598;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30592;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "3140:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30626;
                        readonly src: "3123:18:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30590;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "3123:7:151";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 30591;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "3123:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30595;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "3160:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30626;
                        readonly src: "3143:18:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_array$_t_address_$dyn_memory_ptr";
                            readonly typeString: "address[]";
                        };
                        readonly typeName: {
                            readonly baseType: {
                                readonly id: 30593;
                                readonly name: "address";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "3143:7:151";
                                readonly stateMutability: "nonpayable";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            };
                            readonly id: 30594;
                            readonly nodeType: "ArrayTypeName";
                            readonly src: "3143:9:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_array$_t_address_$dyn_storage_ptr";
                                readonly typeString: "address[]";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30597;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "3177:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30626;
                        readonly src: "3163:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30596;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3163:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3122:59:151";
                };
                readonly returnParameters: {
                    readonly id: 30599;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3199:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30645;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3388:110:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30644;
                    readonly nodeType: "Block";
                    readonly src: "3449:49:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly arguments: readonly [{
                                    readonly id: 30636;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30628;
                                    readonly src: "3476:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 30635;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "3468:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_uint256_$";
                                        readonly typeString: "type(uint256)";
                                    };
                                    readonly typeName: {
                                        readonly id: 30634;
                                        readonly name: "uint256";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3468:7:151";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 30637;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3468:10:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly arguments: readonly [{
                                    readonly id: 30640;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 30630;
                                    readonly src: "3488:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 30639;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: true;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "ElementaryTypeNameExpression";
                                    readonly src: "3480:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_uint256_$";
                                        readonly typeString: "type(uint256)";
                                    };
                                    readonly typeName: {
                                        readonly id: 30638;
                                        readonly name: "uint256";
                                        readonly nodeType: "ElementaryTypeName";
                                        readonly src: "3480:7:151";
                                        readonly typeDescriptions: {};
                                    };
                                };
                                readonly id: 30641;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "typeConversion";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "3480:10:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly id: 30633;
                                readonly name: "assertEq";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                readonly referencedDeclaration: 28364;
                                readonly src: "3459:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$";
                                    readonly typeString: "function (uint256,uint256)";
                                };
                            };
                            readonly id: 30642;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3459:32:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 30643;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "3459:32:151";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqUint";
                readonly nameLocation: "3397:12:151";
                readonly parameters: {
                    readonly id: 30631;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30628;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "3418:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30645;
                        readonly src: "3410:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30627;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3410:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30630;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "3429:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30645;
                        readonly src: "3421:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30629;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3421:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3409:22:151";
                };
                readonly returnParameters: {
                    readonly id: 30632;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3449:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30695;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3504:470:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30694;
                    readonly nodeType: "Block";
                    readonly src: "3588:386:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30655];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30655;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "3606:5:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30694;
                            readonly src: "3598:13:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30654;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "3598:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30661;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30658;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30647;
                                readonly src: "3628:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30659;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30649;
                                readonly src: "3631:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30656;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "3614:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30657;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "3622:5:151";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36091;
                                readonly src: "3614:13:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30660;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "3614:19:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "3598:35:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30664;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30662;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30655;
                                readonly src: "3648:5:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30663;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30651;
                                readonly src: "3656:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "3648:16:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30693;
                        readonly nodeType: "IfStatement";
                        readonly src: "3644:324:151";
                        readonly trueBody: {
                            readonly id: 30692;
                            readonly nodeType: "Block";
                            readonly src: "3666:302:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 30666;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3689:36:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 30665;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "3685:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30667;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3685:41:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30668;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3680:46:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 30670;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3760:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 30671;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30647;
                                        readonly src: "3774:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30669;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27923;
                                        readonly src: "3745:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30672;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3745:31:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30673;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3740:36:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 30675;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3810:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 30676;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30649;
                                        readonly src: "3824:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30674;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27923;
                                        readonly src: "3795:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30677;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3795:31:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30678;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3790:36:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 30680;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3860:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 30681;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30651;
                                        readonly src: "3874:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30679;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27923;
                                        readonly src: "3845:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30682;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3845:38:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30683;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3840:43:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 30685;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "3917:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 30686;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30655;
                                        readonly src: "3931:5:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30684;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27923;
                                        readonly src: "3902:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30687;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3902:35:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30688;
                                readonly nodeType: "EmitStatement";
                                readonly src: "3897:40:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30689;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "3951:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30690;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "3951:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30691;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "3951:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "3513:17:151";
                readonly parameters: {
                    readonly id: 30652;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30647;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "3539:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30695;
                        readonly src: "3531:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30646;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3531:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30649;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "3550:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30695;
                        readonly src: "3542:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30648;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3542:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30651;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "3561:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30695;
                        readonly src: "3553:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30650;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "3553:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "3530:40:151";
                };
                readonly returnParameters: {
                    readonly id: 30653;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "3588:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30731;
                readonly nodeType: "FunctionDefinition";
                readonly src: "3980:294:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30730;
                    readonly nodeType: "Block";
                    readonly src: "4083:191:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30707];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30707;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "4101:5:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30730;
                            readonly src: "4093:13:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30706;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "4093:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30713;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30710;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30697;
                                readonly src: "4123:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30711;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30699;
                                readonly src: "4126:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30708;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "4109:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30709;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4117:5:151";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36091;
                                readonly src: "4109:13:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30712;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "4109:19:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "4093:35:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30716;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30714;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30707;
                                readonly src: "4143:5:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30715;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30701;
                                readonly src: "4151:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "4143:16:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30729;
                        readonly nodeType: "IfStatement";
                        readonly src: "4139:129:151";
                        readonly trueBody: {
                            readonly id: 30728;
                            readonly nodeType: "Block";
                            readonly src: "4161:107:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30718;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4197:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30719;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30703;
                                        readonly src: "4206:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30717;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "4180:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30720;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4180:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30721;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4175:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30723;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30697;
                                        readonly src: "4242:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30724;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30699;
                                        readonly src: "4245:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30725;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30701;
                                        readonly src: "4248:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30722;
                                        readonly name: "assertApproxEqAbs";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30695, 30731, 30876, 30912];
                                        readonly referencedDeclaration: 30695;
                                        readonly src: "4224:17:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30726;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4224:33:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30727;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "4224:33:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "3989:17:151";
                readonly parameters: {
                    readonly id: 30704;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30697;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "4015:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30731;
                        readonly src: "4007:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30696;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4007:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30699;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "4026:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30731;
                        readonly src: "4018:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30698;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4018:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30701;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "4037:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30731;
                        readonly src: "4029:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30700;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4029:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30703;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "4061:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30731;
                        readonly src: "4047:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30702;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4047:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4006:59:151";
                };
                readonly returnParameters: {
                    readonly id: 30705;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "4083:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30787;
                readonly nodeType: "FunctionDefinition";
                readonly src: "4280:567:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30786;
                    readonly nodeType: "Block";
                    readonly src: "4389:458:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30743];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30743;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "4407:5:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30786;
                            readonly src: "4399:13:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30742;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "4399:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30749;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30746;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30733;
                                readonly src: "4429:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30747;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30735;
                                readonly src: "4432:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30744;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "4415:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30745;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "4423:5:151";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36091;
                                readonly src: "4415:13:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30748;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "4415:19:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "4399:35:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30752;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30750;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30743;
                                readonly src: "4449:5:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30751;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30737;
                                readonly src: "4457:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "4449:16:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30785;
                        readonly nodeType: "IfStatement";
                        readonly src: "4445:396:151";
                        readonly trueBody: {
                            readonly id: 30784;
                            readonly nodeType: "Block";
                            readonly src: "4467:374:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 30754;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4490:36:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 30753;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "4486:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30755;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4486:41:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30756;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4481:46:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 30758;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4569:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 30759;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30733;
                                        readonly src: "4583:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30760;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30739;
                                        readonly src: "4586:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30757;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "4546:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30761;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4546:49:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30762;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4541:54:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 30764;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4637:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 30765;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30735;
                                        readonly src: "4651:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30766;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30739;
                                        readonly src: "4654:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30763;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "4614:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30767;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4614:49:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30768;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4609:54:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 30770;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4705:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 30771;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30737;
                                        readonly src: "4719:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30772;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30739;
                                        readonly src: "4729:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30769;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "4682:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30773;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4682:56:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30774;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4677:61:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 30776;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "4780:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 30777;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30743;
                                        readonly src: "4794:5:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30778;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30739;
                                        readonly src: "4801:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30775;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "4757:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30779;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4757:53:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30780;
                                readonly nodeType: "EmitStatement";
                                readonly src: "4752:58:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30781;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "4824:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30782;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "4824:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30783;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "4824:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "4289:24:151";
                readonly parameters: {
                    readonly id: 30740;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30733;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "4322:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30787;
                        readonly src: "4314:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30732;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4314:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30735;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "4333:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30787;
                        readonly src: "4325:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30734;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4325:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30737;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "4344:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30787;
                        readonly src: "4336:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30736;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4336:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30739;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "4362:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30787;
                        readonly src: "4354:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30738;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4354:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4313:58:151";
                };
                readonly returnParameters: {
                    readonly id: 30741;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "4389:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30826;
                readonly nodeType: "FunctionDefinition";
                readonly src: "4853:356:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30825;
                    readonly nodeType: "Block";
                    readonly src: "5001:208:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30801];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30801;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "5019:5:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30825;
                            readonly src: "5011:13:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30800;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5011:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30807;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30804;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30789;
                                readonly src: "5041:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 30805;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30791;
                                readonly src: "5044:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 30802;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "5027:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30803;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5035:5:151";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36091;
                                readonly src: "5027:13:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30806;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5027:19:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5011:35:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30810;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30808;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30801;
                                readonly src: "5061:5:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30809;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30793;
                                readonly src: "5069:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "5061:16:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30824;
                        readonly nodeType: "IfStatement";
                        readonly src: "5057:146:151";
                        readonly trueBody: {
                            readonly id: 30823;
                            readonly nodeType: "Block";
                            readonly src: "5079:124:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30812;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5115:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30813;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30797;
                                        readonly src: "5124:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30811;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "5098:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30814;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5098:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30815;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5093:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30817;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30789;
                                        readonly src: "5167:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30818;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30791;
                                        readonly src: "5170:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30819;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30793;
                                        readonly src: "5173:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30820;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30795;
                                        readonly src: "5183:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30816;
                                        readonly name: "assertApproxEqAbsDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30787, 30826, 30968, 31007];
                                        readonly referencedDeclaration: 30787;
                                        readonly src: "5142:24:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30821;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5142:50:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30822;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "5142:50:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "4862:24:151";
                readonly parameters: {
                    readonly id: 30798;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30789;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "4895:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30826;
                        readonly src: "4887:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30788;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4887:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30791;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "4906:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30826;
                        readonly src: "4898:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30790;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4898:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30793;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "4917:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30826;
                        readonly src: "4909:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30792;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4909:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30795;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "4935:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30826;
                        readonly src: "4927:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30794;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4927:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30797;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "4959:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30826;
                        readonly src: "4945:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30796;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "4945:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "4886:77:151";
                };
                readonly returnParameters: {
                    readonly id: 30799;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "5001:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30876;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5215:467:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30875;
                    readonly nodeType: "Block";
                    readonly src: "5297:385:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30836];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30836;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "5315:5:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30875;
                            readonly src: "5307:13:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30835;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5307:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30842;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30839;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30828;
                                readonly src: "5337:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30840;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30830;
                                readonly src: "5340:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30837;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "5323:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30838;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5331:5:151";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36127;
                                readonly src: "5323:13:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30841;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5323:19:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5307:35:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30845;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30843;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30836;
                                readonly src: "5357:5:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30844;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30832;
                                readonly src: "5365:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "5357:16:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30874;
                        readonly nodeType: "IfStatement";
                        readonly src: "5353:323:151";
                        readonly trueBody: {
                            readonly id: 30873;
                            readonly nodeType: "Block";
                            readonly src: "5375:301:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 30847;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5398:35:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 30846;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "5394:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30848;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5394:40:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30849;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5389:45:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020204c656674";
                                        readonly id: 30851;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5467:13:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_0d86233afabb8b3973e071db5489b096a3194445fead9d01245809171b4e3927";
                                            readonly typeString: "literal_string \"       Left\"";
                                        };
                                        readonly value: "       Left";
                                    }, {
                                        readonly id: 30852;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30828;
                                        readonly src: "5482:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_0d86233afabb8b3973e071db5489b096a3194445fead9d01245809171b4e3927";
                                            readonly typeString: "literal_string \"       Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 30850;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27917;
                                        readonly src: "5453:13:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 30853;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5453:31:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30854;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5448:36:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020205269676874";
                                        readonly id: 30856;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5517:13:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_49df7c349e5ac2a2258473415d7a60c524ff5057a99dca9437d1a93b96f3739d";
                                            readonly typeString: "literal_string \"      Right\"";
                                        };
                                        readonly value: "      Right";
                                    }, {
                                        readonly id: 30857;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30830;
                                        readonly src: "5532:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_49df7c349e5ac2a2258473415d7a60c524ff5057a99dca9437d1a93b96f3739d";
                                            readonly typeString: "literal_string \"      Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 30855;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27917;
                                        readonly src: "5503:13:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 30858;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5503:31:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30859;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5498:36:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 30861;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5568:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 30862;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30832;
                                        readonly src: "5582:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30860;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27923;
                                        readonly src: "5553:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30863;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5553:38:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30864;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5548:43:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 30866;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5625:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 30867;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30836;
                                        readonly src: "5639:5:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30865;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27923;
                                        readonly src: "5610:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 30868;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5610:35:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30869;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5605:40:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30870;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "5659:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30871;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5659:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30872;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "5659:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "5224:17:151";
                readonly parameters: {
                    readonly id: 30833;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30828;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "5249:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30876;
                        readonly src: "5242:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30827;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5242:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30830;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "5259:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30876;
                        readonly src: "5252:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30829;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5252:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30832;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "5270:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30876;
                        readonly src: "5262:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30831;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5262:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "5241:38:151";
                };
                readonly returnParameters: {
                    readonly id: 30834;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "5297:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30912;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5688:292:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30911;
                    readonly nodeType: "Block";
                    readonly src: "5789:191:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30888];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30888;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "5807:5:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30911;
                            readonly src: "5799:13:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30887;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "5799:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30894;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30891;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30878;
                                readonly src: "5829:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30892;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30880;
                                readonly src: "5832:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30889;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "5815:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30890;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "5823:5:151";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36127;
                                readonly src: "5815:13:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30893;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "5815:19:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "5799:35:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30897;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30895;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30888;
                                readonly src: "5849:5:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30896;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30882;
                                readonly src: "5857:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "5849:16:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30910;
                        readonly nodeType: "IfStatement";
                        readonly src: "5845:129:151";
                        readonly trueBody: {
                            readonly id: 30909;
                            readonly nodeType: "Block";
                            readonly src: "5867:107:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30899;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "5903:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30900;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30884;
                                        readonly src: "5912:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30898;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "5886:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30901;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5886:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30902;
                                readonly nodeType: "EmitStatement";
                                readonly src: "5881:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30904;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30878;
                                        readonly src: "5948:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30905;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30880;
                                        readonly src: "5951:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30906;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30882;
                                        readonly src: "5954:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30903;
                                        readonly name: "assertApproxEqAbs";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30695, 30731, 30876, 30912];
                                        readonly referencedDeclaration: 30876;
                                        readonly src: "5930:17:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256)";
                                        };
                                    };
                                    readonly id: 30907;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "5930:33:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30908;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "5930:33:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbs";
                readonly nameLocation: "5697:17:151";
                readonly parameters: {
                    readonly id: 30885;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30878;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "5722:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30912;
                        readonly src: "5715:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30877;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5715:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30880;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "5732:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30912;
                        readonly src: "5725:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30879;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5725:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30882;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "5743:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30912;
                        readonly src: "5735:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30881;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5735:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30884;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "5767:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30912;
                        readonly src: "5753:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30883;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "5753:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "5714:57:151";
                };
                readonly returnParameters: {
                    readonly id: 30886;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "5789:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 30968;
                readonly nodeType: "FunctionDefinition";
                readonly src: "5986:562:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 30967;
                    readonly nodeType: "Block";
                    readonly src: "6093:455:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30924];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30924;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "6111:5:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 30967;
                            readonly src: "6103:13:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30923;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "6103:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30930;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30927;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30914;
                                readonly src: "6133:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30928;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30916;
                                readonly src: "6136:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30925;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "6119:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30926;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "6127:5:151";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36127;
                                readonly src: "6119:13:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30929;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "6119:19:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "6103:35:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30933;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30931;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30924;
                                readonly src: "6153:5:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30932;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30918;
                                readonly src: "6161:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "6153:16:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 30966;
                        readonly nodeType: "IfStatement";
                        readonly src: "6149:393:151";
                        readonly trueBody: {
                            readonly id: 30965;
                            readonly nodeType: "Block";
                            readonly src: "6171:371:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 30935;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6194:35:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 30934;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "6190:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 30936;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6190:40:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30937;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6185:45:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020204c656674";
                                        readonly id: 30939;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6271:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        };
                                        readonly value: "      Left";
                                    }, {
                                        readonly id: 30940;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30914;
                                        readonly src: "6285:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30941;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30920;
                                        readonly src: "6288:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_bbf7c57905778f125dacfa4fd24c0b99a73d897099071adb94dd57d06b52ce31";
                                            readonly typeString: "literal_string \"      Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30938;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27903;
                                        readonly src: "6249:21:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 30942;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6249:48:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30943;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6244:53:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020205269676874";
                                        readonly id: 30945;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6338:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        };
                                        readonly value: "     Right";
                                    }, {
                                        readonly id: 30946;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30916;
                                        readonly src: "6352:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30947;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30920;
                                        readonly src: "6355:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f594094f8f37a3e37fa75233058696f0caafa00827fc96f5c5afe6f0e2570053";
                                            readonly typeString: "literal_string \"     Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30944;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27903;
                                        readonly src: "6316:21:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 30948;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6316:48:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30949;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6311:53:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d61782044656c7461";
                                        readonly id: 30951;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6406:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        };
                                        readonly value: " Max Delta";
                                    }, {
                                        readonly id: 30952;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30918;
                                        readonly src: "6420:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30953;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30920;
                                        readonly src: "6430:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_cd2884c74a25327f5cafe8471ed73da28ba1991b65dde72feb1cd4f78f5dc2a5";
                                            readonly typeString: "literal_string \" Max Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30950;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "6383:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30954;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6383:56:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30955;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6378:61:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202044656c7461";
                                        readonly id: 30957;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6481:12:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        };
                                        readonly value: "     Delta";
                                    }, {
                                        readonly id: 30958;
                                        readonly name: "delta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30924;
                                        readonly src: "6495:5:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 30959;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30920;
                                        readonly src: "6502:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_39d8d5e74991bbc141eb1ca770e60e69523d5c43706b72685708d217b293c55f";
                                            readonly typeString: "literal_string \"     Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30956;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "6458:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 30960;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6458:53:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30961;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6453:58:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 30962;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "6525:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 30963;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6525:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30964;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "6525:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "5995:24:151";
                readonly parameters: {
                    readonly id: 30921;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30914;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "6027:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30968;
                        readonly src: "6020:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30913;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6020:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30916;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "6037:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30968;
                        readonly src: "6030:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30915;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6030:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30918;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "6048:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30968;
                        readonly src: "6040:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30917;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6040:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30920;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "6066:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 30968;
                        readonly src: "6058:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30919;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6058:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "6019:56:151";
                };
                readonly returnParameters: {
                    readonly id: 30922;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "6093:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31007;
                readonly nodeType: "FunctionDefinition";
                readonly src: "6554:354:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31006;
                    readonly nodeType: "Block";
                    readonly src: "6700:208:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [30982];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 30982;
                            readonly mutability: "mutable";
                            readonly name: "delta";
                            readonly nameLocation: "6718:5:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31006;
                            readonly src: "6710:13:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 30981;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "6710:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 30988;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 30985;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30970;
                                readonly src: "6740:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 30986;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30972;
                                readonly src: "6743:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 30983;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "6726:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 30984;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "6734:5:151";
                                readonly memberName: "delta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36127;
                                readonly src: "6726:13:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 30987;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "6726:19:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "6710:35:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 30991;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 30989;
                                readonly name: "delta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30982;
                                readonly src: "6760:5:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 30990;
                                readonly name: "maxDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 30974;
                                readonly src: "6768:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "6760:16:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31005;
                        readonly nodeType: "IfStatement";
                        readonly src: "6756:146:151";
                        readonly trueBody: {
                            readonly id: 31004;
                            readonly nodeType: "Block";
                            readonly src: "6778:124:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 30993;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "6814:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 30994;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30978;
                                        readonly src: "6823:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 30992;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "6797:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 30995;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6797:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 30996;
                                readonly nodeType: "EmitStatement";
                                readonly src: "6792:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 30998;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30970;
                                        readonly src: "6866:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 30999;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30972;
                                        readonly src: "6869:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 31000;
                                        readonly name: "maxDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30974;
                                        readonly src: "6872:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 31001;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 30976;
                                        readonly src: "6882:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 30997;
                                        readonly name: "assertApproxEqAbsDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30787, 30826, 30968, 31007];
                                        readonly referencedDeclaration: 30968;
                                        readonly src: "6841:24:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31002;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "6841:50:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31003;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "6841:50:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqAbsDecimal";
                readonly nameLocation: "6563:24:151";
                readonly parameters: {
                    readonly id: 30979;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 30970;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "6595:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31007;
                        readonly src: "6588:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30969;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6588:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30972;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "6605:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31007;
                        readonly src: "6598:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 30971;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6598:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30974;
                        readonly mutability: "mutable";
                        readonly name: "maxDelta";
                        readonly nameLocation: "6616:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31007;
                        readonly src: "6608:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30973;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6608:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30976;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "6634:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31007;
                        readonly src: "6626:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 30975;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6626:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 30978;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "6658:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31007;
                        readonly src: "6644:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 30977;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6644:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "6587:75:151";
                };
                readonly returnParameters: {
                    readonly id: 30980;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "6700:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31072;
                readonly nodeType: "FunctionDefinition";
                readonly src: "6914:733:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31071;
                    readonly nodeType: "Block";
                    readonly src: "7091:556:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31018;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31016;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31011;
                                readonly src: "7105:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 31017;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "7110:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "7105:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31024;
                        readonly nodeType: "IfStatement";
                        readonly src: "7101:33:151";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 31020;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31009;
                                    readonly src: "7129:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 31021;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31011;
                                    readonly src: "7132:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 31019;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                    readonly referencedDeclaration: 28364;
                                    readonly src: "7120:8:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$";
                                        readonly typeString: "function (uint256,uint256)";
                                    };
                                };
                                readonly id: 31022;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "7120:14:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 31015;
                            readonly id: 31023;
                            readonly nodeType: "Return";
                            readonly src: "7113:21:151";
                        };
                    }, {
                        readonly assignments: readonly [31026];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 31026;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "7193:12:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31071;
                            readonly src: "7185:20:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 31025;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "7185:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 31032;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 31029;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31009;
                                readonly src: "7229:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 31030;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31011;
                                readonly src: "7232:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 31027;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "7208:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 31028;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "7216:12:151";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36150;
                                readonly src: "7208:20:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 31031;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "7208:26:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "7185:49:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31035;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31033;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31026;
                                readonly src: "7249:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 31034;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31013;
                                readonly src: "7264:15:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "7249:30:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31070;
                        readonly nodeType: "IfStatement";
                        readonly src: "7245:396:151";
                        readonly trueBody: {
                            readonly id: 31069;
                            readonly nodeType: "Block";
                            readonly src: "7281:360:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 31037;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7304:36:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 31036;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "7300:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 31038;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7300:41:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31039;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7295:46:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 31041;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7375:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 31042;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31009;
                                        readonly src: "7391:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 31040;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27923;
                                        readonly src: "7360:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 31043;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7360:33:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31044;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7355:38:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 31046;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7427:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 31047;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31011;
                                        readonly src: "7443:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 31045;
                                        readonly name: "log_named_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27923;
                                        readonly src: "7412:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256)";
                                        };
                                    };
                                    readonly id: 31048;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7412:33:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31049;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7407:38:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 31051;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7487:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 31054;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 31052;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 31013;
                                            readonly src: "7503:15:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 31053;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "7521:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "7503:21:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 31055;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7526:2:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 31050;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "7464:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31056;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7464:65:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31057;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7459:70:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 31059;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7571:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 31062;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 31060;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 31026;
                                            readonly src: "7587:12:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 31061;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "7602:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "7587:18:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 31063;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "7607:2:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 31058;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "7548:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31064;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7548:62:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31065;
                                readonly nodeType: "EmitStatement";
                                readonly src: "7543:67:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 31066;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "7624:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 31067;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "7624:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31068;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "7624:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "6923:17:151";
                readonly parameters: {
                    readonly id: 31014;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31009;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "6958:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31072;
                        readonly src: "6950:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31008;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6950:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31011;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "6977:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31072;
                        readonly src: "6969:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31010;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6969:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31013;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "6996:15:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31072;
                        readonly src: "6988:23:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31012;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "6988:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "6940:133:151";
                };
                readonly returnParameters: {
                    readonly id: 31015;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "7091:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31118;
                readonly nodeType: "FunctionDefinition";
                readonly src: "7653:519:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31117;
                    readonly nodeType: "Block";
                    readonly src: "7857:315:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31085;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31083;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31076;
                                readonly src: "7871:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 31084;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "7876:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "7871:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31092;
                        readonly nodeType: "IfStatement";
                        readonly src: "7867:38:151";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 31087;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31074;
                                    readonly src: "7895:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 31088;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31076;
                                    readonly src: "7898:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 31089;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31080;
                                    readonly src: "7901:3:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 31086;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                    readonly referencedDeclaration: 28389;
                                    readonly src: "7886:8:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (uint256,uint256,string memory)";
                                    };
                                };
                                readonly id: 31090;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "7886:19:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 31082;
                            readonly id: 31091;
                            readonly nodeType: "Return";
                            readonly src: "7879:26:151";
                        };
                    }, {
                        readonly assignments: readonly [31094];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 31094;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "7964:12:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31117;
                            readonly src: "7956:20:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 31093;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "7956:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 31100;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 31097;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31074;
                                readonly src: "8000:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 31098;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31076;
                                readonly src: "8003:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 31095;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "7979:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 31096;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "7987:12:151";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36150;
                                readonly src: "7979:20:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 31099;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "7979:26:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "7956:49:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31103;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31101;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31094;
                                readonly src: "8020:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 31102;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31078;
                                readonly src: "8035:15:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8020:30:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31116;
                        readonly nodeType: "IfStatement";
                        readonly src: "8016:150:151";
                        readonly trueBody: {
                            readonly id: 31115;
                            readonly nodeType: "Block";
                            readonly src: "8052:114:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 31105;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8088:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 31106;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31080;
                                        readonly src: "8097:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 31104;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "8071:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 31107;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8071:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31108;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8066:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 31110;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31074;
                                        readonly src: "8133:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 31111;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31076;
                                        readonly src: "8136:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 31112;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31078;
                                        readonly src: "8139:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 31109;
                                        readonly name: "assertApproxEqRel";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [31072, 31118, 31301, 31347];
                                        readonly referencedDeclaration: 31072;
                                        readonly src: "8115:17:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31113;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8115:40:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31114;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "8115:40:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "7662:17:151";
                readonly parameters: {
                    readonly id: 31081;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31074;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "7697:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31118;
                        readonly src: "7689:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31073;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7689:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31076;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "7716:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31118;
                        readonly src: "7708:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31075;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7708:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31078;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "7735:15:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31118;
                        readonly src: "7727:23:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31077;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7727:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31080;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "7830:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31118;
                        readonly src: "7816:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 31079;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "7816:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "7679:160:151";
                };
                readonly returnParameters: {
                    readonly id: 31082;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "7857:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31187;
                readonly nodeType: "FunctionDefinition";
                readonly src: "8178:802:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31186;
                    readonly nodeType: "Block";
                    readonly src: "8388:592:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31131;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31129;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31122;
                                readonly src: "8402:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 31130;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "8407:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "8402:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31137;
                        readonly nodeType: "IfStatement";
                        readonly src: "8398:33:151";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 31133;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31120;
                                    readonly src: "8426:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 31134;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31122;
                                    readonly src: "8429:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }];
                                    readonly id: 31132;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                    readonly referencedDeclaration: 28364;
                                    readonly src: "8417:8:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$";
                                        readonly typeString: "function (uint256,uint256)";
                                    };
                                };
                                readonly id: 31135;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "8417:14:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 31128;
                            readonly id: 31136;
                            readonly nodeType: "Return";
                            readonly src: "8410:21:151";
                        };
                    }, {
                        readonly assignments: readonly [31139];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 31139;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "8490:12:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31186;
                            readonly src: "8482:20:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 31138;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "8482:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 31145;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 31142;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31120;
                                readonly src: "8526:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 31143;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31122;
                                readonly src: "8529:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 31140;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "8505:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 31141;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "8513:12:151";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36150;
                                readonly src: "8505:20:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 31144;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "8505:26:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "8482:49:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31148;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31146;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31139;
                                readonly src: "8546:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 31147;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31124;
                                readonly src: "8561:15:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "8546:30:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31185;
                        readonly nodeType: "IfStatement";
                        readonly src: "8542:432:151";
                        readonly trueBody: {
                            readonly id: 31184;
                            readonly nodeType: "Block";
                            readonly src: "8578:396:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b75696e745d";
                                        readonly id: 31150;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8601:36:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [uint]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_b3cfa1421f120a399b6064fcc8d5188a4e28bcc717972b37d8e8a5e5cc07c7fe";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [uint]\"";
                                        }];
                                        readonly id: 31149;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "8597:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 31151;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8597:41:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31152;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8592:46:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 31154;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8680:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 31155;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31120;
                                        readonly src: "8696:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 31156;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31126;
                                        readonly src: "8699:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 31153;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "8657:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31157;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8657:51:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31158;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8652:56:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 31160;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8750:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 31161;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31122;
                                        readonly src: "8766:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 31162;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31126;
                                        readonly src: "8769:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 31159;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "8727:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31163;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8727:51:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31164;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8722:56:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 31166;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8820:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 31169;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 31167;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 31124;
                                            readonly src: "8836:15:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 31168;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "8854:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "8836:21:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 31170;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8859:2:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 31165;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "8797:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31171;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8797:65:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31172;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8792:70:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 31174;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8904:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 31177;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 31175;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 31139;
                                            readonly src: "8920:12:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 31176;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "8935:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "8920:18:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 31178;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "8940:2:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 31173;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "8881:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31179;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8881:62:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31180;
                                readonly nodeType: "EmitStatement";
                                readonly src: "8876:67:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 31181;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "8957:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 31182;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "8957:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31183;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "8957:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "8187:24:151";
                readonly parameters: {
                    readonly id: 31127;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31120;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "8229:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31187;
                        readonly src: "8221:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31119;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8221:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31122;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "8248:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31187;
                        readonly src: "8240:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31121;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8240:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31124;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "8267:15:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31187;
                        readonly src: "8259:23:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31123;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8259:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31126;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "8356:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31187;
                        readonly src: "8348:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31125;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "8348:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "8211:159:151";
                };
                readonly returnParameters: {
                    readonly id: 31128;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "8388:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31236;
                readonly nodeType: "FunctionDefinition";
                readonly src: "8986:569:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31235;
                    readonly nodeType: "Block";
                    readonly src: "9223:332:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31202;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31200;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31191;
                                readonly src: "9237:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 31201;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "9242:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "9237:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31209;
                        readonly nodeType: "IfStatement";
                        readonly src: "9233:38:151";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 31204;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31189;
                                    readonly src: "9261:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 31205;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31191;
                                    readonly src: "9264:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    };
                                }, {
                                    readonly id: 31206;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31197;
                                    readonly src: "9267:3:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_uint256";
                                        readonly typeString: "uint256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 31203;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                    readonly referencedDeclaration: 28389;
                                    readonly src: "9252:8:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (uint256,uint256,string memory)";
                                    };
                                };
                                readonly id: 31207;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "9252:19:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 31199;
                            readonly id: 31208;
                            readonly nodeType: "Return";
                            readonly src: "9245:26:151";
                        };
                    }, {
                        readonly assignments: readonly [31211];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 31211;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "9330:12:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31235;
                            readonly src: "9322:20:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 31210;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "9322:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 31217;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 31214;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31189;
                                readonly src: "9366:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }, {
                                readonly id: 31215;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31191;
                                readonly src: "9369:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }, {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                }];
                                readonly expression: {
                                    readonly id: 31212;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "9345:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 31213;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9353:12:151";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36150;
                                readonly src: "9345:20:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$";
                                    readonly typeString: "function (uint256,uint256) pure returns (uint256)";
                                };
                            };
                            readonly id: 31216;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "9345:26:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "9322:49:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31220;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31218;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31211;
                                readonly src: "9386:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 31219;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31193;
                                readonly src: "9401:15:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9386:30:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31234;
                        readonly nodeType: "IfStatement";
                        readonly src: "9382:167:151";
                        readonly trueBody: {
                            readonly id: 31233;
                            readonly nodeType: "Block";
                            readonly src: "9418:131:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 31222;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9454:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 31223;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31197;
                                        readonly src: "9463:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 31221;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "9437:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 31224;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9437:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31225;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9432:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 31227;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31189;
                                        readonly src: "9506:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 31228;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31191;
                                        readonly src: "9509:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 31229;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31193;
                                        readonly src: "9512:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 31230;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31195;
                                        readonly src: "9529:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 31226;
                                        readonly name: "assertApproxEqRelDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [31187, 31236, 31416, 31465];
                                        readonly referencedDeclaration: 31187;
                                        readonly src: "9481:24:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (uint256,uint256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31231;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9481:57:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31232;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "9481:57:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "8995:24:151";
                readonly parameters: {
                    readonly id: 31198;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31189;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "9037:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31236;
                        readonly src: "9029:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31188;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9029:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31191;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "9056:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31236;
                        readonly src: "9048:9:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31190;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9048:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31193;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "9075:15:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31236;
                        readonly src: "9067:23:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31192;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9067:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31195;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "9164:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31236;
                        readonly src: "9156:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31194;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9156:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31197;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "9196:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31236;
                        readonly src: "9182:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 31196;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9182:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "9019:186:151";
                };
                readonly returnParameters: {
                    readonly id: 31199;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "9223:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31301;
                readonly nodeType: "FunctionDefinition";
                readonly src: "9561:642:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31300;
                    readonly nodeType: "Block";
                    readonly src: "9650:553:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 31247;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31245;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31240;
                                readonly src: "9664:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 31246;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "9669:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "9664:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31253;
                        readonly nodeType: "IfStatement";
                        readonly src: "9660:33:151";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 31249;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31238;
                                    readonly src: "9688:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 31250;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31240;
                                    readonly src: "9691:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }];
                                    readonly id: 31248;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                    readonly referencedDeclaration: 28309;
                                    readonly src: "9679:8:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$";
                                        readonly typeString: "function (int256,int256)";
                                    };
                                };
                                readonly id: 31251;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "9679:14:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 31244;
                            readonly id: 31252;
                            readonly nodeType: "Return";
                            readonly src: "9672:21:151";
                        };
                    }, {
                        readonly assignments: readonly [31255];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 31255;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "9752:12:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31300;
                            readonly src: "9744:20:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 31254;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "9744:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 31261;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 31258;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31238;
                                readonly src: "9788:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 31259;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31240;
                                readonly src: "9791:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 31256;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "9767:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 31257;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "9775:12:151";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36179;
                                readonly src: "9767:20:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 31260;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "9767:26:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "9744:49:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31264;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31262;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31255;
                                readonly src: "9808:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 31263;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31242;
                                readonly src: "9823:15:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "9808:30:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31299;
                        readonly nodeType: "IfStatement";
                        readonly src: "9804:393:151";
                        readonly trueBody: {
                            readonly id: 31298;
                            readonly nodeType: "Block";
                            readonly src: "9840:357:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 31266;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9863:35:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 31265;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "9859:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 31267;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9859:40:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31268;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9854:45:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 31270;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9932:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 31271;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31238;
                                        readonly src: "9948:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 31269;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27917;
                                        readonly src: "9918:13:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 31272;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9918:32:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31273;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9913:37:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 31275;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "9983:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 31276;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31240;
                                        readonly src: "9999:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }];
                                        readonly id: 31274;
                                        readonly name: "log_named_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27917;
                                        readonly src: "9969:13:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$returns$__$";
                                            readonly typeString: "function (string memory,int256)";
                                        };
                                    };
                                    readonly id: 31277;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "9969:32:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31278;
                                readonly nodeType: "EmitStatement";
                                readonly src: "9964:37:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 31280;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10043:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 31283;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 31281;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 31242;
                                            readonly src: "10059:15:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 31282;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "10077:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "10059:21:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 31284;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10082:2:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 31279;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "10020:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31285;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10020:65:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31286;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10015:70:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 31288;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10127:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 31291;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 31289;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 31255;
                                            readonly src: "10143:12:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 31290;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "10158:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "10143:18:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 31292;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10163:2:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 31287;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "10104:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31293;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10104:62:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31294;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10099:67:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 31295;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "10180:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 31296;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10180:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31297;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "10180:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "9570:17:151";
                readonly parameters: {
                    readonly id: 31243;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31238;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "9595:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31301;
                        readonly src: "9588:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 31237;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9588:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31240;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "9605:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31301;
                        readonly src: "9598:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 31239;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9598:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31242;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "9616:15:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31301;
                        readonly src: "9608:23:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31241;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "9608:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "9587:45:151";
                };
                readonly returnParameters: {
                    readonly id: 31244;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "9650:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31347;
                readonly nodeType: "FunctionDefinition";
                readonly src: "10209:423:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31346;
                    readonly nodeType: "Block";
                    readonly src: "10317:315:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 31314;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31312;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31305;
                                readonly src: "10331:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 31313;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "10336:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "10331:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31321;
                        readonly nodeType: "IfStatement";
                        readonly src: "10327:38:151";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 31316;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31303;
                                    readonly src: "10355:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 31317;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31305;
                                    readonly src: "10358:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 31318;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31309;
                                    readonly src: "10361:3:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 31315;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                    readonly referencedDeclaration: 28334;
                                    readonly src: "10346:8:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (int256,int256,string memory)";
                                    };
                                };
                                readonly id: 31319;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "10346:19:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 31311;
                            readonly id: 31320;
                            readonly nodeType: "Return";
                            readonly src: "10339:26:151";
                        };
                    }, {
                        readonly assignments: readonly [31323];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 31323;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "10424:12:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31346;
                            readonly src: "10416:20:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 31322;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "10416:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 31329;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 31326;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31303;
                                readonly src: "10460:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 31327;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31305;
                                readonly src: "10463:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 31324;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "10439:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 31325;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10447:12:151";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36179;
                                readonly src: "10439:20:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 31328;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "10439:26:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "10416:49:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31332;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31330;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31323;
                                readonly src: "10480:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 31331;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31307;
                                readonly src: "10495:15:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10480:30:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31345;
                        readonly nodeType: "IfStatement";
                        readonly src: "10476:150:151";
                        readonly trueBody: {
                            readonly id: 31344;
                            readonly nodeType: "Block";
                            readonly src: "10512:114:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 31334;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10548:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 31335;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31309;
                                        readonly src: "10557:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 31333;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "10531:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 31336;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10531:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31337;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10526:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 31339;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31303;
                                        readonly src: "10593:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 31340;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31305;
                                        readonly src: "10596:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 31341;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31307;
                                        readonly src: "10599:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 31338;
                                        readonly name: "assertApproxEqRel";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [31072, 31118, 31301, 31347];
                                        readonly referencedDeclaration: 31301;
                                        readonly src: "10575:17:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256)";
                                        };
                                    };
                                    readonly id: 31342;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10575:40:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31343;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "10575:40:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRel";
                readonly nameLocation: "10218:17:151";
                readonly parameters: {
                    readonly id: 31310;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31303;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "10243:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31347;
                        readonly src: "10236:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 31302;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10236:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31305;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "10253:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31347;
                        readonly src: "10246:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 31304;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10246:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31307;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "10264:15:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31347;
                        readonly src: "10256:23:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31306;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10256:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31309;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "10295:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31347;
                        readonly src: "10281:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 31308;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10281:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "10235:64:151";
                };
                readonly returnParameters: {
                    readonly id: 31311;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "10317:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31416;
                readonly nodeType: "FunctionDefinition";
                readonly src: "10638:703:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31415;
                    readonly nodeType: "Block";
                    readonly src: "10752:589:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 31360;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31358;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31351;
                                readonly src: "10766:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 31359;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "10771:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "10766:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31366;
                        readonly nodeType: "IfStatement";
                        readonly src: "10762:33:151";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 31362;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31349;
                                    readonly src: "10790:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 31363;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31351;
                                    readonly src: "10793:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }];
                                    readonly id: 31361;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                    readonly referencedDeclaration: 28309;
                                    readonly src: "10781:8:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$";
                                        readonly typeString: "function (int256,int256)";
                                    };
                                };
                                readonly id: 31364;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "10781:14:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 31357;
                            readonly id: 31365;
                            readonly nodeType: "Return";
                            readonly src: "10774:21:151";
                        };
                    }, {
                        readonly assignments: readonly [31368];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 31368;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "10854:12:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31415;
                            readonly src: "10846:20:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 31367;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "10846:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 31374;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 31371;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31349;
                                readonly src: "10890:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 31372;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31351;
                                readonly src: "10893:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 31369;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "10869:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 31370;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "10877:12:151";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36179;
                                readonly src: "10869:20:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 31373;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "10869:26:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "10846:49:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31377;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31375;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31368;
                                readonly src: "10910:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 31376;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31353;
                                readonly src: "10925:15:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "10910:30:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31414;
                        readonly nodeType: "IfStatement";
                        readonly src: "10906:429:151";
                        readonly trueBody: {
                            readonly id: 31413;
                            readonly nodeType: "Block";
                            readonly src: "10942:393:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2061207e3d2062206e6f7420736174697366696564205b696e745d";
                                        readonly id: 31379;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "10965:35:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        };
                                        readonly value: "Error: a ~= b not satisfied [int]";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_11d61c8cdd58caffa5994831eb66eb6db7a7b4d13b2c9d187ffbe992d75f810d";
                                            readonly typeString: "literal_string \"Error: a ~= b not satisfied [int]\"";
                                        }];
                                        readonly id: 31378;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "10961:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 31380;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "10961:40:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31381;
                                readonly nodeType: "EmitStatement";
                                readonly src: "10956:45:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20202020202020204c656674";
                                        readonly id: 31383;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11042:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        };
                                        readonly value: "        Left";
                                    }, {
                                        readonly id: 31384;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31349;
                                        readonly src: "11058:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 31385;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31355;
                                        readonly src: "11061:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_f6217da0e9e1e8e3afbc25e930358ad2d4e2a699b783f5770a33f4ed6b592df8";
                                            readonly typeString: "literal_string \"        Left\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 31382;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27903;
                                        readonly src: "11020:21:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 31386;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11020:50:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31387;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11015:55:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "202020202020205269676874";
                                        readonly id: 31389;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11111:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        };
                                        readonly value: "       Right";
                                    }, {
                                        readonly id: 31390;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31351;
                                        readonly src: "11127:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 31391;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31355;
                                        readonly src: "11130:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d9b31153d6e7e750f2f69f035ad70ea4ecc1e34ecdfd4456407493e5f00fcc1d";
                                            readonly typeString: "literal_string \"       Right\"";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 31388;
                                        readonly name: "log_named_decimal_int";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27903;
                                        readonly src: "11089:21:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_int256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,int256,uint256)";
                                        };
                                    };
                                    readonly id: 31392;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11089:50:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31393;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11084:55:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "204d617820252044656c7461";
                                        readonly id: 31395;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11181:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        };
                                        readonly value: " Max % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 31398;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 31396;
                                            readonly name: "maxPercentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 31353;
                                            readonly src: "11197:15:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 31397;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "11215:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "11197:21:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 31399;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11220:2:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_476fe8c6eb42275e4a879ea3f97d4c8aa2f38a65ce8511d323ad7a22579f732d";
                                            readonly typeString: "literal_string \" Max % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 31394;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "11158:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31400;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11158:65:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31401;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11153:70:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2020202020252044656c7461";
                                        readonly id: 31403;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11265:14:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        };
                                        readonly value: "     % Delta";
                                    }, {
                                        readonly commonType: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                        readonly id: 31406;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: false;
                                        readonly lValueRequested: false;
                                        readonly leftExpression: {
                                            readonly id: 31404;
                                            readonly name: "percentDelta";
                                            readonly nodeType: "Identifier";
                                            readonly overloadedDeclarations: readonly [];
                                            readonly referencedDeclaration: 31368;
                                            readonly src: "11281:12:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_uint256";
                                                readonly typeString: "uint256";
                                            };
                                        };
                                        readonly nodeType: "BinaryOperation";
                                        readonly operator: "*";
                                        readonly rightExpression: {
                                            readonly hexValue: "313030";
                                            readonly id: 31405;
                                            readonly isConstant: false;
                                            readonly isLValue: false;
                                            readonly isPure: true;
                                            readonly kind: "number";
                                            readonly lValueRequested: false;
                                            readonly nodeType: "Literal";
                                            readonly src: "11296:3:151";
                                            readonly typeDescriptions: {
                                                readonly typeIdentifier: "t_rational_100_by_1";
                                                readonly typeString: "int_const 100";
                                            };
                                            readonly value: "100";
                                        };
                                        readonly src: "11281:18:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly hexValue: "3138";
                                        readonly id: 31407;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "number";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11301:2:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        };
                                        readonly value: "18";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_3a4ade1e1607945ca481fbcd7c0ca5baa7e21e413316ae3997404f04177b03d7";
                                            readonly typeString: "literal_string \"     % Delta\"";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_rational_18_by_1";
                                            readonly typeString: "int_const 18";
                                        }];
                                        readonly id: 31402;
                                        readonly name: "log_named_decimal_uint";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27911;
                                        readonly src: "11242:22:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (string memory,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31408;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11242:62:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31409;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11237:67:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 31410;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "11318:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 31411;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11318:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31412;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "11318:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "10647:24:151";
                readonly parameters: {
                    readonly id: 31356;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31349;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "10679:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31416;
                        readonly src: "10672:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 31348;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10672:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31351;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "10689:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31416;
                        readonly src: "10682:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 31350;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10682:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31353;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "10700:15:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31416;
                        readonly src: "10692:23:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31352;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10692:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31355;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "10725:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31416;
                        readonly src: "10717:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31354;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "10717:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "10671:63:151";
                };
                readonly returnParameters: {
                    readonly id: 31357;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "10752:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31465;
                readonly nodeType: "FunctionDefinition";
                readonly src: "11347:485:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31464;
                    readonly nodeType: "Block";
                    readonly src: "11500:332:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                            readonly id: 31431;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31429;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31420;
                                readonly src: "11514:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "==";
                            readonly rightExpression: {
                                readonly hexValue: "30";
                                readonly id: 31430;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "number";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "11519:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_rational_0_by_1";
                                    readonly typeString: "int_const 0";
                                };
                                readonly value: "0";
                            };
                            readonly src: "11514:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31438;
                        readonly nodeType: "IfStatement";
                        readonly src: "11510:38:151";
                        readonly trueBody: {
                            readonly expression: {
                                readonly arguments: readonly [{
                                    readonly id: 31433;
                                    readonly name: "a";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31418;
                                    readonly src: "11538:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 31434;
                                    readonly name: "b";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31420;
                                    readonly src: "11541:1:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    };
                                }, {
                                    readonly id: 31435;
                                    readonly name: "err";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31426;
                                    readonly src: "11544:3:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    };
                                }];
                                readonly expression: {
                                    readonly argumentTypes: readonly [{
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_int256";
                                        readonly typeString: "int256";
                                    }, {
                                        readonly typeIdentifier: "t_string_memory_ptr";
                                        readonly typeString: "string memory";
                                    }];
                                    readonly id: 31432;
                                    readonly name: "assertEq";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                    readonly referencedDeclaration: 28334;
                                    readonly src: "11529:8:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_string_memory_ptr_$returns$__$";
                                        readonly typeString: "function (int256,int256,string memory)";
                                    };
                                };
                                readonly id: 31436;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly kind: "functionCall";
                                readonly lValueRequested: false;
                                readonly nameLocations: readonly [];
                                readonly names: readonly [];
                                readonly nodeType: "FunctionCall";
                                readonly src: "11529:19:151";
                                readonly tryCall: false;
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_tuple$__$";
                                    readonly typeString: "tuple()";
                                };
                            };
                            readonly functionReturnParameters: 31428;
                            readonly id: 31437;
                            readonly nodeType: "Return";
                            readonly src: "11522:26:151";
                        };
                    }, {
                        readonly assignments: readonly [31440];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 31440;
                            readonly mutability: "mutable";
                            readonly name: "percentDelta";
                            readonly nameLocation: "11607:12:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31464;
                            readonly src: "11599:20:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly typeName: {
                                readonly id: 31439;
                                readonly name: "uint256";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "11599:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 31446;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 31443;
                                readonly name: "a";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31418;
                                readonly src: "11643:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }, {
                                readonly id: 31444;
                                readonly name: "b";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31420;
                                readonly src: "11646:1:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }, {
                                    readonly typeIdentifier: "t_int256";
                                    readonly typeString: "int256";
                                }];
                                readonly expression: {
                                    readonly id: 31441;
                                    readonly name: "stdMath";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 36180;
                                    readonly src: "11622:7:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_type$_t_contract$_stdMath_$36180_$";
                                        readonly typeString: "type(library stdMath)";
                                    };
                                };
                                readonly id: 31442;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "11630:12:151";
                                readonly memberName: "percentDelta";
                                readonly nodeType: "MemberAccess";
                                readonly referencedDeclaration: 36179;
                                readonly src: "11622:20:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_uint256_$";
                                    readonly typeString: "function (int256,int256) pure returns (uint256)";
                                };
                            };
                            readonly id: 31445;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "11622:26:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "11599:49:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                            readonly id: 31449;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31447;
                                readonly name: "percentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31440;
                                readonly src: "11663:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: ">";
                            readonly rightExpression: {
                                readonly id: 31448;
                                readonly name: "maxPercentDelta";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31422;
                                readonly src: "11678:15:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_uint256";
                                    readonly typeString: "uint256";
                                };
                            };
                            readonly src: "11663:30:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31463;
                        readonly nodeType: "IfStatement";
                        readonly src: "11659:167:151";
                        readonly trueBody: {
                            readonly id: 31462;
                            readonly nodeType: "Block";
                            readonly src: "11695:131:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f72";
                                        readonly id: 31451;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "11731:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        };
                                        readonly value: "Error";
                                    }, {
                                        readonly id: 31452;
                                        readonly name: "err";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31426;
                                        readonly src: "11740:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1";
                                            readonly typeString: "literal_string \"Error\"";
                                        }, {
                                            readonly typeIdentifier: "t_string_memory_ptr";
                                            readonly typeString: "string memory";
                                        }];
                                        readonly id: 31450;
                                        readonly name: "log_named_string";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27935;
                                        readonly src: "11714:16:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,string memory)";
                                        };
                                    };
                                    readonly id: 31453;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11714:30:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31454;
                                readonly nodeType: "EmitStatement";
                                readonly src: "11709:35:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 31456;
                                        readonly name: "a";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31418;
                                        readonly src: "11783:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 31457;
                                        readonly name: "b";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31420;
                                        readonly src: "11786:1:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        };
                                    }, {
                                        readonly id: 31458;
                                        readonly name: "maxPercentDelta";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31422;
                                        readonly src: "11789:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }, {
                                        readonly id: 31459;
                                        readonly name: "decimals";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31424;
                                        readonly src: "11806:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_int256";
                                            readonly typeString: "int256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }, {
                                            readonly typeIdentifier: "t_uint256";
                                            readonly typeString: "uint256";
                                        }];
                                        readonly id: 31455;
                                        readonly name: "assertApproxEqRelDecimal";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [31187, 31236, 31416, 31465];
                                        readonly referencedDeclaration: 31416;
                                        readonly src: "11758:24:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_int256_$_t_int256_$_t_uint256_$_t_uint256_$returns$__$";
                                            readonly typeString: "function (int256,int256,uint256,uint256)";
                                        };
                                    };
                                    readonly id: 31460;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "11758:57:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31461;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "11758:57:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertApproxEqRelDecimal";
                readonly nameLocation: "11356:24:151";
                readonly parameters: {
                    readonly id: 31427;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31418;
                        readonly mutability: "mutable";
                        readonly name: "a";
                        readonly nameLocation: "11388:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31465;
                        readonly src: "11381:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 31417;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11381:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31420;
                        readonly mutability: "mutable";
                        readonly name: "b";
                        readonly nameLocation: "11398:1:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31465;
                        readonly src: "11391:8:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_int256";
                            readonly typeString: "int256";
                        };
                        readonly typeName: {
                            readonly id: 31419;
                            readonly name: "int256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11391:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_int256";
                                readonly typeString: "int256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31422;
                        readonly mutability: "mutable";
                        readonly name: "maxPercentDelta";
                        readonly nameLocation: "11409:15:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31465;
                        readonly src: "11401:23:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31421;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11401:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31424;
                        readonly mutability: "mutable";
                        readonly name: "decimals";
                        readonly nameLocation: "11434:8:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31465;
                        readonly src: "11426:16:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_uint256";
                            readonly typeString: "uint256";
                        };
                        readonly typeName: {
                            readonly id: 31423;
                            readonly name: "uint256";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11426:7:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_uint256";
                                readonly typeString: "uint256";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31426;
                        readonly mutability: "mutable";
                        readonly name: "err";
                        readonly nameLocation: "11458:3:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31465;
                        readonly src: "11444:17:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_string_memory_ptr";
                            readonly typeString: "string";
                        };
                        readonly typeName: {
                            readonly id: 31425;
                            readonly name: "string";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11444:6:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_string_storage_ptr";
                                readonly typeString: "string";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "11380:82:151";
                };
                readonly returnParameters: {
                    readonly id: 31428;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "11500:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31483;
                readonly nodeType: "FunctionDefinition";
                readonly src: "11838:176:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31482;
                    readonly nodeType: "Block";
                    readonly src: "11941:73:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 31475;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31467;
                                readonly src: "11964:6:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 31476;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31469;
                                readonly src: "11972:9:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 31477;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31467;
                                readonly src: "11983:6:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 31478;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31471;
                                readonly src: "11991:9:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly hexValue: "74727565";
                                readonly id: 31479;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "12002:4:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 31474;
                                readonly name: "assertEqCall";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [31483, 31503, 31523, 31633];
                                readonly referencedDeclaration: 31633;
                                readonly src: "11951:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$";
                                    readonly typeString: "function (address,bytes memory,address,bytes memory,bool)";
                                };
                            };
                            readonly id: 31480;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "11951:56:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 31481;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "11951:56:151";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "11847:12:151";
                readonly parameters: {
                    readonly id: 31472;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31467;
                        readonly mutability: "mutable";
                        readonly name: "target";
                        readonly nameLocation: "11868:6:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31483;
                        readonly src: "11860:14:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 31466;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11860:7:151";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31469;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "11889:9:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31483;
                        readonly src: "11876:22:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 31468;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11876:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31471;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "11913:9:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31483;
                        readonly src: "11900:22:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 31470;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "11900:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "11859:64:151";
                };
                readonly returnParameters: {
                    readonly id: 31473;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "11941:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31503;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12020:216:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31502;
                    readonly nodeType: "Block";
                    readonly src: "12161:75:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 31495;
                                readonly name: "targetA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31485;
                                readonly src: "12184:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 31496;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31487;
                                readonly src: "12193:9:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 31497;
                                readonly name: "targetB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31489;
                                readonly src: "12204:7:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 31498;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31491;
                                readonly src: "12213:9:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly hexValue: "74727565";
                                readonly id: 31499;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: true;
                                readonly kind: "bool";
                                readonly lValueRequested: false;
                                readonly nodeType: "Literal";
                                readonly src: "12224:4:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly value: "true";
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 31494;
                                readonly name: "assertEqCall";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [31483, 31503, 31523, 31633];
                                readonly referencedDeclaration: 31633;
                                readonly src: "12171:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$";
                                    readonly typeString: "function (address,bytes memory,address,bytes memory,bool)";
                                };
                            };
                            readonly id: 31500;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12171:58:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 31501;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12171:58:151";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "12029:12:151";
                readonly parameters: {
                    readonly id: 31492;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31485;
                        readonly mutability: "mutable";
                        readonly name: "targetA";
                        readonly nameLocation: "12050:7:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31503;
                        readonly src: "12042:15:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 31484;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12042:7:151";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31487;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "12072:9:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31503;
                        readonly src: "12059:22:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 31486;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12059:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31489;
                        readonly mutability: "mutable";
                        readonly name: "targetB";
                        readonly nameLocation: "12091:7:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31503;
                        readonly src: "12083:15:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 31488;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12083:7:151";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31491;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "12113:9:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31503;
                        readonly src: "12100:22:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 31490;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12100:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12041:82:151";
                };
                readonly returnParameters: {
                    readonly id: 31493;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12161:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31523;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12242:231:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31522;
                    readonly nodeType: "Block";
                    readonly src: "12388:85:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly expression: {
                            readonly arguments: readonly [{
                                readonly id: 31515;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31505;
                                readonly src: "12411:6:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 31516;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31507;
                                readonly src: "12419:9:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 31517;
                                readonly name: "target";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31505;
                                readonly src: "12430:6:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                };
                            }, {
                                readonly id: 31518;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31509;
                                readonly src: "12438:9:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }, {
                                readonly id: 31519;
                                readonly name: "strictRevertData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31511;
                                readonly src: "12449:16:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_address";
                                    readonly typeString: "address";
                                }, {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }, {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                }];
                                readonly id: 31514;
                                readonly name: "assertEqCall";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [31483, 31503, 31523, 31633];
                                readonly referencedDeclaration: 31633;
                                readonly src: "12398:12:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$";
                                    readonly typeString: "function (address,bytes memory,address,bytes memory,bool)";
                                };
                            };
                            readonly id: 31520;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12398:68:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$__$";
                                readonly typeString: "tuple()";
                            };
                        };
                        readonly id: 31521;
                        readonly nodeType: "ExpressionStatement";
                        readonly src: "12398:68:151";
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "12251:12:151";
                readonly parameters: {
                    readonly id: 31512;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31505;
                        readonly mutability: "mutable";
                        readonly name: "target";
                        readonly nameLocation: "12272:6:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31523;
                        readonly src: "12264:14:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 31504;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12264:7:151";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31507;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "12293:9:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31523;
                        readonly src: "12280:22:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 31506;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12280:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31509;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "12317:9:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31523;
                        readonly src: "12304:22:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 31508;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12304:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31511;
                        readonly mutability: "mutable";
                        readonly name: "strictRevertData";
                        readonly nameLocation: "12333:16:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31523;
                        readonly src: "12328:21:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 31510;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12328:4:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12263:87:151";
                };
                readonly returnParameters: {
                    readonly id: 31513;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12388:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }, {
                readonly id: 31633;
                readonly nodeType: "FunctionDefinition";
                readonly src: "12479:1189:151";
                readonly nodes: readonly [];
                readonly body: {
                    readonly id: 31632;
                    readonly nodeType: "Block";
                    readonly src: "12669:999:151";
                    readonly nodes: readonly [];
                    readonly statements: readonly [{
                        readonly assignments: readonly [31537, 31539];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 31537;
                            readonly mutability: "mutable";
                            readonly name: "successA";
                            readonly nameLocation: "12685:8:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31632;
                            readonly src: "12680:13:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly typeName: {
                                readonly id: 31536;
                                readonly name: "bool";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12680:4:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly visibility: "internal";
                        }, {
                            readonly constant: false;
                            readonly id: 31539;
                            readonly mutability: "mutable";
                            readonly name: "returnDataA";
                            readonly nameLocation: "12708:11:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31632;
                            readonly src: "12695:24:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "memory";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_memory_ptr";
                                readonly typeString: "bytes";
                            };
                            readonly typeName: {
                                readonly id: 31538;
                                readonly name: "bytes";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12695:5:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_storage_ptr";
                                    readonly typeString: "bytes";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 31547;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 31545;
                                readonly name: "callDataA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31527;
                                readonly src: "12745:9:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 31542;
                                        readonly name: "targetA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31525;
                                        readonly src: "12731:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 31541;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "12723:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 31540;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "12723:7:151";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 31543;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12723:16:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly id: 31544;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "12740:4:151";
                                readonly memberName: "call";
                                readonly nodeType: "MemberAccess";
                                readonly src: "12723:21:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$";
                                    readonly typeString: "function (bytes memory) payable returns (bool,bytes memory)";
                                };
                            };
                            readonly id: 31546;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12723:32:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$_t_bool_$_t_bytes_memory_ptr_$";
                                readonly typeString: "tuple(bool,bytes memory)";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "12679:76:151";
                    }, {
                        readonly assignments: readonly [31549, 31551];
                        readonly declarations: readonly [{
                            readonly constant: false;
                            readonly id: 31549;
                            readonly mutability: "mutable";
                            readonly name: "successB";
                            readonly nameLocation: "12771:8:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31632;
                            readonly src: "12766:13:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "default";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly typeName: {
                                readonly id: 31548;
                                readonly name: "bool";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12766:4:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly visibility: "internal";
                        }, {
                            readonly constant: false;
                            readonly id: 31551;
                            readonly mutability: "mutable";
                            readonly name: "returnDataB";
                            readonly nameLocation: "12794:11:151";
                            readonly nodeType: "VariableDeclaration";
                            readonly scope: 31632;
                            readonly src: "12781:24:151";
                            readonly stateVariable: false;
                            readonly storageLocation: "memory";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_memory_ptr";
                                readonly typeString: "bytes";
                            };
                            readonly typeName: {
                                readonly id: 31550;
                                readonly name: "bytes";
                                readonly nodeType: "ElementaryTypeName";
                                readonly src: "12781:5:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_storage_ptr";
                                    readonly typeString: "bytes";
                                };
                            };
                            readonly visibility: "internal";
                        }];
                        readonly id: 31559;
                        readonly initialValue: {
                            readonly arguments: readonly [{
                                readonly id: 31557;
                                readonly name: "callDataB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31531;
                                readonly src: "12831:9:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                };
                            }];
                            readonly expression: {
                                readonly argumentTypes: readonly [{
                                    readonly typeIdentifier: "t_bytes_memory_ptr";
                                    readonly typeString: "bytes memory";
                                }];
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 31554;
                                        readonly name: "targetB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31529;
                                        readonly src: "12817:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_address";
                                            readonly typeString: "address";
                                        }];
                                        readonly id: 31553;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly lValueRequested: false;
                                        readonly nodeType: "ElementaryTypeNameExpression";
                                        readonly src: "12809:7:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_type$_t_address_$";
                                            readonly typeString: "type(address)";
                                        };
                                        readonly typeName: {
                                            readonly id: 31552;
                                            readonly name: "address";
                                            readonly nodeType: "ElementaryTypeName";
                                            readonly src: "12809:7:151";
                                            readonly typeDescriptions: {};
                                        };
                                    };
                                    readonly id: 31555;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "typeConversion";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12809:16:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_address";
                                        readonly typeString: "address";
                                    };
                                };
                                readonly id: 31556;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly memberLocation: "12826:4:151";
                                readonly memberName: "call";
                                readonly nodeType: "MemberAccess";
                                readonly src: "12809:21:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$";
                                    readonly typeString: "function (bytes memory) payable returns (bool,bytes memory)";
                                };
                            };
                            readonly id: 31558;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly kind: "functionCall";
                            readonly lValueRequested: false;
                            readonly nameLocations: readonly [];
                            readonly names: readonly [];
                            readonly nodeType: "FunctionCall";
                            readonly src: "12809:32:151";
                            readonly tryCall: false;
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_tuple$_t_bool_$_t_bytes_memory_ptr_$";
                                readonly typeString: "tuple(bool,bytes memory)";
                            };
                        };
                        readonly nodeType: "VariableDeclarationStatement";
                        readonly src: "12765:76:151";
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 31562;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31560;
                                readonly name: "successA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31537;
                                readonly src: "12856:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 31561;
                                readonly name: "successB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31549;
                                readonly src: "12868:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "12856:20:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31570;
                        readonly nodeType: "IfStatement";
                        readonly src: "12852:120:151";
                        readonly trueBody: {
                            readonly id: 31569;
                            readonly nodeType: "Block";
                            readonly src: "12878:94:151";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 31564;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31539;
                                        readonly src: "12901:11:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly id: 31565;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31551;
                                        readonly src: "12914:11:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly hexValue: "43616c6c2072657475726e206461746120646f6573206e6f74206d61746368";
                                        readonly id: 31566;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "12927:33:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_f3c9e4317c8eebc5635871f467354820a216f046f0a61b2ded371c2d507a555f";
                                            readonly typeString: "literal_string \"Call return data does not match\"";
                                        };
                                        readonly value: "Call return data does not match";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_stringliteral_f3c9e4317c8eebc5635871f467354820a216f046f0a61b2ded371c2d507a555f";
                                            readonly typeString: "literal_string \"Call return data does not match\"";
                                        }];
                                        readonly id: 31563;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                        readonly referencedDeclaration: 30389;
                                        readonly src: "12892:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (bytes memory,bytes memory,string memory)";
                                        };
                                    };
                                    readonly id: 31567;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "12892:69:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31568;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "12892:69:151";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 31577;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly commonType: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                                readonly id: 31575;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly leftExpression: {
                                    readonly id: 31572;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "UnaryOperation";
                                    readonly operator: "!";
                                    readonly prefix: true;
                                    readonly src: "12986:9:151";
                                    readonly subExpression: {
                                        readonly id: 31571;
                                        readonly name: "successA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31537;
                                        readonly src: "12987:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly nodeType: "BinaryOperation";
                                readonly operator: "&&";
                                readonly rightExpression: {
                                    readonly id: 31574;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly lValueRequested: false;
                                    readonly nodeType: "UnaryOperation";
                                    readonly operator: "!";
                                    readonly prefix: true;
                                    readonly src: "12999:9:151";
                                    readonly subExpression: {
                                        readonly id: 31573;
                                        readonly name: "successB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31549;
                                        readonly src: "13000:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bool";
                                            readonly typeString: "bool";
                                        };
                                    };
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly src: "12986:22:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 31576;
                                readonly name: "strictRevertData";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31533;
                                readonly src: "13012:16:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "12986:42:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31585;
                        readonly nodeType: "IfStatement";
                        readonly src: "12982:142:151";
                        readonly trueBody: {
                            readonly id: 31584;
                            readonly nodeType: "Block";
                            readonly src: "13030:94:151";
                            readonly statements: readonly [{
                                readonly expression: {
                                    readonly arguments: readonly [{
                                        readonly id: 31579;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31539;
                                        readonly src: "13053:11:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly id: 31580;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31551;
                                        readonly src: "13066:11:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }, {
                                        readonly hexValue: "43616c6c20726576657274206461746120646f6573206e6f74206d61746368";
                                        readonly id: 31581;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13079:33:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_428332fc36b72ecad0a5d9bab5b9a568a85eeb20fd69ffcfbf4cf91598a0c858";
                                            readonly typeString: "literal_string \"Call revert data does not match\"";
                                        };
                                        readonly value: "Call revert data does not match";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }, {
                                            readonly typeIdentifier: "t_stringliteral_428332fc36b72ecad0a5d9bab5b9a568a85eeb20fd69ffcfbf4cf91598a0c858";
                                            readonly typeString: "literal_string \"Call revert data does not match\"";
                                        }];
                                        readonly id: 31578;
                                        readonly name: "assertEq";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30335, 30360, 30373, 30389, 30431, 30473, 30515, 30552, 30589, 30626, 28170, 28195, 28225, 28250, 28309, 28334, 28364, 28389, 29862, 29897];
                                        readonly referencedDeclaration: 30389;
                                        readonly src: "13044:8:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (bytes memory,bytes memory,string memory)";
                                        };
                                    };
                                    readonly id: 31582;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13044:69:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31583;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "13044:69:151";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 31589;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31587;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "13138:9:151";
                                readonly subExpression: {
                                    readonly id: 31586;
                                    readonly name: "successA";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31537;
                                    readonly src: "13139:8:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 31588;
                                readonly name: "successB";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31549;
                                readonly src: "13151:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "13138:21:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31608;
                        readonly nodeType: "IfStatement";
                        readonly src: "13134:259:151";
                        readonly trueBody: {
                            readonly id: 31607;
                            readonly nodeType: "Block";
                            readonly src: "13161:232:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2043616c6c732077657265206e6f7420657175616c";
                                        readonly id: 31591;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13184:29:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        };
                                        readonly value: "Error: Calls were not equal";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        }];
                                        readonly id: 31590;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "13180:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 31592;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13180:34:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31593;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13175:39:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20204c6566742063616c6c207265766572742064617461";
                                        readonly id: 31595;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13249:25:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_d7308eff46cc177523801826a9076ec6e32f003b8da409c4d39812f8e534c573";
                                            readonly typeString: "literal_string \"  Left call revert data\"";
                                        };
                                        readonly value: "  Left call revert data";
                                    }, {
                                        readonly id: 31596;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31539;
                                        readonly src: "13276:11:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_d7308eff46cc177523801826a9076ec6e32f003b8da409c4d39812f8e534c573";
                                            readonly typeString: "literal_string \"  Left call revert data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 31594;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27929;
                                        readonly src: "13233:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 31597;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13233:55:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31598;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13228:60:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2052696768742063616c6c2072657475726e2064617461";
                                        readonly id: 31600;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13323:25:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_688c5b0ecbf27f0fe1b748e920d97ecaaa6ff424050ac2e32936b79dcfbe27d9";
                                            readonly typeString: "literal_string \" Right call return data\"";
                                        };
                                        readonly value: " Right call return data";
                                    }, {
                                        readonly id: 31601;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31551;
                                        readonly src: "13350:11:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_688c5b0ecbf27f0fe1b748e920d97ecaaa6ff424050ac2e32936b79dcfbe27d9";
                                            readonly typeString: "literal_string \" Right call return data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 31599;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27929;
                                        readonly src: "13307:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 31602;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13307:55:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31603;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13302:60:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 31604;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "13376:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 31605;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13376:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31606;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "13376:6:151";
                            }];
                        };
                    }, {
                        readonly condition: {
                            readonly commonType: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                            readonly id: 31612;
                            readonly isConstant: false;
                            readonly isLValue: false;
                            readonly isPure: false;
                            readonly lValueRequested: false;
                            readonly leftExpression: {
                                readonly id: 31609;
                                readonly name: "successA";
                                readonly nodeType: "Identifier";
                                readonly overloadedDeclarations: readonly [];
                                readonly referencedDeclaration: 31537;
                                readonly src: "13407:8:151";
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly nodeType: "BinaryOperation";
                            readonly operator: "&&";
                            readonly rightExpression: {
                                readonly id: 31611;
                                readonly isConstant: false;
                                readonly isLValue: false;
                                readonly isPure: false;
                                readonly lValueRequested: false;
                                readonly nodeType: "UnaryOperation";
                                readonly operator: "!";
                                readonly prefix: true;
                                readonly src: "13419:9:151";
                                readonly subExpression: {
                                    readonly id: 31610;
                                    readonly name: "successB";
                                    readonly nodeType: "Identifier";
                                    readonly overloadedDeclarations: readonly [];
                                    readonly referencedDeclaration: 31549;
                                    readonly src: "13420:8:151";
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_bool";
                                        readonly typeString: "bool";
                                    };
                                };
                                readonly typeDescriptions: {
                                    readonly typeIdentifier: "t_bool";
                                    readonly typeString: "bool";
                                };
                            };
                            readonly src: "13407:21:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly id: 31631;
                        readonly nodeType: "IfStatement";
                        readonly src: "13403:259:151";
                        readonly trueBody: {
                            readonly id: 31630;
                            readonly nodeType: "Block";
                            readonly src: "13430:232:151";
                            readonly statements: readonly [{
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "4572726f723a2043616c6c732077657265206e6f7420657175616c";
                                        readonly id: 31614;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13453:29:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        };
                                        readonly value: "Error: Calls were not equal";
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_6693dff23bd870151cc1817cba0ac95847c6f34adf907b7a38759066cb467c90";
                                            readonly typeString: "literal_string \"Error: Calls were not equal\"";
                                        }];
                                        readonly id: 31613;
                                        readonly name: "log";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27855;
                                        readonly src: "13449:3:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory)";
                                        };
                                    };
                                    readonly id: 31615;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13449:34:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31616;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13444:39:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "20204c6566742063616c6c2072657475726e2064617461";
                                        readonly id: 31618;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13518:25:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_596a9779ba89cf63b8ee3ff9d9ab391dc33d379f762c747717807c6af488f86f";
                                            readonly typeString: "literal_string \"  Left call return data\"";
                                        };
                                        readonly value: "  Left call return data";
                                    }, {
                                        readonly id: 31619;
                                        readonly name: "returnDataA";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31539;
                                        readonly src: "13545:11:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_596a9779ba89cf63b8ee3ff9d9ab391dc33d379f762c747717807c6af488f86f";
                                            readonly typeString: "literal_string \"  Left call return data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 31617;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27929;
                                        readonly src: "13502:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 31620;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13502:55:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31621;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13497:60:151";
                            }, {
                                readonly eventCall: {
                                    readonly arguments: readonly [{
                                        readonly hexValue: "2052696768742063616c6c207265766572742064617461";
                                        readonly id: 31623;
                                        readonly isConstant: false;
                                        readonly isLValue: false;
                                        readonly isPure: true;
                                        readonly kind: "string";
                                        readonly lValueRequested: false;
                                        readonly nodeType: "Literal";
                                        readonly src: "13592:25:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_stringliteral_07ebd1833884933dbc5d408273462f380b6eb526f9bb29a66115cfe3ede76145";
                                            readonly typeString: "literal_string \" Right call revert data\"";
                                        };
                                        readonly value: " Right call revert data";
                                    }, {
                                        readonly id: 31624;
                                        readonly name: "returnDataB";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 31551;
                                        readonly src: "13619:11:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        };
                                    }];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [{
                                            readonly typeIdentifier: "t_stringliteral_07ebd1833884933dbc5d408273462f380b6eb526f9bb29a66115cfe3ede76145";
                                            readonly typeString: "literal_string \" Right call revert data\"";
                                        }, {
                                            readonly typeIdentifier: "t_bytes_memory_ptr";
                                            readonly typeString: "bytes memory";
                                        }];
                                        readonly id: 31622;
                                        readonly name: "log_named_bytes";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [];
                                        readonly referencedDeclaration: 27929;
                                        readonly src: "13576:15:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$";
                                            readonly typeString: "function (string memory,bytes memory)";
                                        };
                                    };
                                    readonly id: 31625;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13576:55:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31626;
                                readonly nodeType: "EmitStatement";
                                readonly src: "13571:60:151";
                            }, {
                                readonly expression: {
                                    readonly arguments: readonly [];
                                    readonly expression: {
                                        readonly argumentTypes: readonly [];
                                        readonly id: 31627;
                                        readonly name: "fail";
                                        readonly nodeType: "Identifier";
                                        readonly overloadedDeclarations: readonly [30274, 28066];
                                        readonly referencedDeclaration: 28066;
                                        readonly src: "13645:4:151";
                                        readonly typeDescriptions: {
                                            readonly typeIdentifier: "t_function_internal_nonpayable$__$returns$__$";
                                            readonly typeString: "function ()";
                                        };
                                    };
                                    readonly id: 31628;
                                    readonly isConstant: false;
                                    readonly isLValue: false;
                                    readonly isPure: false;
                                    readonly kind: "functionCall";
                                    readonly lValueRequested: false;
                                    readonly nameLocations: readonly [];
                                    readonly names: readonly [];
                                    readonly nodeType: "FunctionCall";
                                    readonly src: "13645:6:151";
                                    readonly tryCall: false;
                                    readonly typeDescriptions: {
                                        readonly typeIdentifier: "t_tuple$__$";
                                        readonly typeString: "tuple()";
                                    };
                                };
                                readonly id: 31629;
                                readonly nodeType: "ExpressionStatement";
                                readonly src: "13645:6:151";
                            }];
                        };
                    }];
                };
                readonly implemented: true;
                readonly kind: "function";
                readonly modifiers: readonly [];
                readonly name: "assertEqCall";
                readonly nameLocation: "12488:12:151";
                readonly parameters: {
                    readonly id: 31534;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [{
                        readonly constant: false;
                        readonly id: 31525;
                        readonly mutability: "mutable";
                        readonly name: "targetA";
                        readonly nameLocation: "12518:7:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31633;
                        readonly src: "12510:15:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 31524;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12510:7:151";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31527;
                        readonly mutability: "mutable";
                        readonly name: "callDataA";
                        readonly nameLocation: "12548:9:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31633;
                        readonly src: "12535:22:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 31526;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12535:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31529;
                        readonly mutability: "mutable";
                        readonly name: "targetB";
                        readonly nameLocation: "12575:7:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31633;
                        readonly src: "12567:15:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_address";
                            readonly typeString: "address";
                        };
                        readonly typeName: {
                            readonly id: 31528;
                            readonly name: "address";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12567:7:151";
                            readonly stateMutability: "nonpayable";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_address";
                                readonly typeString: "address";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31531;
                        readonly mutability: "mutable";
                        readonly name: "callDataB";
                        readonly nameLocation: "12605:9:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31633;
                        readonly src: "12592:22:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "memory";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bytes_memory_ptr";
                            readonly typeString: "bytes";
                        };
                        readonly typeName: {
                            readonly id: 31530;
                            readonly name: "bytes";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12592:5:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bytes_storage_ptr";
                                readonly typeString: "bytes";
                            };
                        };
                        readonly visibility: "internal";
                    }, {
                        readonly constant: false;
                        readonly id: 31533;
                        readonly mutability: "mutable";
                        readonly name: "strictRevertData";
                        readonly nameLocation: "12629:16:151";
                        readonly nodeType: "VariableDeclaration";
                        readonly scope: 31633;
                        readonly src: "12624:21:151";
                        readonly stateVariable: false;
                        readonly storageLocation: "default";
                        readonly typeDescriptions: {
                            readonly typeIdentifier: "t_bool";
                            readonly typeString: "bool";
                        };
                        readonly typeName: {
                            readonly id: 31532;
                            readonly name: "bool";
                            readonly nodeType: "ElementaryTypeName";
                            readonly src: "12624:4:151";
                            readonly typeDescriptions: {
                                readonly typeIdentifier: "t_bool";
                                readonly typeString: "bool";
                            };
                        };
                        readonly visibility: "internal";
                    }];
                    readonly src: "12500:151:151";
                };
                readonly returnParameters: {
                    readonly id: 31535;
                    readonly nodeType: "ParameterList";
                    readonly parameters: readonly [];
                    readonly src: "12669:0:151";
                };
                readonly scope: 31634;
                readonly stateMutability: "nonpayable";
                readonly virtual: true;
                readonly visibility: "internal";
            }];
            readonly abstract: true;
            readonly baseContracts: readonly [{
                readonly baseName: {
                    readonly id: 30223;
                    readonly name: "DSTest";
                    readonly nameLocations: readonly ["181:6:151"];
                    readonly nodeType: "IdentifierPath";
                    readonly referencedDeclaration: 30141;
                    readonly src: "181:6:151";
                };
                readonly id: 30224;
                readonly nodeType: "InheritanceSpecifier";
                readonly src: "181:6:151";
            }];
            readonly canonicalName: "StdAssertions";
            readonly contractDependencies: readonly [];
            readonly contractKind: "contract";
            readonly fullyImplemented: true;
            readonly linearizedBaseContracts: readonly [31634, 30141];
            readonly name: "StdAssertions";
            readonly nameLocation: "164:13:151";
            readonly scope: 31635;
            readonly usedErrors: readonly [];
            readonly usedEvents: readonly [27855, 27859, 27863, 27867, 27871, 27875, 27879, 27883, 27889, 27895, 27903, 27911, 27917, 27923, 27929, 27935, 30229, 30234, 30239, 30246, 30253, 30260];
        }];
        readonly license: "MIT";
    };
    readonly id: 151;
};
//# sourceMappingURL=StdAssertions.d.ts.map